{"version":3,"sources":["webpack:///vendor.479b9ff7103491f661f2.bundle.js","webpack:///webpack/bootstrap 479b9ff7103491f661f2?a5f1*","webpack:///./demo/vendor.ts","webpack:///./~/@angular/common/bundles/common.umd.js?d980","webpack:///./~/@angular/compiler/bundles/compiler.umd.js?9df7","webpack:///./~/@angular/core/bundles/core.umd.js?e2a5","webpack:///./~/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js?04e2","webpack:///./~/@angular/platform-browser/bundles/platform-browser.umd.js?0171","webpack:///./~/rxjs/Observable.js?4e06","webpack:///./~/rxjs/Observer.js?f098","webpack:///./~/rxjs/Subject.js?c1c6","webpack:///./~/rxjs/SubjectSubscription.js?d351","webpack:///./~/rxjs/Subscriber.js?215e","webpack:///./~/rxjs/Subscription.js?5c58","webpack:///./~/rxjs/symbol/observable.js?1f24","webpack:///./~/rxjs/symbol/rxSubscriber.js?112c","webpack:///./~/rxjs/util/ObjectUnsubscribedError.js?e559","webpack:///./~/rxjs/util/UnsubscriptionError.js?bc9d","webpack:///./~/rxjs/util/errorObject.js?f49b","webpack:///./~/rxjs/util/isArray.js?b0ea","webpack:///./~/rxjs/util/isFunction.js?51c0","webpack:///./~/rxjs/util/isObject.js?aa2e","webpack:///./~/rxjs/util/root.js?93c3","webpack:///./~/rxjs/util/toSubscriber.js?f8fe","webpack:///./~/rxjs/util/tryCatch.js?7694"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","61","global","factory","this","_angular_core","getTypeNameForDebugging","type","isPresent","obj","isBlank","isDate","Date","isNaN","valueOf","stringify","token","undefined","overriddenName","name","res","toString","newLineIndex","indexOf","substring","isJsObject","o","getSymbolIterator","_symbolIterator","globalScope","Symbol","iterator","keys","Object","getOwnPropertyNames","Map","prototype","i","length","key","_stripBaseHref","baseHref","url","startsWith","_stripIndexHtml","test","getPluralCategory","value","cases","ngLocalization","nbCase","getPluralCase","locale","nLike","parseInt","n","nDecimal","replace","Math","floor","abs","v","f","t","lang","split","toLowerCase","Plural","One","Other","Zero","Two","Few","Many","_flattenArray","source","target","item","Array","isArray","push","isListLikeIterable","digitModifier","inner","date","result","hourClockExtracter","hourExtracter","intlDateFormat","options","Intl","DateTimeFormat","format","timeZoneGetter","timezone","hour","hour12","timeZoneName","hour12Modify","digitCondition","prop","len","nameCondition","combine","forEach","option","assign","datePartGetterFactory","ret","dateFormatter","match","fn","text","parts","PATTERN_ALIASES","datePartsFormatterCache","has","get","DATE_FORMATS_SPLIT","exec","concat","pop","set","part","DATE_FORMATS","array1","array2","index","slice","formatNumber","pipe","style","digits","currency","currencyAsSymbol","NumberWrapper","isNumeric","InvalidPipeArgumentError","minInt","minFraction","maxFraction","NumberFormatStyle","Currency","_NUMBER_FORMAT_REGEXP","Error","parseIntAutoRadix","NumberFormatter","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","PlatformLocation","defineProperty","enumerable","configurable","LocationStrategy","APP_BASE_HREF","OpaqueToken","window","WorkerGlobalScope","self","_global","assert","condition","radix","parseFloat","Location","platformStrategy","_this","_subject","EventEmitter","_platformStrategy","browserBaseHref","getBaseHref","_baseHref","stripTrailingSlash","onPopState","ev","emit","path","includeHash","normalize","isCurrentPathEqualTo","query","normalizeQueryParams","prepareExternalUrl","go","pushState","replaceState","forward","back","subscribe","onNext","onThrow","onReturn","next","error","complete","params","joinWithSlash","start","end","slashes","endsWith","decorators","Injectable","ctorParameters","__extends","d","b","__","constructor","hasOwnProperty","create","HashLocationStrategy","_super","_platformLocation","onHashChange","hash","internal","state","title","queryParams","pathname","Optional","Inject","args","__extends$1","PathLocationStrategy","href","getBaseHrefFromDOM","search","externalUrl","__extends$2","NgLocalization","NgLocaleLocalization","_locale","plural","LOCALE_ID","ListWrapper","values","getValues","from","e","size","k","removeAll","list","items","splice","remove","el","equals","a","maximum","predicate","solution","maxValue","Infinity","candidate","candidateValue","flatten","NgClass","_iterableDiffers","_keyValueDiffers","_ngEl","_renderer","_initialClasses","_applyInitialClasses","_applyClasses","_rawClass","_cleanupClasses","_iterableDiffer","_keyValueDiffer","find","ngDoCheck","changes","diff","_applyIterableChanges","_applyKeyValueChanges","rawClassVal","forEachAddedItem","record","_toggleClass","currentValue","forEachChangedItem","forEachRemovedItem","previousValue","isCleanup","klass","Set","enabled","trim","setElementClass","nativeElement","Directive","selector","IterableDiffers","KeyValueDiffers","ElementRef","Renderer","propDecorators","Input","ngClass","NgForRow","$implicit","count","even","NgFor","_viewContainer","_template","_differs","_cdr","_differ","ngOnChanges","ngForTrackBy","ngForOf","_applyChanges","insertTuples","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","view","createEmbeddedView","tuple","RecordViewTuple","move","_perViewChange","ilen","viewRef","context","forEachIdentityChange","ViewContainerRef","TemplateRef","ChangeDetectorRef","ngForTemplate","NgIf","_hasView","clear","ngIf","_CASE_DEFAULT","SwitchView","_viewContainerRef","_templateRef","destroy","NgSwitch","_useDefault","_valueViews","_activeViews","views","_emptyAllActiveViews","_activateViews","_switchValue","_onCaseValueChanged","oldCase","newCase","_deregisterView","_registerView","activeContainers","delete","ngSwitch","NgSwitchCase","viewContainer","templateRef","_value","_switch","_view","Host","ngSwitchCase","NgSwitchDefault","sswitch","NgPlural","_localization","_caseViews","_updateView","addCase","switchView","_clearViews","_activateView","_activeView","ngPlural","NgPluralCase","template","Attribute","NgStyle","_ngStyle","_setStyle","nameAndUnit","_a","unit","setElementStyle","ngStyle","NgTemplateOutlet","_context","_viewRef","ngOutletContext","ngTemplateOutlet","COMMON_DIRECTIVES","isPromise","__core_private__","__extends$4","BaseError","message","nativeError","_nativeError","stack","__extends$3","WrappedError","originalError","ObservableStrategy","createSubscription","async","updateLatestValue","dispose","subscription","unsubscribe","onDestroy","PromiseStrategy","then","_promiseStrategy","_observableStrategy","AsyncPipe","_ref","_latestValue","_latestReturnedValue","_subscription","_obj","_strategy","ngOnDestroy","_dispose","transform","WrappedValue","wrap","_subscribe","_selectStrategy","_updateLatestValue","markForCheck","Pipe","pure","num","_b","_c","currencyDisplay","NumberFormat","yMMMdjms","yMdjm","yMMMMEEEEd","yMMMMd","yMMMd","yMd","jms","jm","yyyy","yy","y","MMMM","MMM","MM","M","LLLL","dd","HH","H","hh","h","jj","j","mm","ss","s","sss","EEEE","EEE","EE","E","Z","z","ww","w","G","GG","GGG","GGGG","DateFormatter","pattern","DatePipe","supports","_ALIASES","medium","short","fullDate","longDate","mediumDate","shortDate","mediumTime","shortTime","_INTERPOLATION_REGEXP","I18nPluralPipe","pluralMap","I18nSelectPipe","mapping","JsonPipe","JSON","LowerCasePipe","DecimalPipe","Decimal","PercentPipe","Percent","CurrencyPipe","currencyCode","symbolDisplay","SlicePipe","UpperCasePipe","toUpperCase","COMMON_PIPES","CommonModule","NgModule","declarations","providers","provide","useClass","88","templateVisitAll","visitor","asts","visit","ast","astResult","isStrictStringMap","getPrototypeOf","STRING_MAP_PROTO","isPrimitive","escapeRegExp","splitNsName","elementName","colonIndex","getNsPrefix","fullName","mergeNsAndName","prefix","localName","getHtmlTagDefinition","tagName","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","splitAtColon","input","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","sanitizeIdentifier","visitValue","visitArray","visitStringMap","visitPrimitive","visitOther","unimplemented","createHostComponentMeta","compMeta","CssSelector","parse","getMatchingElementTemplate","CompileDirectiveMetadata","CompileTypeMetadata","reference","moduleUrl","isHost","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styles","styleUrls","ngContentSelectors","animations","changeDetection","ChangeDetectionStrategy","Default","inputs","outputs","host","isComponent","viewProviders","queries","viewQueries","removeIdentifierDuplicates","map","identifier","MapWrapper","_normalizeArray","isStaticSymbol","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","assertArrayOfStrings","isDevMode","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","newCharacterToken","Token","TokenType","Character","String","fromCharCode","newIdentifierToken","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","Number","newErrorToken","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","_createInterpolateRegExp","config","RegExp","visitAll","nodes","tokenize","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","ParseSourceFile","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","offset","isInterpolationStart","charCodeAt","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","lastDstToken","dstTokens","TokenType$1","TEXT","sourceSpan","lastOnStack","element","digestMessage","sha1","serializeNodes","join","meaning","serializerVisitor","str","utf8","utf8Encode","words32","stringToWords32","h0","h1","h2","h3","h4","rol32","fk","temp","reduce","add32","_d","_e","words32ToString","hex","b_1","encoded","codePoint","decodeSurrogatePairs","low","high","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","_isClosingComment","_getI18nAttr","attrs","attr","_I18N_ATTR","_splitMeaningAndDesc","i18n","pipeIndex","getXmlTagDefinition","_TAG_DEFINITION","extractPlaceholders","messageBundle","messageMap","getMessageMap","placeholders","msgId","extractPlaceholderToIds","placeholderToIds","placeholderToMsgIds","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","assetUrl","pkg","resolveIdentifier","CompileIdentifierMetadata","reflector","runtime","identifierToken","CompileTokenMetadata","resolveIdentifierToken","resolveEnumIdentifier","enumType","resolvedEnum","resolveEnum","expandNodes","expander","_Expander","ExpansionResult","isExpanded","errors","_expandPluralForm","children","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","expression","apply","Element","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","useExisting","useValue","deps","CompileProviderMetadata","useFactory","multi","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","lifecycleHooks","_normalizeProviders","targetErrors","targetProviders","normalizeProvider","ProviderError","_resolveProvidersFromDirectives","directives","providersByToken","directive","dirProvider","_resolveProviders","ProviderAstType","Component","directivesWithComponentFirst","filter","dir","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","_getViewQueries","component","_addQueryToTokenMap","diDeps","dep","viewQuery","_getContentQueries","contentQueries","selectors","isStyleUrlResolvable","schemeMatch","_urlWithSchemaRe","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","_cssImportRe","_i","arguments","resolve","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","securityContext","SecurityContext","NONE","sort","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT_ELEMENT","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","splitClasses","classAttrValue","createElementCssSelector","matchableAttrs","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","unimplemented$1","replaceVarInExpression","varName","newValue","transformer","_ReplaceVariableTransformer","visitExpression","findReadVarNames","stmts","finder","_VariableFinder","visitAllStatements","varNames","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","ExternalType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","not","expr","NotExpr","body","FunctionExpr","literal","LiteralExpr","_compareToAnimationStateExpr","animationState","emptyStateLiteral","EMPTY_ANIMATION_STATE","ANY_STATE","_isEndStateAnimateStep","step","AnimationStepAst","duration","keyframes","styles1","_getStylesArray","styles2","_parseAnimationDeclarationStates","stateMetadata","styleValues","stylesEntry","AnimationParseError","defStyles","AnimationStylesAst","states","stateNameExpr","AnimationStateDeclarationAst","_parseAnimationStateTransition","transitionStateMetadata","stateStyles","StylesCollection","transitionExprs","transitionStates","stateChangeExpr","_parseAnimationTransitionExpr","_normalizeAnimationEntry","steps","animation","_normalizeStyleSteps","animationAst","_parseTransitionAnimation","_fillAnimationAstStartingKeyframes","stepsAst","AnimationWithStepsAst","AnimationSequenceAst","AnimationStateTransitionAst","_parseAnimationAlias","alias","eventStr","expressions","fromState","separator","toState","AnimationStateTransitionExpression","isFullAnyStateExpr","CompileAnimationSequenceMetadata","_normalizeStyleMetadata","normalizedStyles","styleEntry","_resolveStylesFromState","_normalizeStyleStepEntry","CompileAnimationGroupMetadata","_mergeAnimationStyles","stylesList","newItem","lastIndex","lastItem","StringMapWrapper","CompileAnimationWithStepsMetadata","combinedStyles","newSteps","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","animateStyleValue","CompileAnimationKeyframesSequenceMetadata","innerSteps","stateName","normalizedStateName","_parseAnimationKeyframes","keyframeSequence","currentTime","collectedStyles","totalEntries","totalOffsets","limit","margin","rawKeyframes","doSortKeyframes","lastOffset","styleMetadata","keyframeStyles","_TERMINAL_KEYFRAME","firstKeyframe","_INITIAL_KEYFRAME","firstKeyframeStyles","lastKeyframe","lastKeyframeStyles","FILL_STYLE_FLAG","_loop_1","AnimationKeyframeAst","playTime","startingTime","previousStyles","maxDuration","isGroup","time","insertAtTime","innerAst","startingStyles","innerStep","astDuration","max","AnimationGroupAst","timings","_parseTimeExpression","styleData","styleAst","keyframe","delay","easing","startTime","endKeyframe","startKeyframe","_createStartKeyframeFromEndKeyframe","exp","regex","matches","_AnimationTimings","durationMatch","durationUnit","_ONE_SECOND","delayMatch","delayUnit","delayVal","easingVal","endTime","val","resultEntry","nextEntry","resultIndex","indexOfAtOrBeforeTime","getByIndex","createDiTokenExpression","identifierIsInstance","instantiate","TypeModifier","Const","createInlineArray","Identifiers","EMPTY_INLINE_ARRAY","log2","log","ceil","identifierSpec","inlineArrays","InlineArrayDynamic","createPureProxy","argCount","pureProxyProp","builder","fields","ClassField","pureProxyId","pureProxies","ctorStmts","THIS_EXPR","callFn","toStmt","createEnumExpression","enumValue","enumName","createCheckBindingField","bindingId","fieldExpr","createBindFieldExpr","StmtModifier","Private","UNINITIALIZED","CheckBindingField","createCheckBindingStmt","evalResult","throwOnChangeVar","actions","checkBinding","currValExpr","forceUpdate","or","IfStmt","convertPropertyBinding","nameResolver","implicitReceiver","createCurrValueExpr","DefaultNameResolver","_AstToIrVisitor","VAL_UNWRAPPER_VAR","outputExpr","_Mode","Expression","temporaryCount","temporaryDeclaration","needsValueUnwrapper","initValueUnwrapperStmt","callMethod","toDeclStmt","Final","ConvertPropertyBindingResult","convertActionBinding","action","actionStmts","flattenStatements","Statement","prependTemporaryDecls","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","DYNAMIC_TYPE","notIdentical","ConvertActionBindingResult","createSharedBindingVariablesIfNeeded","unwrapperStmts","readVars","ValueUnwrapper","temporaryName","temporaryNumber","DeclareVarStmt","NULL_EXPR","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","arg","output","createCachedLiteralArray","EMPTY_ARRAY","proxyExpr","proxyParams","proxyReturnEntries","paramName","FnParam","ReturnStatement","ArrayType","createCachedLiteralMap","entries","EMPTY_MAP","MapType","stmt","ExpressionStatement","writeToRenderer","boundProp","renderElement","renderValue","logBindingUpdate","securityContextExpression","updateStmts","renderer","sanitizedValue","PropertyBindingType","Property","setBindingDebugInfo","conditional","Class","Style","strValue","plus","Animation","needsRuntimeSecurityContext","ctx","createClassStmt","parentArgs","superCtorStmts","parent","SUPER_EXPR","concatClassBuilderParts","builders","ctor","ClassMethod","ctorParams","ClassStmt","getters","methods","modifiers","addDetectChangesInInputPropsMethod","changedVar","CHANGED_FIELD_NAME","lifecycleStmts","genChanges","onChangesStmts","CONTEXT_FIELD_NAME","CHANGES_FIELD_NAME","compilerConfig","setBindingDebugInfoForChanges","VIEW_VAR","RENDER_EL_VAR","RESET_CHANGES_STMT","ngOnInit","identical","THROW_ON_CHANGE_VAR","AppView","BOOL_TYPE","addCheckInputMethod","field","onChangeStatements","CURR_VALUE_VAR","SimpleChange","methodBody","FORCE_UPDATE_VAR","addDetectChangesInHostPropsMethod","hostProps","methodParams","hostProp","securityContextExpr","parseHostBindings","dirMeta","exprParser","schemaRegistry","parser","BindingParser","sourceFileName","sourceFile","ParseSourceSpan","ParseLocation","parsedHostProps","createDirectiveHostPropertyAsts","parsedHostListeners","createDirectiveHostEventAsts","ParseResult","reportParseErrors","parseErrors","console","warnings","level","ParseErrorLevel","WARNING","FATAL","_console","warn","convertValueToOutputAst","_ValueOutputAstTransformer","getPropertyInView","property","callingView","definedView","viewProp","currView","declarationElement","_ReplaceViewTransformer","injectFromViewParentInjector","optional","getViewFactoryName","embeddedTemplateIndex","createFlatArray","lastNonArrayExpressions","BuiltinMethod","ConcatArray","createQueryValues","viewValues","ViewQueryValues","mapNestedViews","appElement","declarationAppElement","adjustedExpressions","classType","createQueryList","directiveInstance","propertyName","compileView","QueryList","createMethod","addStmt","addQueryToTokenMap","meta","createInjectInternalCondition","nodeIndex","childNodeCount","providerExpr","indexCondition","lowerEquals","InjectMethodVars","requestNodeIndex","and","createProviderProperty","providerValueExpressions","isMulti","isEager","compileElement","resolvedProviderValueExpr","internalField","getter","CompileMethod","resetDebugInfo","sourceAst","ClassGetter","finish","_findPipeMeta","pipeMeta","pipeMetas","localPipeMeta","getViewType","ViewType","EMBEDDED","HOST","COMPONENT","collectEventListeners","hostEvents","dirs","eventListeners","hostEvent","listener","CompileEventListener","getOrCreate","phase","addAction","directiveAst","instances","finishMethod","bindDirectiveOutputs","observablePropName","eventName","listenToDirective","bindRenderOutputs","isAnimation","listenToRenderer","sanitizeEventName","bindDirectiveAfterContentLifecycleCallbacks","directiveMeta","afterContentLifecycleCallbacksMethod","LifecycleHooks","AfterContentInit","STATE_IS_NEVER_CHECKED","AfterContentChecked","bindDirectiveAfterViewLifecycleCallbacks","afterViewLifecycleCallbacksMethod","AfterViewInit","AfterViewChecked","bindInjectableDestroyLifecycleCallbacks","providerInstance","onDestroyMethod","destroyMethod","OnDestroy","bindPipeDestroyLifecycleCallbacks","pipeInstance","bindRenderText","boundText","compileNode","valueField","componentContext","detectChangesRenderPropertiesMethod","addStmts","DetectChangesVars","throwOnChange","renderNode","bindAndWriteToRenderer","boundProps","isHostProp","bindingField","compileMethod","genConfig","animationBindingsMethod","detachStmts_1","animationName_1","targetViewExpr","animationFnExpr","emptyStateValue","unitializedValue","animationTransitionVar_1","animationStmt","listenToAnimation","detachMethod","bindRenderInputs","bindDirectiveHostProps","directiveWrapperInstance","hostProperties","methodArgs","bindDirectiveInputs","dirIndex","detectChangesInInputsMethod","inputIdx","directiveName","isOnPushComp","isDefaultChangeDetectionStrategy","directiveDetectChangesExpr","directiveDetectChangesStmt","bindView","parsedTemplate","ViewBinderVisitor","pipes","instance","buildView","targetDependencies","builderVisitor","ViewBuilderVisitor","isNull","nestedViewCount","finishView","targetStatements","afterNodes","createViewTopLevelStmts","CompileElement","hasEmbeddedView","embeddedView","_getOuterContainerOrSelf","_isNgContainer","_getOuterContainerParentOrSelf","NG_CONTAINER_TAG","_mergeHtmlAndDirectiveAttrs","declaredHtmlAttrs","mapResult","hostAttributes","prevValue","mergeAttributeValue","arrResult","_readHtmlAttrs","htmlAttrs","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","nodeDebugInfosVar","genDebugInfo","viewIndex","createStaticNodeDebugInfo","StaticNodeDebugInfo","renderCompTypeVar","RenderComponentType","viewClass","createViewClass","createViewFactory","providerTokens","componentToken","varTokenEntries","getProviderTokens","referenceTokens","viewConstructorArgs","ViewConstructorVars","viewUtils","ViewUtils","parentInjector","Injector","declarationEl","AppElement","superConstructorArgs","ViewTypeEnum","fromValue","viewType","ChangeDetectorStatusEnum","getChangeDetectionMode","viewMethods","rootSelectorVar","STRING_TYPE","generateCreateMethod","NUMBER_TYPE","notFoundResult","addReturnValuefNotEmpty","injectorGetMethod","generateDetectChangesMethod","dirtyParentQueriesMethod","method","superClass","DebugAppView","getContextType","templateUrlInfo","viewFactoryArgs","initRenderCompTypeStmts","animationsExpr","fnExp","ViewEncapsulationEnum","constructorMethod","param","viewFactory","parentRenderNodeExpr","parentRenderNodeStmts","ViewProperties","parentRenderNodeVar","renderTypes","resultExpr","rootNodesOrAppElements","disposables","subscriptions","isEmpty","updateContentQueriesMethod","updateViewQueriesMethod","afterContentStmts","afterViewStmts","varStmts","changed","ChangeDetectorStatus","CheckAlways","CheckOnce","analyzeNgModules","programStaticSymbols","metadataResolver","_extractModulesAndPipesOrDirectives","programNgModules","ngModules","programPipesOrDirectives","pipesAndDirectives","moduleMetasByRef","modMeta","transitiveModules","transitiveModule","ngModuleMetas","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","filePaths","ngModuleMeta","srcFileUrl","filePath","add","declaredDirectives","fileUrl","declaredPipes","symbolsMissingModule","messages","files","srcUrl","_resolveViewStatements","compileResult","dependencies","ViewFactoryDependency","vfd","placeholder","_ngfactoryModuleUrl","comp","ComponentFactoryDependency","cfd","_componentFactoryName","DirectiveWrapperDependency","dwd","_resolveStyleStatements","fileSuffix","valuePlaceholder","_stylesModuleUrl","isShimmed","dirUrl","urlWithSuffix","_splitTypescriptSuffix","stylesheetUrl","shim","suffix","_assertComponent","lastDot","lastIndexOf","staticSymbol","ngModule","getNgModuleMetadata","getDirectiveMetadata","getPipeMetadata","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","_ASSET_SCHEME","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","_cloneDirectiveWithTemplate","exportAs","hostListeners","entryComponents","isDirectiveMetadata","hasLifecycleHook","hook","getHookName","OnInit","DoCheck","OnChanges","_isNgModuleMetadata","_isPipeMetadata","getTransitiveModules","includeImports","targetModules","visitedModules","nestedModules","importedModules","exportedModules","flattenArray","tree","resolveForwardRef","isValidType","Type","staticTypeModuleUrl","componentModuleUrl","cmpMetadata","scheme","MODULE_SUFFIX","importUri","convertToCompileValue","targetIdentifiers","_CompileValueConverter","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","_debugModuleUrl","EmitterVisitorContext","createRoot","visitStatement","Type$1","visitType","toSource","interpretStatements","resultVar","stmtsWithReturn","_ExecutionContext","StatementInterpreter","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","vars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","instanceCtx","paramNames","writable","ctorParamNames","_declareFn","evalExpression","sourceUrl","fnBody","fnArgNames","fnArgValues","argName","Function","bind","jitStatements","JitEmitterVisitor","getArgs","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","assertComponent","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_initReflector","reflectionCapabilities","ReflectionCapabilities","_mergeOptions","optionsArr","useDebug","_lastDefined","useJit","defaultEncapsulation","_mergeArrays","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","ElementAst","references","hasViewContainer","endSourceSpan","visitElement","EmbeddedTemplateAst","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","templateName","visitDirectiveProperty","DirectiveAst","visitDirective","NgContentAst","visitNgContent","TagContentType","_arrayFromMap","createFromStringMap","stringMap","m1","m2","k1","k2","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sum","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","PARSABLE_DATA","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","currentParent","lcParent","isClosedByChild","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","rb","rt","rtc","rp","optgroup","pre","listing","RAW_TEXT","script","ESCAPABLE_RAW_TEXT","textarea","_SELECTOR_REGEXP","classNames","results","_addResult","cssSel","current","inNot","hasElementSelector","classAttr","name_1","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","name_2","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","ValueTransformer","arr","SyncAsyncResult","syncResult","asyncResult","Promise","HOST_REG_EXP","CompileMetadataWithIdentifier","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","CompileAnimationStateTransitionMetadata","CompileAnimationMetadata","CompileDiDependencyMetadata","isSelf","isSkipSelf","isOptional","isValue","CompileFactoryMetadata","CompileQueryMetadata","descendants","first","read","CompileStylesheetMetadata","externalStylesheets","interpolation","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","schemas","TransitiveCompileNgModuleMetadata","directivesSet","pipesSet","ProviderMeta","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","InterpolationConfig","fromArray","markers","ParserError","errLocation","ctxLocation","ParseSpan","AST","span","Quote","uninterpretedExpression","location","visitQuote","EmptyExpr","ImplicitReceiver","visitImplicitReceiver","Chain","visitChain","Conditional","trueExp","falseExp","visitConditional","PropertyRead","receiver","visitPropertyRead","PropertyWrite","visitPropertyWrite","SafePropertyRead","visitSafePropertyRead","KeyedRead","visitKeyedRead","KeyedWrite","visitKeyedWrite","BindingPipe","visitPipe","LiteralPrimitive","visitLiteralPrimitive","LiteralArray","visitLiteralArray","LiteralMap","visitLiteralMap","Interpolation","strings","visitInterpolation","Binary","operation","left","right","visitBinary","PrefixNot","visitPrefixNot","MethodCall","visitMethodCall","SafeMethodCall","visitSafeMethodCall","FunctionCall","visitFunctionCall","ASTWithSource","TemplateBinding","keyIsVar","RecursiveAstVisitor","KEYWORDS","Lexer","tokens","scanToken","numValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","quote","buffer","marker","unescapedCode","last","position","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","Parser","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","exprs","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","locationText","skip","file","line","details","ParseError","msg","ctxStart","contextStr","ctxEnd","ctxLen","ctxLines","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","_VisitorMode","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","COMMENT_START","textToken","COMMENT_END","CDATA_START","CDATA_END","DOC_TYPE","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","TAG_CLOSE","TAG_OPEN_START","ATTR_NAME","prefixAndName","ATTR_VALUE","quoteChar","valueStart","TAG_OPEN_END_VOID","TAG_OPEN_END","EXPANSION_FORM_START","_readUntil","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","_isTextEnd","nbTokens","TreeError","ParseTreeResult","rootNodes","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","stackIndex","valueToken","parentElement","_SerializerVisitor","visitContainer","child","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","strAttrs","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToIds","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","__extends$5","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","BoundPropertyType","_implicitTags","_implicitAttrs","_init","Extract","_inI18nBlock","_messages","Merge","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","childNodes","wasInI18nNode","wasInImplicitNode","_inImplicitNode","i18nAttr","isImplicit","some","isTopLevelImplicit","visited","isTranslatable","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","meaningAndDesc","attributes","i18nAttributeMeanings","translatedAttributes","directChildren","startIndex","significantChildren","MessageBundle","_htmlParser","_messageMap","updateFromTemplate","html","htmlParserResult","i18nParserResult","write","serializer","XmlTagDefinition","__extends$6","XmlParser","__extends$7","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_SOURCE_LANG","_PLACEHOLDER_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","Xliff","_WriteVisitor","transUnits","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","_LoadVisitor","_isInIcu","ctype","startTagPh","closeTagPh","_messageNodes","_translatedMessages","_msgId","_target","_placeholders","_addError","idAttr","expansion","expansionCase","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$1","_EXEMPLE_TAG","_DOCTYPE","Xmb","_Visitor$2","rootNode","startEx","closeEx","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$2","Xtb","_Visitor$3","_bundleDepth","_translationDepth","nameAttr","TranslationBundle","I18NHtmlParser","_translationsFormat","parseResult","_createSerializer","translationBundle","LIFECYCLE_HOOKS_VALUES","ReflectorReader","CodegenComponentFactoryResolver","NgModuleInjector","registerModuleFactory","view_utils","DebugContext","devModeEqual","TemplateRef_","Console","Reflector","NoOpAnimationPlayer","AnimationSequencePlayer","AnimationGroupPlayer","AnimationKeyframe","AnimationStyles","DEFAULT_STATE","EMPTY_STATE","prepareFinalAnimationStyles","balanceAnimationKeyframes","clearStyles","collectAndResolveStyles","renderStyles","ComponentStillLoadingError","AnimationTransition","APP_VIEW_MODULE_URL","VIEW_UTILS_MODULE_URL","CD_MODULE_URL","ANIMATION_STYLE_UTIL_ASSET_URL","ANALYZE_FOR_ENTRY_COMPONENTS","ComponentFactoryResolver","ComponentFactory","NgModuleFactory","RegisterModuleFactoryFn","flattenNestedViewRenderNodes","interpolate","castByValue","createRenderElement","selectOrCreateRenderHostElement","pureProxy1","pureProxy2","pureProxy3","pureProxy4","pureProxy5","pureProxy6","pureProxy7","pureProxy8","pureProxy9","pureProxy10","TRANSLATIONS_FORMAT","InlineArray","InlineArray2","InlineArray4","InlineArray8","InlineArray16","__extends$8","HtmlParser","__extends$9","expanded","__extends$10","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_attrs","attrAst","directivesMeta","_allProviders","_contentQueries","queriedTokens","_addQueryReadsTo","refAst","_getOrCreateLocalProvider","afterElement","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","queryReadTokens","_getQueriesFor","queryReadToken","currentEl","distance","requestingProviderType","Builtin","transformedProviderAst","transformedProviders","transformedDeps","transformedUseValue","transformedUseExisting","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleTypes","moduleMeta","ngModuleType","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","__extends$11","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundProperty","LITERAL_ATTR","ANIMATION","_exprParser","_schemaRegistry","_targetErrors","pipesByName","boundProps_1","parsePropertyBinding","createElementPropertyAst","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","MAX_INTERPOLATION_VALUES","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","DEFAULT","isHostBinding","elementSelector","bindingType","boundPropertyName","securityContexts","partValue","getMappedPropName","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","substr","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","validateAttribute","validateProperty","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ELEMENT","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_TRANSFORMS","TemplateParseError","TemplateParseResult","templateAst","TemplateParser","transforms","tryParse","tryParseHtml","expandHtml","getInterpolationConfig","htmlAstWithErrors","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","preparsedElement","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","lcElName","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","_findComponentDirectives","componentDirectiveAst","_validateElementAnimationInputOutputs","componentTemplate","templateCssSelector","templateDirectiveMetas","templateDirectiveAsts","templateElementProps","templateProviderContext","triggerLookup","animationInputs","found","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","props","elementSourceSpan","targetReferences","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","refToken","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","boundDirectivePropsIndex","_findComponentDirectiveNames","componentTypeNames","elName","hasElement","allDirectiveEvents","event","hasProperty","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","CompilerConfig","DefaultRenderTypes","Emulated","_genDebugInfo","_logBindingUpdate","RenderTypes","renderText","renderComment","renderEvent","__extends$12","BuiltinTypeName","hasModifier","modifier","BinaryOperator","BuiltinType","visitBuiltintType","visitExternalType","of","visitArrayType","valueType","visitMapType","Dynamic","Bool","Int","FUNCTION_TYPE","BuiltinVar","ReadPropExpr","ReadKeyExpr","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","trueCase","falseCase","ConditionalExpr","rhs","BinaryOperatorExpr","Equals","notEquals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","multiply","Multiply","modulo","Modulo","And","Or","lower","Lower","LowerEquals","bigger","Bigger","biggerEquals","BiggerEquals","CastExpr","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","visitConditionalExpr","visitNotExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","This","Super","CatchError","CatchStack","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","visitDeclareClassStmt","visitIfStmt","TryCatchStmt","CommentStmt","visitCommentStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","ExpressionTransformer","visitAllExpressions","RecursiveExpressionVisitor","_varName","_newValue","__extends$13","AnimationAst","AnimationStateAst","AnimationEntryAst","stateDeclarations","stateTransitions","visitAnimationEntry","visitAnimationStateDeclaration","stateChanges","visitAnimationStateTransition","visitAnimationStep","visitAnimationStyles","visitAnimationKeyframe","visitAnimationGroup","visitAnimationSequence","AnimationEntryCompileResult","AnimationCompiler","compile","factoryNamePrefix","parsedAnimations","factoryName","_AnimationBuilder","_ANIMATION_FACTORY_ELEMENT_VAR","_ANIMATION_DEFAULT_STATE_VAR","_ANIMATION_FACTORY_VIEW_VAR","_ANIMATION_FACTORY_VIEW_CONTEXT","_ANIMATION_FACTORY_RENDERER_VAR","_ANIMATION_CURRENT_STATE_VAR","_ANIMATION_NEXT_STATE_VAR","_ANIMATION_PLAYER_VAR","_ANIMATION_TIME_VAR","_ANIMATION_START_STATE_STYLES_VAR","_ANIMATION_END_STATE_STYLES_VAR","_ANIMATION_COLLECTED_STYLES","animationName","_fnVarName","_statesMapVarName","_statesMapVar","stylesArr","isExpectingFirstStyleStep","endStateAnimateStep","_visitEndStateAnimation","startingStylesExpr","keyframeExpressions","keyframeEntry","_callAnimateMethod","keyframesExpr","totalTransitionTime","playerExprs","flatStyles","stateMap","registerState","lastStep","stateChangePreconditions","stateChange","animationPlayerExpr","reducedStateChangesPrecondition","precondition","totalTimeStmt","def","RENDER_STYLES_FN","transAst","_AnimationBuilderContext","fnStatement","fnVariable","lookupMap","variableValue","styleMap_1","compiledStatesMapStmt","_AnimationBuilderStateMap","_states","existingEntry","StylesCollectionEntry","insertionIndex","__extends$14","AnimationEntryParseResult","AnimationParser","parseComponent","componentName","animationTriggerNames","parseEntry","triggerName","errorMessage_1","transitions","stateDeclarationAsts","stateTransitionAsts","transDef","EventHandlerVars","preventDefault","_builder","_nameResolver","_implicitReceiver","_valueUnwrapper","isAction","_nodeMap","_resultMap","_currentTemporary","callPipe","literalArr$$","literalMap$$","_getLocal","getLocal","leftMostSafe","leftMostSafeNode","convertSafeAccess","varExpr","temporary","guardedExpression","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","DirectiveWrapperCompileResult","dirWrapperClassVar","DirectiveWrapperCompiler","dirWrapperClassName","DirectiveWrapperBuilder","inputFieldName","hostParseResult","classStmt","dirLifecycleHooks","dirDepParamNames","_DebugState","NULL_DEBUG_STATE","_newState","_currState","_bodyStatements","_debugEnabled","_updateDebugContextIfNeeded","_updateDebugContext","newState","sourceLocation","resetDebugInfoExpr","__extends$16","_viewExpr","_isThis","CompileQuery","queryList","ownerDirectiveExpression","_values","addValue","currentView","elPath","queryListForDirtyExpr","newViewValues","_isStatic","afterChildren","targetStaticMethod","targetDynamicMethod","valueExpr","projectableNodes","__extends$15","CompileNode","isRootElement","_directives","_resolvedProvidersArray","_targetDependencies","_compViewExpr","_queryCount","_queries","_componentConstructorViewQueryLists","contentNodesByNgContentIndex","ref","elementRef","injector","_createAppElement","_createComponentFactoryResolver","createNull","fieldName","parentNodeIndex","statement","entryComponent","createComponentFactoryResolverExpr","setComponentView","compViewExpr","setEmbeddedView","createTemplateRefExpr","beforeChildren","_resolvedProviders","isDirectiveWrapper","depsExpr","directiveWrapperIdentifier","queryMeta","_addQuery","queriesWithReads","queriesForProvider","_QueryWithRead","varValue","locals","varToken","queryWithRead","componentConstructorViewQueryList","compExpr","getComponent","providerChildNodeCount","addContentNode","nodeExpr","componentView","CompilePipe","_purePipeProxyCount","pipeCount","diDep","compView","purePipes","_call","purePipeProxyInstance","pipeInstanceSeenFromPureProxy","Bind","CompileView","templateVariableBindings","literalArrayCount","literalMapCount","queryIndex","constructorViewQueryCount","eventTarget","eventPhase","listenerIndex","_hasComponentHostListener","_actionResultExprs","_method","_methodName","_eventParam","targetEventListeners","markPathToRootStart","listenExpr","eventListener","disposable","animationTransitionVar","callbackMethod","methodName","SubscribeObservable","_nodeIndex","providerAst","eventTargetAndNames","IMPLICIT_TEMPLATE_VAR","_isRootNode","_addRootNodeAndProject","projectedNode","vcAppEl","_getParentRenderNode","Native","_visitText","createRenderNode","parentRenderNode","nodesExpression","createRenderNodeExpr","debugContextExpr","nestedComponentIdentifier","codeGenContentNodes","varAst","ViewCompileResult","viewFactoryVar","ViewCompiler","_genConfig","compileComponent","compiledAnimations","SourceModule","OfflineCompiler","_metadataResolver","_directiveNormalizer","_templateParser","_styleCompiler","_viewCompiler","_dirWrapperCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_animationParser","_animationCompiler","clearCache","compileModules","staticSymbols","sourceModules","_compileSrcFile","all","exportedVars","outputSourceModules","_compileModule","directiveType","_compileDirectiveWrapper","dirType","normalizeDirective","normalizedCompWithDirectives","dirMetas","stylesCompileResults","compiledStyleSheet","_codgenStyles","_compileComponentFactory","_compileComponent","componentStylesheet","srcModule","_codegenSourceModule","appCompileResult","ngModuleFactoryVar","dirCompileResult","hostMeta","hostViewFactoryVar","compFactoryVar","componentStyles","stylesExpr","stylesVar","viewResult","stylesCompileResult","emitStatements","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","PACKAGE_ROOT_URL","_packagePrefix","resolvedUrl","resolvedParts","pathSegements","DirectiveNormalizer","_resourceLoader","_urlResolver","_config","_resourceLoaderCache","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizedTemplateAsync","normalizedTemplateSync","normalizeTemplateSync","normalizeTemplateAsync","normalizedTemplate","normalizeExternalStylesheets","normalizeLoadedTemplate","templateMeta","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","_loadMissingExternalStylesheets","loadedStylesheets","styleUrl","loadedStyle","_","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent","DirectiveResolver","_reflector","throwIfNotFound","typeMetadata","annotations","metadata","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","bindingPropertyName","Output","HostBinding","hostBinding","hostPropertyName","startWith","HostListener","hostListener","Query","_merge","_extractPublicName","mergedInputs","inputNames_1","inputDef","publicName","mergedOutputs","outputNames_1","outputDef","mergedHost","mergedQueries","NgModuleResolver","PipeResolver","metas","annotation","__extends$17","CompileMetadataResolver","_ngModuleResolver","_directiveResolver","_pipeResolver","_directiveCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","_anonymousTypes","_anonymousTypeIndex","sanitizeTokenName","getAnimationEntryMetadata","defs","getAnimationStateMetadata","AnimationStateDeclarationMetadata","getAnimationStyleMetadata","AnimationStateTransitionMetadata","getAnimationMetadata","AnimationStyleMetadata","AnimationKeyframesSequenceMetadata","AnimationAnimateMetadata","animateData","AnimationWithStepsMetadata","AnimationGroupMetadata","changeDetectionStrategy","entryComponentMetadata","getProvidersMetadata","getTypeMetadata","getDefaultComponentElementName","getQueriesMetadata","moduleType","compileMeta","declaredDirectives_1","exportedDirectives_1","declaredPipes_1","exportedPipes_1","importedModules_1","exportedModules_1","providers_1","entryComponents_1","imports","importedType","importedModuleType","moduleWithProviders","importedMeta","_getTypeDescriptor","exportedType","exportedDirMeta","exportedPipeMeta","exportedModuleMeta","transitiveModule_1","_getTransitiveNgModuleMetadata","declaredType","declaredDirMeta","declaredPipeMeta","_addDirectiveToModule","_addPipeToModule","bootstrap","_verifyModule","_addTypeToModule","oldModule","transitiveExportedModules","force","getDependenciesMetadata","getFactoryMetadata","pipeType","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","paramEntry","Self","SkipSelf","attributeName","isViewQuery","getQueryMetadata","getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","compileProvider","tokenMeta","_getEntryComponentsFromProvider","getProviderMetadata","providersInfo","soFar","seenProvider","seenProviderIdx","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","_queryVarBindings","q","ComponentFactoryDependency$1","NgModuleCompileResult","NgModuleCompiler","bootstrapComponentFactories","entryComponentFactories","_InjectorBuilder","providerParser","addProvider","injectorClass","ngModuleFactoryStmt","registerFactoryStmt","_ngModuleMeta","_entryComponentFactories","_bootstrapComponentFactories","_tokens","_instances","_createStmts","_destroyStmts","_getProviderValue","_createProviderProperty","getMethodStmts","InjectMethodVars$1","InjectorProps","componentFactory","injClassName","getterStmts","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","_EmittedLine","indent","_exportedVars","_indent","_classes","_lines","isExportedVar","println","lastPart","print","lineIsEmpty","_currentLine","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","lines","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","absentValue","opStr","useNewLine","visitAllObjects","__extends$18","TypeScriptEmitter","_importGenerator","srcParts","importsWithPrefixes","importedModuleUrl","getImportPath","_moduleUrl","defaultType","_visitIdentifier","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","members","ReturnValue","debugAst","currCtx","__proto__","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","fnExpr","__extends$20","AbstractJsEmitterVisitor","currentClass","__extends$19","_evalArgNames","_evalArgValues","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","isRe","_scopeSelectorPart","scopedP","attrSelectorIndex","attrSelectors","attrSelector","replaceBy","scopedSelector","sep","scopeAfter","scopedPart","_colonHostContextRe","_polyfillHostContext","_colonHostRe","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","StylesCompileResult","CompiledStylesheet","StyleCompiler","_shadowCss","_compileStyles","stylesheetMeta","compiledStylesheet","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","RuntimeCompiler","_injector","_templateNormalizer","_directiveWrapperCompiler","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","isSync","componentPromise","_compileComponents","ngModuleFactory","componentFactories","templates","localModuleMeta","_createCompiledHostTemplate","proxyComponentFactory","ModuleWithComponentFactories","_compileTemplate","moduleMeta_1","Compiler","ModuleBoundCompiler","_assertComponentKnown","mainModule","loadingPromises","moduleByDirective","_createCompiledTemplate","entryComponentType","loading","compType","compiledTemplate","normalizedCompMeta","CompiledTemplate","_assertComponentLoaded","_assertDirectiveWrapper","dirWrapper","directiveWrapperClass","isCompiled","externalStylesheetsByModuleUrl","_resolveStylesCompileResult","viewCompMetas","viewComponentTypes","viewDirectives","viewPipes","depTemplate","proxyViewFactory","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","viewDirectiveAndComponents","_normalizeResult","_viewFactory","_normalizedCompMeta","isCompiledWithDeps","depsCompiled","_delegate","_ngModule","HTML","URL","RESOURCE_URL","__extends$21","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","formaction","innerHtml","readonly","tabindex","DomElementSchemaRegistry","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","schemaMetas","schema","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","_NO_RESOURCE_LOADER","COMPILER_PROVIDERS","TRANSLATIONS","RuntimeCompilerFactory","defaultOptions","_defaultOptions","createCompiler","mergedOptions","ReflectiveInjector","resolveAndCreate","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory","PLATFORM_INITIALIZER","_ASSET_URL_RE","ImportGenerator","parseAssetUrl","AssetUrl","packageName","firstLevelDir","modulePath","allowNonMatching","12","rxjs_Subject","rxjs_Observable","scheduleMicroTask","Zone","looseIdentical","extractAnnotation","applyParams","fnOrArray","annoLength","paramsAnnotations","ii","paramAnnotations","Reflect","defineMetadata","clsDef","proto","extends","constructorName","_nextClassId","makeDecorator","parentClass","chainFn","DecoratorFactory","objOrType","getMetadata","metaCtor","annotationInstance","chainAnnotation","TypeDecorator","cls","getOwnMetadata","makeMetadataCtor","annotationCls","argVal","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","makePropDecorator","PropDecoratorFactory","decoratorInstance","forwardRef","forwardRefFn","__forward_ref__","findFirstClosedCycle","constructResolvingPath","reversed","reverse","tokenStrs","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","done","iterateListLike","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","normalized","resolved","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","MixingMultiProvidersWithRegularProvidersError","resolvedFactories","InvalidProviderError","_extractToken","NoAnnotationError","depProps","_createDependency","lowerBoundVisibility","upperBoundVisibility","paramMetadata","_mapProviders","_proto","numberOfProviders","getProviderAtIndex","_appIdRandomProviderFactory","_randomChar","random","_throwError","getPreviousIndex","addRemoveOffset","moveOffsets","moveOffset","detectWTF","wtf","global$1","trace","createScope","flags","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","_flattenNestedViewRenderNodes","renderNodes","appEl","nestedViews","ensureSlotCount","expectedSlotCount","givenSlotCount","EMPTY_ARR","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","_toStringWithNull","oldValue","ExpressionChangedAfterItHasBeenCheckedError","v0","p0","v1","p1","v2","p2","v3","p3","v4","p4","v5","p5","v6","p6","v7","p7","v8","p8","v9","p9","camelCaseToDashCase","CAMEL_CASE_REGEXP","createElement","setElementAttribute","rootSelectorOrNode","hostElement","selectRootElement","setTestabilityGetter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","createPlatform","_platform","destroyed","PlatformRef","inits","init","parentPlaformFactory","getPlatform","assertPlatform","requiredToken","platform","destroyPlatform","_callAndReportToErrorHandler","errorHandler","catch","handleError","moduleFactories","getModuleFactory","checkNotEmpty","exportName","queueAnimationGlobally","player","_queuedAnimations","triggerQueuedAnimations","play","asNativeElements","debugEls","_queryElementChildren","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","animate","timing","EMPTY_STYLE","group","sequence","AnimationSequenceMetadata","entryOffset","transition","animationData","trigger","AnimationEntryMetadata","newStyles","nullValue","finalStyles","AUTO_STYLE","finalStateStyles","flatenedFirstKeyframeStyles","flattenStyles","extraFirstKeyframeStyles","hasExtraFirstStyles","keyframeCollectedStyles","finalKeyframe","flatenedFinalKeyframeStyles","extraFinalKeyframeStyles","hasExtraFinalStyles","collection","stylesObj","_findLastRenderNode","lastNode","nestedView","_desc","ContentChildren","ContentChild","ViewChildren","ViewChild","ViewMetadata","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","_NullInjector","notFoundValue","NULL","AbstractProviderError","constructResolvingMessage","injectors","addKey","NoProviderError","CyclicDependencyError","InstantiationError","originalException","originalStack","_genMessage","parameter","OutOfBoundsError","provider1","provider2","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","ctorParam","fill","propDecorators_1","propMetadata_1","lcProperty","setter","functionBody","enumIdentifier","updateCapabilities","caps","_MAX_CONSTRUCTION_COUNTER","UNDEFINED","ReflectiveProtoInjectorInlineStrategy","protoEI","provider0","provider3","provider4","provider5","provider6","provider7","provider8","provider9","keyId0","keyId1","keyId2","keyId3","keyId4","keyId5","keyId6","keyId7","keyId8","keyId9","createInjectorStrategy","ReflectiveInjectorInlineStrategy","ReflectiveProtoInjectorDynamicStrategy","protoInj","keyIds","ei","ReflectiveInjectorDynamicStrategy","ReflectiveProtoInjector","fromResolvedProviders","protoStrategy","obj0","obj1","obj2","obj3","obj4","obj5","obj6","obj7","obj8","obj9","resetConstructionCounter","_constructionCounter","instantiateProvider","_new","getObjByKeyId","keyId","inj","getObjAtIndex","getMaxNumberOfObjects","objs","ResolvedReflectiveProviders","ReflectiveInjector_","resolveAndCreateChild","createChildFromResolved","resolveAndInstantiate","instantiateResolved","_getByKey","getAt","_instantiateProvider","_instantiate","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","d10","d11","d12","d13","d14","d15","d16","d17","d18","d19","_getByReflectiveDependency","displayName","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_throwOrNull","inj_","ErrorHandler","rethrowError","_findOriginalError","_findOriginalStack","_findContext","_extractMessage","APP_INITIALIZER","ApplicationInitStatus","appInits","_done","asyncInitPromises","initResult","_donePromise","APP_ID","APP_ID_RANDOM_PROVIDER","APP_BOOTSTRAP_LISTENER","DefaultIterableDifferFactory","cdRef","trackByFn","DefaultIterableDiffer","trackByIdentity","_trackByFn","_collection","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","forEachItem","_next","nextIt","nextRemove","adjPreviousIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","_nextAdded","forEachMovedItem","_nextMoved","_nextIdentityChange","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","CollectionChangeRecord","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","previous","additions","moves","removals","identityChanges","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","afterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_records","_mapHead","_previousMapHead","_changesHead","_changesTail","_nextChanged","records","oldSeqRecord","lastOldSeqRecord","lastNewSeqRecord","seqChanged","_forEach","newSeqRecord","_maybeAddToChanges","_removeFromSeq","KeyValueChangeRecord","_addToAdditions","_isInRemovals","_removeFromRemovals","lastRecord","rec","_addToChanges","factories","copied","extend","iterable","kv","wrapped","hasWrappedValue","unwrap","reset","isFirstChange","keyValDiff","iterableDiff","slotCount","RenderDebugInfo","RootRenderer","Sanitizer","wtfEnabled","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","ViewContainerRef_","_element","_createComponentInContainerScope","_insertScope","_removeScope","_detachScope","insert","createComponent","contextInjector","componentRef","hostView","viewRef_","attachView","internalView","moveView","detachView","detach","parentIndex","parentView","initComponent","componentConstructorViewQueries","nestedViewClass","refRenderNode","prevView","lastRootNode","attachViewAfter","flatRootNodes","markContentChildAsMoved","addToContentChildren","removeFromContentChildren","currValue","ViewWrappedError","ViewDestroyedError","_appId","sanitizer","_nextCompTypeId","createRenderComponentType","renderComponent","renderComponentType","InlineArray0","_v0","_v1","_v2","_v3","_v4","_v5","_v6","_v7","_v8","_v9","_v10","_v11","_v12","_v13","_v14","_v15","freeze","ComponentRef","ComponentRef_","_hostElement","_componentType","EMPTY_CONTEXT","vu","NoComponentFactoryError","_NullComponentFactoryResolver","resolveComponentFactory","_factories","componentType","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","err","completeFn","setTimeout","Subject","NgZone","enableLongStackTrace","_hasPendingMicrotasks","_hasPendingMacrotasks","_isStable","_nesting","_onUnstable","_onMicrotaskEmpty","_onStable","_onErrorEvents","assertZonePatched","outer","fork","forkInnerZoneWithAngularBehavior","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runGuarded","runOutsideAngular","checkStable","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","setHasMicrotask","microTask","setHasMacrotask","macroTask","onHandleError","triggerError","hasMicrotasks","hasMacrotasks","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","onUnstable","onStable","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","isStable","hasPendingMacrotasks","whenStable","getPendingRequestCount","findBindings","using","exactMatch","findProviders","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","bootstrapModuleFactory","moduleFactory","bootstrapModule","compilerOptions","PlatformRef_","_modules","_destroyListeners","_destroyed","_bootstrapModuleFactoryWithZone","ngZone","ngZoneInjector","moduleRef","exceptionHandler","onError","initStatus","donePromise","_moduleDoBootstrap","_bootstrapModuleWithZone","componentFactoryCallback","compilerFactory","compiler","appRef","ApplicationRef","bootstrapFactories","compFactory","ngDoBootstrap","ApplicationRef_","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_testabilityRegistry","_testability","_bootstrapListeners","_rootComponents","_rootComponentTypes","_changeDetectorRefs","_runningTick","_enforceNoNewChanges","onMicrotaskEmpty","tick","registerChangeDetector","changeDetector","unregisterChangeDetector","componentOrFactory","compRef","_unloadComponent","_loadComponent","changeDetectorRef","listeners","_tickScope","detector","detectChanges","checkNoChanges","NgModuleRef","_injectorClass","_moduleType","_UNDEFINED","createInternal","getInternal","destroyInternal","NgModuleFactoryLoader","_dirty","_results","_emitter","toArray","notifyOnChanges","setDirty","_SEPARATOR","FACTORY_CLASS_SUFFIX","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","offlineMode","loadFactory","loadAndCompile","System","import","factoryClassSuffix","_appElement","ViewRef","EmbeddedViewRef","ViewRef_","_originalMode","cdMode","markPathToRootAsCheckOnce","Detached","reattach","EventListener","DebugNode","_debugInfo","addChild","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","previousChildren","nextChildren","newChild","queryAll","queryAllNodes","triggerEventHandler","eventObj","_CORE_PLATFORM_PROVIDERS","ApplicationModule","_players","_onDoneFns","_onStartFns","_finished","_started","parentPlayer","total","_onFinish","onDone","onStart","hasStarted","pause","restart","setPosition","getPosition","min","AnimationPlayer","_currentIndex","_onNext","_activePlayer","AnimationStateMetadata","AnimationMetadata","_steps","AnimationTransitionEvent","totalTime","phaseName","_player","_fromState","_toState","_totalTime","_createEvent","DebugDomRootRenderer","componentProto","DebugDomRenderer","selectorOrNode","nativeEl","debugEl","createViewRoot","createTemplateAnchor","createText","projectNodes","debugParent","debugElement_1","viewRootNodes","debugNode","debugViewRootNodes","destroyView","viewAllNodes","listen","listenGlobal","setElementProperty","propertyValue","attributeValue","isAdd","styleName","styleValue","invokeElementMethod","setText","refTokens","_tplRow","_tplCol","staticNodeDebugInfos","staticNodeInfo","_staticNodeInfo","allNodes","refName","injectorGet","ViewAnimationMap","_map","_allPlayers","playersByAnimation","findAllPlayersByElement","getAllPlayers","AnimationViewContext","onAllActiveAnimationsDone","activeAnimationPlayers","queueAnimation","cancelActiveAnimation","removeAllAnimations","_UNDEFINED$1","ElementInjector","_scope_check","contentChildren","viewChildren","viewContainerElement","numberOfChecks","_animationContext","Destroyed","givenProjectableNodes","_hasExternalHostElement","dirtyParentQueriesInternal","injectorGetInternal","_destroyRecurse","destroyLocal","detachInternal","Checked","Errored","throwDestroyedError","detectChangesInternal","detectContentChildrenChanges","detectViewChildrenChanges","renderAppElement","markAsCheckOnce","eventHandler","cb","_currentDebugContext","_resetDebug","_rethrowWithContext","debug","rowNum","colNum","superHandler","89","_angular_compiler","_angular_platformBrowser","INTERNAL_BROWSER_PLATFORM_PROVIDERS","__platform_browser_private__","ResourceLoaderImpl","reject","promise","rej","xhr","XMLHttpRequest","open","responseType","onload","response","responseText","status","onerror","send","INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","CachedResourceLoader","_cache","$templateCache","__platform_browser_dynamic_private__","RESOURCE_CACHE_PROVIDER","platformBrowserDynamic","62","_angular_common","setValueOnPath","shift","dashCaseToCamelCase","DASH_CASE_REGEXP","getDOM","_DOM","setRootDomAdapter","adapter","_computeStyle","getComputedStyle","_populateStyles","defaultStyles","data","formattedProp","_resolveStyleUnit","userProvidedProp","_isPixelDimensionStyle","_findDimensionalSuffix","_$0","_$9","_$PERIOD","getBaseElementHref","baseElement","document","querySelector","getAttribute","relativePath","urlParsingNode","setAttribute","charAt","parseCookieValue","cookieStr","encodeURIComponent","cookie","eqIndex","cookieName","cookieValue","decodeURIComponent","supportsState","history","moveNodesAfterSibling","sibling","nextSibling","insertBefore","appendChild","appendNodes","decoratePreventDefault","allowDefaultBehavior","_shimContentAttribute","componentShortId","COMPONENT_REGEX","_shimHostAttribute","_flattenStyles","compId","splitNamespace","NS_PREFIX_RE","inspectNativeElement","_createConditionalRootRenderer","rootRenderer","extraTokens","_createRootRenderer","setGlobalVar","INSPECT_GLOBAL_NAME","CORE_TOKENS_GLOBAL_NAME","CORE_TOKENS","_ngProbeTokensToMap","sanitizeUrl","SAFE_URL_PATTERN","DATA_URL_PATTERN","sanitizeSrcset","srcset","getInertElement","inertElement","DOM","templateEl","doc","createHtmlDocument","tagSet","tags","sets","sets_1","encodeEntities","SURROGATE_PAIR_REGEXP","hi","NON_ALPHANUMERIC_REGEXP","stripCustomNsAttrs","attributeMap","removeAttribute","childNodesAsList","isElementNode","sanitizeHtml","unsafeHtmlInput","containerEl","unsafeHtml","mXSSAttempts","parsedHtml","setInnerHTML","defaultDoc","documentMode","getInnerHTML","SanitizingHtmlSerializer","safeHtml","sanitizeChildren","getTemplateContent","sanitizedSomething","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeStyle","urlMatch","URL_RE","SAFE_STYLE_VALUE","initDomAdapter","BrowserDomAdapter","makeCurrent","BrowserGetTestability","_document","_resolveDefaultAnimationDriver","supportsWebAnimation","WebAnimationsDriver","AnimationDriver","NOOP","enableDebugTools","ng","AngularTools","disableDebugTools","_NoOpAnimationDriver","DomAdapter","resourceLoaderType","_attrToPropMap","WebAnimationsPlayer","_initialized","_duration","formattedKeyframe","_triggerWebAnimation","onfinish","cancel","formattedSteps","startingStyleLookup","playerOptions","GenericBrowserDomAdapter","_animationPrefix","_transitionEnd","element_1","getStyle","domPrefixes","transEndEventNames_1","WebkitTransition","MozTransition","OTransition","getDistributedNodes","resolveAndSetHref","supportsDOMEvents","supportsNativeShadowDOM","createShadowRoot","getAnimationPrefix","getTransitionEnd","supportsAnimation","DOM_KEY_LOCATION_NUMPAD","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","C","D","F","J","K","N","O","`","","templateHtml","setProperty","getProperty","logError","logGroup","logGroupEnd","groupEnd","querySelectorAll","on","evt","addEventListener","onAndCancel","removeEventListener","dispatchEvent","createMouseEvent","eventType","createEvent","initEvent","isPrevented","defaultPrevented","innerHTML","HTMLTemplateElement","getOuterHTML","outerHTML","nodeValue","firstChild","clearNodes","replaceChild","oldChild","insertAllBefore","insertAfter","getText","getValue","setValue","getChecked","checked","setChecked","createComment","createTemplate","createElementNS","createTextNode","createScriptTag","createStyleElement","css","getShadowRoot","shadowRoot","getHost","clone","cloneNode","getElementsByClassName","getElementsByTagName","classList","addClass","removeClass","hasClass","contains","setStyle","removeStyle","stylename","hasStyle","elAttrs","attrib","hasAttribute","hasAttributeNS","getAttributeNS","setAttributeNS","removeAttributeNS","templateAwareRoot","implementation","createHTMLDocument","getBoundingClientRect","top","bottom","width","height","getTitle","setTitle","newTitle","elementMatches","HTMLElement","msMatchesSelector","webkitMatchesSelector","isTextNode","nodeType","Node","TEXT_NODE","isCommentNode","COMMENT_NODE","ELEMENT_NODE","hasShadowRoot","isShadowRoot","DocumentFragment","importIntoDoc","importNode","adoptNode","getHref","getEventKey","keyIdentifier","getGlobalEventTarget","getHistory","getLocation","resetBaseElement","getUserAgent","navigator","userAgent","setData","getData","performanceNow","performance","now","getTime","supportsCookies","getCookie","setCookie","BrowserPlatformLocation","_location","_history","newPath","getAngularTestability","getAllAngularTestabilities","getAllAngularRootElements","whenAllStable","testabilities","didWork","decrement","didWork_","Title","DOCUMENT","EVENT_MANAGER_PLUGINS","EventManager","plugins","manager","_plugins","plugin","_findPluginFor","addGlobalEventListener","getZone","EventManagerPlugin","SharedStylesHost","_styles","_stylesSet","addStyles","onStylesAdded","getAllStyles","DomSharedStylesHost","_hostNodes","head","_addStylesToHost","addHost","hostNode","removeHost","NAMESPACE_URIS","xlink","xhtml","TEMPLATE_COMMENT_TEXT","TEMPLATE_BINDINGS_EXP","DomRootRenderer","eventManager","sharedStylesHost","animationDriver","registeredComponents","DomRenderer","DomRootRenderer_","_eventManager","_rootRenderer","_animationDriver","_contentAttr","_hostAttr","nsAndName","nodesParent","attrNs","dashCasedPropertyName","existingBindings","parsedBindings","NgProbeToken","ELEMENT_PROBE_PROVIDERS","DomEventsPlugin","zone","outsideHandler","_eventNames","pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeleft","swiperight","swipeup","swipedown","tap","HammerGesturesPluginCommon","HAMMER_GESTURE_CONFIG","HammerGestureConfig","overrides","buildHammer","mc","Hammer","enable","HammerGesturesPlugin","isCustomEvent","off","modifierKeys","modifierKeyGetters","alt","altKey","control","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","eventCallback","domEventName","_normalizeKey","fullKey","modifierName","getEventFullKey","modifierGetter","keyName","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","buf","startElement","endElement","VALUES","TRANSFORMATION_FNS","COLOR_FNS","FN_ARGS","DomSanitizer","DomSanitizerImpl","sanitize","SafeHtmlImpl","changingThisBreaksApplicationSecurity","checkNotSafeValue","SafeStyleImpl","SafeScriptImpl","SafeResourceUrlImpl","SafeUrlImpl","expectedType","SafeValueImpl","getTypeName","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","BROWSER_SANITIZATION_PROVIDERS","platformBrowser","BrowserModule","parentModule","win","ChangeDetectionPerfRecord","msPerTick","numTicks","profiler","AngularProfiler","timeChangeDetection","profileName","isProfilerAvailable","profile","profileEnd","toFixed","By","debugElement","1","root_1","toSubscriber_1","observable_1","Observable","_isScalar","lift","observable","observerOrNext","sink","toSubscriber","syncErrorThrowable","syncErrorThrown","syncErrorValue","PromiseCtor","root","Rx","subscriber","$$observable","90","closed","13","Observable_1","Subscriber_1","Subscription_1","ObjectUnsubscribedError_1","SubjectSubscription_1","rxSubscriber_1","SubjectSubscriber","destination","Subscriber","observers","isStopped","hasError","thrownError","$$rxSubscriber","subject","AnonymousSubject","ObjectUnsubscribedError","Subscription","EMPTY","SubjectSubscription","asObservable","92","subscriberIndex","3","isFunction_1","Observer_1","destinationOrNext","SafeSubscriber","_error","_complete","isFunction","__tryOrSetError","__tryOrUnsub","_unsubscribe","11","isArray_1","isObject_1","tryCatch_1","errorObject_1","UnsubscriptionError_1","hasErrors","_subscriptions","trial","tryCatch","errorObject","isObject","UnsubscriptionError","teardown","subscriptionIndex","53","getSymbolObservable","41","for","67","77","14","23","x","54","102","15","objectTypes","boolean","function","object","number","string","freeGlobal","103","nextOrObserver","17","tryCatcher","tryCatchTarget"],"mappings":"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CAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,GAAA,IACAC,OAAA,IACAC,OAAA,IACAC,IAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,GAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,GAAA,IACAC,GAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,GAAA,IACAC,GAAA,IACA39B,IAAA,IACA49B,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,QAAA,IACAC,MAAA,IACAlzB,GAAA,IACAmzB,KAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,OAAA,IACAC,KAAA,IACAC,IAAA,IACAC,IAAA,IACAC,GAAA,IACAC,GAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACA71D,KAAA,IACA81D,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,IAAA,IACAC,OAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,OAAA,IACAC,IAAA,IACAC,KAAA,IACAC,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,IAAA,IACAC,IAAA,IA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KACA,4DACA,sEACA,uDACA,sEAEArmE,gBAAA3tD,EAAAg3B,gBAAAi9F,cACA,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA,cAUA,IAAAC,IAAAn0H,WAAA0M,WAAA,SAAAC,EAAAC,GAEA,QAAAC,MAAqB7M,KAAA8M,YAAAH,EADrB,OAAAhN,KAAAiN,KAAAG,eAAApN,KAAAgN,EAAAhN,GAAAiN,EAAAjN,GAEAgN,GAAA3K,UAAA,OAAA4K,EAAA/K,OAAAmL,OAAAJ,IAAAC,GAAA7K,UAAA4K,EAAA5K,UAAA,GAAA6K,MAEAunH,GAAA,UACAC,GAAA,SACAC,GAAA,SACAC,GAAA,SAuDAC,IACA,4NACA,69BACA,4oCACA,mMACA,ilBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,iJACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,mEACA,+BACA,8BACA,6BACA,yHACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,qBACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2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EAAAkoE,2BACAloE,EAAAihC,4CACAjhC,EAAA8gC,gCACA9gC,EAAA+gC,kCACA/gC,EAAA2gC,oCACA3gC,EAAA8/B,mCACA9/B,EAAAogC,gCACApgC,EAAAyxB,4BACAzxB,EAAAmoE,8BACAnoE,EAAA4zB,0BACA5zB,EAAAwoE,yBACAxoE,EAAA6xB,uBACA7xB,EAAA6jB,sBACA7jB,EAAAyoE,wBACAzoE,EAAA6oE,6BACA7oE,EAAAikB,2BACAjkB,EAAA4jB,4BACA5jB,EAAAujB,gDACAvjB,EAAAmpE,uBACAnpE,EAAAopE,2BACAppE,EAAAypE,qCACAzpE,EAAAolB,sDACAplB,EAAAylB,8BACAzlB,EAAA4pE,gBACA5pE,EAAAq4G,gBACAr4G,EAAAwhD,kCACAxhD,EAAAs4G,mBACAt4G,EAAAolD,4EACAplD,EAAAslD,gEACAtlD,EAAAu7G,gCACAv7G,EAAAqlD,eACArlD,EAAAwlD,0BACAxlD,EAAAs7G,kBACAt7G,EAAA02H,sBACA12H,EAAA42H,0BACA52H,EAAAo3H,uBACAp3H,EAAA01F,yBACA11F,EAAAouF,kBACApuF,EAAAgpF,iBACAhpF,EAAAsrF,SACAtrF,EAAAstF,OACAttF,EAAA8tF,OACA9tF,EAAA67G,uBACA77G,EAAAgvE,SACAhvE,EAAAknB,SACAlnB,EAAAkwE,OACAlwE,EAAAooB,0BACApoB,EAAAipB,gBACAjpB,EAAAqxE,sBACArxE,EAAAuxE,8BACAvxE,EAAAyxE,UACAzxE,EAAA+xE,aACA/xE,EAAAigH,2BACAjgH,EAAAiyF,cACAjyF,EAAAy9E,mBACAz9E,EAAAw9E,aACAx9E,EAAA03H,mBACA13H,EAAA43H,YACA53H,EAAAkqD,sDACAlqD,EAAA6pH,qBACA7pH,EAAA4wC,iBACA5wC,EAAAyqB,mBACAzqB,EAAA2wC,mBACA3wC,EAAAi2E,cACAj2E,EAAA21H,4BACA31H,EAAAyjB,cACAzjB,EAAA+kE;AACA/kE,EAAA6lE,sBACA7lE,EAAAgmE,kBACAhmE,EAAA+vH,2BACA/vH,EAAAgwH,uBACAhwH,EAAAiwH,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AC,EAAAC,EAAAC,EAAAC,EAAAC,GACAj7I,KAAAkC,SACAlC,KAAA06I,MACA16I,KAAA26I,MACA36I,KAAA46I,MACA56I,KAAA66I,MACA76I,KAAA86I,MACA96I,KAAA+6I,MACA/6I,KAAAg7I,MACAh7I,KAAAi7I,MAwBA,MAtBA/pD,cAAAlvF,UAAAiF,IAAA,SAAAU,GACA,OAAAA,GACA,OACA,MAAA3H,MAAA06I,GACA,QACA,MAAA16I,MAAA26I,GACA,QACA,MAAA36I,MAAA46I,GACA,QACA,MAAA56I,MAAA66I,GACA,QACA,MAAA76I,MAAA86I,GACA,QACA,MAAA96I,MAAA+6I,GACA,QACA,MAAA/6I,MAAAg7I,GACA,QACA,MAAAh7I,MAAAi7I,GACA,SACA,SAGA/pD,gBAEAC,GAAA,WACA,QAAAA,eAAAjvF,EAAAw4I,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAz7I,KAAAkC,SACAlC,KAAA06I,MACA16I,KAAA26I,MACA36I,KAAA46I,MACA56I,KAAA66I,MACA76I,KAAA86I,MACA96I,KAAA+6I,MACA/6I,KAAAg7I,MACAh7I,KAAAi7I,MACAj7I,KAAAk7I,MACAl7I,KAAAm7I,MACAn7I,KAAAo7I,OACAp7I,KAAAq7I,OACAr7I,KAAAs7I,OACAt7I,KAAAu7I,OACAv7I,KAAAw7I,OACAx7I,KAAAy7I,OAwCA,MAtCAtqD,eAAAnvF,UAAAiF,IAAA,SAAAU,GACA,OAAAA,GACA,OACA,MAAA3H,MAAA06I,GACA,QACA,MAAA16I,MAAA26I,GACA,QACA,MAAA36I,MAAA46I,GACA,QACA,MAAA56I,MAAA66I,GACA,QACA,MAAA76I,MAAA86I,GACA,QACA,MAAA96I,MAAA+6I,GACA,QACA,MAAA/6I,MAAAg7I,GACA,QACA,MAAAh7I,MAAAi7I,GACA,QACA,MAAAj7I,MAAAk7I,GACA,QACA,MAAAl7I,MAAAm7I,GACA,SACA,MAAAn7I,MAAAo7I,IACA,SACA,MAAAp7I,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5C,gBACA1xC,uBACA2xC,0BACAxnD,iBACA+C,kBACA+tG,mBACArpD,gBACAlgC,0BACAsqE,4BACA8xB,wBACAj8D,WACAx9D,aACAy9D,aACAC,uBACAg7D,mBACA/6D,2BACAC,wBACAC,qBACAI,wDACAC,oDACAu3C,4BACAt3C,wBACAE,0BACAD,gDACAN,mBACAzyD,aACA0yD,iBACAC,eACAltD,mBACAwtD,8BACA12E,oBACA22E,uBAGAjwF,GAAA0jI,8BACA1jI,EAAAkkI,8BACAlkI,EAAAqkI,gCACArkI,EAAAikI,wBACAjkI,EAAA6jI,eACA7jI,EAAA6jJ,kBACA7jJ,EAAAujI,8BACAvjI,EAAA2mB,oBACA3mB,EAAAq3H,4CACAr3H,EAAAmxI,UACAnxI,EAAAw7G,oBACAx7G,EAAAw3H,wBACAx3H,EAAAqxI,0BACArxI,EAAA4wI,mBACA5wI,EAAA6wI,yBACA7wI,EAAAslI,gBACAtlI,EAAAmoJ,aACAnoJ,EAAAmlI,kCACAnlI,EAAAylI,0BACAzlI,EAAAugJ,eACAvgJ,EAAA2hJ,uBACA3hJ,EAAAqjI,0CACArjI,EAAA22H,gBACA32H,EAAA0xF,uBACA1xF,EAAAqP,aACArP,EAAAmpJ,qBACAnpJ,EAAA04I,kBACA14I,EAAA24I,YACA34I,EAAA44I,qBACA54I,EAAA64I,mBACA74I,EAAAipD,QACAjpD,EAAAiL,gBACAjL,EAAAswI,gBACAtwI,EAAA2qJ,4BACA3qJ,EAAAoqJ,mBACApqJ,EAAAw4I,aACAx4I,EAAAswF,+BACAtwF,EAAAuY,YACAvY,EAAAkoI,eACAloI,EAAAioI,kBACAjoI,EAAAg/G,QACAh/G,EAAAooI,YACApoI,EAAAmoI,eACAnoI,EAAAi1B,YACAj1B,EAAA8S,YACA9S,EAAA0+G,cACA1+G,EAAA8+G,eACA9+G,EAAAqT,QACArT,EAAAy+G,SACAz+G,EAAA6b,OACA7b,EAAAy3C,sBACAz3C,EAAAu3C,mBACAv3C,EAAA63C,mBACA73C,EAAA43C,gBACA53C,EAAAkoD,UACAloD,EAAAmoD,YACAnoD,EAAAk4C,YACAl4C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","file":"vendor.479b9ff7103491f661f2.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t__webpack_require__(61);\n\t__webpack_require__(12);\n\t__webpack_require__(62);\n\t__webpack_require__(89);\n\n\n/***/ },\n\n/***/ 61:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @license Angular v2.1.2\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(12)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}),global.ng.core));\n\t}(this, function (exports,_angular_core) { 'use strict';\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * This class should not be used directly by an application developer. Instead, use\n\t     * {@link Location}.\n\t     *\n\t     * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n\t     * agnostic.\n\t     * This means that we can have different implementation of `PlatformLocation` for the different\n\t     * platforms\n\t     * that angular supports. For example, the default `PlatformLocation` is {@link\n\t     * BrowserPlatformLocation},\n\t     * however when you run your app in a WebWorker you use {@link WebWorkerPlatformLocation}.\n\t     *\n\t     * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n\t     * when\n\t     * they need to interact with the DOM apis like pushState, popState, etc...\n\t     *\n\t     * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n\t     * by\n\t     * the {@link Router} in order to navigate between routes. Since all interactions between {@link\n\t     * Router} /\n\t     * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n\t     * class\n\t     * they are all platform independent.\n\t     *\n\t     * @stable\n\t     */\n\t    var PlatformLocation = (function () {\n\t        function PlatformLocation() {\n\t        }\n\t        Object.defineProperty(PlatformLocation.prototype, \"pathname\", {\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformLocation.prototype, \"search\", {\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformLocation.prototype, \"hash\", {\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return PlatformLocation;\n\t    }());\n\t\n\t    /**\n\t     * `LocationStrategy` is responsible for representing and reading route state\n\t     * from the browser's URL. Angular provides two strategies:\n\t     * {@link HashLocationStrategy} and {@link PathLocationStrategy} (default).\n\t     *\n\t     * This is used under the hood of the {@link Location} service.\n\t     *\n\t     * Applications should use the {@link Router} or {@link Location} services to\n\t     * interact with application route state.\n\t     *\n\t     * For instance, {@link HashLocationStrategy} produces URLs like\n\t     * `http://example.com#/foo`, and {@link PathLocationStrategy} produces\n\t     * `http://example.com/foo` as an equivalent URL.\n\t     *\n\t     * See these two classes for more.\n\t     *\n\t     * @stable\n\t     */\n\t    var LocationStrategy = (function () {\n\t        function LocationStrategy() {\n\t        }\n\t        return LocationStrategy;\n\t    }());\n\t    /**\n\t     * The `APP_BASE_HREF` token represents the base href to be used with the\n\t     * {@link PathLocationStrategy}.\n\t     *\n\t     * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n\t     * representing the URL prefix that should be preserved when generating and recognizing\n\t     * URLs.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * import {Component, NgModule} from '@angular/core';\n\t     * import {APP_BASE_HREF} from '@angular/common';\n\t     *\n\t     * @NgModule({\n\t     *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n\t     * })\n\t     * class AppModule {}\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var APP_BASE_HREF = new _angular_core.OpaqueToken('appBaseHref');\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var globalScope;\n\t    if (typeof window === 'undefined') {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = self;\n\t        }\n\t        else {\n\t            globalScope = global;\n\t        }\n\t    }\n\t    else {\n\t        globalScope = window;\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var _global = globalScope;\n\t    function getTypeNameForDebugging(type) {\n\t        return type['name'] || typeof type;\n\t    }\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    _global.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    function isDate(obj) {\n\t        return obj instanceof Date && !isNaN(obj.valueOf());\n\t    }\n\t    function stringify(token) {\n\t        if (typeof token === 'string') {\n\t            return token;\n\t        }\n\t        if (token === undefined || token === null) {\n\t            return '' + token;\n\t        }\n\t        if (token.overriddenName) {\n\t            return token.overriddenName;\n\t        }\n\t        if (token.name) {\n\t            return token.name;\n\t        }\n\t        var res = token.toString();\n\t        var newLineIndex = res.indexOf('\\n');\n\t        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t    }\n\t    var NumberWrapper = (function () {\n\t        function NumberWrapper() {\n\t        }\n\t        NumberWrapper.parseIntAutoRadix = function (text) {\n\t            var result = parseInt(text);\n\t            if (isNaN(result)) {\n\t                throw new Error('Invalid integer literal when parsing ' + text);\n\t            }\n\t            return result;\n\t        };\n\t        NumberWrapper.parseInt = function (text, radix) {\n\t            if (radix == 10) {\n\t                if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n\t                    return parseInt(text, radix);\n\t                }\n\t            }\n\t            else if (radix == 16) {\n\t                if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n\t                    return parseInt(text, radix);\n\t                }\n\t            }\n\t            else {\n\t                var result = parseInt(text, radix);\n\t                if (!isNaN(result)) {\n\t                    return result;\n\t                }\n\t            }\n\t            throw new Error('Invalid integer literal when parsing ' + text + ' in base ' + radix);\n\t        };\n\t        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n\t        return NumberWrapper;\n\t    }());\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    var _symbolIterator = null;\n\t    function getSymbolIterator() {\n\t        if (!_symbolIterator) {\n\t            if (globalScope.Symbol && Symbol.iterator) {\n\t                _symbolIterator = Symbol.iterator;\n\t            }\n\t            else {\n\t                // es6-shim specific logic\n\t                var keys = Object.getOwnPropertyNames(Map.prototype);\n\t                for (var i = 0; i < keys.length; ++i) {\n\t                    var key = keys[i];\n\t                    if (key !== 'entries' && key !== 'size' &&\n\t                        Map.prototype[key] === Map.prototype['entries']) {\n\t                        _symbolIterator = key;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return _symbolIterator;\n\t    }\n\t\n\t    /**\n\t     * `Location` is a service that applications can use to interact with a browser's URL.\n\t     * Depending on which {@link LocationStrategy} is used, `Location` will either persist\n\t     * to the URL's path or the URL's hash segment.\n\t     *\n\t     * Note: it's better to use {@link Router#navigate} service to trigger route changes. Use\n\t     * `Location` only if you need to interact with or create normalized URLs outside of\n\t     * routing.\n\t     *\n\t     * `Location` is responsible for normalizing the URL against the application's base href.\n\t     * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n\t     * trailing slash:\n\t     * - `/my/app/user/123` is normalized\n\t     * - `my/app/user/123` **is not** normalized\n\t     * - `/my/app/user/123/` **is not** normalized\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * import {Component} from '@angular/core';\n\t     * import {Location} from '@angular/common';\n\t     *\n\t     * @Component({selector: 'app-component'})\n\t     * class AppCmp {\n\t     *   constructor(location: Location) {\n\t     *     location.go('/foo');\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var Location = (function () {\n\t        function Location(platformStrategy) {\n\t            var _this = this;\n\t            /** @internal */\n\t            this._subject = new _angular_core.EventEmitter();\n\t            this._platformStrategy = platformStrategy;\n\t            var browserBaseHref = this._platformStrategy.getBaseHref();\n\t            this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n\t            this._platformStrategy.onPopState(function (ev) {\n\t                _this._subject.emit({\n\t                    'url': _this.path(true),\n\t                    'pop': true,\n\t                    'type': ev.type,\n\t                });\n\t            });\n\t        }\n\t        /**\n\t         * Returns the normalized URL path.\n\t         */\n\t        // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n\t        // removed.\n\t        Location.prototype.path = function (includeHash) {\n\t            if (includeHash === void 0) { includeHash = false; }\n\t            return this.normalize(this._platformStrategy.path(includeHash));\n\t        };\n\t        /**\n\t         * Normalizes the given path and compares to the current normalized path.\n\t         */\n\t        Location.prototype.isCurrentPathEqualTo = function (path, query) {\n\t            if (query === void 0) { query = ''; }\n\t            return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n\t        };\n\t        /**\n\t         * Given a string representing a URL, returns the normalized URL path without leading or\n\t         * trailing slashes.\n\t         */\n\t        Location.prototype.normalize = function (url) {\n\t            return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n\t        };\n\t        /**\n\t         * Given a string representing a URL, returns the platform-specific external URL path.\n\t         * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n\t         * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n\t         * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n\t         */\n\t        Location.prototype.prepareExternalUrl = function (url) {\n\t            if (url.length > 0 && !url.startsWith('/')) {\n\t                url = '/' + url;\n\t            }\n\t            return this._platformStrategy.prepareExternalUrl(url);\n\t        };\n\t        // TODO: rename this method to pushState\n\t        /**\n\t         * Changes the browsers URL to the normalized version of the given URL, and pushes a\n\t         * new item onto the platform's history.\n\t         */\n\t        Location.prototype.go = function (path, query) {\n\t            if (query === void 0) { query = ''; }\n\t            this._platformStrategy.pushState(null, '', path, query);\n\t        };\n\t        /**\n\t         * Changes the browsers URL to the normalized version of the given URL, and replaces\n\t         * the top item on the platform's history stack.\n\t         */\n\t        Location.prototype.replaceState = function (path, query) {\n\t            if (query === void 0) { query = ''; }\n\t            this._platformStrategy.replaceState(null, '', path, query);\n\t        };\n\t        /**\n\t         * Navigates forward in the platform's history.\n\t         */\n\t        Location.prototype.forward = function () { this._platformStrategy.forward(); };\n\t        /**\n\t         * Navigates back in the platform's history.\n\t         */\n\t        Location.prototype.back = function () { this._platformStrategy.back(); };\n\t        /**\n\t         * Subscribe to the platform's `popState` events.\n\t         */\n\t        Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n\t            if (onThrow === void 0) { onThrow = null; }\n\t            if (onReturn === void 0) { onReturn = null; }\n\t            return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n\t        };\n\t        /**\n\t         * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n\t         * is.\n\t         */\n\t        Location.normalizeQueryParams = function (params) {\n\t            return (params.length > 0 && params.substring(0, 1) != '?') ? ('?' + params) : params;\n\t        };\n\t        /**\n\t         * Given 2 parts of a url, join them with a slash if needed.\n\t         */\n\t        Location.joinWithSlash = function (start, end) {\n\t            if (start.length == 0) {\n\t                return end;\n\t            }\n\t            if (end.length == 0) {\n\t                return start;\n\t            }\n\t            var slashes = 0;\n\t            if (start.endsWith('/')) {\n\t                slashes++;\n\t            }\n\t            if (end.startsWith('/')) {\n\t                slashes++;\n\t            }\n\t            if (slashes == 2) {\n\t                return start + end.substring(1);\n\t            }\n\t            if (slashes == 1) {\n\t                return start + end;\n\t            }\n\t            return start + '/' + end;\n\t        };\n\t        /**\n\t         * If url has a trailing slash, remove it, otherwise return url as is.\n\t         */\n\t        Location.stripTrailingSlash = function (url) {\n\t            if (/\\/$/g.test(url)) {\n\t                url = url.substring(0, url.length - 1);\n\t            }\n\t            return url;\n\t        };\n\t        Location.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Location.ctorParameters = [\n\t            { type: LocationStrategy, },\n\t        ];\n\t        return Location;\n\t    }());\n\t    function _stripBaseHref(baseHref, url) {\n\t        if (baseHref.length > 0 && url.startsWith(baseHref)) {\n\t            return url.substring(baseHref.length);\n\t        }\n\t        return url;\n\t    }\n\t    function _stripIndexHtml(url) {\n\t        if (/\\/index.html$/g.test(url)) {\n\t            // '/index.html'.length == 11\n\t            return url.substring(0, url.length - 11);\n\t        }\n\t        return url;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * `HashLocationStrategy` is a {@link LocationStrategy} used to configure the\n\t     * {@link Location} service to represent its state in the\n\t     * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n\t     * of the browser's URL.\n\t     *\n\t     * For instance, if you call `location.go('/foo')`, the browser's URL will become\n\t     * `example.com#/foo`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * import {Component, NgModule} from '@angular/core';\n\t     * import {\n\t     *   LocationStrategy,\n\t     *   HashLocationStrategy\n\t     * } from '@angular/common';\n\t     *\n\t     * @NgModule({\n\t     *   providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}]\n\t     * })\n\t     * class AppModule {}\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var HashLocationStrategy = (function (_super) {\n\t        __extends(HashLocationStrategy, _super);\n\t        function HashLocationStrategy(_platformLocation, _baseHref) {\n\t            _super.call(this);\n\t            this._platformLocation = _platformLocation;\n\t            this._baseHref = '';\n\t            if (isPresent(_baseHref)) {\n\t                this._baseHref = _baseHref;\n\t            }\n\t        }\n\t        HashLocationStrategy.prototype.onPopState = function (fn) {\n\t            this._platformLocation.onPopState(fn);\n\t            this._platformLocation.onHashChange(fn);\n\t        };\n\t        HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n\t        HashLocationStrategy.prototype.path = function (includeHash) {\n\t            if (includeHash === void 0) { includeHash = false; }\n\t            // the hash value is always prefixed with a `#`\n\t            // and if it is empty then it will stay empty\n\t            var path = this._platformLocation.hash;\n\t            if (!isPresent(path))\n\t                path = '#';\n\t            return path.length > 0 ? path.substring(1) : path;\n\t        };\n\t        HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n\t            var url = Location.joinWithSlash(this._baseHref, internal);\n\t            return url.length > 0 ? ('#' + url) : url;\n\t        };\n\t        HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n\t            var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n\t            if (url.length == 0) {\n\t                url = this._platformLocation.pathname;\n\t            }\n\t            this._platformLocation.pushState(state, title, url);\n\t        };\n\t        HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n\t            var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n\t            if (url.length == 0) {\n\t                url = this._platformLocation.pathname;\n\t            }\n\t            this._platformLocation.replaceState(state, title, url);\n\t        };\n\t        HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n\t        HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n\t        HashLocationStrategy.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        HashLocationStrategy.ctorParameters = [\n\t            { type: PlatformLocation, },\n\t            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n\t        ];\n\t        return HashLocationStrategy;\n\t    }(LocationStrategy));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * `PathLocationStrategy` is a {@link LocationStrategy} used to configure the\n\t     * {@link Location} service to represent its state in the\n\t     * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n\t     * browser's URL.\n\t     *\n\t     * `PathLocationStrategy` is the default binding for {@link LocationStrategy}\n\t     * provided in {@link ROUTER_PROVIDERS}.\n\t     *\n\t     * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\n\t     * or add a base element to the document. This URL prefix that will be preserved\n\t     * when generating and recognizing URLs.\n\t     *\n\t     * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n\t     * `location.go('/foo')`, the browser's URL will become\n\t     * `example.com/my/app/foo`.\n\t     *\n\t     * Similarly, if you add `<base href='/my/app'/>` to the document and call\n\t     * `location.go('/foo')`, the browser's URL will become\n\t     * `example.com/my/app/foo`.\n\t     *\n\t     * @stable\n\t     */\n\t    var PathLocationStrategy = (function (_super) {\n\t        __extends$1(PathLocationStrategy, _super);\n\t        function PathLocationStrategy(_platformLocation, href) {\n\t            _super.call(this);\n\t            this._platformLocation = _platformLocation;\n\t            if (isBlank(href)) {\n\t                href = this._platformLocation.getBaseHrefFromDOM();\n\t            }\n\t            if (isBlank(href)) {\n\t                throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n\t            }\n\t            this._baseHref = href;\n\t        }\n\t        PathLocationStrategy.prototype.onPopState = function (fn) {\n\t            this._platformLocation.onPopState(fn);\n\t            this._platformLocation.onHashChange(fn);\n\t        };\n\t        PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n\t        PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n\t            return Location.joinWithSlash(this._baseHref, internal);\n\t        };\n\t        PathLocationStrategy.prototype.path = function (includeHash) {\n\t            if (includeHash === void 0) { includeHash = false; }\n\t            var pathname = this._platformLocation.pathname +\n\t                Location.normalizeQueryParams(this._platformLocation.search);\n\t            var hash = this._platformLocation.hash;\n\t            return hash && includeHash ? \"\" + pathname + hash : pathname;\n\t        };\n\t        PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n\t            var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n\t            this._platformLocation.pushState(state, title, externalUrl);\n\t        };\n\t        PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n\t            var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n\t            this._platformLocation.replaceState(state, title, externalUrl);\n\t        };\n\t        PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n\t        PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n\t        PathLocationStrategy.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        PathLocationStrategy.ctorParameters = [\n\t            { type: PlatformLocation, },\n\t            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n\t        ];\n\t        return PathLocationStrategy;\n\t    }(LocationStrategy));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @experimental\n\t     */\n\t    var NgLocalization = (function () {\n\t        function NgLocalization() {\n\t        }\n\t        return NgLocalization;\n\t    }());\n\t    /**\n\t     * Returns the plural category for a given value.\n\t     * - \"=value\" when the case exists,\n\t     * - the plural category otherwise\n\t     *\n\t     * @internal\n\t     */\n\t    function getPluralCategory(value, cases, ngLocalization) {\n\t        var nbCase = \"=\" + value;\n\t        return cases.indexOf(nbCase) > -1 ? nbCase : ngLocalization.getPluralCategory(value);\n\t    }\n\t    /**\n\t     * Returns the plural case based on the locale\n\t     *\n\t     * @experimental\n\t     */\n\t    var NgLocaleLocalization = (function (_super) {\n\t        __extends$2(NgLocaleLocalization, _super);\n\t        function NgLocaleLocalization(_locale) {\n\t            _super.call(this);\n\t            this._locale = _locale;\n\t        }\n\t        NgLocaleLocalization.prototype.getPluralCategory = function (value) {\n\t            var plural = getPluralCase(this._locale, value);\n\t            switch (plural) {\n\t                case Plural.Zero:\n\t                    return 'zero';\n\t                case Plural.One:\n\t                    return 'one';\n\t                case Plural.Two:\n\t                    return 'two';\n\t                case Plural.Few:\n\t                    return 'few';\n\t                case Plural.Many:\n\t                    return 'many';\n\t                default:\n\t                    return 'other';\n\t            }\n\t        };\n\t        NgLocaleLocalization.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        NgLocaleLocalization.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ];\n\t        return NgLocaleLocalization;\n\t    }(NgLocalization));\n\t    // This is generated code DO NOT MODIFY\n\t    // see angular2/script/cldr/gen_plural_rules.js\n\t    /** @experimental */\n\t    var Plural;\n\t    (function (Plural) {\n\t        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n\t        Plural[Plural[\"One\"] = 1] = \"One\";\n\t        Plural[Plural[\"Two\"] = 2] = \"Two\";\n\t        Plural[Plural[\"Few\"] = 3] = \"Few\";\n\t        Plural[Plural[\"Many\"] = 4] = \"Many\";\n\t        Plural[Plural[\"Other\"] = 5] = \"Other\";\n\t    })(Plural || (Plural = {}));\n\t    /**\n\t     * Returns the plural case based on the locale\n\t     *\n\t     * @experimental\n\t     */\n\t    function getPluralCase(locale, nLike) {\n\t        // TODO(vicb): lazy compute\n\t        if (typeof nLike === 'string') {\n\t            nLike = parseInt(nLike, 10);\n\t        }\n\t        var n = nLike;\n\t        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n\t        var i = Math.floor(Math.abs(n));\n\t        var v = nDecimal.length;\n\t        var f = parseInt(nDecimal, 10);\n\t        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n\t        var lang = locale.split('-')[0].toLowerCase();\n\t        switch (lang) {\n\t            case 'af':\n\t            case 'asa':\n\t            case 'az':\n\t            case 'bem':\n\t            case 'bez':\n\t            case 'bg':\n\t            case 'brx':\n\t            case 'ce':\n\t            case 'cgg':\n\t            case 'chr':\n\t            case 'ckb':\n\t            case 'ee':\n\t            case 'el':\n\t            case 'eo':\n\t            case 'es':\n\t            case 'eu':\n\t            case 'fo':\n\t            case 'fur':\n\t            case 'gsw':\n\t            case 'ha':\n\t            case 'haw':\n\t            case 'hu':\n\t            case 'jgo':\n\t            case 'jmc':\n\t            case 'ka':\n\t            case 'kk':\n\t            case 'kkj':\n\t            case 'kl':\n\t            case 'ks':\n\t            case 'ksb':\n\t            case 'ky':\n\t            case 'lb':\n\t            case 'lg':\n\t            case 'mas':\n\t            case 'mgo':\n\t            case 'ml':\n\t            case 'mn':\n\t            case 'nb':\n\t            case 'nd':\n\t            case 'ne':\n\t            case 'nn':\n\t            case 'nnh':\n\t            case 'nyn':\n\t            case 'om':\n\t            case 'or':\n\t            case 'os':\n\t            case 'ps':\n\t            case 'rm':\n\t            case 'rof':\n\t            case 'rwk':\n\t            case 'saq':\n\t            case 'seh':\n\t            case 'sn':\n\t            case 'so':\n\t            case 'sq':\n\t            case 'ta':\n\t            case 'te':\n\t            case 'teo':\n\t            case 'tk':\n\t            case 'tr':\n\t            case 'ug':\n\t            case 'uz':\n\t            case 'vo':\n\t            case 'vun':\n\t            case 'wae':\n\t            case 'xog':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'agq':\n\t            case 'bas':\n\t            case 'cu':\n\t            case 'dav':\n\t            case 'dje':\n\t            case 'dua':\n\t            case 'dyo':\n\t            case 'ebu':\n\t            case 'ewo':\n\t            case 'guz':\n\t            case 'kam':\n\t            case 'khq':\n\t            case 'ki':\n\t            case 'kln':\n\t            case 'kok':\n\t            case 'ksf':\n\t            case 'lrc':\n\t            case 'lu':\n\t            case 'luo':\n\t            case 'luy':\n\t            case 'mer':\n\t            case 'mfe':\n\t            case 'mgh':\n\t            case 'mua':\n\t            case 'mzn':\n\t            case 'nmg':\n\t            case 'nus':\n\t            case 'qu':\n\t            case 'rn':\n\t            case 'rw':\n\t            case 'sbp':\n\t            case 'twq':\n\t            case 'vai':\n\t            case 'yav':\n\t            case 'yue':\n\t            case 'zgh':\n\t            case 'ak':\n\t            case 'ln':\n\t            case 'mg':\n\t            case 'pa':\n\t            case 'ti':\n\t                if (n === Math.floor(n) && n >= 0 && n <= 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'am':\n\t            case 'as':\n\t            case 'bn':\n\t            case 'fa':\n\t            case 'gu':\n\t            case 'hi':\n\t            case 'kn':\n\t            case 'mr':\n\t            case 'zu':\n\t                if (i === 0 || n === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ar':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n\t                    return Plural.Few;\n\t                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'ast':\n\t            case 'ca':\n\t            case 'de':\n\t            case 'en':\n\t            case 'et':\n\t            case 'fi':\n\t            case 'fy':\n\t            case 'gl':\n\t            case 'it':\n\t            case 'nl':\n\t            case 'sv':\n\t            case 'sw':\n\t            case 'ur':\n\t            case 'yi':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'be':\n\t                if (n % 10 === 1 && !(n % 100 === 11))\n\t                    return Plural.One;\n\t                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n\t                    !(n % 100 >= 12 && n % 100 <= 14))\n\t                    return Plural.Few;\n\t                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n\t                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'br':\n\t                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n\t                    return Plural.One;\n\t                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n\t                    return Plural.Two;\n\t                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n\t                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n\t                        n % 100 >= 90 && n % 100 <= 99))\n\t                    return Plural.Few;\n\t                if (!(n === 0) && n % 1e6 === 0)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'bs':\n\t            case 'hr':\n\t            case 'sr':\n\t                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n\t                    !(i % 100 >= 12 && i % 100 <= 14) ||\n\t                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n\t                        !(f % 100 >= 12 && f % 100 <= 14))\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'cs':\n\t            case 'sk':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n\t                    return Plural.Few;\n\t                if (!(v === 0))\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'cy':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                if (n === 3)\n\t                    return Plural.Few;\n\t                if (n === 6)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'da':\n\t                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'dsb':\n\t            case 'hsb':\n\t                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n\t                    return Plural.Two;\n\t                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n\t                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'ff':\n\t            case 'fr':\n\t            case 'hy':\n\t            case 'kab':\n\t                if (i === 0 || i === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'fil':\n\t                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n\t                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n\t                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ga':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                if (n === Math.floor(n) && n >= 3 && n <= 6)\n\t                    return Plural.Few;\n\t                if (n === Math.floor(n) && n >= 7 && n <= 10)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'gd':\n\t                if (n === 1 || n === 11)\n\t                    return Plural.One;\n\t                if (n === 2 || n === 12)\n\t                    return Plural.Two;\n\t                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'gv':\n\t                if (v === 0 && i % 10 === 1)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === 2)\n\t                    return Plural.Two;\n\t                if (v === 0 &&\n\t                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n\t                    return Plural.Few;\n\t                if (!(v === 0))\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'he':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (i === 2 && v === 0)\n\t                    return Plural.Two;\n\t                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'is':\n\t                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ksh':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'kw':\n\t            case 'naq':\n\t            case 'se':\n\t            case 'smn':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                return Plural.Other;\n\t            case 'lag':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if ((i === 0 || i === 1) && !(n === 0))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'lt':\n\t                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n\t                    return Plural.One;\n\t                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n\t                    !(n % 100 >= 11 && n % 100 <= 19))\n\t                    return Plural.Few;\n\t                if (!(f === 0))\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'lv':\n\t            case 'prg':\n\t                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n\t                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n\t                    return Plural.Zero;\n\t                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n\t                    !(v === 2) && f % 10 === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'mk':\n\t                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'mt':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n\t                    return Plural.Few;\n\t                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'pl':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n\t                    !(i % 100 >= 12 && i % 100 <= 14))\n\t                    return Plural.Few;\n\t                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n\t                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n\t                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'pt':\n\t                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ro':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (!(v === 0) || n === 0 ||\n\t                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'ru':\n\t            case 'uk':\n\t                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n\t                    !(i % 100 >= 12 && i % 100 <= 14))\n\t                    return Plural.Few;\n\t                if (v === 0 && i % 10 === 0 ||\n\t                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n\t                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'shi':\n\t                if (i === 0 || n === 1)\n\t                    return Plural.One;\n\t                if (n === Math.floor(n) && n >= 2 && n <= 10)\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'si':\n\t                if (n === 0 || n === 1 || i === 0 && f === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'sl':\n\t                if (v === 0 && i % 100 === 1)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 100 === 2)\n\t                    return Plural.Two;\n\t                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'tzm':\n\t                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            default:\n\t                return Plural.Other;\n\t        }\n\t    }\n\t\n\t    // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n\t    // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n\t    var _arrayFromMap = (function () {\n\t        try {\n\t            if ((new Map()).values().next) {\n\t                return function createArrayFromMap(m, getValues) {\n\t                    return getValues ? Array.from(m.values()) : Array.from(m.keys());\n\t                };\n\t            }\n\t        }\n\t        catch (e) {\n\t        }\n\t        return function createArrayFromMapWithForeach(m, getValues) {\n\t            var res = new Array(m.size), i = 0;\n\t            m.forEach(function (v, k) {\n\t                res[i] = getValues ? v : k;\n\t                i++;\n\t            });\n\t            return res;\n\t        };\n\t    })();\n\t    var ListWrapper = (function () {\n\t        function ListWrapper() {\n\t        }\n\t        ListWrapper.removeAll = function (list, items) {\n\t            for (var i = 0; i < items.length; ++i) {\n\t                var index = list.indexOf(items[i]);\n\t                list.splice(index, 1);\n\t            }\n\t        };\n\t        ListWrapper.remove = function (list, el) {\n\t            var index = list.indexOf(el);\n\t            if (index > -1) {\n\t                list.splice(index, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        ListWrapper.equals = function (a, b) {\n\t            if (a.length != b.length)\n\t                return false;\n\t            for (var i = 0; i < a.length; ++i) {\n\t                if (a[i] !== b[i])\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t        ListWrapper.maximum = function (list, predicate) {\n\t            if (list.length == 0) {\n\t                return null;\n\t            }\n\t            var solution = null;\n\t            var maxValue = -Infinity;\n\t            for (var index = 0; index < list.length; index++) {\n\t                var candidate = list[index];\n\t                if (candidate == null) {\n\t                    continue;\n\t                }\n\t                var candidateValue = predicate(candidate);\n\t                if (candidateValue > maxValue) {\n\t                    solution = candidate;\n\t                    maxValue = candidateValue;\n\t                }\n\t            }\n\t            return solution;\n\t        };\n\t        ListWrapper.flatten = function (list) {\n\t            var target = [];\n\t            _flattenArray(list, target);\n\t            return target;\n\t        };\n\t        return ListWrapper;\n\t    }());\n\t    function _flattenArray(source, target) {\n\t        if (isPresent(source)) {\n\t            for (var i = 0; i < source.length; i++) {\n\t                var item = source[i];\n\t                if (Array.isArray(item)) {\n\t                    _flattenArray(item, target);\n\t                }\n\t                else {\n\t                    target.push(item);\n\t                }\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t    function isListLikeIterable(obj) {\n\t        if (!isJsObject(obj))\n\t            return false;\n\t        return Array.isArray(obj) ||\n\t            (!(obj instanceof Map) &&\n\t                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n\t    }\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Adds and removes CSS classes on an HTML element.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     *     <some-element [ngClass]=\"'first second'\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n\t     * - `string` - the CSS classes listed in the string (space delimited) are added,\n\t     * - `Array` - the CSS classes declared as Array elements are added,\n\t     * - `Object` - keys are CSS classes that get added when the expression given in the value\n\t     *              evaluates to a truthy value, otherwise they are removed.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgClass = (function () {\n\t        function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n\t            this._iterableDiffers = _iterableDiffers;\n\t            this._keyValueDiffers = _keyValueDiffers;\n\t            this._ngEl = _ngEl;\n\t            this._renderer = _renderer;\n\t            this._initialClasses = [];\n\t        }\n\t        Object.defineProperty(NgClass.prototype, \"klass\", {\n\t            set: function (v) {\n\t                this._applyInitialClasses(true);\n\t                this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n\t                this._applyInitialClasses(false);\n\t                this._applyClasses(this._rawClass, false);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgClass.prototype, \"ngClass\", {\n\t            set: function (v) {\n\t                this._cleanupClasses(this._rawClass);\n\t                this._iterableDiffer = null;\n\t                this._keyValueDiffer = null;\n\t                this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n\t                if (this._rawClass) {\n\t                    if (isListLikeIterable(this._rawClass)) {\n\t                        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create(null);\n\t                    }\n\t                    else {\n\t                        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create(null);\n\t                    }\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgClass.prototype.ngDoCheck = function () {\n\t            if (this._iterableDiffer) {\n\t                var changes = this._iterableDiffer.diff(this._rawClass);\n\t                if (changes) {\n\t                    this._applyIterableChanges(changes);\n\t                }\n\t            }\n\t            else if (this._keyValueDiffer) {\n\t                var changes = this._keyValueDiffer.diff(this._rawClass);\n\t                if (changes) {\n\t                    this._applyKeyValueChanges(changes);\n\t                }\n\t            }\n\t        };\n\t        NgClass.prototype._cleanupClasses = function (rawClassVal) {\n\t            this._applyClasses(rawClassVal, true);\n\t            this._applyInitialClasses(false);\n\t        };\n\t        NgClass.prototype._applyKeyValueChanges = function (changes) {\n\t            var _this = this;\n\t            changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n\t            changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n\t            changes.forEachRemovedItem(function (record) {\n\t                if (record.previousValue) {\n\t                    _this._toggleClass(record.key, false);\n\t                }\n\t            });\n\t        };\n\t        NgClass.prototype._applyIterableChanges = function (changes) {\n\t            var _this = this;\n\t            changes.forEachAddedItem(function (record) { return _this._toggleClass(record.item, true); });\n\t            changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n\t        };\n\t        NgClass.prototype._applyInitialClasses = function (isCleanup) {\n\t            var _this = this;\n\t            this._initialClasses.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n\t        };\n\t        NgClass.prototype._applyClasses = function (rawClassVal, isCleanup) {\n\t            var _this = this;\n\t            if (rawClassVal) {\n\t                if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n\t                    rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n\t                }\n\t                else {\n\t                    Object.keys(rawClassVal).forEach(function (klass) {\n\t                        if (isPresent(rawClassVal[klass]))\n\t                            _this._toggleClass(klass, !isCleanup);\n\t                    });\n\t                }\n\t            }\n\t        };\n\t        NgClass.prototype._toggleClass = function (klass, enabled) {\n\t            var _this = this;\n\t            klass = klass.trim();\n\t            if (klass) {\n\t                klass.split(/\\s+/g).forEach(function (klass) { _this._renderer.setElementClass(_this._ngEl.nativeElement, klass, enabled); });\n\t            }\n\t        };\n\t        NgClass.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngClass]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgClass.ctorParameters = [\n\t            { type: _angular_core.IterableDiffers, },\n\t            { type: _angular_core.KeyValueDiffers, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t        ];\n\t        NgClass.propDecorators = {\n\t            'klass': [{ type: _angular_core.Input, args: ['class',] },],\n\t            'ngClass': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgClass;\n\t    }());\n\t\n\t    var NgForRow = (function () {\n\t        function NgForRow($implicit, index, count) {\n\t            this.$implicit = $implicit;\n\t            this.index = index;\n\t            this.count = count;\n\t        }\n\t        Object.defineProperty(NgForRow.prototype, \"first\", {\n\t            get: function () { return this.index === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForRow.prototype, \"last\", {\n\t            get: function () { return this.index === this.count - 1; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForRow.prototype, \"even\", {\n\t            get: function () { return this.index % 2 === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForRow.prototype, \"odd\", {\n\t            get: function () { return !this.even; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return NgForRow;\n\t    }());\n\t    /**\n\t     * The `NgFor` directive instantiates a template once per item from an iterable. The context for\n\t     * each instantiated template inherits from the outer context with the given loop variable set\n\t     * to the current item from the iterable.\n\t     *\n\t     * ### Local Variables\n\t     *\n\t     * `NgFor` provides several exported values that can be aliased to local variables:\n\t     *\n\t     * * `index` will be set to the current loop iteration for each template context.\n\t     * * `first` will be set to a boolean value indicating whether the item is the first one in the\n\t     *   iteration.\n\t     * * `last` will be set to a boolean value indicating whether the item is the last one in the\n\t     *   iteration.\n\t     * * `even` will be set to a boolean value indicating whether this item has an even index.\n\t     * * `odd` will be set to a boolean value indicating whether this item has an odd index.\n\t     *\n\t     * ### Change Propagation\n\t     *\n\t     * When the contents of the iterator changes, `NgFor` makes the corresponding changes to the DOM:\n\t     *\n\t     * * When an item is added, a new instance of the template is added to the DOM.\n\t     * * When an item is removed, its template instance is removed from the DOM.\n\t     * * When items are reordered, their respective templates are reordered in the DOM.\n\t     * * Otherwise, the DOM element for that item will remain the same.\n\t     *\n\t     * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n\t     * those changes in the DOM. This has important implications for animations and any stateful\n\t     * controls\n\t     * (such as `<input>` elements which accept user input) that are present. Inserted rows can be\n\t     * animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state such\n\t     * as user input.\n\t     *\n\t     * It is possible for the identities of elements in the iterator to change while the data does not.\n\t     * This can happen, for example, if the iterator produced from an RPC to the server, and that\n\t     * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n\t     * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n\t     * elements were deleted and all new elements inserted). This is an expensive operation and should\n\t     * be avoided if possible.\n\t     *\n\t     * To customize the default tracking algorithm, `NgFor` supports `trackBy` option.\n\t     * `trackBy` takes a function which has two arguments: `index` and `item`.\n\t     * If `trackBy` is given, Angular tracks changes by the return value of the function.\n\t     *\n\t     * ### Syntax\n\t     *\n\t     * - `<li *ngFor=\"let item of items; let i = index; trackBy: trackByFn\">...</li>`\n\t     * - `<li template=\"ngFor let item of items; let i = index; trackBy: trackByFn\">...</li>`\n\t     *\n\t     * With `<template>` element:\n\t     *\n\t     * ```\n\t     * <template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n\t     *   <li>...</li>\n\t     * </template>\n\t     * ```\n\t     *\n\t     * ### Example\n\t     *\n\t     * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n\t     * example.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgFor = (function () {\n\t        function NgFor(_viewContainer, _template, _differs, _cdr) {\n\t            this._viewContainer = _viewContainer;\n\t            this._template = _template;\n\t            this._differs = _differs;\n\t            this._cdr = _cdr;\n\t            this._differ = null;\n\t        }\n\t        Object.defineProperty(NgFor.prototype, \"ngForTemplate\", {\n\t            set: function (value) {\n\t                if (value) {\n\t                    this._template = value;\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgFor.prototype.ngOnChanges = function (changes) {\n\t            if ('ngForOf' in changes) {\n\t                // React on ngForOf changes only once all inputs have been initialized\n\t                var value = changes['ngForOf'].currentValue;\n\t                if (!this._differ && value) {\n\t                    try {\n\t                        this._differ = this._differs.find(value).create(this._cdr, this.ngForTrackBy);\n\t                    }\n\t                    catch (e) {\n\t                        throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        NgFor.prototype.ngDoCheck = function () {\n\t            if (this._differ) {\n\t                var changes = this._differ.diff(this.ngForOf);\n\t                if (changes)\n\t                    this._applyChanges(changes);\n\t            }\n\t        };\n\t        NgFor.prototype._applyChanges = function (changes) {\n\t            var _this = this;\n\t            var insertTuples = [];\n\t            changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n\t                if (item.previousIndex == null) {\n\t                    var view = _this._viewContainer.createEmbeddedView(_this._template, new NgForRow(null, null, null), currentIndex);\n\t                    var tuple = new RecordViewTuple(item, view);\n\t                    insertTuples.push(tuple);\n\t                }\n\t                else if (currentIndex == null) {\n\t                    _this._viewContainer.remove(adjustedPreviousIndex);\n\t                }\n\t                else {\n\t                    var view = _this._viewContainer.get(adjustedPreviousIndex);\n\t                    _this._viewContainer.move(view, currentIndex);\n\t                    var tuple = new RecordViewTuple(item, view);\n\t                    insertTuples.push(tuple);\n\t                }\n\t            });\n\t            for (var i = 0; i < insertTuples.length; i++) {\n\t                this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n\t            }\n\t            for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n\t                var viewRef = this._viewContainer.get(i);\n\t                viewRef.context.index = i;\n\t                viewRef.context.count = ilen;\n\t            }\n\t            changes.forEachIdentityChange(function (record) {\n\t                var viewRef = _this._viewContainer.get(record.currentIndex);\n\t                viewRef.context.$implicit = record.item;\n\t            });\n\t        };\n\t        NgFor.prototype._perViewChange = function (view, record) {\n\t            view.context.$implicit = record.item;\n\t        };\n\t        NgFor.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngFor][ngForOf]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgFor.ctorParameters = [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: _angular_core.IterableDiffers, },\n\t            { type: _angular_core.ChangeDetectorRef, },\n\t        ];\n\t        NgFor.propDecorators = {\n\t            'ngForOf': [{ type: _angular_core.Input },],\n\t            'ngForTrackBy': [{ type: _angular_core.Input },],\n\t            'ngForTemplate': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgFor;\n\t    }());\n\t    var RecordViewTuple = (function () {\n\t        function RecordViewTuple(record, view) {\n\t            this.record = record;\n\t            this.view = view;\n\t        }\n\t        return RecordViewTuple;\n\t    }());\n\t\n\t    /**\n\t     * Removes or recreates a portion of the DOM tree based on an {expression}.\n\t     *\n\t     * If the expression assigned to `ngIf` evaluates to a falsy value then the element\n\t     * is removed from the DOM, otherwise a clone of the element is reinserted into the DOM.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/fe0kgemFBtmQOY31b4tw?p=preview)):\n\t     *\n\t     * ```\n\t     * <div *ngIf=\"errorCount > 0\" class=\"error\">\n\t     *   <!-- Error message displayed when the errorCount property in the current context is greater\n\t     * than 0. -->\n\t     *   {{errorCount}} errors detected\n\t     * </div>\n\t     * ```\n\t     *\n\t     * ### Syntax\n\t     *\n\t     * - `<div *ngIf=\"condition\">...</div>`\n\t     * - `<div template=\"ngIf condition\">...</div>`\n\t     * - `<template [ngIf]=\"condition\"><div>...</div></template>`\n\t     *\n\t     * @stable\n\t     */\n\t    var NgIf = (function () {\n\t        function NgIf(_viewContainer, _template) {\n\t            this._viewContainer = _viewContainer;\n\t            this._template = _template;\n\t            this._hasView = false;\n\t        }\n\t        Object.defineProperty(NgIf.prototype, \"ngIf\", {\n\t            set: function (condition) {\n\t                if (condition && !this._hasView) {\n\t                    this._hasView = true;\n\t                    this._viewContainer.createEmbeddedView(this._template);\n\t                }\n\t                else if (!condition && this._hasView) {\n\t                    this._hasView = false;\n\t                    this._viewContainer.clear();\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgIf.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngIf]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgIf.ctorParameters = [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t        ];\n\t        NgIf.propDecorators = {\n\t            'ngIf': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgIf;\n\t    }());\n\t\n\t    var _CASE_DEFAULT = {};\n\t    var SwitchView = (function () {\n\t        function SwitchView(_viewContainerRef, _templateRef) {\n\t            this._viewContainerRef = _viewContainerRef;\n\t            this._templateRef = _templateRef;\n\t        }\n\t        SwitchView.prototype.create = function () { this._viewContainerRef.createEmbeddedView(this._templateRef); };\n\t        SwitchView.prototype.destroy = function () { this._viewContainerRef.clear(); };\n\t        return SwitchView;\n\t    }());\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n\t     *             expression.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     *     <container-element [ngSwitch]=\"switch_expression\">\n\t     *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n\t     *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n\t     *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n\t     *       <ng-container *ngSwitchCase=\"match_expression_3\">\n\t     *         <!-- use a ng-container to group multiple root nodes -->\n\t     *         <inner-element></inner-element>\n\t     *         <inner-other-element></inner-other-element>\n\t     *       </ng-container>\n\t     *       <some-element *ngSwitchDefault>...</some-element>\n\t     *     </container-element>\n\t     * ```\n\t     * @description\n\t     *\n\t     * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n\t     * switch expression.\n\t     *\n\t     * In other words:\n\t     * - you define a container element (where you place the directive with a switch expression on the\n\t     * `[ngSwitch]=\"...\"` attribute)\n\t     * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n\t     * root elements.\n\t     *\n\t     * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n\t     * be preserved at the location.\n\t     *\n\t     * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n\t     * expression is evaluated.\n\t     * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n\t     * stamped out.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgSwitch = (function () {\n\t        function NgSwitch() {\n\t            this._useDefault = false;\n\t            this._valueViews = new Map();\n\t            this._activeViews = [];\n\t        }\n\t        Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n\t            set: function (value) {\n\t                // Set of views to display for this value\n\t                var views = this._valueViews.get(value);\n\t                if (views) {\n\t                    this._useDefault = false;\n\t                }\n\t                else {\n\t                    // No view to display for the current value -> default case\n\t                    // Nothing to do if the default case was already active\n\t                    if (this._useDefault) {\n\t                        return;\n\t                    }\n\t                    this._useDefault = true;\n\t                    views = this._valueViews.get(_CASE_DEFAULT);\n\t                }\n\t                this._emptyAllActiveViews();\n\t                this._activateViews(views);\n\t                this._switchValue = value;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        NgSwitch.prototype._onCaseValueChanged = function (oldCase, newCase, view) {\n\t            this._deregisterView(oldCase, view);\n\t            this._registerView(newCase, view);\n\t            if (oldCase === this._switchValue) {\n\t                view.destroy();\n\t                ListWrapper.remove(this._activeViews, view);\n\t            }\n\t            else if (newCase === this._switchValue) {\n\t                if (this._useDefault) {\n\t                    this._useDefault = false;\n\t                    this._emptyAllActiveViews();\n\t                }\n\t                view.create();\n\t                this._activeViews.push(view);\n\t            }\n\t            // Switch to default when there is no more active ViewContainers\n\t            if (this._activeViews.length === 0 && !this._useDefault) {\n\t                this._useDefault = true;\n\t                this._activateViews(this._valueViews.get(_CASE_DEFAULT));\n\t            }\n\t        };\n\t        NgSwitch.prototype._emptyAllActiveViews = function () {\n\t            var activeContainers = this._activeViews;\n\t            for (var i = 0; i < activeContainers.length; i++) {\n\t                activeContainers[i].destroy();\n\t            }\n\t            this._activeViews = [];\n\t        };\n\t        NgSwitch.prototype._activateViews = function (views) {\n\t            if (views) {\n\t                for (var i = 0; i < views.length; i++) {\n\t                    views[i].create();\n\t                }\n\t                this._activeViews = views;\n\t            }\n\t        };\n\t        /** @internal */\n\t        NgSwitch.prototype._registerView = function (value, view) {\n\t            var views = this._valueViews.get(value);\n\t            if (!views) {\n\t                views = [];\n\t                this._valueViews.set(value, views);\n\t            }\n\t            views.push(view);\n\t        };\n\t        NgSwitch.prototype._deregisterView = function (value, view) {\n\t            // `_CASE_DEFAULT` is used a marker for non-registered cases\n\t            if (value === _CASE_DEFAULT)\n\t                return;\n\t            var views = this._valueViews.get(value);\n\t            if (views.length == 1) {\n\t                this._valueViews.delete(value);\n\t            }\n\t            else {\n\t                ListWrapper.remove(views, view);\n\t            }\n\t        };\n\t        NgSwitch.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngSwitch]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSwitch.ctorParameters = [];\n\t        NgSwitch.propDecorators = {\n\t            'ngSwitch': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgSwitch;\n\t    }());\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Creates a view that will be added/removed from the parent {@link NgSwitch} when the\n\t     *             given expression evaluate to respectively the same/different value as the switch\n\t     *             expression.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     * <container-element [ngSwitch]=\"switch_expression\">\n\t     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n\t     * </container-element>\n\t     *```\n\t     * @description\n\t     *\n\t     * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n\t     * expression.\n\t     *\n\t     * If multiple match expressions match the switch expression value, all of them are displayed.\n\t     *\n\t     * See {@link NgSwitch} for more details and example.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgSwitchCase = (function () {\n\t        function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n\t            // `_CASE_DEFAULT` is used as a marker for a not yet initialized value\n\t            this._value = _CASE_DEFAULT;\n\t            this._switch = ngSwitch;\n\t            this._view = new SwitchView(viewContainer, templateRef);\n\t        }\n\t        Object.defineProperty(NgSwitchCase.prototype, \"ngSwitchCase\", {\n\t            set: function (value) {\n\t                this._switch._onCaseValueChanged(this._value, value, this._view);\n\t                this._value = value;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgSwitchCase.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchCase]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSwitchCase.ctorParameters = [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n\t        ];\n\t        NgSwitchCase.propDecorators = {\n\t            'ngSwitchCase': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgSwitchCase;\n\t    }());\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Creates a view that is added to the parent {@link NgSwitch} when no case expressions\n\t     * match the\n\t     *             switch expression.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     * <container-element [ngSwitch]=\"switch_expression\">\n\t     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n\t     *   <some-other-element *ngSwitchDefault>...</some-other-element>\n\t     * </container-element>\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n\t     * expression.\n\t     *\n\t     * See {@link NgSwitch} for more details and example.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgSwitchDefault = (function () {\n\t        function NgSwitchDefault(viewContainer, templateRef, sswitch) {\n\t            sswitch._registerView(_CASE_DEFAULT, new SwitchView(viewContainer, templateRef));\n\t        }\n\t        NgSwitchDefault.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchDefault]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSwitchDefault.ctorParameters = [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n\t        ];\n\t        return NgSwitchDefault;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     * <some-element [ngPlural]=\"value\">\n\t     *   <ng-container *ngPluralCase=\"'=0'\">there is nothing</ng-container>\n\t     *   <ng-container *ngPluralCase=\"'=1'\">there is one</ng-container>\n\t     *   <ng-container *ngPluralCase=\"'few'\">there are a few</ng-container>\n\t     *   <ng-container *ngPluralCase=\"'other'\">there are exactly #</ng-container>\n\t     * </some-element>\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n\t     * that match the switch expression's pluralization category.\n\t     *\n\t     * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n\t     * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n\t     * expression:\n\t     * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n\t     *   matches the switch expression exactly,\n\t     * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n\t     *   value matches aren't found and the value maps to its category for the defined locale.\n\t     *\n\t     * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n\t     *\n\t     * @experimental\n\t     */\n\t    var NgPlural = (function () {\n\t        function NgPlural(_localization) {\n\t            this._localization = _localization;\n\t            this._caseViews = {};\n\t        }\n\t        Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n\t            set: function (value) {\n\t                this._switchValue = value;\n\t                this._updateView();\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n\t        NgPlural.prototype._updateView = function () {\n\t            this._clearViews();\n\t            var cases = Object.keys(this._caseViews);\n\t            var key = getPluralCategory(this._switchValue, cases, this._localization);\n\t            this._activateView(this._caseViews[key]);\n\t        };\n\t        NgPlural.prototype._clearViews = function () {\n\t            if (this._activeView)\n\t                this._activeView.destroy();\n\t        };\n\t        NgPlural.prototype._activateView = function (view) {\n\t            if (view) {\n\t                this._activeView = view;\n\t                this._activeView.create();\n\t            }\n\t        };\n\t        NgPlural.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngPlural]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgPlural.ctorParameters = [\n\t            { type: NgLocalization, },\n\t        ];\n\t        NgPlural.propDecorators = {\n\t            'ngPlural': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgPlural;\n\t    }());\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Creates a view that will be added/removed from the parent {@link NgPlural} when the\n\t     *             given expression matches the plural expression according to CLDR rules.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     * <some-element [ngPlural]=\"value\">\n\t     *   <ng-container *ngPluralCase=\"'=0'\">...</ng-container>\n\t     *   <ng-container *ngPluralCase=\"'other'\">...</ng-container>\n\t     * </some-element>\n\t     *```\n\t     *\n\t     * See {@link NgPlural} for more details and example.\n\t     *\n\t     * @experimental\n\t     */\n\t    var NgPluralCase = (function () {\n\t        function NgPluralCase(value, template, viewContainer, ngPlural) {\n\t            this.value = value;\n\t            ngPlural.addCase(value, new SwitchView(viewContainer, template));\n\t        }\n\t        NgPluralCase.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngPluralCase]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgPluralCase.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['ngPluralCase',] },] },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: NgPlural, decorators: [{ type: _angular_core.Host },] },\n\t        ];\n\t        return NgPluralCase;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Update an HTML element styles.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n\t     *\n\t     * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n\t     *\n\t     * <some-element [ngStyle]=\"objExp\">...</some-element>\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * The styles are updated according to the value of the expression evaluation:\n\t     * - keys are style names with an option `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n\t     * - values are the values assigned to those properties (expressed in the given unit).\n\t     *\n\t     * @stable\n\t     */\n\t    var NgStyle = (function () {\n\t        function NgStyle(_differs, _ngEl, _renderer) {\n\t            this._differs = _differs;\n\t            this._ngEl = _ngEl;\n\t            this._renderer = _renderer;\n\t        }\n\t        Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n\t            set: function (v) {\n\t                this._ngStyle = v;\n\t                if (!this._differ && v) {\n\t                    this._differ = this._differs.find(v).create(null);\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgStyle.prototype.ngDoCheck = function () {\n\t            if (this._differ) {\n\t                var changes = this._differ.diff(this._ngStyle);\n\t                if (changes) {\n\t                    this._applyChanges(changes);\n\t                }\n\t            }\n\t        };\n\t        NgStyle.prototype._applyChanges = function (changes) {\n\t            var _this = this;\n\t            changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n\t            changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n\t            changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n\t        };\n\t        NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n\t            var _a = nameAndUnit.split('.'), name = _a[0], unit = _a[1];\n\t            value = value && unit ? \"\" + value + unit : value;\n\t            this._renderer.setElementStyle(this._ngEl.nativeElement, name, value);\n\t        };\n\t        NgStyle.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngStyle]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgStyle.ctorParameters = [\n\t            { type: _angular_core.KeyValueDiffers, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t        ];\n\t        NgStyle.propDecorators = {\n\t            'ngStyle': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgStyle;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     * <template [ngTemplateOutlet]=\"templateRefExpression\"\n\t     *           [ngOutletContext]=\"objectExpression\">\n\t     * </template>\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * You can attach a context object to the `EmbeddedViewRef` by setting `[ngOutletContext]`.\n\t     * `[ngOutletContext]` should be an object, the object's keys will be the local template variables\n\t     * available within the `TemplateRef`.\n\t     *\n\t     * Note: using the key `$implicit` in the context object will set it's value as default.\n\t     *\n\t     * @experimental\n\t     */\n\t    var NgTemplateOutlet = (function () {\n\t        function NgTemplateOutlet(_viewContainerRef) {\n\t            this._viewContainerRef = _viewContainerRef;\n\t        }\n\t        Object.defineProperty(NgTemplateOutlet.prototype, \"ngOutletContext\", {\n\t            set: function (context) { this._context = context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgTemplateOutlet.prototype, \"ngTemplateOutlet\", {\n\t            set: function (templateRef) { this._templateRef = templateRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n\t            if (this._viewRef) {\n\t                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n\t            }\n\t            if (this._templateRef) {\n\t                this._viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, this._context);\n\t            }\n\t        };\n\t        NgTemplateOutlet.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngTemplateOutlet]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgTemplateOutlet.ctorParameters = [\n\t            { type: _angular_core.ViewContainerRef, },\n\t        ];\n\t        NgTemplateOutlet.propDecorators = {\n\t            'ngOutletContext': [{ type: _angular_core.Input },],\n\t            'ngTemplateOutlet': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgTemplateOutlet;\n\t    }());\n\t\n\t    /**\n\t     * A collection of Angular directives that are likely to be used in each and every Angular\n\t     * application.\n\t     */\n\t    var COMMON_DIRECTIVES = [\n\t        NgClass,\n\t        NgFor,\n\t        NgIf,\n\t        NgTemplateOutlet,\n\t        NgStyle,\n\t        NgSwitch,\n\t        NgSwitchCase,\n\t        NgSwitchDefault,\n\t        NgPlural,\n\t        NgPluralCase,\n\t    ];\n\t\n\t    var isPromise = _angular_core.__core_private__.isPromise;\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @stable\n\t     */\n\t    var BaseError = (function (_super) {\n\t        __extends$4(BaseError, _super);\n\t        function BaseError(message) {\n\t            // Errors don't use current this, instead they create a new instance.\n\t            // We have to do forward all of our api to the nativeInstance.\n\t            var nativeError = _super.call(this, message);\n\t            this._nativeError = nativeError;\n\t        }\n\t        Object.defineProperty(BaseError.prototype, \"message\", {\n\t            get: function () { return this._nativeError.message; },\n\t            set: function (message) { this._nativeError.message = message; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"name\", {\n\t            get: function () { return this._nativeError.name; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"stack\", {\n\t            get: function () { return this._nativeError.stack; },\n\t            set: function (value) { this._nativeError.stack = value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n\t        return BaseError;\n\t    }(Error));\n\t    /**\n\t     * @stable\n\t     */\n\t    var WrappedError = (function (_super) {\n\t        __extends$4(WrappedError, _super);\n\t        function WrappedError(message, error) {\n\t            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n\t            this.originalError = error;\n\t        }\n\t        Object.defineProperty(WrappedError.prototype, \"stack\", {\n\t            get: function () {\n\t                return (this.originalError instanceof Error ? this.originalError : this._nativeError)\n\t                    .stack;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return WrappedError;\n\t    }(BaseError));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var InvalidPipeArgumentError = (function (_super) {\n\t        __extends$3(InvalidPipeArgumentError, _super);\n\t        function InvalidPipeArgumentError(type, value) {\n\t            _super.call(this, \"Invalid argument '\" + value + \"' for pipe '\" + stringify(type) + \"'\");\n\t        }\n\t        return InvalidPipeArgumentError;\n\t    }(BaseError));\n\t\n\t    var ObservableStrategy = (function () {\n\t        function ObservableStrategy() {\n\t        }\n\t        ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n\t            return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n\t        };\n\t        ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n\t        ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n\t        return ObservableStrategy;\n\t    }());\n\t    var PromiseStrategy = (function () {\n\t        function PromiseStrategy() {\n\t        }\n\t        PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n\t            return async.then(updateLatestValue, function (e) { throw e; });\n\t        };\n\t        PromiseStrategy.prototype.dispose = function (subscription) { };\n\t        PromiseStrategy.prototype.onDestroy = function (subscription) { };\n\t        return PromiseStrategy;\n\t    }());\n\t    var _promiseStrategy = new PromiseStrategy();\n\t    var _observableStrategy = new ObservableStrategy();\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Unwraps a value from an asynchronous primitive.\n\t     * @howToUse `observable_or_promise_expression | async`\n\t     * @description\n\t     * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n\t     * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n\t     * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n\t     * potential memory leaks.\n\t     *\n\t     *\n\t     * ## Examples\n\t     *\n\t     * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n\t     * promise.\n\t     *\n\t     * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n\t     *\n\t     * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n\t     * to the view. The Observable continuesly updates the view with the current time.\n\t     *\n\t     * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n\t     *\n\t     * @stable\n\t     */\n\t    var AsyncPipe = (function () {\n\t        function AsyncPipe(_ref) {\n\t            this._ref = _ref;\n\t            this._latestValue = null;\n\t            this._latestReturnedValue = null;\n\t            this._subscription = null;\n\t            this._obj = null;\n\t            this._strategy = null;\n\t        }\n\t        AsyncPipe.prototype.ngOnDestroy = function () {\n\t            if (this._subscription) {\n\t                this._dispose();\n\t            }\n\t        };\n\t        AsyncPipe.prototype.transform = function (obj) {\n\t            if (!this._obj) {\n\t                if (obj) {\n\t                    this._subscribe(obj);\n\t                }\n\t                this._latestReturnedValue = this._latestValue;\n\t                return this._latestValue;\n\t            }\n\t            if (obj !== this._obj) {\n\t                this._dispose();\n\t                return this.transform(obj);\n\t            }\n\t            if (this._latestValue === this._latestReturnedValue) {\n\t                return this._latestReturnedValue;\n\t            }\n\t            this._latestReturnedValue = this._latestValue;\n\t            return _angular_core.WrappedValue.wrap(this._latestValue);\n\t        };\n\t        AsyncPipe.prototype._subscribe = function (obj) {\n\t            var _this = this;\n\t            this._obj = obj;\n\t            this._strategy = this._selectStrategy(obj);\n\t            this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n\t        };\n\t        AsyncPipe.prototype._selectStrategy = function (obj) {\n\t            if (isPromise(obj)) {\n\t                return _promiseStrategy;\n\t            }\n\t            if (obj.subscribe) {\n\t                return _observableStrategy;\n\t            }\n\t            throw new InvalidPipeArgumentError(AsyncPipe, obj);\n\t        };\n\t        AsyncPipe.prototype._dispose = function () {\n\t            this._strategy.dispose(this._subscription);\n\t            this._latestValue = null;\n\t            this._latestReturnedValue = null;\n\t            this._subscription = null;\n\t            this._obj = null;\n\t        };\n\t        AsyncPipe.prototype._updateLatestValue = function (async, value) {\n\t            if (async === this._obj) {\n\t                this._latestValue = value;\n\t                this._ref.markForCheck();\n\t            }\n\t        };\n\t        AsyncPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'async', pure: false },] },\n\t        ];\n\t        /** @nocollapse */\n\t        AsyncPipe.ctorParameters = [\n\t            { type: _angular_core.ChangeDetectorRef, },\n\t        ];\n\t        return AsyncPipe;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var NumberFormatStyle;\n\t    (function (NumberFormatStyle) {\n\t        NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\n\t        NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\n\t        NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\n\t    })(NumberFormatStyle || (NumberFormatStyle = {}));\n\t    var NumberFormatter = (function () {\n\t        function NumberFormatter() {\n\t        }\n\t        NumberFormatter.format = function (num, locale, style, _a) {\n\t            var _b = _a === void 0 ? {} : _a, minimumIntegerDigits = _b.minimumIntegerDigits, minimumFractionDigits = _b.minimumFractionDigits, maximumFractionDigits = _b.maximumFractionDigits, currency = _b.currency, _c = _b.currencyAsSymbol, currencyAsSymbol = _c === void 0 ? false : _c;\n\t            var options = {\n\t                minimumIntegerDigits: minimumIntegerDigits,\n\t                minimumFractionDigits: minimumFractionDigits,\n\t                maximumFractionDigits: maximumFractionDigits,\n\t                style: NumberFormatStyle[style].toLowerCase()\n\t            };\n\t            if (style == NumberFormatStyle.Currency) {\n\t                options.currency = currency;\n\t                options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n\t            }\n\t            return new Intl.NumberFormat(locale, options).format(num);\n\t        };\n\t        return NumberFormatter;\n\t    }());\n\t    var DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n\t    var PATTERN_ALIASES = {\n\t        yMMMdjms: datePartGetterFactory(combine([\n\t            digitCondition('year', 1),\n\t            nameCondition('month', 3),\n\t            digitCondition('day', 1),\n\t            digitCondition('hour', 1),\n\t            digitCondition('minute', 1),\n\t            digitCondition('second', 1),\n\t        ])),\n\t        yMdjm: datePartGetterFactory(combine([\n\t            digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n\t            digitCondition('hour', 1), digitCondition('minute', 1)\n\t        ])),\n\t        yMMMMEEEEd: datePartGetterFactory(combine([\n\t            digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n\t            digitCondition('day', 1)\n\t        ])),\n\t        yMMMMd: datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n\t        yMMMd: datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n\t        yMd: datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n\t        jms: datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n\t        jm: datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n\t    };\n\t    var DATE_FORMATS = {\n\t        yyyy: datePartGetterFactory(digitCondition('year', 4)),\n\t        yy: datePartGetterFactory(digitCondition('year', 2)),\n\t        y: datePartGetterFactory(digitCondition('year', 1)),\n\t        MMMM: datePartGetterFactory(nameCondition('month', 4)),\n\t        MMM: datePartGetterFactory(nameCondition('month', 3)),\n\t        MM: datePartGetterFactory(digitCondition('month', 2)),\n\t        M: datePartGetterFactory(digitCondition('month', 1)),\n\t        LLLL: datePartGetterFactory(nameCondition('month', 4)),\n\t        dd: datePartGetterFactory(digitCondition('day', 2)),\n\t        d: datePartGetterFactory(digitCondition('day', 1)),\n\t        HH: digitModifier(hourExtracter(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n\t        H: hourExtracter(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n\t        hh: digitModifier(hourExtracter(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n\t        h: hourExtracter(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n\t        jj: datePartGetterFactory(digitCondition('hour', 2)),\n\t        j: datePartGetterFactory(digitCondition('hour', 1)),\n\t        mm: digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n\t        m: datePartGetterFactory(digitCondition('minute', 1)),\n\t        ss: digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n\t        s: datePartGetterFactory(digitCondition('second', 1)),\n\t        // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n\t        // we can be just safely rely on using `sss` since we currently don't support single or two digit\n\t        // fractions\n\t        sss: datePartGetterFactory(digitCondition('second', 3)),\n\t        EEEE: datePartGetterFactory(nameCondition('weekday', 4)),\n\t        EEE: datePartGetterFactory(nameCondition('weekday', 3)),\n\t        EE: datePartGetterFactory(nameCondition('weekday', 2)),\n\t        E: datePartGetterFactory(nameCondition('weekday', 1)),\n\t        a: hourClockExtracter(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n\t        Z: timeZoneGetter('short'),\n\t        z: timeZoneGetter('long'),\n\t        ww: datePartGetterFactory({}),\n\t        // first Thursday of the year. not support ?\n\t        w: datePartGetterFactory({}),\n\t        // of the year not support ?\n\t        G: datePartGetterFactory(nameCondition('era', 1)),\n\t        GG: datePartGetterFactory(nameCondition('era', 2)),\n\t        GGG: datePartGetterFactory(nameCondition('era', 3)),\n\t        GGGG: datePartGetterFactory(nameCondition('era', 4))\n\t    };\n\t    function digitModifier(inner) {\n\t        return function (date, locale) {\n\t            var result = inner(date, locale);\n\t            return result.length == 1 ? '0' + result : result;\n\t        };\n\t    }\n\t    function hourClockExtracter(inner) {\n\t        return function (date, locale) {\n\t            var result = inner(date, locale);\n\t            return result.split(' ')[1];\n\t        };\n\t    }\n\t    function hourExtracter(inner) {\n\t        return function (date, locale) {\n\t            var result = inner(date, locale);\n\t            return result.split(' ')[0];\n\t        };\n\t    }\n\t    function intlDateFormat(date, locale, options) {\n\t        return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n\t    }\n\t    function timeZoneGetter(timezone) {\n\t        // To workaround `Intl` API restriction for single timezone let format with 24 hours\n\t        var options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n\t        return function (date, locale) {\n\t            var result = intlDateFormat(date, locale, options);\n\t            // Then extract first 3 letters that related to hours\n\t            return result ? result.substring(3) : '';\n\t        };\n\t    }\n\t    function hour12Modify(options, value) {\n\t        options.hour12 = value;\n\t        return options;\n\t    }\n\t    function digitCondition(prop, len) {\n\t        var result = {};\n\t        result[prop] = len == 2 ? '2-digit' : 'numeric';\n\t        return result;\n\t    }\n\t    function nameCondition(prop, len) {\n\t        var result = {};\n\t        result[prop] = len < 4 ? 'short' : 'long';\n\t        return result;\n\t    }\n\t    function combine(options) {\n\t        var result = {};\n\t        options.forEach(function (option) { Object.assign(result, option); });\n\t        return result;\n\t    }\n\t    function datePartGetterFactory(ret) {\n\t        return function (date, locale) { return intlDateFormat(date, locale, ret); };\n\t    }\n\t    var datePartsFormatterCache = new Map();\n\t    function dateFormatter(format, date, locale) {\n\t        var text = '';\n\t        var match;\n\t        var fn;\n\t        var parts = [];\n\t        if (PATTERN_ALIASES[format]) {\n\t            return PATTERN_ALIASES[format](date, locale);\n\t        }\n\t        if (datePartsFormatterCache.has(format)) {\n\t            parts = datePartsFormatterCache.get(format);\n\t        }\n\t        else {\n\t            var matches = DATE_FORMATS_SPLIT.exec(format);\n\t            while (format) {\n\t                match = DATE_FORMATS_SPLIT.exec(format);\n\t                if (match) {\n\t                    parts = concat(parts, match, 1);\n\t                    format = parts.pop();\n\t                }\n\t                else {\n\t                    parts.push(format);\n\t                    format = null;\n\t                }\n\t            }\n\t            datePartsFormatterCache.set(format, parts);\n\t        }\n\t        parts.forEach(function (part) {\n\t            fn = DATE_FORMATS[part];\n\t            text += fn ? fn(date, locale) :\n\t                part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n\t        });\n\t        return text;\n\t    }\n\t    var slice = [].slice;\n\t    function concat(array1 /** TODO #9100 */, array2 /** TODO #9100 */, index /** TODO #9100 */) {\n\t        return array1.concat(slice.call(array2, index));\n\t    }\n\t    var DateFormatter = (function () {\n\t        function DateFormatter() {\n\t        }\n\t        DateFormatter.format = function (date, locale, pattern) {\n\t            return dateFormatter(pattern, date, locale);\n\t        };\n\t        return DateFormatter;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Formats a date according to locale rules.\n\t     * @howToUse `date_expression | date[:format]`\n\t     * @description\n\t     *\n\t     * Where:\n\t     * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n\t     * (https://www.w3.org/TR/NOTE-datetime).\n\t     * - `format` indicates which date/time components to include. The format can be predifined as\n\t     *   shown below or custom as shown in the table.\n\t     *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n\t     *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n\t     *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n\t     *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n\t     *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n\t     *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n\t     *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n\t     *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n\t     *\n\t     *\n\t     *  | Component | Symbol | Short Form   | Long Form         | Numeric   | 2-digit   |\n\t     *  |-----------|:------:|--------------|-------------------|-----------|-----------|\n\t     *  | era       |   G    | G (AD)       | GGGG (Anno Domini)| -         | -         |\n\t     *  | year      |   y    | -            | -                 | y (2015)  | yy (15)   |\n\t     *  | month     |   M    | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n\t     *  | day       |   d    | -            | -                 | d (3)     | dd (03)   |\n\t     *  | weekday   |   E    | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n\t     *  | hour      |   j    | -            | -                 | j (13)    | jj (13)   |\n\t     *  | hour12    |   h    | -            | -                 | h (1 PM)  | hh (01 PM)|\n\t     *  | hour24    |   H    | -            | -                 | H (13)    | HH (13)   |\n\t     *  | minute    |   m    | -            | -                 | m (5)     | mm (05)   |\n\t     *  | second    |   s    | -            | -                 | s (9)     | ss (09)   |\n\t     *  | timezone  |   z    | -            | z (Pacific Standard Time)| -  | -         |\n\t     *  | timezone  |   Z    | Z (GMT-8:00) | -                 | -         | -         |\n\t     *  | timezone  |   a    | a (PM)       | -                 | -         | -         |\n\t     *\n\t     * In javascript, only the components specified will be respected (not the ordering,\n\t     * punctuations, ...) and details of the formatting will be dependent on the locale.\n\t     *\n\t     * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n\t     *\n\t     * WARNINGS:\n\t     * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n\t     *   Instead users should treat the date as an immutable object and change the reference when the\n\t     *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n\t     *   which would be an expensive operation).\n\t     * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n\t     *   browsers.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n\t     * in the _local_ time and locale is 'en-US':\n\t     *\n\t     * ```\n\t     *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n\t     *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n\t     *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n\t     *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n\t     * ```\n\t     *\n\t     * {@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var DatePipe = (function () {\n\t        function DatePipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        DatePipe.prototype.transform = function (value, pattern) {\n\t            if (pattern === void 0) { pattern = 'mediumDate'; }\n\t            if (isBlank(value))\n\t                return null;\n\t            if (!this.supports(value)) {\n\t                throw new InvalidPipeArgumentError(DatePipe, value);\n\t            }\n\t            if (NumberWrapper.isNumeric(value)) {\n\t                value = parseFloat(value);\n\t            }\n\t            return DateFormatter.format(new Date(value), this._locale, DatePipe._ALIASES[pattern] || pattern);\n\t        };\n\t        DatePipe.prototype.supports = function (obj) {\n\t            return isDate(obj) || NumberWrapper.isNumeric(obj) ||\n\t                (typeof obj === 'string' && isDate(new Date(obj)));\n\t        };\n\t        /** @internal */\n\t        DatePipe._ALIASES = {\n\t            'medium': 'yMMMdjms',\n\t            'short': 'yMdjm',\n\t            'fullDate': 'yMMMMEEEEd',\n\t            'longDate': 'yMMMMd',\n\t            'mediumDate': 'yMMMd',\n\t            'shortDate': 'yMd',\n\t            'mediumTime': 'jms',\n\t            'shortTime': 'jm'\n\t        };\n\t        DatePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'date', pure: true },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DatePipe.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ];\n\t        return DatePipe;\n\t    }());\n\t\n\t    var _INTERPOLATION_REGEXP = /#/g;\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n\t     * @howToUse `expression | i18nPlural:mapping`\n\t     * @description\n\t     *\n\t     *  Where:\n\t     *  - `expression` is a number.\n\t     *  - `mapping` is an object that mimics the ICU format, see\n\t     *    http://userguide.icu-project.org/formatparse/messages\n\t     *\n\t     *  ## Example\n\t     *\n\t     * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n\t     *\n\t     * @experimental\n\t     */\n\t    var I18nPluralPipe = (function () {\n\t        function I18nPluralPipe(_localization) {\n\t            this._localization = _localization;\n\t        }\n\t        I18nPluralPipe.prototype.transform = function (value, pluralMap) {\n\t            if (isBlank(value))\n\t                return '';\n\t            if (typeof pluralMap !== 'object' || pluralMap === null) {\n\t                throw new InvalidPipeArgumentError(I18nPluralPipe, pluralMap);\n\t            }\n\t            var key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n\t            return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n\t        };\n\t        I18nPluralPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'i18nPlural', pure: true },] },\n\t        ];\n\t        /** @nocollapse */\n\t        I18nPluralPipe.ctorParameters = [\n\t            { type: NgLocalization, },\n\t        ];\n\t        return I18nPluralPipe;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Generic selector that displays the string that matches the current value.\n\t     * @howToUse `expression | i18nSelect:mapping`\n\t     * @description\n\t     *\n\t     *  Where:\n\t     *  - `mapping`: is an object that indicates the text that should be displayed\n\t     *  for different values of the provided `expression`.\n\t     *\n\t     *  ## Example\n\t     *\n\t     * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n\t     *\n\t     *  @experimental\n\t     */\n\t    var I18nSelectPipe = (function () {\n\t        function I18nSelectPipe() {\n\t        }\n\t        I18nSelectPipe.prototype.transform = function (value, mapping) {\n\t            if (isBlank(value))\n\t                return '';\n\t            if (typeof mapping !== 'object' || mapping === null) {\n\t                throw new InvalidPipeArgumentError(I18nSelectPipe, mapping);\n\t            }\n\t            return mapping[value] || '';\n\t        };\n\t        I18nSelectPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'i18nSelect', pure: true },] },\n\t        ];\n\t        /** @nocollapse */\n\t        I18nSelectPipe.ctorParameters = [];\n\t        return I18nSelectPipe;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Converts value into JSON string.\n\t     * @howToUse `expression | json`\n\t     * @description\n\t     *\n\t     * Converts value into string using `JSON.stringify`. Useful for debugging.\n\t     *\n\t     * ### Example\n\t     * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var JsonPipe = (function () {\n\t        function JsonPipe() {\n\t        }\n\t        JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n\t        JsonPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'json', pure: false },] },\n\t        ];\n\t        /** @nocollapse */\n\t        JsonPipe.ctorParameters = [];\n\t        return JsonPipe;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Transforms string to lowercase.\n\t     * @howToUse `expression | lowercase`\n\t     * @description\n\t     *\n\t     * Converts value into lowercase string using `String.prototype.toLowerCase()`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var LowerCasePipe = (function () {\n\t        function LowerCasePipe() {\n\t        }\n\t        LowerCasePipe.prototype.transform = function (value) {\n\t            if (isBlank(value))\n\t                return value;\n\t            if (typeof value !== 'string') {\n\t                throw new InvalidPipeArgumentError(LowerCasePipe, value);\n\t            }\n\t            return value.toLowerCase();\n\t        };\n\t        LowerCasePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'lowercase' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        LowerCasePipe.ctorParameters = [];\n\t        return LowerCasePipe;\n\t    }());\n\t\n\t    var _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n\t    function formatNumber(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n\t        if (currency === void 0) { currency = null; }\n\t        if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n\t        if (isBlank(value))\n\t            return null;\n\t        // Convert strings to numbers\n\t        value = typeof value === 'string' && NumberWrapper.isNumeric(value) ? +value : value;\n\t        if (typeof value !== 'number') {\n\t            throw new InvalidPipeArgumentError(pipe, value);\n\t        }\n\t        var minInt;\n\t        var minFraction;\n\t        var maxFraction;\n\t        if (style !== NumberFormatStyle.Currency) {\n\t            // rely on Intl default for currency\n\t            minInt = 1;\n\t            minFraction = 0;\n\t            maxFraction = 3;\n\t        }\n\t        if (digits) {\n\t            var parts = digits.match(_NUMBER_FORMAT_REGEXP);\n\t            if (parts === null) {\n\t                throw new Error(digits + \" is not a valid digit info for number pipes\");\n\t            }\n\t            if (isPresent(parts[1])) {\n\t                minInt = NumberWrapper.parseIntAutoRadix(parts[1]);\n\t            }\n\t            if (isPresent(parts[3])) {\n\t                minFraction = NumberWrapper.parseIntAutoRadix(parts[3]);\n\t            }\n\t            if (isPresent(parts[5])) {\n\t                maxFraction = NumberWrapper.parseIntAutoRadix(parts[5]);\n\t            }\n\t        }\n\t        return NumberFormatter.format(value, locale, style, {\n\t            minimumIntegerDigits: minInt,\n\t            minimumFractionDigits: minFraction,\n\t            maximumFractionDigits: maxFraction,\n\t            currency: currency,\n\t            currencyAsSymbol: currencyAsSymbol,\n\t        });\n\t    }\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Formats a number according to locale rules.\n\t     * @howToUse `number_expression | number[:digitInfo]`\n\t     *\n\t     * Formats a number as text. Group sizing and separator and other locale-specific\n\t     * configurations are based on the active locale.\n\t     *\n\t     * where `expression` is a number:\n\t     *  - `digitInfo` is a `string` which has a following format: <br>\n\t     *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n\t     *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n\t     *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n\t     *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n\t     *\n\t     * For more information on the acceptable range for each of these numbers and other\n\t     * details see your native internationalization library.\n\t     *\n\t     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n\t     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var DecimalPipe = (function () {\n\t        function DecimalPipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        DecimalPipe.prototype.transform = function (value, digits) {\n\t            if (digits === void 0) { digits = null; }\n\t            return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n\t        };\n\t        DecimalPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'number' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DecimalPipe.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ];\n\t        return DecimalPipe;\n\t    }());\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Formats a number as a percentage according to locale rules.\n\t     * @howToUse `number_expression | percent[:digitInfo]`\n\t     *\n\t     * @description\n\t     *\n\t     * Formats a number as percentage.\n\t     *\n\t     * - `digitInfo` See {@link DecimalPipe} for detailed description.\n\t     *\n\t     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n\t     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var PercentPipe = (function () {\n\t        function PercentPipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        PercentPipe.prototype.transform = function (value, digits) {\n\t            if (digits === void 0) { digits = null; }\n\t            return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n\t        };\n\t        PercentPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'percent' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        PercentPipe.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ];\n\t        return PercentPipe;\n\t    }());\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Formats a number as currency using locale rules.\n\t     * @howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n\t     * @description\n\t     *\n\t     * Use `currency` to format a number as currency.\n\t     *\n\t     * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n\t     *    as `USD` for the US dollar and `EUR` for the euro.\n\t     * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n\t     *   - `true`: use symbol (e.g. `$`).\n\t     *   - `false`(default): use code (e.g. `USD`).\n\t     * - `digitInfo` See {@link DecimalPipe} for detailed description.\n\t     *\n\t     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n\t     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var CurrencyPipe = (function () {\n\t        function CurrencyPipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        CurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n\t            if (currencyCode === void 0) { currencyCode = 'USD'; }\n\t            if (symbolDisplay === void 0) { symbolDisplay = false; }\n\t            if (digits === void 0) { digits = null; }\n\t            return formatNumber(CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n\t        };\n\t        CurrencyPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'currency' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CurrencyPipe.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ];\n\t        return CurrencyPipe;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n\t     * @howToUse `array_or_string_expression | slice:start[:end]`\n\t     * @description\n\t     *\n\t     * Where the input expression is a `List` or `String`, and:\n\t     * - `start`: The starting index of the subset to return.\n\t     *   - **a positive integer**: return the item at `start` index and all items after\n\t     *     in the list or string expression.\n\t     *   - **a negative integer**: return the item at `start` index from the end and all items after\n\t     *     in the list or string expression.\n\t     *   - **if positive and greater than the size of the expression**: return an empty list or string.\n\t     *   - **if negative and greater than the size of the expression**: return entire list or string.\n\t     * - `end`: The ending index of the subset to return.\n\t     *   - **omitted**: return all items until the end.\n\t     *   - **if positive**: return all items before `end` index of the list or string.\n\t     *   - **if negative**: return all items before `end` index from the end of the list or string.\n\t     *\n\t     * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n\t     * and `String.prototype.slice()`.\n\t     *\n\t     * When operating on a [List], the returned list is always a copy even when all\n\t     * the elements are being returned.\n\t     *\n\t     * When operating on a blank value, the pipe returns the blank value.\n\t     *\n\t     * ## List Example\n\t     *\n\t     * This `ngFor` example:\n\t     *\n\t     * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n\t     *\n\t     * produces the following:\n\t     *\n\t     *     <li>b</li>\n\t     *     <li>c</li>\n\t     *\n\t     * ## String Examples\n\t     *\n\t     * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n\t     *\n\t     * @stable\n\t     */\n\t    var SlicePipe = (function () {\n\t        function SlicePipe() {\n\t        }\n\t        SlicePipe.prototype.transform = function (value, start, end) {\n\t            if (isBlank(value))\n\t                return value;\n\t            if (!this.supports(value)) {\n\t                throw new InvalidPipeArgumentError(SlicePipe, value);\n\t            }\n\t            return value.slice(start, end);\n\t        };\n\t        SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n\t        SlicePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'slice', pure: false },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SlicePipe.ctorParameters = [];\n\t        return SlicePipe;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Transforms string to uppercase.\n\t     * @howToUse `expression | uppercase`\n\t     * @description\n\t     *\n\t     * Converts value into lowercase string using `String.prototype.toUpperCase()`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var UpperCasePipe = (function () {\n\t        function UpperCasePipe() {\n\t        }\n\t        UpperCasePipe.prototype.transform = function (value) {\n\t            if (isBlank(value))\n\t                return value;\n\t            if (typeof value !== 'string') {\n\t                throw new InvalidPipeArgumentError(UpperCasePipe, value);\n\t            }\n\t            return value.toUpperCase();\n\t        };\n\t        UpperCasePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'uppercase' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        UpperCasePipe.ctorParameters = [];\n\t        return UpperCasePipe;\n\t    }());\n\t\n\t    /**\n\t     * A collection of Angular pipes that are likely to be used in each and every application.\n\t     */\n\t    var COMMON_PIPES = [\n\t        AsyncPipe,\n\t        UpperCasePipe,\n\t        LowerCasePipe,\n\t        JsonPipe,\n\t        SlicePipe,\n\t        DecimalPipe,\n\t        PercentPipe,\n\t        CurrencyPipe,\n\t        DatePipe,\n\t        I18nPluralPipe,\n\t        I18nSelectPipe,\n\t    ];\n\t\n\t    // Note: This does not contain the location providers,\n\t    // as they need some platform specific implementations to work.\n\t    /**\n\t     * The module that includes all the basic Angular directives like {@link NgIf}, {@link NgFor}, ...\n\t     *\n\t     * @stable\n\t     */\n\t    var CommonModule = (function () {\n\t        function CommonModule() {\n\t        }\n\t        CommonModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n\t                        exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n\t                        providers: [\n\t                            { provide: NgLocalization, useClass: NgLocaleLocalization },\n\t                        ],\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CommonModule.ctorParameters = [];\n\t        return CommonModule;\n\t    }());\n\t\n\t    exports.NgLocalization = NgLocalization;\n\t    exports.CommonModule = CommonModule;\n\t    exports.NgClass = NgClass;\n\t    exports.NgFor = NgFor;\n\t    exports.NgIf = NgIf;\n\t    exports.NgPlural = NgPlural;\n\t    exports.NgPluralCase = NgPluralCase;\n\t    exports.NgStyle = NgStyle;\n\t    exports.NgSwitch = NgSwitch;\n\t    exports.NgSwitchCase = NgSwitchCase;\n\t    exports.NgSwitchDefault = NgSwitchDefault;\n\t    exports.NgTemplateOutlet = NgTemplateOutlet;\n\t    exports.AsyncPipe = AsyncPipe;\n\t    exports.DatePipe = DatePipe;\n\t    exports.I18nPluralPipe = I18nPluralPipe;\n\t    exports.I18nSelectPipe = I18nSelectPipe;\n\t    exports.JsonPipe = JsonPipe;\n\t    exports.LowerCasePipe = LowerCasePipe;\n\t    exports.CurrencyPipe = CurrencyPipe;\n\t    exports.DecimalPipe = DecimalPipe;\n\t    exports.PercentPipe = PercentPipe;\n\t    exports.SlicePipe = SlicePipe;\n\t    exports.UpperCasePipe = UpperCasePipe;\n\t    exports.PlatformLocation = PlatformLocation;\n\t    exports.LocationStrategy = LocationStrategy;\n\t    exports.APP_BASE_HREF = APP_BASE_HREF;\n\t    exports.HashLocationStrategy = HashLocationStrategy;\n\t    exports.PathLocationStrategy = PathLocationStrategy;\n\t    exports.Location = Location;\n\t\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 88:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license Angular v2.1.2\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t   true ? factory(exports, __webpack_require__(12)) :\n\t  typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t  (factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n\t}(this, function (exports,_angular_core) { 'use strict';\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  /**\n\t   * A segment of text within the template.\n\t   */\n\t  var TextAst = (function () {\n\t      function TextAst(value, ngContentIndex, sourceSpan) {\n\t          this.value = value;\n\t          this.ngContentIndex = ngContentIndex;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n\t      return TextAst;\n\t  }());\n\t  /**\n\t   * A bound expression within the text of a template.\n\t   */\n\t  var BoundTextAst = (function () {\n\t      function BoundTextAst(value, ngContentIndex, sourceSpan) {\n\t          this.value = value;\n\t          this.ngContentIndex = ngContentIndex;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      BoundTextAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitBoundText(this, context);\n\t      };\n\t      return BoundTextAst;\n\t  }());\n\t  /**\n\t   * A plain attribute on an element.\n\t   */\n\t  var AttrAst = (function () {\n\t      function AttrAst(name, value, sourceSpan) {\n\t          this.name = name;\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n\t      return AttrAst;\n\t  }());\n\t  /**\n\t   * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n\t   * `[@trigger]=\"stateExp\"`)\n\t   */\n\t  var BoundElementPropertyAst = (function () {\n\t      function BoundElementPropertyAst(name, type, securityContext, needsRuntimeSecurityContext, value, unit, sourceSpan) {\n\t          this.name = name;\n\t          this.type = type;\n\t          this.securityContext = securityContext;\n\t          this.needsRuntimeSecurityContext = needsRuntimeSecurityContext;\n\t          this.value = value;\n\t          this.unit = unit;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitElementProperty(this, context);\n\t      };\n\t      Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n\t          get: function () { return this.type === exports.PropertyBindingType.Animation; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return BoundElementPropertyAst;\n\t  }());\n\t  /**\n\t   * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n\t   * `(@trigger.phase)=\"callback($event)\"`).\n\t   */\n\t  var BoundEventAst = (function () {\n\t      function BoundEventAst(name, target, phase, handler, sourceSpan) {\n\t          this.name = name;\n\t          this.target = target;\n\t          this.phase = phase;\n\t          this.handler = handler;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      BoundEventAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitEvent(this, context);\n\t      };\n\t      Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n\t          get: function () {\n\t              if (this.target) {\n\t                  return this.target + \":\" + this.name;\n\t              }\n\t              else {\n\t                  return this.name;\n\t              }\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n\t          get: function () { return !!this.phase; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return BoundEventAst;\n\t  }());\n\t  /**\n\t   * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n\t   */\n\t  var ReferenceAst = (function () {\n\t      function ReferenceAst(name, value, sourceSpan) {\n\t          this.name = name;\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      ReferenceAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitReference(this, context);\n\t      };\n\t      return ReferenceAst;\n\t  }());\n\t  /**\n\t   * A variable declaration on a <template> (e.g. `var-someName=\"someLocalName\"`).\n\t   */\n\t  var VariableAst = (function () {\n\t      function VariableAst(name, value, sourceSpan) {\n\t          this.name = name;\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      VariableAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitVariable(this, context);\n\t      };\n\t      return VariableAst;\n\t  }());\n\t  /**\n\t   * An element declaration in a template.\n\t   */\n\t  var ElementAst = (function () {\n\t      function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, children, ngContentIndex, sourceSpan, endSourceSpan) {\n\t          this.name = name;\n\t          this.attrs = attrs;\n\t          this.inputs = inputs;\n\t          this.outputs = outputs;\n\t          this.references = references;\n\t          this.directives = directives;\n\t          this.providers = providers;\n\t          this.hasViewContainer = hasViewContainer;\n\t          this.children = children;\n\t          this.ngContentIndex = ngContentIndex;\n\t          this.sourceSpan = sourceSpan;\n\t          this.endSourceSpan = endSourceSpan;\n\t      }\n\t      ElementAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitElement(this, context);\n\t      };\n\t      return ElementAst;\n\t  }());\n\t  /**\n\t   * A `<template>` element included in an Angular template.\n\t   */\n\t  var EmbeddedTemplateAst = (function () {\n\t      function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, children, ngContentIndex, sourceSpan) {\n\t          this.attrs = attrs;\n\t          this.outputs = outputs;\n\t          this.references = references;\n\t          this.variables = variables;\n\t          this.directives = directives;\n\t          this.providers = providers;\n\t          this.hasViewContainer = hasViewContainer;\n\t          this.children = children;\n\t          this.ngContentIndex = ngContentIndex;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitEmbeddedTemplate(this, context);\n\t      };\n\t      return EmbeddedTemplateAst;\n\t  }());\n\t  /**\n\t   * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n\t   */\n\t  var BoundDirectivePropertyAst = (function () {\n\t      function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n\t          this.directiveName = directiveName;\n\t          this.templateName = templateName;\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitDirectiveProperty(this, context);\n\t      };\n\t      return BoundDirectivePropertyAst;\n\t  }());\n\t  /**\n\t   * A directive declared on an element.\n\t   */\n\t  var DirectiveAst = (function () {\n\t      function DirectiveAst(directive, inputs, hostProperties, hostEvents, sourceSpan) {\n\t          this.directive = directive;\n\t          this.inputs = inputs;\n\t          this.hostProperties = hostProperties;\n\t          this.hostEvents = hostEvents;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      DirectiveAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitDirective(this, context);\n\t      };\n\t      return DirectiveAst;\n\t  }());\n\t  /**\n\t   * A provider declared on an element\n\t   */\n\t  var ProviderAst = (function () {\n\t      function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n\t          this.token = token;\n\t          this.multiProvider = multiProvider;\n\t          this.eager = eager;\n\t          this.providers = providers;\n\t          this.providerType = providerType;\n\t          this.lifecycleHooks = lifecycleHooks;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      ProviderAst.prototype.visit = function (visitor, context) {\n\t          // No visit method in the visitor for now...\n\t          return null;\n\t      };\n\t      return ProviderAst;\n\t  }());\n\t  exports.ProviderAstType;\n\t  (function (ProviderAstType) {\n\t      ProviderAstType[ProviderAstType[\"PublicService\"] = 0] = \"PublicService\";\n\t      ProviderAstType[ProviderAstType[\"PrivateService\"] = 1] = \"PrivateService\";\n\t      ProviderAstType[ProviderAstType[\"Component\"] = 2] = \"Component\";\n\t      ProviderAstType[ProviderAstType[\"Directive\"] = 3] = \"Directive\";\n\t      ProviderAstType[ProviderAstType[\"Builtin\"] = 4] = \"Builtin\";\n\t  })(exports.ProviderAstType || (exports.ProviderAstType = {}));\n\t  /**\n\t   * Position where content is to be projected (instance of `<ng-content>` in a template).\n\t   */\n\t  var NgContentAst = (function () {\n\t      function NgContentAst(index, ngContentIndex, sourceSpan) {\n\t          this.index = index;\n\t          this.ngContentIndex = ngContentIndex;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      NgContentAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitNgContent(this, context);\n\t      };\n\t      return NgContentAst;\n\t  }());\n\t  /**\n\t   * Enumeration of types of property bindings.\n\t   */\n\t  exports.PropertyBindingType;\n\t  (function (PropertyBindingType) {\n\t      /**\n\t       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n\t       */\n\t      PropertyBindingType[PropertyBindingType[\"Property\"] = 0] = \"Property\";\n\t      /**\n\t       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n\t       */\n\t      PropertyBindingType[PropertyBindingType[\"Attribute\"] = 1] = \"Attribute\";\n\t      /**\n\t       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n\t       */\n\t      PropertyBindingType[PropertyBindingType[\"Class\"] = 2] = \"Class\";\n\t      /**\n\t       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n\t       */\n\t      PropertyBindingType[PropertyBindingType[\"Style\"] = 3] = \"Style\";\n\t      /**\n\t       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n\t       */\n\t      PropertyBindingType[PropertyBindingType[\"Animation\"] = 4] = \"Animation\";\n\t  })(exports.PropertyBindingType || (exports.PropertyBindingType = {}));\n\t  /**\n\t   * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.\n\t   */\n\t  function templateVisitAll(visitor, asts, context) {\n\t      if (context === void 0) { context = null; }\n\t      var result = [];\n\t      var visit = visitor.visit ?\n\t          function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n\t          function (ast) { return ast.visit(visitor, context); };\n\t      asts.forEach(function (ast) {\n\t          var astResult = visit(ast);\n\t          if (astResult) {\n\t              result.push(astResult);\n\t          }\n\t      });\n\t      return result;\n\t  }\n\t\n\t  function isPresent(obj) {\n\t      return obj != null;\n\t  }\n\t  function isBlank(obj) {\n\t      return obj == null;\n\t  }\n\t  var STRING_MAP_PROTO = Object.getPrototypeOf({});\n\t  function isStrictStringMap(obj) {\n\t      return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n\t  }\n\t  function stringify(token) {\n\t      if (typeof token === 'string') {\n\t          return token;\n\t      }\n\t      if (token === undefined || token === null) {\n\t          return '' + token;\n\t      }\n\t      if (token.overriddenName) {\n\t          return token.overriddenName;\n\t      }\n\t      if (token.name) {\n\t          return token.name;\n\t      }\n\t      var res = token.toString();\n\t      var newLineIndex = res.indexOf('\\n');\n\t      return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t  }\n\t  var NumberWrapper = (function () {\n\t      function NumberWrapper() {\n\t      }\n\t      NumberWrapper.parseIntAutoRadix = function (text) {\n\t          var result = parseInt(text);\n\t          if (isNaN(result)) {\n\t              throw new Error('Invalid integer literal when parsing ' + text);\n\t          }\n\t          return result;\n\t      };\n\t      NumberWrapper.parseInt = function (text, radix) {\n\t          if (radix == 10) {\n\t              if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n\t                  return parseInt(text, radix);\n\t              }\n\t          }\n\t          else if (radix == 16) {\n\t              if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n\t                  return parseInt(text, radix);\n\t              }\n\t          }\n\t          else {\n\t              var result = parseInt(text, radix);\n\t              if (!isNaN(result)) {\n\t                  return result;\n\t              }\n\t          }\n\t          throw new Error('Invalid integer literal when parsing ' + text + ' in base ' + radix);\n\t      };\n\t      NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n\t      return NumberWrapper;\n\t  }());\n\t  function isJsObject(o) {\n\t      return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t  }\n\t  function isPrimitive(obj) {\n\t      return !isJsObject(obj);\n\t  }\n\t  function escapeRegExp(s) {\n\t      return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n\t  }\n\t\n\t  // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n\t  // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n\t  var _arrayFromMap = (function () {\n\t      try {\n\t          if ((new Map()).values().next) {\n\t              return function createArrayFromMap(m, getValues) {\n\t                  return getValues ? Array.from(m.values()) : Array.from(m.keys());\n\t              };\n\t          }\n\t      }\n\t      catch (e) {\n\t      }\n\t      return function createArrayFromMapWithForeach(m, getValues) {\n\t          var res = new Array(m.size), i = 0;\n\t          m.forEach(function (v, k) {\n\t              res[i] = getValues ? v : k;\n\t              i++;\n\t          });\n\t          return res;\n\t      };\n\t  })();\n\t  var MapWrapper = (function () {\n\t      function MapWrapper() {\n\t      }\n\t      MapWrapper.createFromStringMap = function (stringMap) {\n\t          var result = new Map();\n\t          for (var prop in stringMap) {\n\t              result.set(prop, stringMap[prop]);\n\t          }\n\t          return result;\n\t      };\n\t      MapWrapper.keys = function (m) { return _arrayFromMap(m, false); };\n\t      MapWrapper.values = function (m) { return _arrayFromMap(m, true); };\n\t      return MapWrapper;\n\t  }());\n\t  /**\n\t   * Wraps Javascript Objects\n\t   */\n\t  var StringMapWrapper = (function () {\n\t      function StringMapWrapper() {\n\t      }\n\t      StringMapWrapper.merge = function (m1, m2) {\n\t          var m = {};\n\t          for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t              var k = _a[_i];\n\t              m[k] = m1[k];\n\t          }\n\t          for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t              var k = _c[_b];\n\t              m[k] = m2[k];\n\t          }\n\t          return m;\n\t      };\n\t      StringMapWrapper.equals = function (m1, m2) {\n\t          var k1 = Object.keys(m1);\n\t          var k2 = Object.keys(m2);\n\t          if (k1.length != k2.length) {\n\t              return false;\n\t          }\n\t          for (var i = 0; i < k1.length; i++) {\n\t              var key = k1[i];\n\t              if (m1[key] !== m2[key]) {\n\t                  return false;\n\t              }\n\t          }\n\t          return true;\n\t      };\n\t      return StringMapWrapper;\n\t  }());\n\t  var ListWrapper = (function () {\n\t      function ListWrapper() {\n\t      }\n\t      ListWrapper.removeAll = function (list, items) {\n\t          for (var i = 0; i < items.length; ++i) {\n\t              var index = list.indexOf(items[i]);\n\t              list.splice(index, 1);\n\t          }\n\t      };\n\t      ListWrapper.remove = function (list, el) {\n\t          var index = list.indexOf(el);\n\t          if (index > -1) {\n\t              list.splice(index, 1);\n\t              return true;\n\t          }\n\t          return false;\n\t      };\n\t      ListWrapper.equals = function (a, b) {\n\t          if (a.length != b.length)\n\t              return false;\n\t          for (var i = 0; i < a.length; ++i) {\n\t              if (a[i] !== b[i])\n\t                  return false;\n\t          }\n\t          return true;\n\t      };\n\t      ListWrapper.maximum = function (list, predicate) {\n\t          if (list.length == 0) {\n\t              return null;\n\t          }\n\t          var solution = null;\n\t          var maxValue = -Infinity;\n\t          for (var index = 0; index < list.length; index++) {\n\t              var candidate = list[index];\n\t              if (candidate == null) {\n\t                  continue;\n\t              }\n\t              var candidateValue = predicate(candidate);\n\t              if (candidateValue > maxValue) {\n\t                  solution = candidate;\n\t                  maxValue = candidateValue;\n\t              }\n\t          }\n\t          return solution;\n\t      };\n\t      ListWrapper.flatten = function (list) {\n\t          var target = [];\n\t          _flattenArray(list, target);\n\t          return target;\n\t      };\n\t      return ListWrapper;\n\t  }());\n\t  function _flattenArray(source, target) {\n\t      if (isPresent(source)) {\n\t          for (var i = 0; i < source.length; i++) {\n\t              var item = source[i];\n\t              if (Array.isArray(item)) {\n\t                  _flattenArray(item, target);\n\t              }\n\t              else {\n\t                  target.push(item);\n\t              }\n\t          }\n\t      }\n\t      return target;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var TagContentType;\n\t  (function (TagContentType) {\n\t      TagContentType[TagContentType[\"RAW_TEXT\"] = 0] = \"RAW_TEXT\";\n\t      TagContentType[TagContentType[\"ESCAPABLE_RAW_TEXT\"] = 1] = \"ESCAPABLE_RAW_TEXT\";\n\t      TagContentType[TagContentType[\"PARSABLE_DATA\"] = 2] = \"PARSABLE_DATA\";\n\t  })(TagContentType || (TagContentType = {}));\n\t  function splitNsName(elementName) {\n\t      if (elementName[0] != ':') {\n\t          return [null, elementName];\n\t      }\n\t      var colonIndex = elementName.indexOf(':', 1);\n\t      if (colonIndex == -1) {\n\t          throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n\t      }\n\t      return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n\t  }\n\t  function getNsPrefix(fullName) {\n\t      return fullName === null ? null : splitNsName(fullName)[0];\n\t  }\n\t  function mergeNsAndName(prefix, localName) {\n\t      return prefix ? \":\" + prefix + \":\" + localName : localName;\n\t  }\n\t  // see http://www.w3.org/TR/html51/syntax.html#named-character-references\n\t  // see https://html.spec.whatwg.org/multipage/entities.json\n\t  // This list is not exhaustive to keep the compiler footprint low.\n\t  // The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.\n\t  var NAMED_ENTITIES = {\n\t      'Aacute': '\\u00C1',\n\t      'aacute': '\\u00E1',\n\t      'Acirc': '\\u00C2',\n\t      'acirc': '\\u00E2',\n\t      'acute': '\\u00B4',\n\t      'AElig': '\\u00C6',\n\t      'aelig': '\\u00E6',\n\t      'Agrave': '\\u00C0',\n\t      'agrave': '\\u00E0',\n\t      'alefsym': '\\u2135',\n\t      'Alpha': '\\u0391',\n\t      'alpha': '\\u03B1',\n\t      'amp': '&',\n\t      'and': '\\u2227',\n\t      'ang': '\\u2220',\n\t      'apos': '\\u0027',\n\t      'Aring': '\\u00C5',\n\t      'aring': '\\u00E5',\n\t      'asymp': '\\u2248',\n\t      'Atilde': '\\u00C3',\n\t      'atilde': '\\u00E3',\n\t      'Auml': '\\u00C4',\n\t      'auml': '\\u00E4',\n\t      'bdquo': '\\u201E',\n\t      'Beta': '\\u0392',\n\t      'beta': '\\u03B2',\n\t      'brvbar': '\\u00A6',\n\t      'bull': '\\u2022',\n\t      'cap': '\\u2229',\n\t      'Ccedil': '\\u00C7',\n\t      'ccedil': '\\u00E7',\n\t      'cedil': '\\u00B8',\n\t      'cent': '\\u00A2',\n\t      'Chi': '\\u03A7',\n\t      'chi': '\\u03C7',\n\t      'circ': '\\u02C6',\n\t      'clubs': '\\u2663',\n\t      'cong': '\\u2245',\n\t      'copy': '\\u00A9',\n\t      'crarr': '\\u21B5',\n\t      'cup': '\\u222A',\n\t      'curren': '\\u00A4',\n\t      'dagger': '\\u2020',\n\t      'Dagger': '\\u2021',\n\t      'darr': '\\u2193',\n\t      'dArr': '\\u21D3',\n\t      'deg': '\\u00B0',\n\t      'Delta': '\\u0394',\n\t      'delta': '\\u03B4',\n\t      'diams': '\\u2666',\n\t      'divide': '\\u00F7',\n\t      'Eacute': '\\u00C9',\n\t      'eacute': '\\u00E9',\n\t      'Ecirc': '\\u00CA',\n\t      'ecirc': '\\u00EA',\n\t      'Egrave': '\\u00C8',\n\t      'egrave': '\\u00E8',\n\t      'empty': '\\u2205',\n\t      'emsp': '\\u2003',\n\t      'ensp': '\\u2002',\n\t      'Epsilon': '\\u0395',\n\t      'epsilon': '\\u03B5',\n\t      'equiv': '\\u2261',\n\t      'Eta': '\\u0397',\n\t      'eta': '\\u03B7',\n\t      'ETH': '\\u00D0',\n\t      'eth': '\\u00F0',\n\t      'Euml': '\\u00CB',\n\t      'euml': '\\u00EB',\n\t      'euro': '\\u20AC',\n\t      'exist': '\\u2203',\n\t      'fnof': '\\u0192',\n\t      'forall': '\\u2200',\n\t      'frac12': '\\u00BD',\n\t      'frac14': '\\u00BC',\n\t      'frac34': '\\u00BE',\n\t      'frasl': '\\u2044',\n\t      'Gamma': '\\u0393',\n\t      'gamma': '\\u03B3',\n\t      'ge': '\\u2265',\n\t      'gt': '>',\n\t      'harr': '\\u2194',\n\t      'hArr': '\\u21D4',\n\t      'hearts': '\\u2665',\n\t      'hellip': '\\u2026',\n\t      'Iacute': '\\u00CD',\n\t      'iacute': '\\u00ED',\n\t      'Icirc': '\\u00CE',\n\t      'icirc': '\\u00EE',\n\t      'iexcl': '\\u00A1',\n\t      'Igrave': '\\u00CC',\n\t      'igrave': '\\u00EC',\n\t      'image': '\\u2111',\n\t      'infin': '\\u221E',\n\t      'int': '\\u222B',\n\t      'Iota': '\\u0399',\n\t      'iota': '\\u03B9',\n\t      'iquest': '\\u00BF',\n\t      'isin': '\\u2208',\n\t      'Iuml': '\\u00CF',\n\t      'iuml': '\\u00EF',\n\t      'Kappa': '\\u039A',\n\t      'kappa': '\\u03BA',\n\t      'Lambda': '\\u039B',\n\t      'lambda': '\\u03BB',\n\t      'lang': '\\u27E8',\n\t      'laquo': '\\u00AB',\n\t      'larr': '\\u2190',\n\t      'lArr': '\\u21D0',\n\t      'lceil': '\\u2308',\n\t      'ldquo': '\\u201C',\n\t      'le': '\\u2264',\n\t      'lfloor': '\\u230A',\n\t      'lowast': '\\u2217',\n\t      'loz': '\\u25CA',\n\t      'lrm': '\\u200E',\n\t      'lsaquo': '\\u2039',\n\t      'lsquo': '\\u2018',\n\t      'lt': '<',\n\t      'macr': '\\u00AF',\n\t      'mdash': '\\u2014',\n\t      'micro': '\\u00B5',\n\t      'middot': '\\u00B7',\n\t      'minus': '\\u2212',\n\t      'Mu': '\\u039C',\n\t      'mu': '\\u03BC',\n\t      'nabla': '\\u2207',\n\t      'nbsp': '\\u00A0',\n\t      'ndash': '\\u2013',\n\t      'ne': '\\u2260',\n\t      'ni': '\\u220B',\n\t      'not': '\\u00AC',\n\t      'notin': '\\u2209',\n\t      'nsub': '\\u2284',\n\t      'Ntilde': '\\u00D1',\n\t      'ntilde': '\\u00F1',\n\t      'Nu': '\\u039D',\n\t      'nu': '\\u03BD',\n\t      'Oacute': '\\u00D3',\n\t      'oacute': '\\u00F3',\n\t      'Ocirc': '\\u00D4',\n\t      'ocirc': '\\u00F4',\n\t      'OElig': '\\u0152',\n\t      'oelig': '\\u0153',\n\t      'Ograve': '\\u00D2',\n\t      'ograve': '\\u00F2',\n\t      'oline': '\\u203E',\n\t      'Omega': '\\u03A9',\n\t      'omega': '\\u03C9',\n\t      'Omicron': '\\u039F',\n\t      'omicron': '\\u03BF',\n\t      'oplus': '\\u2295',\n\t      'or': '\\u2228',\n\t      'ordf': '\\u00AA',\n\t      'ordm': '\\u00BA',\n\t      'Oslash': '\\u00D8',\n\t      'oslash': '\\u00F8',\n\t      'Otilde': '\\u00D5',\n\t      'otilde': '\\u00F5',\n\t      'otimes': '\\u2297',\n\t      'Ouml': '\\u00D6',\n\t      'ouml': '\\u00F6',\n\t      'para': '\\u00B6',\n\t      'permil': '\\u2030',\n\t      'perp': '\\u22A5',\n\t      'Phi': '\\u03A6',\n\t      'phi': '\\u03C6',\n\t      'Pi': '\\u03A0',\n\t      'pi': '\\u03C0',\n\t      'piv': '\\u03D6',\n\t      'plusmn': '\\u00B1',\n\t      'pound': '\\u00A3',\n\t      'prime': '\\u2032',\n\t      'Prime': '\\u2033',\n\t      'prod': '\\u220F',\n\t      'prop': '\\u221D',\n\t      'Psi': '\\u03A8',\n\t      'psi': '\\u03C8',\n\t      'quot': '\\u0022',\n\t      'radic': '\\u221A',\n\t      'rang': '\\u27E9',\n\t      'raquo': '\\u00BB',\n\t      'rarr': '\\u2192',\n\t      'rArr': '\\u21D2',\n\t      'rceil': '\\u2309',\n\t      'rdquo': '\\u201D',\n\t      'real': '\\u211C',\n\t      'reg': '\\u00AE',\n\t      'rfloor': '\\u230B',\n\t      'Rho': '\\u03A1',\n\t      'rho': '\\u03C1',\n\t      'rlm': '\\u200F',\n\t      'rsaquo': '\\u203A',\n\t      'rsquo': '\\u2019',\n\t      'sbquo': '\\u201A',\n\t      'Scaron': '\\u0160',\n\t      'scaron': '\\u0161',\n\t      'sdot': '\\u22C5',\n\t      'sect': '\\u00A7',\n\t      'shy': '\\u00AD',\n\t      'Sigma': '\\u03A3',\n\t      'sigma': '\\u03C3',\n\t      'sigmaf': '\\u03C2',\n\t      'sim': '\\u223C',\n\t      'spades': '\\u2660',\n\t      'sub': '\\u2282',\n\t      'sube': '\\u2286',\n\t      'sum': '\\u2211',\n\t      'sup': '\\u2283',\n\t      'sup1': '\\u00B9',\n\t      'sup2': '\\u00B2',\n\t      'sup3': '\\u00B3',\n\t      'supe': '\\u2287',\n\t      'szlig': '\\u00DF',\n\t      'Tau': '\\u03A4',\n\t      'tau': '\\u03C4',\n\t      'there4': '\\u2234',\n\t      'Theta': '\\u0398',\n\t      'theta': '\\u03B8',\n\t      'thetasym': '\\u03D1',\n\t      'thinsp': '\\u2009',\n\t      'THORN': '\\u00DE',\n\t      'thorn': '\\u00FE',\n\t      'tilde': '\\u02DC',\n\t      'times': '\\u00D7',\n\t      'trade': '\\u2122',\n\t      'Uacute': '\\u00DA',\n\t      'uacute': '\\u00FA',\n\t      'uarr': '\\u2191',\n\t      'uArr': '\\u21D1',\n\t      'Ucirc': '\\u00DB',\n\t      'ucirc': '\\u00FB',\n\t      'Ugrave': '\\u00D9',\n\t      'ugrave': '\\u00F9',\n\t      'uml': '\\u00A8',\n\t      'upsih': '\\u03D2',\n\t      'Upsilon': '\\u03A5',\n\t      'upsilon': '\\u03C5',\n\t      'Uuml': '\\u00DC',\n\t      'uuml': '\\u00FC',\n\t      'weierp': '\\u2118',\n\t      'Xi': '\\u039E',\n\t      'xi': '\\u03BE',\n\t      'Yacute': '\\u00DD',\n\t      'yacute': '\\u00FD',\n\t      'yen': '\\u00A5',\n\t      'yuml': '\\u00FF',\n\t      'Yuml': '\\u0178',\n\t      'Zeta': '\\u0396',\n\t      'zeta': '\\u03B6',\n\t      'zwj': '\\u200D',\n\t      'zwnj': '\\u200C',\n\t  };\n\t\n\t  var HtmlTagDefinition = (function () {\n\t      function HtmlTagDefinition(_a) {\n\t          var _this = this;\n\t          var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n\t          this.closedByChildren = {};\n\t          this.closedByParent = false;\n\t          this.canSelfClose = false;\n\t          if (closedByChildren && closedByChildren.length > 0) {\n\t              closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n\t          }\n\t          this.isVoid = isVoid;\n\t          this.closedByParent = closedByParent || isVoid;\n\t          if (requiredParents && requiredParents.length > 0) {\n\t              this.requiredParents = {};\n\t              // The first parent is the list is automatically when none of the listed parents are present\n\t              this.parentToAdd = requiredParents[0];\n\t              requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n\t          }\n\t          this.implicitNamespacePrefix = implicitNamespacePrefix;\n\t          this.contentType = contentType;\n\t          this.ignoreFirstLf = ignoreFirstLf;\n\t      }\n\t      HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n\t          if (!this.requiredParents) {\n\t              return false;\n\t          }\n\t          if (!currentParent) {\n\t              return true;\n\t          }\n\t          var lcParent = currentParent.toLowerCase();\n\t          return this.requiredParents[lcParent] != true && lcParent != 'template';\n\t      };\n\t      HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n\t          return this.isVoid || name.toLowerCase() in this.closedByChildren;\n\t      };\n\t      return HtmlTagDefinition;\n\t  }());\n\t  // see http://www.w3.org/TR/html51/syntax.html#optional-tags\n\t  // This implementation does not fully conform to the HTML5 spec.\n\t  var TAG_DEFINITIONS = {\n\t      'base': new HtmlTagDefinition({ isVoid: true }),\n\t      'meta': new HtmlTagDefinition({ isVoid: true }),\n\t      'area': new HtmlTagDefinition({ isVoid: true }),\n\t      'embed': new HtmlTagDefinition({ isVoid: true }),\n\t      'link': new HtmlTagDefinition({ isVoid: true }),\n\t      'img': new HtmlTagDefinition({ isVoid: true }),\n\t      'input': new HtmlTagDefinition({ isVoid: true }),\n\t      'param': new HtmlTagDefinition({ isVoid: true }),\n\t      'hr': new HtmlTagDefinition({ isVoid: true }),\n\t      'br': new HtmlTagDefinition({ isVoid: true }),\n\t      'source': new HtmlTagDefinition({ isVoid: true }),\n\t      'track': new HtmlTagDefinition({ isVoid: true }),\n\t      'wbr': new HtmlTagDefinition({ isVoid: true }),\n\t      'p': new HtmlTagDefinition({\n\t          closedByChildren: [\n\t              'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n\t              'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n\t              'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n\t          ],\n\t          closedByParent: true\n\t      }),\n\t      'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n\t      'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n\t      'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n\t      'tr': new HtmlTagDefinition({\n\t          closedByChildren: ['tr'],\n\t          requiredParents: ['tbody', 'tfoot', 'thead'],\n\t          closedByParent: true\n\t      }),\n\t      'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n\t      'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n\t      'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n\t      'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n\t      'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n\t      'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n\t      'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n\t      'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n\t      'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n\t      'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n\t      'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n\t      'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n\t      'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n\t      'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n\t      'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n\t      'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n\t      'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n\t      'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n\t      'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n\t      'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n\t  };\n\t  var _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n\t  function getHtmlTagDefinition(tagName) {\n\t      return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n\t  }\n\t\n\t  var _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n\t      '([-\\\\w]+)|' +\n\t      '(?:\\\\.([-\\\\w]+))|' +\n\t      '(?:\\\\[([-\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +\n\t      '(\\\\))|' +\n\t      '(\\\\s*,\\\\s*)', // \",\"\n\t  'g');\n\t  /**\n\t   * A css selector contains an element name,\n\t   * css classes and attribute/value pairs with the purpose\n\t   * of selecting subsets out of them.\n\t   */\n\t  var CssSelector = (function () {\n\t      function CssSelector() {\n\t          this.element = null;\n\t          this.classNames = [];\n\t          this.attrs = [];\n\t          this.notSelectors = [];\n\t      }\n\t      CssSelector.parse = function (selector) {\n\t          var results = [];\n\t          var _addResult = function (res, cssSel) {\n\t              if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n\t                  cssSel.attrs.length == 0) {\n\t                  cssSel.element = '*';\n\t              }\n\t              res.push(cssSel);\n\t          };\n\t          var cssSelector = new CssSelector();\n\t          var match;\n\t          var current = cssSelector;\n\t          var inNot = false;\n\t          _SELECTOR_REGEXP.lastIndex = 0;\n\t          while (match = _SELECTOR_REGEXP.exec(selector)) {\n\t              if (match[1]) {\n\t                  if (inNot) {\n\t                      throw new Error('Nesting :not is not allowed in a selector');\n\t                  }\n\t                  inNot = true;\n\t                  current = new CssSelector();\n\t                  cssSelector.notSelectors.push(current);\n\t              }\n\t              if (match[2]) {\n\t                  current.setElement(match[2]);\n\t              }\n\t              if (match[3]) {\n\t                  current.addClassName(match[3]);\n\t              }\n\t              if (match[4]) {\n\t                  current.addAttribute(match[4], match[5]);\n\t              }\n\t              if (match[6]) {\n\t                  inNot = false;\n\t                  current = cssSelector;\n\t              }\n\t              if (match[7]) {\n\t                  if (inNot) {\n\t                      throw new Error('Multiple selectors in :not are not supported');\n\t                  }\n\t                  _addResult(results, cssSelector);\n\t                  cssSelector = current = new CssSelector();\n\t              }\n\t          }\n\t          _addResult(results, cssSelector);\n\t          return results;\n\t      };\n\t      CssSelector.prototype.isElementSelector = function () {\n\t          return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n\t              this.notSelectors.length === 0;\n\t      };\n\t      CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n\t      CssSelector.prototype.setElement = function (element) {\n\t          if (element === void 0) { element = null; }\n\t          this.element = element;\n\t      };\n\t      /** Gets a template string for an element that matches the selector. */\n\t      CssSelector.prototype.getMatchingElementTemplate = function () {\n\t          var tagName = this.element || 'div';\n\t          var classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n\t          var attrs = '';\n\t          for (var i = 0; i < this.attrs.length; i += 2) {\n\t              var attrName = this.attrs[i];\n\t              var attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n\t              attrs += \" \" + attrName + attrValue;\n\t          }\n\t          return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n\t              \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n\t      };\n\t      CssSelector.prototype.addAttribute = function (name, value) {\n\t          if (value === void 0) { value = ''; }\n\t          this.attrs.push(name, value && value.toLowerCase() || '');\n\t      };\n\t      CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n\t      CssSelector.prototype.toString = function () {\n\t          var res = this.element || '';\n\t          if (this.classNames) {\n\t              this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n\t          }\n\t          if (this.attrs) {\n\t              for (var i = 0; i < this.attrs.length; i += 2) {\n\t                  var name_1 = this.attrs[i];\n\t                  var value = this.attrs[i + 1];\n\t                  res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n\t              }\n\t          }\n\t          this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n\t          return res;\n\t      };\n\t      return CssSelector;\n\t  }());\n\t  /**\n\t   * Reads a list of CssSelectors and allows to calculate which ones\n\t   * are contained in a given CssSelector.\n\t   */\n\t  var SelectorMatcher = (function () {\n\t      function SelectorMatcher() {\n\t          this._elementMap = new Map();\n\t          this._elementPartialMap = new Map();\n\t          this._classMap = new Map();\n\t          this._classPartialMap = new Map();\n\t          this._attrValueMap = new Map();\n\t          this._attrValuePartialMap = new Map();\n\t          this._listContexts = [];\n\t      }\n\t      SelectorMatcher.createNotMatcher = function (notSelectors) {\n\t          var notMatcher = new SelectorMatcher();\n\t          notMatcher.addSelectables(notSelectors, null);\n\t          return notMatcher;\n\t      };\n\t      SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n\t          var listContext = null;\n\t          if (cssSelectors.length > 1) {\n\t              listContext = new SelectorListContext(cssSelectors);\n\t              this._listContexts.push(listContext);\n\t          }\n\t          for (var i = 0; i < cssSelectors.length; i++) {\n\t              this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n\t          }\n\t      };\n\t      /**\n\t       * Add an object that can be found later on by calling `match`.\n\t       * @param cssSelector A css selector\n\t       * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n\t       */\n\t      SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n\t          var matcher = this;\n\t          var element = cssSelector.element;\n\t          var classNames = cssSelector.classNames;\n\t          var attrs = cssSelector.attrs;\n\t          var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\t          if (element) {\n\t              var isTerminal = attrs.length === 0 && classNames.length === 0;\n\t              if (isTerminal) {\n\t                  this._addTerminal(matcher._elementMap, element, selectable);\n\t              }\n\t              else {\n\t                  matcher = this._addPartial(matcher._elementPartialMap, element);\n\t              }\n\t          }\n\t          if (classNames) {\n\t              for (var i = 0; i < classNames.length; i++) {\n\t                  var isTerminal = attrs.length === 0 && i === classNames.length - 1;\n\t                  var className = classNames[i];\n\t                  if (isTerminal) {\n\t                      this._addTerminal(matcher._classMap, className, selectable);\n\t                  }\n\t                  else {\n\t                      matcher = this._addPartial(matcher._classPartialMap, className);\n\t                  }\n\t              }\n\t          }\n\t          if (attrs) {\n\t              for (var i = 0; i < attrs.length; i += 2) {\n\t                  var isTerminal = i === attrs.length - 2;\n\t                  var name_2 = attrs[i];\n\t                  var value = attrs[i + 1];\n\t                  if (isTerminal) {\n\t                      var terminalMap = matcher._attrValueMap;\n\t                      var terminalValuesMap = terminalMap.get(name_2);\n\t                      if (!terminalValuesMap) {\n\t                          terminalValuesMap = new Map();\n\t                          terminalMap.set(name_2, terminalValuesMap);\n\t                      }\n\t                      this._addTerminal(terminalValuesMap, value, selectable);\n\t                  }\n\t                  else {\n\t                      var partialMap = matcher._attrValuePartialMap;\n\t                      var partialValuesMap = partialMap.get(name_2);\n\t                      if (!partialValuesMap) {\n\t                          partialValuesMap = new Map();\n\t                          partialMap.set(name_2, partialValuesMap);\n\t                      }\n\t                      matcher = this._addPartial(partialValuesMap, value);\n\t                  }\n\t              }\n\t          }\n\t      };\n\t      SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n\t          var terminalList = map.get(name);\n\t          if (!terminalList) {\n\t              terminalList = [];\n\t              map.set(name, terminalList);\n\t          }\n\t          terminalList.push(selectable);\n\t      };\n\t      SelectorMatcher.prototype._addPartial = function (map, name) {\n\t          var matcher = map.get(name);\n\t          if (!matcher) {\n\t              matcher = new SelectorMatcher();\n\t              map.set(name, matcher);\n\t          }\n\t          return matcher;\n\t      };\n\t      /**\n\t       * Find the objects that have been added via `addSelectable`\n\t       * whose css selector is contained in the given css selector.\n\t       * @param cssSelector A css selector\n\t       * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n\t       * @return boolean true if a match was found\n\t      */\n\t      SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n\t          var result = false;\n\t          var element = cssSelector.element;\n\t          var classNames = cssSelector.classNames;\n\t          var attrs = cssSelector.attrs;\n\t          for (var i = 0; i < this._listContexts.length; i++) {\n\t              this._listContexts[i].alreadyMatched = false;\n\t          }\n\t          result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n\t          result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n\t              result;\n\t          if (classNames) {\n\t              for (var i = 0; i < classNames.length; i++) {\n\t                  var className = classNames[i];\n\t                  result =\n\t                      this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n\t                  result =\n\t                      this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n\t                          result;\n\t              }\n\t          }\n\t          if (attrs) {\n\t              for (var i = 0; i < attrs.length; i += 2) {\n\t                  var name_3 = attrs[i];\n\t                  var value = attrs[i + 1];\n\t                  var terminalValuesMap = this._attrValueMap.get(name_3);\n\t                  if (value) {\n\t                      result =\n\t                          this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n\t                  }\n\t                  result =\n\t                      this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n\t                  var partialValuesMap = this._attrValuePartialMap.get(name_3);\n\t                  if (value) {\n\t                      result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n\t                  }\n\t                  result =\n\t                      this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n\t              }\n\t          }\n\t          return result;\n\t      };\n\t      /** @internal */\n\t      SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n\t          if (!map || typeof name !== 'string') {\n\t              return false;\n\t          }\n\t          var selectables = map.get(name);\n\t          var starSelectables = map.get('*');\n\t          if (starSelectables) {\n\t              selectables = selectables.concat(starSelectables);\n\t          }\n\t          if (!selectables) {\n\t              return false;\n\t          }\n\t          var selectable;\n\t          var result = false;\n\t          for (var i = 0; i < selectables.length; i++) {\n\t              selectable = selectables[i];\n\t              result = selectable.finalize(cssSelector, matchedCallback) || result;\n\t          }\n\t          return result;\n\t      };\n\t      /** @internal */\n\t      SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n\t          if (!map || typeof name !== 'string') {\n\t              return false;\n\t          }\n\t          var nestedSelector = map.get(name);\n\t          if (!nestedSelector) {\n\t              return false;\n\t          }\n\t          // TODO(perf): get rid of recursion and measure again\n\t          // TODO(perf): don't pass the whole selector into the recursion,\n\t          // but only the not processed parts\n\t          return nestedSelector.match(cssSelector, matchedCallback);\n\t      };\n\t      return SelectorMatcher;\n\t  }());\n\t  var SelectorListContext = (function () {\n\t      function SelectorListContext(selectors) {\n\t          this.selectors = selectors;\n\t          this.alreadyMatched = false;\n\t      }\n\t      return SelectorListContext;\n\t  }());\n\t  // Store context to pass back selector and context when a selector is matched\n\t  var SelectorContext = (function () {\n\t      function SelectorContext(selector, cbContext, listContext) {\n\t          this.selector = selector;\n\t          this.cbContext = cbContext;\n\t          this.listContext = listContext;\n\t          this.notSelectors = selector.notSelectors;\n\t      }\n\t      SelectorContext.prototype.finalize = function (cssSelector, callback) {\n\t          var result = true;\n\t          if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n\t              var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n\t              result = !notMatcher.match(cssSelector, null);\n\t          }\n\t          if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n\t              if (this.listContext) {\n\t                  this.listContext.alreadyMatched = true;\n\t              }\n\t              callback(this.selector, this.cbContext);\n\t          }\n\t          return result;\n\t      };\n\t      return SelectorContext;\n\t  }());\n\t\n\t  var MODULE_SUFFIX = '';\n\t  function splitAtColon(input, defaultValues) {\n\t      return _splitAt(input, ':', defaultValues);\n\t  }\n\t  function splitAtPeriod(input, defaultValues) {\n\t      return _splitAt(input, '.', defaultValues);\n\t  }\n\t  function _splitAt(input, character, defaultValues) {\n\t      var characterIndex = input.indexOf(character);\n\t      if (characterIndex == -1)\n\t          return defaultValues;\n\t      return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n\t  }\n\t  function sanitizeIdentifier(name) {\n\t      return name.replace(/\\W/g, '_');\n\t  }\n\t  function visitValue(value, visitor, context) {\n\t      if (Array.isArray(value)) {\n\t          return visitor.visitArray(value, context);\n\t      }\n\t      if (isStrictStringMap(value)) {\n\t          return visitor.visitStringMap(value, context);\n\t      }\n\t      if (isBlank(value) || isPrimitive(value)) {\n\t          return visitor.visitPrimitive(value, context);\n\t      }\n\t      return visitor.visitOther(value, context);\n\t  }\n\t  var ValueTransformer = (function () {\n\t      function ValueTransformer() {\n\t      }\n\t      ValueTransformer.prototype.visitArray = function (arr, context) {\n\t          var _this = this;\n\t          return arr.map(function (value) { return visitValue(value, _this, context); });\n\t      };\n\t      ValueTransformer.prototype.visitStringMap = function (map, context) {\n\t          var _this = this;\n\t          var result = {};\n\t          Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n\t          return result;\n\t      };\n\t      ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n\t      ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n\t      return ValueTransformer;\n\t  }());\n\t  var SyncAsyncResult = (function () {\n\t      function SyncAsyncResult(syncResult, asyncResult) {\n\t          if (asyncResult === void 0) { asyncResult = null; }\n\t          this.syncResult = syncResult;\n\t          this.asyncResult = asyncResult;\n\t          if (!asyncResult) {\n\t              this.asyncResult = Promise.resolve(syncResult);\n\t          }\n\t      }\n\t      return SyncAsyncResult;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$1 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  function unimplemented() {\n\t      throw new Error('unimplemented');\n\t  }\n\t  // group 0: \"[prop] or (event) or @trigger\"\n\t  // group 1: \"prop\" from \"[prop]\"\n\t  // group 2: \"event\" from \"(event)\"\n\t  // group 3: \"@trigger\" from \"@trigger\"\n\t  var HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n\t  var CompileMetadataWithIdentifier = (function () {\n\t      function CompileMetadataWithIdentifier() {\n\t      }\n\t      Object.defineProperty(CompileMetadataWithIdentifier.prototype, \"identifier\", {\n\t          get: function () { return unimplemented(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return CompileMetadataWithIdentifier;\n\t  }());\n\t  var CompileAnimationEntryMetadata = (function () {\n\t      function CompileAnimationEntryMetadata(name, definitions) {\n\t          if (name === void 0) { name = null; }\n\t          if (definitions === void 0) { definitions = null; }\n\t          this.name = name;\n\t          this.definitions = definitions;\n\t      }\n\t      return CompileAnimationEntryMetadata;\n\t  }());\n\t  var CompileAnimationStateMetadata = (function () {\n\t      function CompileAnimationStateMetadata() {\n\t      }\n\t      return CompileAnimationStateMetadata;\n\t  }());\n\t  var CompileAnimationStateDeclarationMetadata = (function (_super) {\n\t      __extends$1(CompileAnimationStateDeclarationMetadata, _super);\n\t      function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n\t          _super.call(this);\n\t          this.stateNameExpr = stateNameExpr;\n\t          this.styles = styles;\n\t      }\n\t      return CompileAnimationStateDeclarationMetadata;\n\t  }(CompileAnimationStateMetadata));\n\t  var CompileAnimationStateTransitionMetadata = (function (_super) {\n\t      __extends$1(CompileAnimationStateTransitionMetadata, _super);\n\t      function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n\t          _super.call(this);\n\t          this.stateChangeExpr = stateChangeExpr;\n\t          this.steps = steps;\n\t      }\n\t      return CompileAnimationStateTransitionMetadata;\n\t  }(CompileAnimationStateMetadata));\n\t  var CompileAnimationMetadata = (function () {\n\t      function CompileAnimationMetadata() {\n\t      }\n\t      return CompileAnimationMetadata;\n\t  }());\n\t  var CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n\t      __extends$1(CompileAnimationKeyframesSequenceMetadata, _super);\n\t      function CompileAnimationKeyframesSequenceMetadata(steps) {\n\t          if (steps === void 0) { steps = []; }\n\t          _super.call(this);\n\t          this.steps = steps;\n\t      }\n\t      return CompileAnimationKeyframesSequenceMetadata;\n\t  }(CompileAnimationMetadata));\n\t  var CompileAnimationStyleMetadata = (function (_super) {\n\t      __extends$1(CompileAnimationStyleMetadata, _super);\n\t      function CompileAnimationStyleMetadata(offset, styles) {\n\t          if (styles === void 0) { styles = null; }\n\t          _super.call(this);\n\t          this.offset = offset;\n\t          this.styles = styles;\n\t      }\n\t      return CompileAnimationStyleMetadata;\n\t  }(CompileAnimationMetadata));\n\t  var CompileAnimationAnimateMetadata = (function (_super) {\n\t      __extends$1(CompileAnimationAnimateMetadata, _super);\n\t      function CompileAnimationAnimateMetadata(timings, styles) {\n\t          if (timings === void 0) { timings = 0; }\n\t          if (styles === void 0) { styles = null; }\n\t          _super.call(this);\n\t          this.timings = timings;\n\t          this.styles = styles;\n\t      }\n\t      return CompileAnimationAnimateMetadata;\n\t  }(CompileAnimationMetadata));\n\t  var CompileAnimationWithStepsMetadata = (function (_super) {\n\t      __extends$1(CompileAnimationWithStepsMetadata, _super);\n\t      function CompileAnimationWithStepsMetadata(steps) {\n\t          if (steps === void 0) { steps = null; }\n\t          _super.call(this);\n\t          this.steps = steps;\n\t      }\n\t      return CompileAnimationWithStepsMetadata;\n\t  }(CompileAnimationMetadata));\n\t  var CompileAnimationSequenceMetadata = (function (_super) {\n\t      __extends$1(CompileAnimationSequenceMetadata, _super);\n\t      function CompileAnimationSequenceMetadata(steps) {\n\t          if (steps === void 0) { steps = null; }\n\t          _super.call(this, steps);\n\t      }\n\t      return CompileAnimationSequenceMetadata;\n\t  }(CompileAnimationWithStepsMetadata));\n\t  var CompileAnimationGroupMetadata = (function (_super) {\n\t      __extends$1(CompileAnimationGroupMetadata, _super);\n\t      function CompileAnimationGroupMetadata(steps) {\n\t          if (steps === void 0) { steps = null; }\n\t          _super.call(this, steps);\n\t      }\n\t      return CompileAnimationGroupMetadata;\n\t  }(CompileAnimationWithStepsMetadata));\n\t  var CompileIdentifierMetadata = (function () {\n\t      function CompileIdentifierMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, reference = _b.reference, name = _b.name, moduleUrl = _b.moduleUrl, prefix = _b.prefix, value = _b.value;\n\t          this.reference = reference;\n\t          this.name = name;\n\t          this.prefix = prefix;\n\t          this.moduleUrl = moduleUrl;\n\t          this.value = value;\n\t      }\n\t      Object.defineProperty(CompileIdentifierMetadata.prototype, \"identifier\", {\n\t          get: function () { return this; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return CompileIdentifierMetadata;\n\t  }());\n\t  var CompileDiDependencyMetadata = (function () {\n\t      function CompileDiDependencyMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, isAttribute = _b.isAttribute, isSelf = _b.isSelf, isHost = _b.isHost, isSkipSelf = _b.isSkipSelf, isOptional = _b.isOptional, isValue = _b.isValue, query = _b.query, viewQuery = _b.viewQuery, token = _b.token, value = _b.value;\n\t          this.isAttribute = !!isAttribute;\n\t          this.isSelf = !!isSelf;\n\t          this.isHost = !!isHost;\n\t          this.isSkipSelf = !!isSkipSelf;\n\t          this.isOptional = !!isOptional;\n\t          this.isValue = !!isValue;\n\t          this.query = query;\n\t          this.viewQuery = viewQuery;\n\t          this.token = token;\n\t          this.value = value;\n\t      }\n\t      return CompileDiDependencyMetadata;\n\t  }());\n\t  var CompileProviderMetadata = (function () {\n\t      function CompileProviderMetadata(_a) {\n\t          var token = _a.token, useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n\t          this.token = token;\n\t          this.useClass = useClass;\n\t          this.useValue = useValue;\n\t          this.useExisting = useExisting;\n\t          this.useFactory = useFactory;\n\t          this.deps = deps || null;\n\t          this.multi = !!multi;\n\t      }\n\t      return CompileProviderMetadata;\n\t  }());\n\t  var CompileFactoryMetadata = (function (_super) {\n\t      __extends$1(CompileFactoryMetadata, _super);\n\t      function CompileFactoryMetadata(_a) {\n\t          var reference = _a.reference, name = _a.name, moduleUrl = _a.moduleUrl, prefix = _a.prefix, diDeps = _a.diDeps, value = _a.value;\n\t          _super.call(this, { reference: reference, name: name, prefix: prefix, moduleUrl: moduleUrl, value: value });\n\t          this.diDeps = _normalizeArray(diDeps);\n\t      }\n\t      return CompileFactoryMetadata;\n\t  }(CompileIdentifierMetadata));\n\t  var CompileTokenMetadata = (function () {\n\t      function CompileTokenMetadata(_a) {\n\t          var value = _a.value, identifier = _a.identifier, identifierIsInstance = _a.identifierIsInstance;\n\t          this.value = value;\n\t          this.identifier = identifier;\n\t          this.identifierIsInstance = !!identifierIsInstance;\n\t      }\n\t      Object.defineProperty(CompileTokenMetadata.prototype, \"reference\", {\n\t          get: function () {\n\t              if (isPresent(this.identifier)) {\n\t                  return this.identifier.reference;\n\t              }\n\t              else {\n\t                  return this.value;\n\t              }\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(CompileTokenMetadata.prototype, \"name\", {\n\t          get: function () {\n\t              return isPresent(this.value) ? sanitizeIdentifier(this.value) : this.identifier.name;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return CompileTokenMetadata;\n\t  }());\n\t  /**\n\t   * Metadata regarding compilation of a type.\n\t   */\n\t  var CompileTypeMetadata = (function (_super) {\n\t      __extends$1(CompileTypeMetadata, _super);\n\t      function CompileTypeMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, reference = _b.reference, name = _b.name, moduleUrl = _b.moduleUrl, prefix = _b.prefix, isHost = _b.isHost, value = _b.value, diDeps = _b.diDeps, lifecycleHooks = _b.lifecycleHooks;\n\t          _super.call(this, { reference: reference, name: name, moduleUrl: moduleUrl, prefix: prefix, value: value });\n\t          this.isHost = !!isHost;\n\t          this.diDeps = _normalizeArray(diDeps);\n\t          this.lifecycleHooks = _normalizeArray(lifecycleHooks);\n\t      }\n\t      return CompileTypeMetadata;\n\t  }(CompileIdentifierMetadata));\n\t  var CompileQueryMetadata = (function () {\n\t      function CompileQueryMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, selectors = _b.selectors, descendants = _b.descendants, first = _b.first, propertyName = _b.propertyName, read = _b.read;\n\t          this.selectors = selectors;\n\t          this.descendants = !!descendants;\n\t          this.first = !!first;\n\t          this.propertyName = propertyName;\n\t          this.read = read;\n\t      }\n\t      return CompileQueryMetadata;\n\t  }());\n\t  /**\n\t   * Metadata about a stylesheet\n\t   */\n\t  var CompileStylesheetMetadata = (function () {\n\t      function CompileStylesheetMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n\t          this.moduleUrl = moduleUrl;\n\t          this.styles = _normalizeArray(styles);\n\t          this.styleUrls = _normalizeArray(styleUrls);\n\t      }\n\t      return CompileStylesheetMetadata;\n\t  }());\n\t  /**\n\t   * Metadata regarding compilation of a template.\n\t   */\n\t  var CompileTemplateMetadata = (function () {\n\t      function CompileTemplateMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, encapsulation = _b.encapsulation, template = _b.template, templateUrl = _b.templateUrl, styles = _b.styles, styleUrls = _b.styleUrls, externalStylesheets = _b.externalStylesheets, animations = _b.animations, ngContentSelectors = _b.ngContentSelectors, interpolation = _b.interpolation;\n\t          this.encapsulation = encapsulation;\n\t          this.template = template;\n\t          this.templateUrl = templateUrl;\n\t          this.styles = _normalizeArray(styles);\n\t          this.styleUrls = _normalizeArray(styleUrls);\n\t          this.externalStylesheets = _normalizeArray(externalStylesheets);\n\t          this.animations = animations ? ListWrapper.flatten(animations) : [];\n\t          this.ngContentSelectors = ngContentSelectors || [];\n\t          if (interpolation && interpolation.length != 2) {\n\t              throw new Error(\"'interpolation' should have a start and an end symbol.\");\n\t          }\n\t          this.interpolation = interpolation;\n\t      }\n\t      return CompileTemplateMetadata;\n\t  }());\n\t  /**\n\t   * Metadata regarding compilation of a directive.\n\t   */\n\t  var CompileDirectiveMetadata = (function () {\n\t      function CompileDirectiveMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, hostListeners = _b.hostListeners, hostProperties = _b.hostProperties, hostAttributes = _b.hostAttributes, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template;\n\t          this.type = type;\n\t          this.isComponent = isComponent;\n\t          this.selector = selector;\n\t          this.exportAs = exportAs;\n\t          this.changeDetection = changeDetection;\n\t          this.inputs = inputs;\n\t          this.outputs = outputs;\n\t          this.hostListeners = hostListeners;\n\t          this.hostProperties = hostProperties;\n\t          this.hostAttributes = hostAttributes;\n\t          this.providers = _normalizeArray(providers);\n\t          this.viewProviders = _normalizeArray(viewProviders);\n\t          this.queries = _normalizeArray(queries);\n\t          this.viewQueries = _normalizeArray(viewQueries);\n\t          this.entryComponents = _normalizeArray(entryComponents);\n\t          this.template = template;\n\t      }\n\t      CompileDirectiveMetadata.create = function (_a) {\n\t          var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, host = _b.host, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template;\n\t          var hostListeners = {};\n\t          var hostProperties = {};\n\t          var hostAttributes = {};\n\t          if (isPresent(host)) {\n\t              Object.keys(host).forEach(function (key) {\n\t                  var value = host[key];\n\t                  var matches = key.match(HOST_REG_EXP);\n\t                  if (matches === null) {\n\t                      hostAttributes[key] = value;\n\t                  }\n\t                  else if (isPresent(matches[1])) {\n\t                      hostProperties[matches[1]] = value;\n\t                  }\n\t                  else if (isPresent(matches[2])) {\n\t                      hostListeners[matches[2]] = value;\n\t                  }\n\t              });\n\t          }\n\t          var inputsMap = {};\n\t          if (isPresent(inputs)) {\n\t              inputs.forEach(function (bindConfig) {\n\t                  // canonical syntax: `dirProp: elProp`\n\t                  // if there is no `:`, use dirProp = elProp\n\t                  var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n\t                  inputsMap[parts[0]] = parts[1];\n\t              });\n\t          }\n\t          var outputsMap = {};\n\t          if (isPresent(outputs)) {\n\t              outputs.forEach(function (bindConfig) {\n\t                  // canonical syntax: `dirProp: elProp`\n\t                  // if there is no `:`, use dirProp = elProp\n\t                  var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n\t                  outputsMap[parts[0]] = parts[1];\n\t              });\n\t          }\n\t          return new CompileDirectiveMetadata({\n\t              type: type,\n\t              isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n\t              inputs: inputsMap,\n\t              outputs: outputsMap,\n\t              hostListeners: hostListeners,\n\t              hostProperties: hostProperties,\n\t              hostAttributes: hostAttributes,\n\t              providers: providers,\n\t              viewProviders: viewProviders,\n\t              queries: queries,\n\t              viewQueries: viewQueries,\n\t              entryComponents: entryComponents,\n\t              template: template,\n\t          });\n\t      };\n\t      Object.defineProperty(CompileDirectiveMetadata.prototype, \"identifier\", {\n\t          get: function () { return this.type; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return CompileDirectiveMetadata;\n\t  }());\n\t  /**\n\t   * Construct {@link CompileDirectiveMetadata} from {@link ComponentTypeMetadata} and a selector.\n\t   */\n\t  function createHostComponentMeta(compMeta) {\n\t      var template = CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();\n\t      return CompileDirectiveMetadata.create({\n\t          type: new CompileTypeMetadata({\n\t              reference: Object,\n\t              name: compMeta.type.name + \"_Host\",\n\t              moduleUrl: compMeta.type.moduleUrl,\n\t              isHost: true\n\t          }),\n\t          template: new CompileTemplateMetadata({\n\t              encapsulation: _angular_core.ViewEncapsulation.None,\n\t              template: template,\n\t              templateUrl: '',\n\t              styles: [],\n\t              styleUrls: [],\n\t              ngContentSelectors: [],\n\t              animations: []\n\t          }),\n\t          changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n\t          inputs: [],\n\t          outputs: [],\n\t          host: {},\n\t          isComponent: true,\n\t          selector: '*',\n\t          providers: [],\n\t          viewProviders: [],\n\t          queries: [],\n\t          viewQueries: []\n\t      });\n\t  }\n\t  var CompilePipeMetadata = (function () {\n\t      function CompilePipeMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, type = _b.type, name = _b.name, pure = _b.pure;\n\t          this.type = type;\n\t          this.name = name;\n\t          this.pure = !!pure;\n\t      }\n\t      Object.defineProperty(CompilePipeMetadata.prototype, \"identifier\", {\n\t          get: function () { return this.type; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return CompilePipeMetadata;\n\t  }());\n\t  /**\n\t   * Metadata regarding compilation of a module.\n\t   */\n\t  var CompileNgModuleMetadata = (function () {\n\t      function CompileNgModuleMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, type = _b.type, providers = _b.providers, declaredDirectives = _b.declaredDirectives, exportedDirectives = _b.exportedDirectives, declaredPipes = _b.declaredPipes, exportedPipes = _b.exportedPipes, entryComponents = _b.entryComponents, bootstrapComponents = _b.bootstrapComponents, importedModules = _b.importedModules, exportedModules = _b.exportedModules, schemas = _b.schemas, transitiveModule = _b.transitiveModule, id = _b.id;\n\t          this.type = type;\n\t          this.declaredDirectives = _normalizeArray(declaredDirectives);\n\t          this.exportedDirectives = _normalizeArray(exportedDirectives);\n\t          this.declaredPipes = _normalizeArray(declaredPipes);\n\t          this.exportedPipes = _normalizeArray(exportedPipes);\n\t          this.providers = _normalizeArray(providers);\n\t          this.entryComponents = _normalizeArray(entryComponents);\n\t          this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n\t          this.importedModules = _normalizeArray(importedModules);\n\t          this.exportedModules = _normalizeArray(exportedModules);\n\t          this.schemas = _normalizeArray(schemas);\n\t          this.id = id;\n\t          this.transitiveModule = transitiveModule;\n\t      }\n\t      Object.defineProperty(CompileNgModuleMetadata.prototype, \"identifier\", {\n\t          get: function () { return this.type; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return CompileNgModuleMetadata;\n\t  }());\n\t  var TransitiveCompileNgModuleMetadata = (function () {\n\t      function TransitiveCompileNgModuleMetadata(modules, providers, entryComponents, directives, pipes) {\n\t          var _this = this;\n\t          this.modules = modules;\n\t          this.providers = providers;\n\t          this.entryComponents = entryComponents;\n\t          this.directives = directives;\n\t          this.pipes = pipes;\n\t          this.directivesSet = new Set();\n\t          this.pipesSet = new Set();\n\t          directives.forEach(function (dir) { return _this.directivesSet.add(dir.type.reference); });\n\t          pipes.forEach(function (pipe) { return _this.pipesSet.add(pipe.type.reference); });\n\t      }\n\t      return TransitiveCompileNgModuleMetadata;\n\t  }());\n\t  function removeIdentifierDuplicates(items) {\n\t      var map = new Map();\n\t      items.forEach(function (item) {\n\t          if (!map.get(item.identifier.reference)) {\n\t              map.set(item.identifier.reference, item);\n\t          }\n\t      });\n\t      return MapWrapper.values(map);\n\t  }\n\t  function _normalizeArray(obj) {\n\t      return obj || [];\n\t  }\n\t  function isStaticSymbol(value) {\n\t      return typeof value === 'object' && value !== null && value['name'] && value['filePath'];\n\t  }\n\t  var ProviderMeta = (function () {\n\t      function ProviderMeta(token, _a) {\n\t          var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n\t          this.token = token;\n\t          this.useClass = useClass;\n\t          this.useValue = useValue;\n\t          this.useExisting = useExisting;\n\t          this.useFactory = useFactory;\n\t          this.dependencies = deps;\n\t          this.multi = !!multi;\n\t      }\n\t      return ProviderMeta;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var $EOF = 0;\n\t  var $TAB = 9;\n\t  var $LF = 10;\n\t  var $VTAB = 11;\n\t  var $FF = 12;\n\t  var $CR = 13;\n\t  var $SPACE = 32;\n\t  var $BANG = 33;\n\t  var $DQ = 34;\n\t  var $HASH = 35;\n\t  var $$ = 36;\n\t  var $PERCENT = 37;\n\t  var $AMPERSAND = 38;\n\t  var $SQ = 39;\n\t  var $LPAREN = 40;\n\t  var $RPAREN = 41;\n\t  var $STAR = 42;\n\t  var $PLUS = 43;\n\t  var $COMMA = 44;\n\t  var $MINUS = 45;\n\t  var $PERIOD = 46;\n\t  var $SLASH = 47;\n\t  var $COLON = 58;\n\t  var $SEMICOLON = 59;\n\t  var $LT = 60;\n\t  var $EQ = 61;\n\t  var $GT = 62;\n\t  var $QUESTION = 63;\n\t  var $0 = 48;\n\t  var $9 = 57;\n\t  var $A = 65;\n\t  var $E = 69;\n\t  var $F = 70;\n\t  var $X = 88;\n\t  var $Z = 90;\n\t  var $LBRACKET = 91;\n\t  var $BACKSLASH = 92;\n\t  var $RBRACKET = 93;\n\t  var $CARET = 94;\n\t  var $_ = 95;\n\t  var $a = 97;\n\t  var $e = 101;\n\t  var $f = 102;\n\t  var $n = 110;\n\t  var $r = 114;\n\t  var $t = 116;\n\t  var $u = 117;\n\t  var $v = 118;\n\t  var $x = 120;\n\t  var $z = 122;\n\t  var $LBRACE = 123;\n\t  var $BAR = 124;\n\t  var $RBRACE = 125;\n\t  var $NBSP = 160;\n\t  var $BT = 96;\n\t  function isWhitespace(code) {\n\t      return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n\t  }\n\t  function isDigit(code) {\n\t      return $0 <= code && code <= $9;\n\t  }\n\t  function isAsciiLetter(code) {\n\t      return code >= $a && code <= $z || code >= $A && code <= $Z;\n\t  }\n\t  function isAsciiHexDigit(code) {\n\t      return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n\t  }\n\t\n\t  function assertArrayOfStrings(identifier, value) {\n\t      if (!_angular_core.isDevMode() || isBlank(value)) {\n\t          return;\n\t      }\n\t      if (!Array.isArray(value)) {\n\t          throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n\t      }\n\t      for (var i = 0; i < value.length; i += 1) {\n\t          if (typeof value[i] !== 'string') {\n\t              throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n\t          }\n\t      }\n\t  }\n\t  var INTERPOLATION_BLACKLIST_REGEXPS = [\n\t      /^\\s*$/,\n\t      /[<>]/,\n\t      /^[{}]$/,\n\t      /&(#|[a-z])/i,\n\t      /^\\/\\//,\n\t  ];\n\t  function assertInterpolationSymbols(identifier, value) {\n\t      if (isPresent(value) && !(Array.isArray(value) && value.length == 2)) {\n\t          throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n\t      }\n\t      else if (_angular_core.isDevMode() && !isBlank(value)) {\n\t          var start_1 = value[0];\n\t          var end_1 = value[1];\n\t          // black list checking\n\t          INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n\t              if (regexp.test(start_1) || regexp.test(end_1)) {\n\t                  throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n\t              }\n\t          });\n\t      }\n\t  }\n\t\n\t  var InterpolationConfig = (function () {\n\t      function InterpolationConfig(start, end) {\n\t          this.start = start;\n\t          this.end = end;\n\t      }\n\t      InterpolationConfig.fromArray = function (markers) {\n\t          if (!markers) {\n\t              return DEFAULT_INTERPOLATION_CONFIG;\n\t          }\n\t          assertInterpolationSymbols('interpolation', markers);\n\t          return new InterpolationConfig(markers[0], markers[1]);\n\t      };\n\t      ;\n\t      return InterpolationConfig;\n\t  }());\n\t  var DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$2 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var ParserError = (function () {\n\t      function ParserError(message, input, errLocation, ctxLocation) {\n\t          this.input = input;\n\t          this.errLocation = errLocation;\n\t          this.ctxLocation = ctxLocation;\n\t          this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n\t      }\n\t      return ParserError;\n\t  }());\n\t  var ParseSpan = (function () {\n\t      function ParseSpan(start, end) {\n\t          this.start = start;\n\t          this.end = end;\n\t      }\n\t      return ParseSpan;\n\t  }());\n\t  var AST = (function () {\n\t      function AST(span) {\n\t          this.span = span;\n\t      }\n\t      AST.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return null;\n\t      };\n\t      AST.prototype.toString = function () { return 'AST'; };\n\t      return AST;\n\t  }());\n\t  /**\n\t   * Represents a quoted expression of the form:\n\t   *\n\t   * quote = prefix `:` uninterpretedExpression\n\t   * prefix = identifier\n\t   * uninterpretedExpression = arbitrary string\n\t   *\n\t   * A quoted expression is meant to be pre-processed by an AST transformer that\n\t   * converts it into another AST that no longer contains quoted expressions.\n\t   * It is meant to allow third-party developers to extend Angular template\n\t   * expression language. The `uninterpretedExpression` part of the quote is\n\t   * therefore not interpreted by the Angular's own expression parser.\n\t   */\n\t  var Quote = (function (_super) {\n\t      __extends$2(Quote, _super);\n\t      function Quote(span, prefix, uninterpretedExpression, location) {\n\t          _super.call(this, span);\n\t          this.prefix = prefix;\n\t          this.uninterpretedExpression = uninterpretedExpression;\n\t          this.location = location;\n\t      }\n\t      Quote.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitQuote(this, context);\n\t      };\n\t      Quote.prototype.toString = function () { return 'Quote'; };\n\t      return Quote;\n\t  }(AST));\n\t  var EmptyExpr = (function (_super) {\n\t      __extends$2(EmptyExpr, _super);\n\t      function EmptyExpr() {\n\t          _super.apply(this, arguments);\n\t      }\n\t      EmptyExpr.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          // do nothing\n\t      };\n\t      return EmptyExpr;\n\t  }(AST));\n\t  var ImplicitReceiver = (function (_super) {\n\t      __extends$2(ImplicitReceiver, _super);\n\t      function ImplicitReceiver() {\n\t          _super.apply(this, arguments);\n\t      }\n\t      ImplicitReceiver.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitImplicitReceiver(this, context);\n\t      };\n\t      return ImplicitReceiver;\n\t  }(AST));\n\t  /**\n\t   * Multiple expressions separated by a semicolon.\n\t   */\n\t  var Chain = (function (_super) {\n\t      __extends$2(Chain, _super);\n\t      function Chain(span, expressions) {\n\t          _super.call(this, span);\n\t          this.expressions = expressions;\n\t      }\n\t      Chain.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitChain(this, context);\n\t      };\n\t      return Chain;\n\t  }(AST));\n\t  var Conditional = (function (_super) {\n\t      __extends$2(Conditional, _super);\n\t      function Conditional(span, condition, trueExp, falseExp) {\n\t          _super.call(this, span);\n\t          this.condition = condition;\n\t          this.trueExp = trueExp;\n\t          this.falseExp = falseExp;\n\t      }\n\t      Conditional.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitConditional(this, context);\n\t      };\n\t      return Conditional;\n\t  }(AST));\n\t  var PropertyRead = (function (_super) {\n\t      __extends$2(PropertyRead, _super);\n\t      function PropertyRead(span, receiver, name) {\n\t          _super.call(this, span);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t      }\n\t      PropertyRead.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitPropertyRead(this, context);\n\t      };\n\t      return PropertyRead;\n\t  }(AST));\n\t  var PropertyWrite = (function (_super) {\n\t      __extends$2(PropertyWrite, _super);\n\t      function PropertyWrite(span, receiver, name, value) {\n\t          _super.call(this, span);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t          this.value = value;\n\t      }\n\t      PropertyWrite.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitPropertyWrite(this, context);\n\t      };\n\t      return PropertyWrite;\n\t  }(AST));\n\t  var SafePropertyRead = (function (_super) {\n\t      __extends$2(SafePropertyRead, _super);\n\t      function SafePropertyRead(span, receiver, name) {\n\t          _super.call(this, span);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t      }\n\t      SafePropertyRead.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitSafePropertyRead(this, context);\n\t      };\n\t      return SafePropertyRead;\n\t  }(AST));\n\t  var KeyedRead = (function (_super) {\n\t      __extends$2(KeyedRead, _super);\n\t      function KeyedRead(span, obj, key) {\n\t          _super.call(this, span);\n\t          this.obj = obj;\n\t          this.key = key;\n\t      }\n\t      KeyedRead.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitKeyedRead(this, context);\n\t      };\n\t      return KeyedRead;\n\t  }(AST));\n\t  var KeyedWrite = (function (_super) {\n\t      __extends$2(KeyedWrite, _super);\n\t      function KeyedWrite(span, obj, key, value) {\n\t          _super.call(this, span);\n\t          this.obj = obj;\n\t          this.key = key;\n\t          this.value = value;\n\t      }\n\t      KeyedWrite.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitKeyedWrite(this, context);\n\t      };\n\t      return KeyedWrite;\n\t  }(AST));\n\t  var BindingPipe = (function (_super) {\n\t      __extends$2(BindingPipe, _super);\n\t      function BindingPipe(span, exp, name, args) {\n\t          _super.call(this, span);\n\t          this.exp = exp;\n\t          this.name = name;\n\t          this.args = args;\n\t      }\n\t      BindingPipe.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitPipe(this, context);\n\t      };\n\t      return BindingPipe;\n\t  }(AST));\n\t  var LiteralPrimitive = (function (_super) {\n\t      __extends$2(LiteralPrimitive, _super);\n\t      function LiteralPrimitive(span, value) {\n\t          _super.call(this, span);\n\t          this.value = value;\n\t      }\n\t      LiteralPrimitive.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitLiteralPrimitive(this, context);\n\t      };\n\t      return LiteralPrimitive;\n\t  }(AST));\n\t  var LiteralArray = (function (_super) {\n\t      __extends$2(LiteralArray, _super);\n\t      function LiteralArray(span, expressions) {\n\t          _super.call(this, span);\n\t          this.expressions = expressions;\n\t      }\n\t      LiteralArray.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitLiteralArray(this, context);\n\t      };\n\t      return LiteralArray;\n\t  }(AST));\n\t  var LiteralMap = (function (_super) {\n\t      __extends$2(LiteralMap, _super);\n\t      function LiteralMap(span, keys, values) {\n\t          _super.call(this, span);\n\t          this.keys = keys;\n\t          this.values = values;\n\t      }\n\t      LiteralMap.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitLiteralMap(this, context);\n\t      };\n\t      return LiteralMap;\n\t  }(AST));\n\t  var Interpolation = (function (_super) {\n\t      __extends$2(Interpolation, _super);\n\t      function Interpolation(span, strings, expressions) {\n\t          _super.call(this, span);\n\t          this.strings = strings;\n\t          this.expressions = expressions;\n\t      }\n\t      Interpolation.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitInterpolation(this, context);\n\t      };\n\t      return Interpolation;\n\t  }(AST));\n\t  var Binary = (function (_super) {\n\t      __extends$2(Binary, _super);\n\t      function Binary(span, operation, left, right) {\n\t          _super.call(this, span);\n\t          this.operation = operation;\n\t          this.left = left;\n\t          this.right = right;\n\t      }\n\t      Binary.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitBinary(this, context);\n\t      };\n\t      return Binary;\n\t  }(AST));\n\t  var PrefixNot = (function (_super) {\n\t      __extends$2(PrefixNot, _super);\n\t      function PrefixNot(span, expression) {\n\t          _super.call(this, span);\n\t          this.expression = expression;\n\t      }\n\t      PrefixNot.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitPrefixNot(this, context);\n\t      };\n\t      return PrefixNot;\n\t  }(AST));\n\t  var MethodCall = (function (_super) {\n\t      __extends$2(MethodCall, _super);\n\t      function MethodCall(span, receiver, name, args) {\n\t          _super.call(this, span);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t          this.args = args;\n\t      }\n\t      MethodCall.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitMethodCall(this, context);\n\t      };\n\t      return MethodCall;\n\t  }(AST));\n\t  var SafeMethodCall = (function (_super) {\n\t      __extends$2(SafeMethodCall, _super);\n\t      function SafeMethodCall(span, receiver, name, args) {\n\t          _super.call(this, span);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t          this.args = args;\n\t      }\n\t      SafeMethodCall.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitSafeMethodCall(this, context);\n\t      };\n\t      return SafeMethodCall;\n\t  }(AST));\n\t  var FunctionCall = (function (_super) {\n\t      __extends$2(FunctionCall, _super);\n\t      function FunctionCall(span, target, args) {\n\t          _super.call(this, span);\n\t          this.target = target;\n\t          this.args = args;\n\t      }\n\t      FunctionCall.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitFunctionCall(this, context);\n\t      };\n\t      return FunctionCall;\n\t  }(AST));\n\t  var ASTWithSource = (function (_super) {\n\t      __extends$2(ASTWithSource, _super);\n\t      function ASTWithSource(ast, source, location, errors) {\n\t          _super.call(this, new ParseSpan(0, isBlank(source) ? 0 : source.length));\n\t          this.ast = ast;\n\t          this.source = source;\n\t          this.location = location;\n\t          this.errors = errors;\n\t      }\n\t      ASTWithSource.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return this.ast.visit(visitor, context);\n\t      };\n\t      ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n\t      return ASTWithSource;\n\t  }(AST));\n\t  var TemplateBinding = (function () {\n\t      function TemplateBinding(key, keyIsVar, name, expression) {\n\t          this.key = key;\n\t          this.keyIsVar = keyIsVar;\n\t          this.name = name;\n\t          this.expression = expression;\n\t      }\n\t      return TemplateBinding;\n\t  }());\n\t  var RecursiveAstVisitor = (function () {\n\t      function RecursiveAstVisitor() {\n\t      }\n\t      RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n\t          ast.left.visit(this);\n\t          ast.right.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n\t      RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n\t          ast.condition.visit(this);\n\t          ast.trueExp.visit(this);\n\t          ast.falseExp.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n\t          ast.exp.visit(this);\n\t          this.visitAll(ast.args, context);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n\t          ast.target.visit(this);\n\t          this.visitAll(ast.args, context);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n\t      RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n\t          return this.visitAll(ast.expressions, context);\n\t      };\n\t      RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n\t          ast.obj.visit(this);\n\t          ast.key.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n\t          ast.obj.visit(this);\n\t          ast.key.visit(this);\n\t          ast.value.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n\t          return this.visitAll(ast.expressions, context);\n\t      };\n\t      RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n\t      RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n\t      RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n\t          ast.receiver.visit(this);\n\t          return this.visitAll(ast.args, context);\n\t      };\n\t      RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n\t          ast.expression.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n\t          ast.receiver.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n\t          ast.receiver.visit(this);\n\t          ast.value.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n\t          ast.receiver.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n\t          ast.receiver.visit(this);\n\t          return this.visitAll(ast.args, context);\n\t      };\n\t      RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n\t          var _this = this;\n\t          asts.forEach(function (ast) { return ast.visit(_this, context); });\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n\t      return RecursiveAstVisitor;\n\t  }());\n\t\n\t  exports.TokenType;\n\t  (function (TokenType) {\n\t      TokenType[TokenType[\"Character\"] = 0] = \"Character\";\n\t      TokenType[TokenType[\"Identifier\"] = 1] = \"Identifier\";\n\t      TokenType[TokenType[\"Keyword\"] = 2] = \"Keyword\";\n\t      TokenType[TokenType[\"String\"] = 3] = \"String\";\n\t      TokenType[TokenType[\"Operator\"] = 4] = \"Operator\";\n\t      TokenType[TokenType[\"Number\"] = 5] = \"Number\";\n\t      TokenType[TokenType[\"Error\"] = 6] = \"Error\";\n\t  })(exports.TokenType || (exports.TokenType = {}));\n\t  var KEYWORDS = ['var', 'let', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\n\t  var Lexer = (function () {\n\t      function Lexer() {\n\t      }\n\t      Lexer.prototype.tokenize = function (text) {\n\t          var scanner = new _Scanner(text);\n\t          var tokens = [];\n\t          var token = scanner.scanToken();\n\t          while (token != null) {\n\t              tokens.push(token);\n\t              token = scanner.scanToken();\n\t          }\n\t          return tokens;\n\t      };\n\t      Lexer.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      Lexer.ctorParameters = [];\n\t      return Lexer;\n\t  }());\n\t  var Token = (function () {\n\t      function Token(index, type, numValue, strValue) {\n\t          this.index = index;\n\t          this.type = type;\n\t          this.numValue = numValue;\n\t          this.strValue = strValue;\n\t      }\n\t      Token.prototype.isCharacter = function (code) {\n\t          return this.type == exports.TokenType.Character && this.numValue == code;\n\t      };\n\t      Token.prototype.isNumber = function () { return this.type == exports.TokenType.Number; };\n\t      Token.prototype.isString = function () { return this.type == exports.TokenType.String; };\n\t      Token.prototype.isOperator = function (operater) {\n\t          return this.type == exports.TokenType.Operator && this.strValue == operater;\n\t      };\n\t      Token.prototype.isIdentifier = function () { return this.type == exports.TokenType.Identifier; };\n\t      Token.prototype.isKeyword = function () { return this.type == exports.TokenType.Keyword; };\n\t      Token.prototype.isKeywordLet = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'let'; };\n\t      Token.prototype.isKeywordNull = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'null'; };\n\t      Token.prototype.isKeywordUndefined = function () {\n\t          return this.type == exports.TokenType.Keyword && this.strValue == 'undefined';\n\t      };\n\t      Token.prototype.isKeywordTrue = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'true'; };\n\t      Token.prototype.isKeywordFalse = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'false'; };\n\t      Token.prototype.isKeywordThis = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'this'; };\n\t      Token.prototype.isError = function () { return this.type == exports.TokenType.Error; };\n\t      Token.prototype.toNumber = function () { return this.type == exports.TokenType.Number ? this.numValue : -1; };\n\t      Token.prototype.toString = function () {\n\t          switch (this.type) {\n\t              case exports.TokenType.Character:\n\t              case exports.TokenType.Identifier:\n\t              case exports.TokenType.Keyword:\n\t              case exports.TokenType.Operator:\n\t              case exports.TokenType.String:\n\t              case exports.TokenType.Error:\n\t                  return this.strValue;\n\t              case exports.TokenType.Number:\n\t                  return this.numValue.toString();\n\t              default:\n\t                  return null;\n\t          }\n\t      };\n\t      return Token;\n\t  }());\n\t  function newCharacterToken(index, code) {\n\t      return new Token(index, exports.TokenType.Character, code, String.fromCharCode(code));\n\t  }\n\t  function newIdentifierToken(index, text) {\n\t      return new Token(index, exports.TokenType.Identifier, 0, text);\n\t  }\n\t  function newKeywordToken(index, text) {\n\t      return new Token(index, exports.TokenType.Keyword, 0, text);\n\t  }\n\t  function newOperatorToken(index, text) {\n\t      return new Token(index, exports.TokenType.Operator, 0, text);\n\t  }\n\t  function newStringToken(index, text) {\n\t      return new Token(index, exports.TokenType.String, 0, text);\n\t  }\n\t  function newNumberToken(index, n) {\n\t      return new Token(index, exports.TokenType.Number, n, '');\n\t  }\n\t  function newErrorToken(index, message) {\n\t      return new Token(index, exports.TokenType.Error, 0, message);\n\t  }\n\t  var EOF = new Token(-1, exports.TokenType.Character, 0, '');\n\t  var _Scanner = (function () {\n\t      function _Scanner(input) {\n\t          this.input = input;\n\t          this.peek = 0;\n\t          this.index = -1;\n\t          this.length = input.length;\n\t          this.advance();\n\t      }\n\t      _Scanner.prototype.advance = function () {\n\t          this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n\t      };\n\t      _Scanner.prototype.scanToken = function () {\n\t          var input = this.input, length = this.length, peek = this.peek, index = this.index;\n\t          // Skip whitespace.\n\t          while (peek <= $SPACE) {\n\t              if (++index >= length) {\n\t                  peek = $EOF;\n\t                  break;\n\t              }\n\t              else {\n\t                  peek = input.charCodeAt(index);\n\t              }\n\t          }\n\t          this.peek = peek;\n\t          this.index = index;\n\t          if (index >= length) {\n\t              return null;\n\t          }\n\t          // Handle identifiers and numbers.\n\t          if (isIdentifierStart(peek))\n\t              return this.scanIdentifier();\n\t          if (isDigit(peek))\n\t              return this.scanNumber(index);\n\t          var start = index;\n\t          switch (peek) {\n\t              case $PERIOD:\n\t                  this.advance();\n\t                  return isDigit(this.peek) ? this.scanNumber(start) :\n\t                      newCharacterToken(start, $PERIOD);\n\t              case $LPAREN:\n\t              case $RPAREN:\n\t              case $LBRACE:\n\t              case $RBRACE:\n\t              case $LBRACKET:\n\t              case $RBRACKET:\n\t              case $COMMA:\n\t              case $COLON:\n\t              case $SEMICOLON:\n\t                  return this.scanCharacter(start, peek);\n\t              case $SQ:\n\t              case $DQ:\n\t                  return this.scanString();\n\t              case $HASH:\n\t              case $PLUS:\n\t              case $MINUS:\n\t              case $STAR:\n\t              case $SLASH:\n\t              case $PERCENT:\n\t              case $CARET:\n\t                  return this.scanOperator(start, String.fromCharCode(peek));\n\t              case $QUESTION:\n\t                  return this.scanComplexOperator(start, '?', $PERIOD, '.');\n\t              case $LT:\n\t              case $GT:\n\t                  return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n\t              case $BANG:\n\t              case $EQ:\n\t                  return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n\t              case $AMPERSAND:\n\t                  return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n\t              case $BAR:\n\t                  return this.scanComplexOperator(start, '|', $BAR, '|');\n\t              case $NBSP:\n\t                  while (isWhitespace(this.peek))\n\t                      this.advance();\n\t                  return this.scanToken();\n\t          }\n\t          this.advance();\n\t          return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n\t      };\n\t      _Scanner.prototype.scanCharacter = function (start, code) {\n\t          this.advance();\n\t          return newCharacterToken(start, code);\n\t      };\n\t      _Scanner.prototype.scanOperator = function (start, str) {\n\t          this.advance();\n\t          return newOperatorToken(start, str);\n\t      };\n\t      /**\n\t       * Tokenize a 2/3 char long operator\n\t       *\n\t       * @param start start index in the expression\n\t       * @param one first symbol (always part of the operator)\n\t       * @param twoCode code point for the second symbol\n\t       * @param two second symbol (part of the operator when the second code point matches)\n\t       * @param threeCode code point for the third symbol\n\t       * @param three third symbol (part of the operator when provided and matches source expression)\n\t       * @returns {Token}\n\t       */\n\t      _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n\t          this.advance();\n\t          var str = one;\n\t          if (this.peek == twoCode) {\n\t              this.advance();\n\t              str += two;\n\t          }\n\t          if (isPresent(threeCode) && this.peek == threeCode) {\n\t              this.advance();\n\t              str += three;\n\t          }\n\t          return newOperatorToken(start, str);\n\t      };\n\t      _Scanner.prototype.scanIdentifier = function () {\n\t          var start = this.index;\n\t          this.advance();\n\t          while (isIdentifierPart(this.peek))\n\t              this.advance();\n\t          var str = this.input.substring(start, this.index);\n\t          return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n\t              newIdentifierToken(start, str);\n\t      };\n\t      _Scanner.prototype.scanNumber = function (start) {\n\t          var simple = (this.index === start);\n\t          this.advance(); // Skip initial digit.\n\t          while (true) {\n\t              if (isDigit(this.peek)) {\n\t              }\n\t              else if (this.peek == $PERIOD) {\n\t                  simple = false;\n\t              }\n\t              else if (isExponentStart(this.peek)) {\n\t                  this.advance();\n\t                  if (isExponentSign(this.peek))\n\t                      this.advance();\n\t                  if (!isDigit(this.peek))\n\t                      return this.error('Invalid exponent', -1);\n\t                  simple = false;\n\t              }\n\t              else {\n\t                  break;\n\t              }\n\t              this.advance();\n\t          }\n\t          var str = this.input.substring(start, this.index);\n\t          var value = simple ? NumberWrapper.parseIntAutoRadix(str) : parseFloat(str);\n\t          return newNumberToken(start, value);\n\t      };\n\t      _Scanner.prototype.scanString = function () {\n\t          var start = this.index;\n\t          var quote = this.peek;\n\t          this.advance(); // Skip initial quote.\n\t          var buffer = '';\n\t          var marker = this.index;\n\t          var input = this.input;\n\t          while (this.peek != quote) {\n\t              if (this.peek == $BACKSLASH) {\n\t                  buffer += input.substring(marker, this.index);\n\t                  this.advance();\n\t                  var unescapedCode = void 0;\n\t                  if (this.peek == $u) {\n\t                      // 4 character hex code for unicode character.\n\t                      var hex = input.substring(this.index + 1, this.index + 5);\n\t                      try {\n\t                          unescapedCode = NumberWrapper.parseInt(hex, 16);\n\t                      }\n\t                      catch (e) {\n\t                          return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n\t                      }\n\t                      for (var i = 0; i < 5; i++) {\n\t                          this.advance();\n\t                      }\n\t                  }\n\t                  else {\n\t                      unescapedCode = unescape(this.peek);\n\t                      this.advance();\n\t                  }\n\t                  buffer += String.fromCharCode(unescapedCode);\n\t                  marker = this.index;\n\t              }\n\t              else if (this.peek == $EOF) {\n\t                  return this.error('Unterminated quote', 0);\n\t              }\n\t              else {\n\t                  this.advance();\n\t              }\n\t          }\n\t          var last = input.substring(marker, this.index);\n\t          this.advance(); // Skip terminating quote.\n\t          return newStringToken(start, buffer + last);\n\t      };\n\t      _Scanner.prototype.error = function (message, offset) {\n\t          var position = this.index + offset;\n\t          return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n\t      };\n\t      return _Scanner;\n\t  }());\n\t  function isIdentifierStart(code) {\n\t      return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n\t          (code == $_) || (code == $$);\n\t  }\n\t  function isIdentifier(input) {\n\t      if (input.length == 0)\n\t          return false;\n\t      var scanner = new _Scanner(input);\n\t      if (!isIdentifierStart(scanner.peek))\n\t          return false;\n\t      scanner.advance();\n\t      while (scanner.peek !== $EOF) {\n\t          if (!isIdentifierPart(scanner.peek))\n\t              return false;\n\t          scanner.advance();\n\t      }\n\t      return true;\n\t  }\n\t  function isIdentifierPart(code) {\n\t      return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n\t          (code == $$);\n\t  }\n\t  function isExponentStart(code) {\n\t      return code == $e || code == $E;\n\t  }\n\t  function isExponentSign(code) {\n\t      return code == $MINUS || code == $PLUS;\n\t  }\n\t  function isQuote(code) {\n\t      return code === $SQ || code === $DQ || code === $BT;\n\t  }\n\t  function unescape(code) {\n\t      switch (code) {\n\t          case $n:\n\t              return $LF;\n\t          case $f:\n\t              return $FF;\n\t          case $r:\n\t              return $CR;\n\t          case $t:\n\t              return $TAB;\n\t          case $v:\n\t              return $VTAB;\n\t          default:\n\t              return code;\n\t      }\n\t  }\n\t\n\t  var SplitInterpolation = (function () {\n\t      function SplitInterpolation(strings, expressions, offsets) {\n\t          this.strings = strings;\n\t          this.expressions = expressions;\n\t          this.offsets = offsets;\n\t      }\n\t      return SplitInterpolation;\n\t  }());\n\t  var TemplateBindingParseResult = (function () {\n\t      function TemplateBindingParseResult(templateBindings, warnings, errors) {\n\t          this.templateBindings = templateBindings;\n\t          this.warnings = warnings;\n\t          this.errors = errors;\n\t      }\n\t      return TemplateBindingParseResult;\n\t  }());\n\t  function _createInterpolateRegExp(config) {\n\t      var pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n\t      return new RegExp(pattern, 'g');\n\t  }\n\t  var Parser = (function () {\n\t      function Parser(_lexer) {\n\t          this._lexer = _lexer;\n\t          this.errors = [];\n\t      }\n\t      Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          this._checkNoInterpolation(input, location, interpolationConfig);\n\t          var sourceToLex = this._stripComments(input);\n\t          var tokens = this._lexer.tokenize(this._stripComments(input));\n\t          var ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n\t              .parseChain();\n\t          return new ASTWithSource(ast, input, location, this.errors);\n\t      };\n\t      Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          var ast = this._parseBindingAst(input, location, interpolationConfig);\n\t          return new ASTWithSource(ast, input, location, this.errors);\n\t      };\n\t      Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          var ast = this._parseBindingAst(input, location, interpolationConfig);\n\t          var errors = SimpleExpressionChecker.check(ast);\n\t          if (errors.length > 0) {\n\t              this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n\t          }\n\t          return new ASTWithSource(ast, input, location, this.errors);\n\t      };\n\t      Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n\t          this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n\t      };\n\t      Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n\t          // Quotes expressions use 3rd-party expression language. We don't want to use\n\t          // our lexer or parser for that, so we check for that ahead of time.\n\t          var quote = this._parseQuote(input, location);\n\t          if (isPresent(quote)) {\n\t              return quote;\n\t          }\n\t          this._checkNoInterpolation(input, location, interpolationConfig);\n\t          var sourceToLex = this._stripComments(input);\n\t          var tokens = this._lexer.tokenize(sourceToLex);\n\t          return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n\t              .parseChain();\n\t      };\n\t      Parser.prototype._parseQuote = function (input, location) {\n\t          if (isBlank(input))\n\t              return null;\n\t          var prefixSeparatorIndex = input.indexOf(':');\n\t          if (prefixSeparatorIndex == -1)\n\t              return null;\n\t          var prefix = input.substring(0, prefixSeparatorIndex).trim();\n\t          if (!isIdentifier(prefix))\n\t              return null;\n\t          var uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n\t          return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n\t      };\n\t      Parser.prototype.parseTemplateBindings = function (input, location) {\n\t          var tokens = this._lexer.tokenize(input);\n\t          return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n\t              .parseTemplateBindings();\n\t      };\n\t      Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          var split = this.splitInterpolation(input, location, interpolationConfig);\n\t          if (split == null)\n\t              return null;\n\t          var expressions = [];\n\t          for (var i = 0; i < split.expressions.length; ++i) {\n\t              var expressionText = split.expressions[i];\n\t              var sourceToLex = this._stripComments(expressionText);\n\t              var tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));\n\t              var ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n\t                  .parseChain();\n\t              expressions.push(ast);\n\t          }\n\t          return new ASTWithSource(new Interpolation(new ParseSpan(0, isBlank(input) ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n\t      };\n\t      Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          var regexp = _createInterpolateRegExp(interpolationConfig);\n\t          var parts = input.split(regexp);\n\t          if (parts.length <= 1) {\n\t              return null;\n\t          }\n\t          var strings = [];\n\t          var expressions = [];\n\t          var offsets = [];\n\t          var offset = 0;\n\t          for (var i = 0; i < parts.length; i++) {\n\t              var part = parts[i];\n\t              if (i % 2 === 0) {\n\t                  // fixed string\n\t                  strings.push(part);\n\t                  offset += part.length;\n\t              }\n\t              else if (part.trim().length > 0) {\n\t                  offset += interpolationConfig.start.length;\n\t                  expressions.push(part);\n\t                  offsets.push(offset);\n\t                  offset += part.length + interpolationConfig.end.length;\n\t              }\n\t              else {\n\t                  this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n\t              }\n\t          }\n\t          return new SplitInterpolation(strings, expressions, offsets);\n\t      };\n\t      Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n\t          return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, isBlank(input) ? 0 : input.length), input), input, location, this.errors);\n\t      };\n\t      Parser.prototype._stripComments = function (input) {\n\t          var i = this._commentStart(input);\n\t          return isPresent(i) ? input.substring(0, i).trim() : input;\n\t      };\n\t      Parser.prototype._commentStart = function (input) {\n\t          var outerQuote = null;\n\t          for (var i = 0; i < input.length - 1; i++) {\n\t              var char = input.charCodeAt(i);\n\t              var nextChar = input.charCodeAt(i + 1);\n\t              if (char === $SLASH && nextChar == $SLASH && isBlank(outerQuote))\n\t                  return i;\n\t              if (outerQuote === char) {\n\t                  outerQuote = null;\n\t              }\n\t              else if (isBlank(outerQuote) && isQuote(char)) {\n\t                  outerQuote = char;\n\t              }\n\t          }\n\t          return null;\n\t      };\n\t      Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n\t          var regexp = _createInterpolateRegExp(interpolationConfig);\n\t          var parts = input.split(regexp);\n\t          if (parts.length > 1) {\n\t              this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n\t          }\n\t      };\n\t      Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n\t          var errLocation = '';\n\t          for (var j = 0; j < partInErrIdx; j++) {\n\t              errLocation += j % 2 === 0 ?\n\t                  parts[j] :\n\t                  \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n\t          }\n\t          return errLocation.length;\n\t      };\n\t      Parser.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      Parser.ctorParameters = [\n\t          { type: Lexer, },\n\t      ];\n\t      return Parser;\n\t  }());\n\t  var _ParseAST = (function () {\n\t      function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n\t          this.input = input;\n\t          this.location = location;\n\t          this.tokens = tokens;\n\t          this.inputLength = inputLength;\n\t          this.parseAction = parseAction;\n\t          this.errors = errors;\n\t          this.offset = offset;\n\t          this.rparensExpected = 0;\n\t          this.rbracketsExpected = 0;\n\t          this.rbracesExpected = 0;\n\t          this.index = 0;\n\t      }\n\t      _ParseAST.prototype.peek = function (offset) {\n\t          var i = this.index + offset;\n\t          return i < this.tokens.length ? this.tokens[i] : EOF;\n\t      };\n\t      Object.defineProperty(_ParseAST.prototype, \"next\", {\n\t          get: function () { return this.peek(0); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n\t          get: function () {\n\t              return (this.index < this.tokens.length) ? this.next.index + this.offset :\n\t                  this.inputLength + this.offset;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n\t      _ParseAST.prototype.advance = function () { this.index++; };\n\t      _ParseAST.prototype.optionalCharacter = function (code) {\n\t          if (this.next.isCharacter(code)) {\n\t              this.advance();\n\t              return true;\n\t          }\n\t          else {\n\t              return false;\n\t          }\n\t      };\n\t      _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n\t      _ParseAST.prototype.expectCharacter = function (code) {\n\t          if (this.optionalCharacter(code))\n\t              return;\n\t          this.error(\"Missing expected \" + String.fromCharCode(code));\n\t      };\n\t      _ParseAST.prototype.optionalOperator = function (op) {\n\t          if (this.next.isOperator(op)) {\n\t              this.advance();\n\t              return true;\n\t          }\n\t          else {\n\t              return false;\n\t          }\n\t      };\n\t      _ParseAST.prototype.expectOperator = function (operator) {\n\t          if (this.optionalOperator(operator))\n\t              return;\n\t          this.error(\"Missing expected operator \" + operator);\n\t      };\n\t      _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n\t          var n = this.next;\n\t          if (!n.isIdentifier() && !n.isKeyword()) {\n\t              this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n\t              return '';\n\t          }\n\t          this.advance();\n\t          return n.toString();\n\t      };\n\t      _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n\t          var n = this.next;\n\t          if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n\t              this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n\t              return '';\n\t          }\n\t          this.advance();\n\t          return n.toString();\n\t      };\n\t      _ParseAST.prototype.parseChain = function () {\n\t          var exprs = [];\n\t          var start = this.inputIndex;\n\t          while (this.index < this.tokens.length) {\n\t              var expr = this.parsePipe();\n\t              exprs.push(expr);\n\t              if (this.optionalCharacter($SEMICOLON)) {\n\t                  if (!this.parseAction) {\n\t                      this.error('Binding expression cannot contain chained expression');\n\t                  }\n\t                  while (this.optionalCharacter($SEMICOLON)) {\n\t                  } // read all semicolons\n\t              }\n\t              else if (this.index < this.tokens.length) {\n\t                  this.error(\"Unexpected token '\" + this.next + \"'\");\n\t              }\n\t          }\n\t          if (exprs.length == 0)\n\t              return new EmptyExpr(this.span(start));\n\t          if (exprs.length == 1)\n\t              return exprs[0];\n\t          return new Chain(this.span(start), exprs);\n\t      };\n\t      _ParseAST.prototype.parsePipe = function () {\n\t          var result = this.parseExpression();\n\t          if (this.optionalOperator('|')) {\n\t              if (this.parseAction) {\n\t                  this.error('Cannot have a pipe in an action expression');\n\t              }\n\t              do {\n\t                  var name = this.expectIdentifierOrKeyword();\n\t                  var args = [];\n\t                  while (this.optionalCharacter($COLON)) {\n\t                      args.push(this.parseExpression());\n\t                  }\n\t                  result = new BindingPipe(this.span(result.span.start - this.offset), result, name, args);\n\t              } while (this.optionalOperator('|'));\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n\t      _ParseAST.prototype.parseConditional = function () {\n\t          var start = this.inputIndex;\n\t          var result = this.parseLogicalOr();\n\t          if (this.optionalOperator('?')) {\n\t              var yes = this.parsePipe();\n\t              var no = void 0;\n\t              if (!this.optionalCharacter($COLON)) {\n\t                  var end = this.inputIndex;\n\t                  var expression = this.input.substring(start, end);\n\t                  this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n\t                  no = new EmptyExpr(this.span(start));\n\t              }\n\t              else {\n\t                  no = this.parsePipe();\n\t              }\n\t              return new Conditional(this.span(start), result, yes, no);\n\t          }\n\t          else {\n\t              return result;\n\t          }\n\t      };\n\t      _ParseAST.prototype.parseLogicalOr = function () {\n\t          // '||'\n\t          var result = this.parseLogicalAnd();\n\t          while (this.optionalOperator('||')) {\n\t              var right = this.parseLogicalAnd();\n\t              result = new Binary(this.span(result.span.start), '||', result, right);\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseLogicalAnd = function () {\n\t          // '&&'\n\t          var result = this.parseEquality();\n\t          while (this.optionalOperator('&&')) {\n\t              var right = this.parseEquality();\n\t              result = new Binary(this.span(result.span.start), '&&', result, right);\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseEquality = function () {\n\t          // '==','!=','===','!=='\n\t          var result = this.parseRelational();\n\t          while (this.next.type == exports.TokenType.Operator) {\n\t              var operator = this.next.strValue;\n\t              switch (operator) {\n\t                  case '==':\n\t                  case '===':\n\t                  case '!=':\n\t                  case '!==':\n\t                      this.advance();\n\t                      var right = this.parseRelational();\n\t                      result = new Binary(this.span(result.span.start), operator, result, right);\n\t                      continue;\n\t              }\n\t              break;\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseRelational = function () {\n\t          // '<', '>', '<=', '>='\n\t          var result = this.parseAdditive();\n\t          while (this.next.type == exports.TokenType.Operator) {\n\t              var operator = this.next.strValue;\n\t              switch (operator) {\n\t                  case '<':\n\t                  case '>':\n\t                  case '<=':\n\t                  case '>=':\n\t                      this.advance();\n\t                      var right = this.parseAdditive();\n\t                      result = new Binary(this.span(result.span.start), operator, result, right);\n\t                      continue;\n\t              }\n\t              break;\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseAdditive = function () {\n\t          // '+', '-'\n\t          var result = this.parseMultiplicative();\n\t          while (this.next.type == exports.TokenType.Operator) {\n\t              var operator = this.next.strValue;\n\t              switch (operator) {\n\t                  case '+':\n\t                  case '-':\n\t                      this.advance();\n\t                      var right = this.parseMultiplicative();\n\t                      result = new Binary(this.span(result.span.start), operator, result, right);\n\t                      continue;\n\t              }\n\t              break;\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseMultiplicative = function () {\n\t          // '*', '%', '/'\n\t          var result = this.parsePrefix();\n\t          while (this.next.type == exports.TokenType.Operator) {\n\t              var operator = this.next.strValue;\n\t              switch (operator) {\n\t                  case '*':\n\t                  case '%':\n\t                  case '/':\n\t                      this.advance();\n\t                      var right = this.parsePrefix();\n\t                      result = new Binary(this.span(result.span.start), operator, result, right);\n\t                      continue;\n\t              }\n\t              break;\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parsePrefix = function () {\n\t          if (this.next.type == exports.TokenType.Operator) {\n\t              var start = this.inputIndex;\n\t              var operator = this.next.strValue;\n\t              var result = void 0;\n\t              switch (operator) {\n\t                  case '+':\n\t                      this.advance();\n\t                      return this.parsePrefix();\n\t                  case '-':\n\t                      this.advance();\n\t                      result = this.parsePrefix();\n\t                      return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n\t                  case '!':\n\t                      this.advance();\n\t                      result = this.parsePrefix();\n\t                      return new PrefixNot(this.span(start), result);\n\t              }\n\t          }\n\t          return this.parseCallChain();\n\t      };\n\t      _ParseAST.prototype.parseCallChain = function () {\n\t          var result = this.parsePrimary();\n\t          while (true) {\n\t              if (this.optionalCharacter($PERIOD)) {\n\t                  result = this.parseAccessMemberOrMethodCall(result, false);\n\t              }\n\t              else if (this.optionalOperator('?.')) {\n\t                  result = this.parseAccessMemberOrMethodCall(result, true);\n\t              }\n\t              else if (this.optionalCharacter($LBRACKET)) {\n\t                  this.rbracketsExpected++;\n\t                  var key = this.parsePipe();\n\t                  this.rbracketsExpected--;\n\t                  this.expectCharacter($RBRACKET);\n\t                  if (this.optionalOperator('=')) {\n\t                      var value = this.parseConditional();\n\t                      result = new KeyedWrite(this.span(result.span.start), result, key, value);\n\t                  }\n\t                  else {\n\t                      result = new KeyedRead(this.span(result.span.start), result, key);\n\t                  }\n\t              }\n\t              else if (this.optionalCharacter($LPAREN)) {\n\t                  this.rparensExpected++;\n\t                  var args = this.parseCallArguments();\n\t                  this.rparensExpected--;\n\t                  this.expectCharacter($RPAREN);\n\t                  result = new FunctionCall(this.span(result.span.start), result, args);\n\t              }\n\t              else {\n\t                  return result;\n\t              }\n\t          }\n\t      };\n\t      _ParseAST.prototype.parsePrimary = function () {\n\t          var start = this.inputIndex;\n\t          if (this.optionalCharacter($LPAREN)) {\n\t              this.rparensExpected++;\n\t              var result = this.parsePipe();\n\t              this.rparensExpected--;\n\t              this.expectCharacter($RPAREN);\n\t              return result;\n\t          }\n\t          else if (this.next.isKeywordNull()) {\n\t              this.advance();\n\t              return new LiteralPrimitive(this.span(start), null);\n\t          }\n\t          else if (this.next.isKeywordUndefined()) {\n\t              this.advance();\n\t              return new LiteralPrimitive(this.span(start), void 0);\n\t          }\n\t          else if (this.next.isKeywordTrue()) {\n\t              this.advance();\n\t              return new LiteralPrimitive(this.span(start), true);\n\t          }\n\t          else if (this.next.isKeywordFalse()) {\n\t              this.advance();\n\t              return new LiteralPrimitive(this.span(start), false);\n\t          }\n\t          else if (this.next.isKeywordThis()) {\n\t              this.advance();\n\t              return new ImplicitReceiver(this.span(start));\n\t          }\n\t          else if (this.optionalCharacter($LBRACKET)) {\n\t              this.rbracketsExpected++;\n\t              var elements = this.parseExpressionList($RBRACKET);\n\t              this.rbracketsExpected--;\n\t              this.expectCharacter($RBRACKET);\n\t              return new LiteralArray(this.span(start), elements);\n\t          }\n\t          else if (this.next.isCharacter($LBRACE)) {\n\t              return this.parseLiteralMap();\n\t          }\n\t          else if (this.next.isIdentifier()) {\n\t              return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n\t          }\n\t          else if (this.next.isNumber()) {\n\t              var value = this.next.toNumber();\n\t              this.advance();\n\t              return new LiteralPrimitive(this.span(start), value);\n\t          }\n\t          else if (this.next.isString()) {\n\t              var literalValue = this.next.toString();\n\t              this.advance();\n\t              return new LiteralPrimitive(this.span(start), literalValue);\n\t          }\n\t          else if (this.index >= this.tokens.length) {\n\t              this.error(\"Unexpected end of expression: \" + this.input);\n\t              return new EmptyExpr(this.span(start));\n\t          }\n\t          else {\n\t              this.error(\"Unexpected token \" + this.next);\n\t              return new EmptyExpr(this.span(start));\n\t          }\n\t      };\n\t      _ParseAST.prototype.parseExpressionList = function (terminator) {\n\t          var result = [];\n\t          if (!this.next.isCharacter(terminator)) {\n\t              do {\n\t                  result.push(this.parsePipe());\n\t              } while (this.optionalCharacter($COMMA));\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseLiteralMap = function () {\n\t          var keys = [];\n\t          var values = [];\n\t          var start = this.inputIndex;\n\t          this.expectCharacter($LBRACE);\n\t          if (!this.optionalCharacter($RBRACE)) {\n\t              this.rbracesExpected++;\n\t              do {\n\t                  var key = this.expectIdentifierOrKeywordOrString();\n\t                  keys.push(key);\n\t                  this.expectCharacter($COLON);\n\t                  values.push(this.parsePipe());\n\t              } while (this.optionalCharacter($COMMA));\n\t              this.rbracesExpected--;\n\t              this.expectCharacter($RBRACE);\n\t          }\n\t          return new LiteralMap(this.span(start), keys, values);\n\t      };\n\t      _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n\t          if (isSafe === void 0) { isSafe = false; }\n\t          var start = receiver.span.start;\n\t          var id = this.expectIdentifierOrKeyword();\n\t          if (this.optionalCharacter($LPAREN)) {\n\t              this.rparensExpected++;\n\t              var args = this.parseCallArguments();\n\t              this.expectCharacter($RPAREN);\n\t              this.rparensExpected--;\n\t              var span = this.span(start);\n\t              return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n\t                  new MethodCall(span, receiver, id, args);\n\t          }\n\t          else {\n\t              if (isSafe) {\n\t                  if (this.optionalOperator('=')) {\n\t                      this.error('The \\'?.\\' operator cannot be used in the assignment');\n\t                      return new EmptyExpr(this.span(start));\n\t                  }\n\t                  else {\n\t                      return new SafePropertyRead(this.span(start), receiver, id);\n\t                  }\n\t              }\n\t              else {\n\t                  if (this.optionalOperator('=')) {\n\t                      if (!this.parseAction) {\n\t                          this.error('Bindings cannot contain assignments');\n\t                          return new EmptyExpr(this.span(start));\n\t                      }\n\t                      var value = this.parseConditional();\n\t                      return new PropertyWrite(this.span(start), receiver, id, value);\n\t                  }\n\t                  else {\n\t                      return new PropertyRead(this.span(start), receiver, id);\n\t                  }\n\t              }\n\t          }\n\t      };\n\t      _ParseAST.prototype.parseCallArguments = function () {\n\t          if (this.next.isCharacter($RPAREN))\n\t              return [];\n\t          var positionals = [];\n\t          do {\n\t              positionals.push(this.parsePipe());\n\t          } while (this.optionalCharacter($COMMA));\n\t          return positionals;\n\t      };\n\t      /**\n\t       * An identifier, a keyword, a string with an optional `-` inbetween.\n\t       */\n\t      _ParseAST.prototype.expectTemplateBindingKey = function () {\n\t          var result = '';\n\t          var operatorFound = false;\n\t          do {\n\t              result += this.expectIdentifierOrKeywordOrString();\n\t              operatorFound = this.optionalOperator('-');\n\t              if (operatorFound) {\n\t                  result += '-';\n\t              }\n\t          } while (operatorFound);\n\t          return result.toString();\n\t      };\n\t      _ParseAST.prototype.parseTemplateBindings = function () {\n\t          var bindings = [];\n\t          var prefix = null;\n\t          var warnings = [];\n\t          while (this.index < this.tokens.length) {\n\t              var keyIsVar = this.peekKeywordLet();\n\t              if (keyIsVar) {\n\t                  this.advance();\n\t              }\n\t              var key = this.expectTemplateBindingKey();\n\t              if (!keyIsVar) {\n\t                  if (prefix == null) {\n\t                      prefix = key;\n\t                  }\n\t                  else {\n\t                      key = prefix + key[0].toUpperCase() + key.substring(1);\n\t                  }\n\t              }\n\t              this.optionalCharacter($COLON);\n\t              var name = null;\n\t              var expression = null;\n\t              if (keyIsVar) {\n\t                  if (this.optionalOperator('=')) {\n\t                      name = this.expectTemplateBindingKey();\n\t                  }\n\t                  else {\n\t                      name = '\\$implicit';\n\t                  }\n\t              }\n\t              else if (this.next !== EOF && !this.peekKeywordLet()) {\n\t                  var start = this.inputIndex;\n\t                  var ast = this.parsePipe();\n\t                  var source = this.input.substring(start, this.inputIndex);\n\t                  expression = new ASTWithSource(ast, source, this.location, this.errors);\n\t              }\n\t              bindings.push(new TemplateBinding(key, keyIsVar, name, expression));\n\t              if (!this.optionalCharacter($SEMICOLON)) {\n\t                  this.optionalCharacter($COMMA);\n\t              }\n\t          }\n\t          return new TemplateBindingParseResult(bindings, warnings, this.errors);\n\t      };\n\t      _ParseAST.prototype.error = function (message, index) {\n\t          if (index === void 0) { index = null; }\n\t          this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n\t          this.skip();\n\t      };\n\t      _ParseAST.prototype.locationText = function (index) {\n\t          if (index === void 0) { index = null; }\n\t          if (isBlank(index))\n\t              index = this.index;\n\t          return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n\t              \"at the end of the expression\";\n\t      };\n\t      // Error recovery should skip tokens until it encounters a recovery point. skip() treats\n\t      // the end of input and a ';' as unconditionally a recovery point. It also treats ')',\n\t      // '}' and ']' as conditional recovery points if one of calling productions is expecting\n\t      // one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing\n\t      // more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because\n\t      // of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols\n\t      // must be conditional as they must be skipped if none of the calling productions are not\n\t      // expecting the closing token else we will never make progress in the case of an\n\t      // extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because\n\t      // parseChain() is always the root production and it expects a ';'.\n\t      // If a production expects one of these token it increments the corresponding nesting count,\n\t      // and then decrements it just prior to checking if the token is in the input.\n\t      _ParseAST.prototype.skip = function () {\n\t          var n = this.next;\n\t          while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n\t              (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n\t              (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n\t              (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n\t              if (this.next.isError()) {\n\t                  this.errors.push(new ParserError(this.next.toString(), this.input, this.locationText(), this.location));\n\t              }\n\t              this.advance();\n\t              n = this.next;\n\t          }\n\t      };\n\t      return _ParseAST;\n\t  }());\n\t  var SimpleExpressionChecker = (function () {\n\t      function SimpleExpressionChecker() {\n\t          this.errors = [];\n\t      }\n\t      SimpleExpressionChecker.check = function (ast) {\n\t          var s = new SimpleExpressionChecker();\n\t          ast.visit(s);\n\t          return s.errors;\n\t      };\n\t      SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n\t      SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n\t      SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n\t      SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitAll = function (asts) {\n\t          var _this = this;\n\t          return asts.map(function (node) { return node.visit(_this); });\n\t      };\n\t      SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n\t      return SimpleExpressionChecker;\n\t  }());\n\t\n\t  var ParseLocation = (function () {\n\t      function ParseLocation(file, offset, line, col) {\n\t          this.file = file;\n\t          this.offset = offset;\n\t          this.line = line;\n\t          this.col = col;\n\t      }\n\t      ParseLocation.prototype.toString = function () {\n\t          return isPresent(this.offset) ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n\t      };\n\t      return ParseLocation;\n\t  }());\n\t  var ParseSourceFile = (function () {\n\t      function ParseSourceFile(content, url) {\n\t          this.content = content;\n\t          this.url = url;\n\t      }\n\t      return ParseSourceFile;\n\t  }());\n\t  var ParseSourceSpan = (function () {\n\t      function ParseSourceSpan(start, end, details) {\n\t          if (details === void 0) { details = null; }\n\t          this.start = start;\n\t          this.end = end;\n\t          this.details = details;\n\t      }\n\t      ParseSourceSpan.prototype.toString = function () {\n\t          return this.start.file.content.substring(this.start.offset, this.end.offset);\n\t      };\n\t      return ParseSourceSpan;\n\t  }());\n\t  exports.ParseErrorLevel;\n\t  (function (ParseErrorLevel) {\n\t      ParseErrorLevel[ParseErrorLevel[\"WARNING\"] = 0] = \"WARNING\";\n\t      ParseErrorLevel[ParseErrorLevel[\"FATAL\"] = 1] = \"FATAL\";\n\t  })(exports.ParseErrorLevel || (exports.ParseErrorLevel = {}));\n\t  var ParseError = (function () {\n\t      function ParseError(span, msg, level) {\n\t          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n\t          this.span = span;\n\t          this.msg = msg;\n\t          this.level = level;\n\t      }\n\t      ParseError.prototype.toString = function () {\n\t          var source = this.span.start.file.content;\n\t          var ctxStart = this.span.start.offset;\n\t          var contextStr = '';\n\t          var details = '';\n\t          if (isPresent(ctxStart)) {\n\t              if (ctxStart > source.length - 1) {\n\t                  ctxStart = source.length - 1;\n\t              }\n\t              var ctxEnd = ctxStart;\n\t              var ctxLen = 0;\n\t              var ctxLines = 0;\n\t              while (ctxLen < 100 && ctxStart > 0) {\n\t                  ctxStart--;\n\t                  ctxLen++;\n\t                  if (source[ctxStart] == '\\n') {\n\t                      if (++ctxLines == 3) {\n\t                          break;\n\t                      }\n\t                  }\n\t              }\n\t              ctxLen = 0;\n\t              ctxLines = 0;\n\t              while (ctxLen < 100 && ctxEnd < source.length - 1) {\n\t                  ctxEnd++;\n\t                  ctxLen++;\n\t                  if (source[ctxEnd] == '\\n') {\n\t                      if (++ctxLines == 3) {\n\t                          break;\n\t                      }\n\t                  }\n\t              }\n\t              var context = source.substring(ctxStart, this.span.start.offset) + '[ERROR ->]' +\n\t                  source.substring(this.span.start.offset, ctxEnd + 1);\n\t              contextStr = \" (\\\"\" + context + \"\\\")\";\n\t          }\n\t          if (this.span.details) {\n\t              details = \", \" + this.span.details;\n\t          }\n\t          return \"\" + this.msg + contextStr + \": \" + this.span.start + details;\n\t      };\n\t      return ParseError;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var Text = (function () {\n\t      function Text(value, sourceSpan) {\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n\t      return Text;\n\t  }());\n\t  var Expansion = (function () {\n\t      function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n\t          this.switchValue = switchValue;\n\t          this.type = type;\n\t          this.cases = cases;\n\t          this.sourceSpan = sourceSpan;\n\t          this.switchValueSourceSpan = switchValueSourceSpan;\n\t      }\n\t      Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n\t      return Expansion;\n\t  }());\n\t  var ExpansionCase = (function () {\n\t      function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n\t          this.value = value;\n\t          this.expression = expression;\n\t          this.sourceSpan = sourceSpan;\n\t          this.valueSourceSpan = valueSourceSpan;\n\t          this.expSourceSpan = expSourceSpan;\n\t      }\n\t      ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n\t      return ExpansionCase;\n\t  }());\n\t  var Attribute$1 = (function () {\n\t      function Attribute(name, value, sourceSpan, valueSpan) {\n\t          this.name = name;\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t          this.valueSpan = valueSpan;\n\t      }\n\t      Attribute.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n\t      return Attribute;\n\t  }());\n\t  var Element = (function () {\n\t      function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n\t          this.name = name;\n\t          this.attrs = attrs;\n\t          this.children = children;\n\t          this.sourceSpan = sourceSpan;\n\t          this.startSourceSpan = startSourceSpan;\n\t          this.endSourceSpan = endSourceSpan;\n\t      }\n\t      Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n\t      return Element;\n\t  }());\n\t  var Comment = (function () {\n\t      function Comment(value, sourceSpan) {\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n\t      return Comment;\n\t  }());\n\t  function visitAll(visitor, nodes, context) {\n\t      if (context === void 0) { context = null; }\n\t      var result = [];\n\t      var visit = visitor.visit ?\n\t          function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n\t          function (ast) { return ast.visit(visitor, context); };\n\t      nodes.forEach(function (ast) {\n\t          var astResult = visit(ast);\n\t          if (astResult) {\n\t              result.push(astResult);\n\t          }\n\t      });\n\t      return result;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$4 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var TokenType$1;\n\t  (function (TokenType) {\n\t      TokenType[TokenType[\"TAG_OPEN_START\"] = 0] = \"TAG_OPEN_START\";\n\t      TokenType[TokenType[\"TAG_OPEN_END\"] = 1] = \"TAG_OPEN_END\";\n\t      TokenType[TokenType[\"TAG_OPEN_END_VOID\"] = 2] = \"TAG_OPEN_END_VOID\";\n\t      TokenType[TokenType[\"TAG_CLOSE\"] = 3] = \"TAG_CLOSE\";\n\t      TokenType[TokenType[\"TEXT\"] = 4] = \"TEXT\";\n\t      TokenType[TokenType[\"ESCAPABLE_RAW_TEXT\"] = 5] = \"ESCAPABLE_RAW_TEXT\";\n\t      TokenType[TokenType[\"RAW_TEXT\"] = 6] = \"RAW_TEXT\";\n\t      TokenType[TokenType[\"COMMENT_START\"] = 7] = \"COMMENT_START\";\n\t      TokenType[TokenType[\"COMMENT_END\"] = 8] = \"COMMENT_END\";\n\t      TokenType[TokenType[\"CDATA_START\"] = 9] = \"CDATA_START\";\n\t      TokenType[TokenType[\"CDATA_END\"] = 10] = \"CDATA_END\";\n\t      TokenType[TokenType[\"ATTR_NAME\"] = 11] = \"ATTR_NAME\";\n\t      TokenType[TokenType[\"ATTR_VALUE\"] = 12] = \"ATTR_VALUE\";\n\t      TokenType[TokenType[\"DOC_TYPE\"] = 13] = \"DOC_TYPE\";\n\t      TokenType[TokenType[\"EXPANSION_FORM_START\"] = 14] = \"EXPANSION_FORM_START\";\n\t      TokenType[TokenType[\"EXPANSION_CASE_VALUE\"] = 15] = \"EXPANSION_CASE_VALUE\";\n\t      TokenType[TokenType[\"EXPANSION_CASE_EXP_START\"] = 16] = \"EXPANSION_CASE_EXP_START\";\n\t      TokenType[TokenType[\"EXPANSION_CASE_EXP_END\"] = 17] = \"EXPANSION_CASE_EXP_END\";\n\t      TokenType[TokenType[\"EXPANSION_FORM_END\"] = 18] = \"EXPANSION_FORM_END\";\n\t      TokenType[TokenType[\"EOF\"] = 19] = \"EOF\";\n\t  })(TokenType$1 || (TokenType$1 = {}));\n\t  var Token$1 = (function () {\n\t      function Token(type, parts, sourceSpan) {\n\t          this.type = type;\n\t          this.parts = parts;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      return Token;\n\t  }());\n\t  var TokenError = (function (_super) {\n\t      __extends$4(TokenError, _super);\n\t      function TokenError(errorMsg, tokenType, span) {\n\t          _super.call(this, span, errorMsg);\n\t          this.tokenType = tokenType;\n\t      }\n\t      return TokenError;\n\t  }(ParseError));\n\t  var TokenizeResult = (function () {\n\t      function TokenizeResult(tokens, errors) {\n\t          this.tokens = tokens;\n\t          this.errors = errors;\n\t      }\n\t      return TokenizeResult;\n\t  }());\n\t  function tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n\t      if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n\t      if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t      return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n\t          .tokenize();\n\t  }\n\t  var _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n\t  function _unexpectedCharacterErrorMsg(charCode) {\n\t      var char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n\t      return \"Unexpected character \\\"\" + char + \"\\\"\";\n\t  }\n\t  function _unknownEntityErrorMsg(entitySrc) {\n\t      return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n\t  }\n\t  var _ControlFlowError = (function () {\n\t      function _ControlFlowError(error) {\n\t          this.error = error;\n\t      }\n\t      return _ControlFlowError;\n\t  }());\n\t  // See http://www.w3.org/TR/html51/syntax.html#writing\n\t  var _Tokenizer = (function () {\n\t      /**\n\t       * @param _file The html source\n\t       * @param _getTagDefinition\n\t       * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n\t       * @param _interpolationConfig\n\t       */\n\t      function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n\t          if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          this._file = _file;\n\t          this._getTagDefinition = _getTagDefinition;\n\t          this._tokenizeIcu = _tokenizeIcu;\n\t          this._interpolationConfig = _interpolationConfig;\n\t          // Note: this is always lowercase!\n\t          this._peek = -1;\n\t          this._nextPeek = -1;\n\t          this._index = -1;\n\t          this._line = 0;\n\t          this._column = -1;\n\t          this._expansionCaseStack = [];\n\t          this._inInterpolation = false;\n\t          this.tokens = [];\n\t          this.errors = [];\n\t          this._input = _file.content;\n\t          this._length = _file.content.length;\n\t          this._advance();\n\t      }\n\t      _Tokenizer.prototype._processCarriageReturns = function (content) {\n\t          // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n\t          // In order to keep the original position in the source, we can not\n\t          // pre-process it.\n\t          // Instead CRs are processed right before instantiating the tokens.\n\t          return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n\t      };\n\t      _Tokenizer.prototype.tokenize = function () {\n\t          while (this._peek !== $EOF) {\n\t              var start = this._getLocation();\n\t              try {\n\t                  if (this._attemptCharCode($LT)) {\n\t                      if (this._attemptCharCode($BANG)) {\n\t                          if (this._attemptCharCode($LBRACKET)) {\n\t                              this._consumeCdata(start);\n\t                          }\n\t                          else if (this._attemptCharCode($MINUS)) {\n\t                              this._consumeComment(start);\n\t                          }\n\t                          else {\n\t                              this._consumeDocType(start);\n\t                          }\n\t                      }\n\t                      else if (this._attemptCharCode($SLASH)) {\n\t                          this._consumeTagClose(start);\n\t                      }\n\t                      else {\n\t                          this._consumeTagOpen(start);\n\t                      }\n\t                  }\n\t                  else if (!this._tokenizeIcu || !this._tokenizeExpansionForm()) {\n\t                      this._consumeText();\n\t                  }\n\t              }\n\t              catch (e) {\n\t                  if (e instanceof _ControlFlowError) {\n\t                      this.errors.push(e.error);\n\t                  }\n\t                  else {\n\t                      throw e;\n\t                  }\n\t              }\n\t          }\n\t          this._beginToken(TokenType$1.EOF);\n\t          this._endToken([]);\n\t          return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n\t      };\n\t      /**\n\t       * @returns {boolean} whether an ICU token has been created\n\t       * @internal\n\t       */\n\t      _Tokenizer.prototype._tokenizeExpansionForm = function () {\n\t          if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n\t              this._consumeExpansionFormStart();\n\t              return true;\n\t          }\n\t          if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n\t              this._consumeExpansionCaseStart();\n\t              return true;\n\t          }\n\t          if (this._peek === $RBRACE) {\n\t              if (this._isInExpansionCase()) {\n\t                  this._consumeExpansionCaseEnd();\n\t                  return true;\n\t              }\n\t              if (this._isInExpansionForm()) {\n\t                  this._consumeExpansionFormEnd();\n\t                  return true;\n\t              }\n\t          }\n\t          return false;\n\t      };\n\t      _Tokenizer.prototype._getLocation = function () {\n\t          return new ParseLocation(this._file, this._index, this._line, this._column);\n\t      };\n\t      _Tokenizer.prototype._getSpan = function (start, end) {\n\t          if (start === void 0) { start = this._getLocation(); }\n\t          if (end === void 0) { end = this._getLocation(); }\n\t          return new ParseSourceSpan(start, end);\n\t      };\n\t      _Tokenizer.prototype._beginToken = function (type, start) {\n\t          if (start === void 0) { start = this._getLocation(); }\n\t          this._currentTokenStart = start;\n\t          this._currentTokenType = type;\n\t      };\n\t      _Tokenizer.prototype._endToken = function (parts, end) {\n\t          if (end === void 0) { end = this._getLocation(); }\n\t          var token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n\t          this.tokens.push(token);\n\t          this._currentTokenStart = null;\n\t          this._currentTokenType = null;\n\t          return token;\n\t      };\n\t      _Tokenizer.prototype._createError = function (msg, span) {\n\t          if (this._isInExpansionForm()) {\n\t              msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n\t          }\n\t          var error = new TokenError(msg, this._currentTokenType, span);\n\t          this._currentTokenStart = null;\n\t          this._currentTokenType = null;\n\t          return new _ControlFlowError(error);\n\t      };\n\t      _Tokenizer.prototype._advance = function () {\n\t          if (this._index >= this._length) {\n\t              throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n\t          }\n\t          if (this._peek === $LF) {\n\t              this._line++;\n\t              this._column = 0;\n\t          }\n\t          else if (this._peek !== $LF && this._peek !== $CR) {\n\t              this._column++;\n\t          }\n\t          this._index++;\n\t          this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n\t          this._nextPeek =\n\t              this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n\t      };\n\t      _Tokenizer.prototype._attemptCharCode = function (charCode) {\n\t          if (this._peek === charCode) {\n\t              this._advance();\n\t              return true;\n\t          }\n\t          return false;\n\t      };\n\t      _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n\t          if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n\t              this._advance();\n\t              return true;\n\t          }\n\t          return false;\n\t      };\n\t      _Tokenizer.prototype._requireCharCode = function (charCode) {\n\t          var location = this._getLocation();\n\t          if (!this._attemptCharCode(charCode)) {\n\t              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n\t          }\n\t      };\n\t      _Tokenizer.prototype._attemptStr = function (chars) {\n\t          var len = chars.length;\n\t          if (this._index + len > this._length) {\n\t              return false;\n\t          }\n\t          var initialPosition = this._savePosition();\n\t          for (var i = 0; i < len; i++) {\n\t              if (!this._attemptCharCode(chars.charCodeAt(i))) {\n\t                  // If attempting to parse the string fails, we want to reset the parser\n\t                  // to where it was before the attempt\n\t                  this._restorePosition(initialPosition);\n\t                  return false;\n\t              }\n\t          }\n\t          return true;\n\t      };\n\t      _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n\t          for (var i = 0; i < chars.length; i++) {\n\t              if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n\t                  return false;\n\t              }\n\t          }\n\t          return true;\n\t      };\n\t      _Tokenizer.prototype._requireStr = function (chars) {\n\t          var location = this._getLocation();\n\t          if (!this._attemptStr(chars)) {\n\t              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n\t          }\n\t      };\n\t      _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n\t          while (!predicate(this._peek)) {\n\t              this._advance();\n\t          }\n\t      };\n\t      _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n\t          var start = this._getLocation();\n\t          this._attemptCharCodeUntilFn(predicate);\n\t          if (this._index - start.offset < len) {\n\t              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n\t          }\n\t      };\n\t      _Tokenizer.prototype._attemptUntilChar = function (char) {\n\t          while (this._peek !== char) {\n\t              this._advance();\n\t          }\n\t      };\n\t      _Tokenizer.prototype._readChar = function (decodeEntities) {\n\t          if (decodeEntities && this._peek === $AMPERSAND) {\n\t              return this._decodeEntity();\n\t          }\n\t          else {\n\t              var index = this._index;\n\t              this._advance();\n\t              return this._input[index];\n\t          }\n\t      };\n\t      _Tokenizer.prototype._decodeEntity = function () {\n\t          var start = this._getLocation();\n\t          this._advance();\n\t          if (this._attemptCharCode($HASH)) {\n\t              var isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n\t              var numberStart = this._getLocation().offset;\n\t              this._attemptCharCodeUntilFn(isDigitEntityEnd);\n\t              if (this._peek != $SEMICOLON) {\n\t                  throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n\t              }\n\t              this._advance();\n\t              var strNum = this._input.substring(numberStart, this._index - 1);\n\t              try {\n\t                  var charCode = parseInt(strNum, isHex ? 16 : 10);\n\t                  return String.fromCharCode(charCode);\n\t              }\n\t              catch (e) {\n\t                  var entity = this._input.substring(start.offset + 1, this._index - 1);\n\t                  throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n\t              }\n\t          }\n\t          else {\n\t              var startPosition = this._savePosition();\n\t              this._attemptCharCodeUntilFn(isNamedEntityEnd);\n\t              if (this._peek != $SEMICOLON) {\n\t                  this._restorePosition(startPosition);\n\t                  return '&';\n\t              }\n\t              this._advance();\n\t              var name_1 = this._input.substring(start.offset + 1, this._index - 1);\n\t              var char = NAMED_ENTITIES[name_1];\n\t              if (!char) {\n\t                  throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n\t              }\n\t              return char;\n\t          }\n\t      };\n\t      _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n\t          var tagCloseStart;\n\t          var textStart = this._getLocation();\n\t          this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n\t          var parts = [];\n\t          while (true) {\n\t              tagCloseStart = this._getLocation();\n\t              if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n\t                  break;\n\t              }\n\t              if (this._index > tagCloseStart.offset) {\n\t                  // add the characters consumed by the previous if statement to the output\n\t                  parts.push(this._input.substring(tagCloseStart.offset, this._index));\n\t              }\n\t              while (this._peek !== firstCharOfEnd) {\n\t                  parts.push(this._readChar(decodeEntities));\n\t              }\n\t          }\n\t          return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n\t      };\n\t      _Tokenizer.prototype._consumeComment = function (start) {\n\t          var _this = this;\n\t          this._beginToken(TokenType$1.COMMENT_START, start);\n\t          this._requireCharCode($MINUS);\n\t          this._endToken([]);\n\t          var textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n\t          this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n\t          this._endToken([]);\n\t      };\n\t      _Tokenizer.prototype._consumeCdata = function (start) {\n\t          var _this = this;\n\t          this._beginToken(TokenType$1.CDATA_START, start);\n\t          this._requireStr('CDATA[');\n\t          this._endToken([]);\n\t          var textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n\t          this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n\t          this._endToken([]);\n\t      };\n\t      _Tokenizer.prototype._consumeDocType = function (start) {\n\t          this._beginToken(TokenType$1.DOC_TYPE, start);\n\t          this._attemptUntilChar($GT);\n\t          this._advance();\n\t          this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n\t      };\n\t      _Tokenizer.prototype._consumePrefixAndName = function () {\n\t          var nameOrPrefixStart = this._index;\n\t          var prefix = null;\n\t          while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n\t              this._advance();\n\t          }\n\t          var nameStart;\n\t          if (this._peek === $COLON) {\n\t              this._advance();\n\t              prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n\t              nameStart = this._index;\n\t          }\n\t          else {\n\t              nameStart = nameOrPrefixStart;\n\t          }\n\t          this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n\t          var name = this._input.substring(nameStart, this._index);\n\t          return [prefix, name];\n\t      };\n\t      _Tokenizer.prototype._consumeTagOpen = function (start) {\n\t          var savedPos = this._savePosition();\n\t          var tagName;\n\t          var lowercaseTagName;\n\t          try {\n\t              if (!isAsciiLetter(this._peek)) {\n\t                  throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n\t              }\n\t              var nameStart = this._index;\n\t              this._consumeTagOpenStart(start);\n\t              tagName = this._input.substring(nameStart, this._index);\n\t              lowercaseTagName = tagName.toLowerCase();\n\t              this._attemptCharCodeUntilFn(isNotWhitespace);\n\t              while (this._peek !== $SLASH && this._peek !== $GT) {\n\t                  this._consumeAttributeName();\n\t                  this._attemptCharCodeUntilFn(isNotWhitespace);\n\t                  if (this._attemptCharCode($EQ)) {\n\t                      this._attemptCharCodeUntilFn(isNotWhitespace);\n\t                      this._consumeAttributeValue();\n\t                  }\n\t                  this._attemptCharCodeUntilFn(isNotWhitespace);\n\t              }\n\t              this._consumeTagOpenEnd();\n\t          }\n\t          catch (e) {\n\t              if (e instanceof _ControlFlowError) {\n\t                  // When the start tag is invalid, assume we want a \"<\"\n\t                  this._restorePosition(savedPos);\n\t                  // Back to back text tokens are merged at the end\n\t                  this._beginToken(TokenType$1.TEXT, start);\n\t                  this._endToken(['<']);\n\t                  return;\n\t              }\n\t              throw e;\n\t          }\n\t          var contentTokenType = this._getTagDefinition(tagName).contentType;\n\t          if (contentTokenType === TagContentType.RAW_TEXT) {\n\t              this._consumeRawTextWithTagClose(lowercaseTagName, false);\n\t          }\n\t          else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n\t              this._consumeRawTextWithTagClose(lowercaseTagName, true);\n\t          }\n\t      };\n\t      _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n\t          var _this = this;\n\t          var textToken = this._consumeRawText(decodeEntities, $LT, function () {\n\t              if (!_this._attemptCharCode($SLASH))\n\t                  return false;\n\t              _this._attemptCharCodeUntilFn(isNotWhitespace);\n\t              if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n\t                  return false;\n\t              _this._attemptCharCodeUntilFn(isNotWhitespace);\n\t              return _this._attemptCharCode($GT);\n\t          });\n\t          this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n\t          this._endToken([null, lowercaseTagName]);\n\t      };\n\t      _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n\t          this._beginToken(TokenType$1.TAG_OPEN_START, start);\n\t          var parts = this._consumePrefixAndName();\n\t          this._endToken(parts);\n\t      };\n\t      _Tokenizer.prototype._consumeAttributeName = function () {\n\t          this._beginToken(TokenType$1.ATTR_NAME);\n\t          var prefixAndName = this._consumePrefixAndName();\n\t          this._endToken(prefixAndName);\n\t      };\n\t      _Tokenizer.prototype._consumeAttributeValue = function () {\n\t          this._beginToken(TokenType$1.ATTR_VALUE);\n\t          var value;\n\t          if (this._peek === $SQ || this._peek === $DQ) {\n\t              var quoteChar = this._peek;\n\t              this._advance();\n\t              var parts = [];\n\t              while (this._peek !== quoteChar) {\n\t                  parts.push(this._readChar(true));\n\t              }\n\t              value = parts.join('');\n\t              this._advance();\n\t          }\n\t          else {\n\t              var valueStart = this._index;\n\t              this._requireCharCodeUntilFn(isNameEnd, 1);\n\t              value = this._input.substring(valueStart, this._index);\n\t          }\n\t          this._endToken([this._processCarriageReturns(value)]);\n\t      };\n\t      _Tokenizer.prototype._consumeTagOpenEnd = function () {\n\t          var tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n\t          this._beginToken(tokenType);\n\t          this._requireCharCode($GT);\n\t          this._endToken([]);\n\t      };\n\t      _Tokenizer.prototype._consumeTagClose = function (start) {\n\t          this._beginToken(TokenType$1.TAG_CLOSE, start);\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t          var prefixAndName = this._consumePrefixAndName();\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t          this._requireCharCode($GT);\n\t          this._endToken(prefixAndName);\n\t      };\n\t      _Tokenizer.prototype._consumeExpansionFormStart = function () {\n\t          this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n\t          this._requireCharCode($LBRACE);\n\t          this._endToken([]);\n\t          this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n\t          this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n\t          var condition = this._readUntil($COMMA);\n\t          this._endToken([condition], this._getLocation());\n\t          this._requireCharCode($COMMA);\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t          this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n\t          var type = this._readUntil($COMMA);\n\t          this._endToken([type], this._getLocation());\n\t          this._requireCharCode($COMMA);\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t      };\n\t      _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n\t          this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n\t          var value = this._readUntil($LBRACE).trim();\n\t          this._endToken([value], this._getLocation());\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t          this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n\t          this._requireCharCode($LBRACE);\n\t          this._endToken([], this._getLocation());\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t          this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n\t      };\n\t      _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n\t          this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n\t          this._requireCharCode($RBRACE);\n\t          this._endToken([], this._getLocation());\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t          this._expansionCaseStack.pop();\n\t      };\n\t      _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n\t          this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n\t          this._requireCharCode($RBRACE);\n\t          this._endToken([]);\n\t          this._expansionCaseStack.pop();\n\t      };\n\t      _Tokenizer.prototype._consumeText = function () {\n\t          var start = this._getLocation();\n\t          this._beginToken(TokenType$1.TEXT, start);\n\t          var parts = [];\n\t          do {\n\t              if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n\t                  parts.push(this._interpolationConfig.start);\n\t                  this._inInterpolation = true;\n\t              }\n\t              else if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.end) &&\n\t                  this._inInterpolation) {\n\t                  parts.push(this._interpolationConfig.end);\n\t                  this._inInterpolation = false;\n\t              }\n\t              else {\n\t                  parts.push(this._readChar(true));\n\t              }\n\t          } while (!this._isTextEnd());\n\t          this._endToken([this._processCarriageReturns(parts.join(''))]);\n\t      };\n\t      _Tokenizer.prototype._isTextEnd = function () {\n\t          if (this._peek === $LT || this._peek === $EOF) {\n\t              return true;\n\t          }\n\t          if (this._tokenizeIcu && !this._inInterpolation) {\n\t              if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n\t                  // start of an expansion form\n\t                  return true;\n\t              }\n\t              if (this._peek === $RBRACE && this._isInExpansionCase()) {\n\t                  // end of and expansion case\n\t                  return true;\n\t              }\n\t          }\n\t          return false;\n\t      };\n\t      _Tokenizer.prototype._savePosition = function () {\n\t          return [this._peek, this._index, this._column, this._line, this.tokens.length];\n\t      };\n\t      _Tokenizer.prototype._readUntil = function (char) {\n\t          var start = this._index;\n\t          this._attemptUntilChar(char);\n\t          return this._input.substring(start, this._index);\n\t      };\n\t      _Tokenizer.prototype._restorePosition = function (position) {\n\t          this._peek = position[0];\n\t          this._index = position[1];\n\t          this._column = position[2];\n\t          this._line = position[3];\n\t          var nbTokens = position[4];\n\t          if (nbTokens < this.tokens.length) {\n\t              // remove any extra tokens\n\t              this.tokens = this.tokens.slice(0, nbTokens);\n\t          }\n\t      };\n\t      _Tokenizer.prototype._isInExpansionCase = function () {\n\t          return this._expansionCaseStack.length > 0 &&\n\t              this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n\t                  TokenType$1.EXPANSION_CASE_EXP_START;\n\t      };\n\t      _Tokenizer.prototype._isInExpansionForm = function () {\n\t          return this._expansionCaseStack.length > 0 &&\n\t              this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n\t                  TokenType$1.EXPANSION_FORM_START;\n\t      };\n\t      return _Tokenizer;\n\t  }());\n\t  function isNotWhitespace(code) {\n\t      return !isWhitespace(code) || code === $EOF;\n\t  }\n\t  function isNameEnd(code) {\n\t      return isWhitespace(code) || code === $GT || code === $SLASH ||\n\t          code === $SQ || code === $DQ || code === $EQ;\n\t  }\n\t  function isPrefixEnd(code) {\n\t      return (code < $a || $z < code) && (code < $A || $Z < code) &&\n\t          (code < $0 || code > $9);\n\t  }\n\t  function isDigitEntityEnd(code) {\n\t      return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n\t  }\n\t  function isNamedEntityEnd(code) {\n\t      return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n\t  }\n\t  function isExpansionFormStart(input, offset, interpolationConfig) {\n\t      var isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n\t      return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n\t  }\n\t  function isExpansionCaseStart(peek) {\n\t      return peek === $EQ || isAsciiLetter(peek);\n\t  }\n\t  function compareCharCodeCaseInsensitive(code1, code2) {\n\t      return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n\t  }\n\t  function toUpperCaseCharCode(code) {\n\t      return code >= $a && code <= $z ? code - $a + $A : code;\n\t  }\n\t  function mergeTextTokens(srcTokens) {\n\t      var dstTokens = [];\n\t      var lastDstToken;\n\t      for (var i = 0; i < srcTokens.length; i++) {\n\t          var token = srcTokens[i];\n\t          if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n\t              lastDstToken.parts[0] += token.parts[0];\n\t              lastDstToken.sourceSpan.end = token.sourceSpan.end;\n\t          }\n\t          else {\n\t              lastDstToken = token;\n\t              dstTokens.push(lastDstToken);\n\t          }\n\t      }\n\t      return dstTokens;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$3 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var TreeError = (function (_super) {\n\t      __extends$3(TreeError, _super);\n\t      function TreeError(elementName, span, msg) {\n\t          _super.call(this, span, msg);\n\t          this.elementName = elementName;\n\t      }\n\t      TreeError.create = function (elementName, span, msg) {\n\t          return new TreeError(elementName, span, msg);\n\t      };\n\t      return TreeError;\n\t  }(ParseError));\n\t  var ParseTreeResult = (function () {\n\t      function ParseTreeResult(rootNodes, errors) {\n\t          this.rootNodes = rootNodes;\n\t          this.errors = errors;\n\t      }\n\t      return ParseTreeResult;\n\t  }());\n\t  var Parser$1 = (function () {\n\t      function Parser(getTagDefinition) {\n\t          this.getTagDefinition = getTagDefinition;\n\t      }\n\t      Parser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n\t          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          var tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n\t          var treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n\t          return new ParseTreeResult(treeAndErrors.rootNodes, tokensAndErrors.errors.concat(treeAndErrors.errors));\n\t      };\n\t      return Parser;\n\t  }());\n\t  var _TreeBuilder = (function () {\n\t      function _TreeBuilder(tokens, getTagDefinition) {\n\t          this.tokens = tokens;\n\t          this.getTagDefinition = getTagDefinition;\n\t          this._index = -1;\n\t          this._rootNodes = [];\n\t          this._errors = [];\n\t          this._elementStack = [];\n\t          this._advance();\n\t      }\n\t      _TreeBuilder.prototype.build = function () {\n\t          while (this._peek.type !== TokenType$1.EOF) {\n\t              if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n\t                  this._consumeStartTag(this._advance());\n\t              }\n\t              else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n\t                  this._consumeEndTag(this._advance());\n\t              }\n\t              else if (this._peek.type === TokenType$1.CDATA_START) {\n\t                  this._closeVoidElement();\n\t                  this._consumeCdata(this._advance());\n\t              }\n\t              else if (this._peek.type === TokenType$1.COMMENT_START) {\n\t                  this._closeVoidElement();\n\t                  this._consumeComment(this._advance());\n\t              }\n\t              else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n\t                  this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n\t                  this._closeVoidElement();\n\t                  this._consumeText(this._advance());\n\t              }\n\t              else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n\t                  this._consumeExpansion(this._advance());\n\t              }\n\t              else {\n\t                  // Skip all other tokens...\n\t                  this._advance();\n\t              }\n\t          }\n\t          return new ParseTreeResult(this._rootNodes, this._errors);\n\t      };\n\t      _TreeBuilder.prototype._advance = function () {\n\t          var prev = this._peek;\n\t          if (this._index < this.tokens.length - 1) {\n\t              // Note: there is always an EOF token at the end\n\t              this._index++;\n\t          }\n\t          this._peek = this.tokens[this._index];\n\t          return prev;\n\t      };\n\t      _TreeBuilder.prototype._advanceIf = function (type) {\n\t          if (this._peek.type === type) {\n\t              return this._advance();\n\t          }\n\t          return null;\n\t      };\n\t      _TreeBuilder.prototype._consumeCdata = function (startToken) {\n\t          this._consumeText(this._advance());\n\t          this._advanceIf(TokenType$1.CDATA_END);\n\t      };\n\t      _TreeBuilder.prototype._consumeComment = function (token) {\n\t          var text = this._advanceIf(TokenType$1.RAW_TEXT);\n\t          this._advanceIf(TokenType$1.COMMENT_END);\n\t          var value = isPresent(text) ? text.parts[0].trim() : null;\n\t          this._addToParent(new Comment(value, token.sourceSpan));\n\t      };\n\t      _TreeBuilder.prototype._consumeExpansion = function (token) {\n\t          var switchValue = this._advance();\n\t          var type = this._advance();\n\t          var cases = [];\n\t          // read =\n\t          while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n\t              var expCase = this._parseExpansionCase();\n\t              if (!expCase)\n\t                  return; // error\n\t              cases.push(expCase);\n\t          }\n\t          // read the final }\n\t          if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n\t              this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n\t              return;\n\t          }\n\t          var sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n\t          this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n\t          this._advance();\n\t      };\n\t      _TreeBuilder.prototype._parseExpansionCase = function () {\n\t          var value = this._advance();\n\t          // read {\n\t          if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n\t              this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n\t              return null;\n\t          }\n\t          // read until }\n\t          var start = this._advance();\n\t          var exp = this._collectExpansionExpTokens(start);\n\t          if (!exp)\n\t              return null;\n\t          var end = this._advance();\n\t          exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n\t          // parse everything in between { and }\n\t          var parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n\t          if (parsedExp.errors.length > 0) {\n\t              this._errors = this._errors.concat(parsedExp.errors);\n\t              return null;\n\t          }\n\t          var sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n\t          var expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n\t          return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n\t      };\n\t      _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n\t          var exp = [];\n\t          var expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n\t          while (true) {\n\t              if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n\t                  this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n\t                  expansionFormStack.push(this._peek.type);\n\t              }\n\t              if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n\t                  if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n\t                      expansionFormStack.pop();\n\t                      if (expansionFormStack.length == 0)\n\t                          return exp;\n\t                  }\n\t                  else {\n\t                      this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n\t                      return null;\n\t                  }\n\t              }\n\t              if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n\t                  if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n\t                      expansionFormStack.pop();\n\t                  }\n\t                  else {\n\t                      this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n\t                      return null;\n\t                  }\n\t              }\n\t              if (this._peek.type === TokenType$1.EOF) {\n\t                  this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n\t                  return null;\n\t              }\n\t              exp.push(this._advance());\n\t          }\n\t      };\n\t      _TreeBuilder.prototype._consumeText = function (token) {\n\t          var text = token.parts[0];\n\t          if (text.length > 0 && text[0] == '\\n') {\n\t              var parent_1 = this._getParentElement();\n\t              if (isPresent(parent_1) && parent_1.children.length == 0 &&\n\t                  this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n\t                  text = text.substring(1);\n\t              }\n\t          }\n\t          if (text.length > 0) {\n\t              this._addToParent(new Text(text, token.sourceSpan));\n\t          }\n\t      };\n\t      _TreeBuilder.prototype._closeVoidElement = function () {\n\t          if (this._elementStack.length > 0) {\n\t              var el = this._elementStack[this._elementStack.length - 1];\n\t              if (this.getTagDefinition(el.name).isVoid) {\n\t                  this._elementStack.pop();\n\t              }\n\t          }\n\t      };\n\t      _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n\t          var prefix = startTagToken.parts[0];\n\t          var name = startTagToken.parts[1];\n\t          var attrs = [];\n\t          while (this._peek.type === TokenType$1.ATTR_NAME) {\n\t              attrs.push(this._consumeAttr(this._advance()));\n\t          }\n\t          var fullName = this._getElementFullName(prefix, name, this._getParentElement());\n\t          var selfClosing = false;\n\t          // Note: There could have been a tokenizer error\n\t          // so that we don't get a token for the end tag...\n\t          if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n\t              this._advance();\n\t              selfClosing = true;\n\t              var tagDef = this.getTagDefinition(fullName);\n\t              if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n\t                  this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n\t              }\n\t          }\n\t          else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n\t              this._advance();\n\t              selfClosing = false;\n\t          }\n\t          var end = this._peek.sourceSpan.start;\n\t          var span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n\t          var el = new Element(fullName, attrs, [], span, span, null);\n\t          this._pushElement(el);\n\t          if (selfClosing) {\n\t              this._popElement(fullName);\n\t              el.endSourceSpan = span;\n\t          }\n\t      };\n\t      _TreeBuilder.prototype._pushElement = function (el) {\n\t          if (this._elementStack.length > 0) {\n\t              var parentEl = this._elementStack[this._elementStack.length - 1];\n\t              if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n\t                  this._elementStack.pop();\n\t              }\n\t          }\n\t          var tagDef = this.getTagDefinition(el.name);\n\t          var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n\t          if (isPresent(parent) && tagDef.requireExtraParent(parent.name)) {\n\t              var newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n\t              this._insertBeforeContainer(parent, container, newParent);\n\t          }\n\t          this._addToParent(el);\n\t          this._elementStack.push(el);\n\t      };\n\t      _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n\t          var fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n\t          if (this._getParentElement()) {\n\t              this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n\t          }\n\t          if (this.getTagDefinition(fullName).isVoid) {\n\t              this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n\t          }\n\t          else if (!this._popElement(fullName)) {\n\t              this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Unexpected closing tag \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n\t          }\n\t      };\n\t      _TreeBuilder.prototype._popElement = function (fullName) {\n\t          for (var stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n\t              var el = this._elementStack[stackIndex];\n\t              if (el.name == fullName) {\n\t                  this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n\t                  return true;\n\t              }\n\t              if (!this.getTagDefinition(el.name).closedByParent) {\n\t                  return false;\n\t              }\n\t          }\n\t          return false;\n\t      };\n\t      _TreeBuilder.prototype._consumeAttr = function (attrName) {\n\t          var fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n\t          var end = attrName.sourceSpan.end;\n\t          var value = '';\n\t          var valueSpan;\n\t          if (this._peek.type === TokenType$1.ATTR_VALUE) {\n\t              var valueToken = this._advance();\n\t              value = valueToken.parts[0];\n\t              end = valueToken.sourceSpan.end;\n\t              valueSpan = valueToken.sourceSpan;\n\t          }\n\t          return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n\t      };\n\t      _TreeBuilder.prototype._getParentElement = function () {\n\t          return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n\t      };\n\t      /**\n\t       * Returns the parent in the DOM and the container.\n\t       *\n\t       * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n\t       */\n\t      _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n\t          var container = null;\n\t          for (var i = this._elementStack.length - 1; i >= 0; i--) {\n\t              if (this._elementStack[i].name !== 'ng-container') {\n\t                  return { parent: this._elementStack[i], container: container };\n\t              }\n\t              container = this._elementStack[i];\n\t          }\n\t          return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n\t      };\n\t      _TreeBuilder.prototype._addToParent = function (node) {\n\t          var parent = this._getParentElement();\n\t          if (isPresent(parent)) {\n\t              parent.children.push(node);\n\t          }\n\t          else {\n\t              this._rootNodes.push(node);\n\t          }\n\t      };\n\t      /**\n\t       * Insert a node between the parent and the container.\n\t       * When no container is given, the node is appended as a child of the parent.\n\t       * Also updates the element stack accordingly.\n\t       *\n\t       * @internal\n\t       */\n\t      _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n\t          if (!container) {\n\t              this._addToParent(node);\n\t              this._elementStack.push(node);\n\t          }\n\t          else {\n\t              if (parent) {\n\t                  // replace the container with the new node in the children\n\t                  var index = parent.children.indexOf(container);\n\t                  parent.children[index] = node;\n\t              }\n\t              else {\n\t                  this._rootNodes.push(node);\n\t              }\n\t              node.children.push(container);\n\t              this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n\t          }\n\t      };\n\t      _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n\t          if (isBlank(prefix)) {\n\t              prefix = this.getTagDefinition(localName).implicitNamespacePrefix;\n\t              if (isBlank(prefix) && isPresent(parentElement)) {\n\t                  prefix = getNsPrefix(parentElement.name);\n\t              }\n\t          }\n\t          return mergeNsAndName(prefix, localName);\n\t      };\n\t      return _TreeBuilder;\n\t  }());\n\t  function lastOnStack(stack, element) {\n\t      return stack.length > 0 && stack[stack.length - 1] === element;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  function digestMessage(message) {\n\t      return sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n\t  }\n\t  /**\n\t   * Serialize the i18n ast to something xml-like in order to generate an UID.\n\t   *\n\t   * The visitor is also used in the i18n parser tests\n\t   *\n\t   * @internal\n\t   */\n\t  var _SerializerVisitor = (function () {\n\t      function _SerializerVisitor() {\n\t      }\n\t      _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n\t      _SerializerVisitor.prototype.visitContainer = function (container, context) {\n\t          var _this = this;\n\t          return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n\t      };\n\t      _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n\t          var _this = this;\n\t          var strCases = Object.keys(icu.cases).map(function (k) { return (k + \" {\" + icu.cases[k].visit(_this) + \"}\"); });\n\t          return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n\t      };\n\t      _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n\t          var _this = this;\n\t          return ph.isVoid ?\n\t              \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n\t              \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n\t      };\n\t      _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n\t          return \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\";\n\t      };\n\t      _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n\t          return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n\t      };\n\t      return _SerializerVisitor;\n\t  }());\n\t  var serializerVisitor = new _SerializerVisitor();\n\t  function serializeNodes(nodes) {\n\t      return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n\t  }\n\t  /**\n\t   * Compute the SHA1 of the given string\n\t   *\n\t   * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n\t   *\n\t   * WARNING: this function has not been designed not tested with security in mind.\n\t   *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n\t   */\n\t  function sha1(str) {\n\t      var utf8 = utf8Encode(str);\n\t      var words32 = stringToWords32(utf8);\n\t      var len = utf8.length * 8;\n\t      var w = new Array(80);\n\t      var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n\t      words32[len >> 5] |= 0x80 << (24 - len % 32);\n\t      words32[((len + 64 >> 9) << 4) + 15] = len;\n\t      for (var i = 0; i < words32.length; i += 16) {\n\t          var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n\t          for (var j = 0; j < 80; j++) {\n\t              if (j < 16) {\n\t                  w[j] = words32[i + j];\n\t              }\n\t              else {\n\t                  w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n\t              }\n\t              var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n\t              var temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n\t              _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n\t          }\n\t          _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n\t      }\n\t      var sha1 = words32ToString([a, b, c, d, e]);\n\t      var hex = '';\n\t      for (var i = 0; i < sha1.length; i++) {\n\t          var b_1 = sha1.charCodeAt(i);\n\t          hex += (b_1 >>> 4 & 0x0f).toString(16) + (b_1 & 0x0f).toString(16);\n\t      }\n\t      return hex.toLowerCase();\n\t      var _d, _e;\n\t  }\n\t  function utf8Encode(str) {\n\t      var encoded = '';\n\t      for (var index = 0; index < str.length; index++) {\n\t          var codePoint = decodeSurrogatePairs(str, index);\n\t          if (codePoint <= 0x7f) {\n\t              encoded += String.fromCharCode(codePoint);\n\t          }\n\t          else if (codePoint <= 0x7ff) {\n\t              encoded += String.fromCharCode(0xc0 | codePoint >>> 6, 0x80 | codePoint & 0x3f);\n\t          }\n\t          else if (codePoint <= 0xffff) {\n\t              encoded += String.fromCharCode(0xe0 | codePoint >>> 12, 0x80 | codePoint >>> 6 & 0x3f, 0x80 | codePoint & 0x3f);\n\t          }\n\t          else if (codePoint <= 0x1fffff) {\n\t              encoded += String.fromCharCode(0xf0 | codePoint >>> 18, 0x80 | codePoint >>> 12 & 0x3f, 0x80 | codePoint >>> 6 & 0x3f, 0x80 | codePoint & 0x3f);\n\t          }\n\t      }\n\t      return encoded;\n\t  }\n\t  // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t  function decodeSurrogatePairs(str, index) {\n\t      if (index < 0 || index >= str.length) {\n\t          throw new Error(\"index=\" + index + \" is out of range in \\\"\" + str + \"\\\"\");\n\t      }\n\t      var high = str.charCodeAt(index);\n\t      var low;\n\t      if (high >= 0xd800 && high <= 0xdfff && str.length > index + 1) {\n\t          low = str.charCodeAt(index + 1);\n\t          if (low >= 0xdc00 && low <= 0xdfff) {\n\t              return (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\n\t          }\n\t      }\n\t      return high;\n\t  }\n\t  function stringToWords32(str) {\n\t      var words32 = Array(str.length >>> 2);\n\t      for (var i = 0; i < words32.length; i++) {\n\t          words32[i] = 0;\n\t      }\n\t      for (var i = 0; i < str.length; i++) {\n\t          words32[i >>> 2] |= (str.charCodeAt(i) & 0xff) << 8 * (3 - i & 0x3);\n\t      }\n\t      return words32;\n\t  }\n\t  function words32ToString(words32) {\n\t      var str = '';\n\t      for (var i = 0; i < words32.length * 4; i++) {\n\t          str += String.fromCharCode((words32[i >>> 2] >>> 8 * (3 - i & 0x3)) & 0xff);\n\t      }\n\t      return str;\n\t  }\n\t  function fk(index, b, c, d) {\n\t      if (index < 20) {\n\t          return [(b & c) | (~b & d), 0x5a827999];\n\t      }\n\t      if (index < 40) {\n\t          return [b ^ c ^ d, 0x6ed9eba1];\n\t      }\n\t      if (index < 60) {\n\t          return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n\t      }\n\t      return [b ^ c ^ d, 0xca62c1d6];\n\t  }\n\t  function add32(a, b) {\n\t      var low = (a & 0xffff) + (b & 0xffff);\n\t      var high = (a >> 16) + (b >> 16) + (low >> 16);\n\t      return (high << 16) | (low & 0xffff);\n\t  }\n\t  function rol32(a, count) {\n\t      return (a << count) | (a >>> (32 - count));\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var Message = (function () {\n\t      /**\n\t       * @param nodes message AST\n\t       * @param placeholders maps placeholder names to static content\n\t       * @param placeholderToMsgIds maps placeholder names to translatable message IDs (used for ICU\n\t       *                            messages)\n\t       * @param meaning\n\t       * @param description\n\t       */\n\t      function Message(nodes, placeholders, placeholderToMsgIds, meaning, description) {\n\t          this.nodes = nodes;\n\t          this.placeholders = placeholders;\n\t          this.placeholderToMsgIds = placeholderToMsgIds;\n\t          this.meaning = meaning;\n\t          this.description = description;\n\t      }\n\t      return Message;\n\t  }());\n\t  var Text$1 = (function () {\n\t      function Text(value, sourceSpan) {\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n\t      return Text;\n\t  }());\n\t  var Container = (function () {\n\t      function Container(children, sourceSpan) {\n\t          this.children = children;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n\t      return Container;\n\t  }());\n\t  var Icu = (function () {\n\t      function Icu(expression, type, cases, sourceSpan) {\n\t          this.expression = expression;\n\t          this.type = type;\n\t          this.cases = cases;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n\t      return Icu;\n\t  }());\n\t  var TagPlaceholder = (function () {\n\t      function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n\t          this.tag = tag;\n\t          this.attrs = attrs;\n\t          this.startName = startName;\n\t          this.closeName = closeName;\n\t          this.children = children;\n\t          this.isVoid = isVoid;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n\t      return TagPlaceholder;\n\t  }());\n\t  var Placeholder = (function () {\n\t      function Placeholder(value, name, sourceSpan) {\n\t          if (name === void 0) { name = ''; }\n\t          this.value = value;\n\t          this.name = name;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n\t      return Placeholder;\n\t  }());\n\t  var IcuPlaceholder = (function () {\n\t      function IcuPlaceholder(value, name, sourceSpan) {\n\t          if (name === void 0) { name = ''; }\n\t          this.value = value;\n\t          this.name = name;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n\t      return IcuPlaceholder;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var TAG_TO_PLACEHOLDER_NAMES = {\n\t      'A': 'LINK',\n\t      'B': 'BOLD_TEXT',\n\t      'BR': 'LINE_BREAK',\n\t      'EM': 'EMPHASISED_TEXT',\n\t      'H1': 'HEADING_LEVEL1',\n\t      'H2': 'HEADING_LEVEL2',\n\t      'H3': 'HEADING_LEVEL3',\n\t      'H4': 'HEADING_LEVEL4',\n\t      'H5': 'HEADING_LEVEL5',\n\t      'H6': 'HEADING_LEVEL6',\n\t      'HR': 'HORIZONTAL_RULE',\n\t      'I': 'ITALIC_TEXT',\n\t      'LI': 'LIST_ITEM',\n\t      'LINK': 'MEDIA_LINK',\n\t      'OL': 'ORDERED_LIST',\n\t      'P': 'PARAGRAPH',\n\t      'Q': 'QUOTATION',\n\t      'S': 'STRIKETHROUGH_TEXT',\n\t      'SMALL': 'SMALL_TEXT',\n\t      'SUB': 'SUBSTRIPT',\n\t      'SUP': 'SUPERSCRIPT',\n\t      'TBODY': 'TABLE_BODY',\n\t      'TD': 'TABLE_CELL',\n\t      'TFOOT': 'TABLE_FOOTER',\n\t      'TH': 'TABLE_HEADER_CELL',\n\t      'THEAD': 'TABLE_HEADER',\n\t      'TR': 'TABLE_ROW',\n\t      'TT': 'MONOSPACED_TEXT',\n\t      'U': 'UNDERLINED_TEXT',\n\t      'UL': 'UNORDERED_LIST',\n\t  };\n\t  /**\n\t   * Creates unique names for placeholder with different content\n\t   *\n\t   * @internal\n\t   */\n\t  var PlaceholderRegistry = (function () {\n\t      function PlaceholderRegistry() {\n\t          // Count the occurrence of the base name top generate a unique name\n\t          this._placeHolderNameCounts = {};\n\t          // Maps signature to placeholder names\n\t          this._signatureToName = {};\n\t      }\n\t      PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n\t          var signature = this._hashTag(tag, attrs, isVoid);\n\t          if (this._signatureToName[signature]) {\n\t              return this._signatureToName[signature];\n\t          }\n\t          var upperTag = tag.toUpperCase();\n\t          var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n\t          var name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n\t          this._signatureToName[signature] = name;\n\t          return name;\n\t      };\n\t      PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n\t          var signature = this._hashClosingTag(tag);\n\t          if (this._signatureToName[signature]) {\n\t              return this._signatureToName[signature];\n\t          }\n\t          var upperTag = tag.toUpperCase();\n\t          var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n\t          var name = this._generateUniqueName(\"CLOSE_\" + baseName);\n\t          this._signatureToName[signature] = name;\n\t          return name;\n\t      };\n\t      PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n\t          var upperName = name.toUpperCase();\n\t          var signature = \"PH: \" + upperName + \"=\" + content;\n\t          if (this._signatureToName[signature]) {\n\t              return this._signatureToName[signature];\n\t          }\n\t          var uniqueName = this._generateUniqueName(upperName);\n\t          this._signatureToName[signature] = uniqueName;\n\t          return uniqueName;\n\t      };\n\t      // Generate a hash for a tag - does not take attribute order into account\n\t      PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n\t          var start = \"<\" + tag;\n\t          var strAttrs = Object.keys(attrs).sort().map(function (name) { return (\" \" + name + \"=\" + attrs[name]); }).join('');\n\t          var end = isVoid ? '/>' : \"></\" + tag + \">\";\n\t          return start + strAttrs + end;\n\t      };\n\t      PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n\t      PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n\t          var name = base;\n\t          var next = this._placeHolderNameCounts[name];\n\t          if (!next) {\n\t              next = 1;\n\t          }\n\t          else {\n\t              name += \"_\" + next;\n\t              next++;\n\t          }\n\t          this._placeHolderNameCounts[base] = next;\n\t          return name;\n\t      };\n\t      return PlaceholderRegistry;\n\t  }());\n\t\n\t  var _expParser = new Parser(new Lexer());\n\t  /**\n\t   * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n\t   */\n\t  function createI18nMessageFactory(interpolationConfig) {\n\t      var visitor = new _I18nVisitor(_expParser, interpolationConfig);\n\t      return function (nodes, meaning, description) {\n\t          return visitor.toI18nMessage(nodes, meaning, description);\n\t      };\n\t  }\n\t  var _I18nVisitor = (function () {\n\t      function _I18nVisitor(_expressionParser, _interpolationConfig) {\n\t          this._expressionParser = _expressionParser;\n\t          this._interpolationConfig = _interpolationConfig;\n\t      }\n\t      _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description) {\n\t          this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n\t          this._icuDepth = 0;\n\t          this._placeholderRegistry = new PlaceholderRegistry();\n\t          this._placeholderToContent = {};\n\t          this._placeholderToIds = {};\n\t          var i18nodes = visitAll(this, nodes, {});\n\t          return new Message(i18nodes, this._placeholderToContent, this._placeholderToIds, meaning, description);\n\t      };\n\t      _I18nVisitor.prototype.visitElement = function (el, context) {\n\t          var children = visitAll(this, el.children);\n\t          var attrs = {};\n\t          el.attrs.forEach(function (attr) {\n\t              // Do not visit the attributes, translatable ones are top-level ASTs\n\t              attrs[attr.name] = attr.value;\n\t          });\n\t          var isVoid = getHtmlTagDefinition(el.name).isVoid;\n\t          var startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n\t          this._placeholderToContent[startPhName] = el.sourceSpan.toString();\n\t          var closePhName = '';\n\t          if (!isVoid) {\n\t              closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n\t              this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n\t          }\n\t          return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, el.sourceSpan);\n\t      };\n\t      _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n\t          return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n\t      };\n\t      _I18nVisitor.prototype.visitText = function (text, context) {\n\t          return this._visitTextWithInterpolation(text.value, text.sourceSpan);\n\t      };\n\t      _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n\t      _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n\t          var _this = this;\n\t          this._icuDepth++;\n\t          var i18nIcuCases = {};\n\t          var i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n\t          icu.cases.forEach(function (caze) {\n\t              i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n\t          });\n\t          this._icuDepth--;\n\t          if (this._isIcu || this._icuDepth > 0) {\n\t              // If the message (vs a part of the message) is an ICU message returns it\n\t              return i18nIcu;\n\t          }\n\t          // Else returns a placeholder\n\t          // ICU placeholders should not be replaced with their original content but with the their\n\t          // translations. We need to create a new visitor (they are not re-entrant) to compute the\n\t          // message id.\n\t          // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n\t          var phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n\t          var visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n\t          this._placeholderToIds[phName] = digestMessage(visitor.toI18nMessage([icu], '', ''));\n\t          return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n\t      };\n\t      _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n\t          throw new Error('Unreachable code');\n\t      };\n\t      _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n\t          var splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n\t          if (!splitInterpolation) {\n\t              // No expression, return a single text\n\t              return new Text$1(text, sourceSpan);\n\t          }\n\t          // Return a group of text + expressions\n\t          var nodes = [];\n\t          var container = new Container(nodes, sourceSpan);\n\t          var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n\t          for (var i = 0; i < splitInterpolation.strings.length - 1; i++) {\n\t              var expression = splitInterpolation.expressions[i];\n\t              var baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n\t              var phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n\t              if (splitInterpolation.strings[i].length) {\n\t                  // No need to add empty strings\n\t                  nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n\t              }\n\t              nodes.push(new Placeholder(expression, phName, sourceSpan));\n\t              this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n\t          }\n\t          // The last index contains no expression\n\t          var lastStringIdx = splitInterpolation.strings.length - 1;\n\t          if (splitInterpolation.strings[lastStringIdx].length) {\n\t              nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n\t          }\n\t          return container;\n\t      };\n\t      return _I18nVisitor;\n\t  }());\n\t  var _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*\"([\\s\\S]*?)\"[\\s\\S]*\\)/g;\n\t  function _extractPlaceholderName(input) {\n\t      return input.split(_CUSTOM_PH_EXP)[1];\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$5 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  /**\n\t   * An i18n error.\n\t   */\n\t  var I18nError = (function (_super) {\n\t      __extends$5(I18nError, _super);\n\t      function I18nError(span, msg) {\n\t          _super.call(this, span, msg);\n\t      }\n\t      return I18nError;\n\t  }(ParseError));\n\t\n\t  var _I18N_ATTR = 'i18n';\n\t  var _I18N_ATTR_PREFIX = 'i18n-';\n\t  var _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\n\t  /**\n\t   * Extract translatable messages from an html AST\n\t   */\n\t  function extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n\t      var visitor = new _Visitor(implicitTags, implicitAttrs);\n\t      return visitor.extract(nodes, interpolationConfig);\n\t  }\n\t  function mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n\t      var visitor = new _Visitor(implicitTags, implicitAttrs);\n\t      return visitor.merge(nodes, translations, interpolationConfig);\n\t  }\n\t  var ExtractionResult = (function () {\n\t      function ExtractionResult(messages, errors) {\n\t          this.messages = messages;\n\t          this.errors = errors;\n\t      }\n\t      return ExtractionResult;\n\t  }());\n\t  var _VisitorMode;\n\t  (function (_VisitorMode) {\n\t      _VisitorMode[_VisitorMode[\"Extract\"] = 0] = \"Extract\";\n\t      _VisitorMode[_VisitorMode[\"Merge\"] = 1] = \"Merge\";\n\t  })(_VisitorMode || (_VisitorMode = {}));\n\t  /**\n\t   * This Visitor is used:\n\t   * 1. to extract all the translatable strings from an html AST (see `extract()`),\n\t   * 2. to replace the translatable strings with the actual translations (see `merge()`)\n\t   *\n\t   * @internal\n\t   */\n\t  var _Visitor = (function () {\n\t      function _Visitor(_implicitTags, _implicitAttrs) {\n\t          this._implicitTags = _implicitTags;\n\t          this._implicitAttrs = _implicitAttrs;\n\t      }\n\t      /**\n\t       * Extracts the messages from the tree\n\t       */\n\t      _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n\t          var _this = this;\n\t          this._init(_VisitorMode.Extract, interpolationConfig);\n\t          nodes.forEach(function (node) { return node.visit(_this, null); });\n\t          if (this._inI18nBlock) {\n\t              this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n\t          }\n\t          return new ExtractionResult(this._messages, this._errors);\n\t      };\n\t      /**\n\t       * Returns a tree where all translatable nodes are translated\n\t       */\n\t      _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n\t          this._init(_VisitorMode.Merge, interpolationConfig);\n\t          this._translations = translations;\n\t          // Construct a single fake root element\n\t          var wrapper = new Element('wrapper', [], nodes, null, null, null);\n\t          var translatedNode = wrapper.visit(this, null);\n\t          if (this._inI18nBlock) {\n\t              this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n\t          }\n\t          return new ParseTreeResult(translatedNode.children, this._errors);\n\t      };\n\t      _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n\t          // Parse cases for translatable html attributes\n\t          var expression = visitAll(this, icuCase.expression, context);\n\t          if (this._mode === _VisitorMode.Merge) {\n\t              return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n\t          }\n\t      };\n\t      _Visitor.prototype.visitExpansion = function (icu, context) {\n\t          this._mayBeAddBlockChildren(icu);\n\t          var wasInIcu = this._inIcu;\n\t          if (!this._inIcu) {\n\t              // nested ICU messages should not be extracted but top-level translated as a whole\n\t              if (this._isInTranslatableSection) {\n\t                  this._addMessage([icu]);\n\t              }\n\t              this._inIcu = true;\n\t          }\n\t          var cases = visitAll(this, icu.cases, context);\n\t          if (this._mode === _VisitorMode.Merge) {\n\t              icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n\t          }\n\t          this._inIcu = wasInIcu;\n\t          return icu;\n\t      };\n\t      _Visitor.prototype.visitComment = function (comment, context) {\n\t          var isOpening = _isOpeningComment(comment);\n\t          if (isOpening && this._isInTranslatableSection) {\n\t              this._reportError(comment, 'Could not start a block inside a translatable section');\n\t              return;\n\t          }\n\t          var isClosing = _isClosingComment(comment);\n\t          if (isClosing && !this._inI18nBlock) {\n\t              this._reportError(comment, 'Trying to close an unopened block');\n\t              return;\n\t          }\n\t          if (!this._inI18nNode && !this._inIcu) {\n\t              if (!this._inI18nBlock) {\n\t                  if (isOpening) {\n\t                      this._inI18nBlock = true;\n\t                      this._blockStartDepth = this._depth;\n\t                      this._blockChildren = [];\n\t                      this._blockMeaningAndDesc = comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n\t                      this._openTranslatableSection(comment);\n\t                  }\n\t              }\n\t              else {\n\t                  if (isClosing) {\n\t                      if (this._depth == this._blockStartDepth) {\n\t                          this._closeTranslatableSection(comment, this._blockChildren);\n\t                          this._inI18nBlock = false;\n\t                          var message = this._addMessage(this._blockChildren, this._blockMeaningAndDesc);\n\t                          // merge attributes in sections\n\t                          var nodes = this._translateMessage(comment, message);\n\t                          return visitAll(this, nodes);\n\t                      }\n\t                      else {\n\t                          this._reportError(comment, 'I18N blocks should not cross element boundaries');\n\t                          return;\n\t                      }\n\t                  }\n\t              }\n\t          }\n\t      };\n\t      _Visitor.prototype.visitText = function (text, context) {\n\t          if (this._isInTranslatableSection) {\n\t              this._mayBeAddBlockChildren(text);\n\t          }\n\t          return text;\n\t      };\n\t      _Visitor.prototype.visitElement = function (el, context) {\n\t          var _this = this;\n\t          this._mayBeAddBlockChildren(el);\n\t          this._depth++;\n\t          var wasInI18nNode = this._inI18nNode;\n\t          var wasInImplicitNode = this._inImplicitNode;\n\t          var childNodes;\n\t          // Extract only top level nodes with the (implicit) \"i18n\" attribute if not in a block or an ICU\n\t          // message\n\t          var i18nAttr = _getI18nAttr(el);\n\t          var isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) &&\n\t              !this._inIcu && !this._isInTranslatableSection;\n\t          var isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n\t          this._inImplicitNode = this._inImplicitNode || isImplicit;\n\t          if (!this._isInTranslatableSection && !this._inIcu) {\n\t              if (i18nAttr) {\n\t                  // explicit translation\n\t                  this._inI18nNode = true;\n\t                  var message = this._addMessage(el.children, i18nAttr.value);\n\t                  childNodes = this._translateMessage(el, message);\n\t              }\n\t              else if (isTopLevelImplicit) {\n\t                  // implicit translation\n\t                  this._inI18nNode = true;\n\t                  var message = this._addMessage(el.children);\n\t                  childNodes = this._translateMessage(el, message);\n\t              }\n\t              if (this._mode == _VisitorMode.Extract) {\n\t                  var isTranslatable = i18nAttr || isTopLevelImplicit;\n\t                  if (isTranslatable) {\n\t                      this._openTranslatableSection(el);\n\t                  }\n\t                  visitAll(this, el.children);\n\t                  if (isTranslatable) {\n\t                      this._closeTranslatableSection(el, el.children);\n\t                  }\n\t              }\n\t              if (this._mode === _VisitorMode.Merge && !i18nAttr && !isTopLevelImplicit) {\n\t                  childNodes = [];\n\t                  el.children.forEach(function (child) {\n\t                      var visited = child.visit(_this, context);\n\t                      if (visited && !_this._isInTranslatableSection) {\n\t                          // Do not add the children from translatable sections (= i18n blocks here)\n\t                          // They will be added when the section is close (i.e. on `<!-- /i18n -->`)\n\t                          childNodes = childNodes.concat(visited);\n\t                      }\n\t                  });\n\t              }\n\t          }\n\t          else {\n\t              if (i18nAttr || isTopLevelImplicit) {\n\t                  this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n\t              }\n\t              if (this._mode == _VisitorMode.Extract) {\n\t                  // Descend into child nodes for extraction\n\t                  visitAll(this, el.children);\n\t              }\n\t              if (this._mode == _VisitorMode.Merge) {\n\t                  // Translate attributes in ICU messages\n\t                  childNodes = [];\n\t                  el.children.forEach(function (child) {\n\t                      var visited = child.visit(_this, context);\n\t                      if (visited && !_this._isInTranslatableSection) {\n\t                          // Do not add the children from translatable sections (= i18n blocks here)\n\t                          // They will be added when the section is close (i.e. on `<!-- /i18n -->`)\n\t                          childNodes = childNodes.concat(visited);\n\t                      }\n\t                  });\n\t              }\n\t          }\n\t          this._visitAttributesOf(el);\n\t          this._depth--;\n\t          this._inI18nNode = wasInI18nNode;\n\t          this._inImplicitNode = wasInImplicitNode;\n\t          if (this._mode === _VisitorMode.Merge) {\n\t              // There are no childNodes in translatable sections - those nodes will be replace anyway\n\t              var translatedAttrs = this._translateAttributes(el);\n\t              return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n\t          }\n\t      };\n\t      _Visitor.prototype.visitAttribute = function (attribute, context) {\n\t          throw new Error('unreachable code');\n\t      };\n\t      _Visitor.prototype._init = function (mode, interpolationConfig) {\n\t          this._mode = mode;\n\t          this._inI18nBlock = false;\n\t          this._inI18nNode = false;\n\t          this._depth = 0;\n\t          this._inIcu = false;\n\t          this._msgCountAtSectionStart = void 0;\n\t          this._errors = [];\n\t          this._messages = [];\n\t          this._inImplicitNode = false;\n\t          this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n\t      };\n\t      // looks for translatable attributes\n\t      _Visitor.prototype._visitAttributesOf = function (el) {\n\t          var _this = this;\n\t          var explicitAttrNameToValue = {};\n\t          var implicitAttrNames = this._implicitAttrs[el.name] || [];\n\t          el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n\t              .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n\t              attr.value; });\n\t          el.attrs.forEach(function (attr) {\n\t              if (attr.name in explicitAttrNameToValue) {\n\t                  _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n\t              }\n\t              else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n\t                  _this._addMessage([attr]);\n\t              }\n\t          });\n\t      };\n\t      // add a translatable message\n\t      _Visitor.prototype._addMessage = function (ast, meaningAndDesc) {\n\t          if (ast.length == 0 ||\n\t              ast.length == 1 && ast[0] instanceof Attribute$1 && !ast[0].value) {\n\t              // Do not create empty messages\n\t              return;\n\t          }\n\t          var _a = _splitMeaningAndDesc(meaningAndDesc), meaning = _a[0], description = _a[1];\n\t          var message = this._createI18nMessage(ast, meaning, description);\n\t          this._messages.push(message);\n\t          return message;\n\t      };\n\t      // Translates the given message given the `TranslationBundle`\n\t      // no-op when called in extraction mode (returns [])\n\t      _Visitor.prototype._translateMessage = function (el, message) {\n\t          if (message && this._mode === _VisitorMode.Merge) {\n\t              var id = digestMessage(message);\n\t              var nodes = this._translations.get(id);\n\t              if (nodes) {\n\t                  return nodes;\n\t              }\n\t              this._reportError(el, \"Translation unavailable for message id=\\\"\" + id + \"\\\"\");\n\t          }\n\t          return [];\n\t      };\n\t      // translate the attributes of an element and remove i18n specific attributes\n\t      _Visitor.prototype._translateAttributes = function (el) {\n\t          var _this = this;\n\t          var attributes = el.attrs;\n\t          var i18nAttributeMeanings = {};\n\t          attributes.forEach(function (attr) {\n\t              if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n\t                  i18nAttributeMeanings[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n\t                      _splitMeaningAndDesc(attr.value)[0];\n\t              }\n\t          });\n\t          var translatedAttributes = [];\n\t          attributes.forEach(function (attr) {\n\t              if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n\t                  // strip i18n specific attributes\n\t                  return;\n\t              }\n\t              if (attr.value && attr.value != '' && i18nAttributeMeanings.hasOwnProperty(attr.name)) {\n\t                  var meaning = i18nAttributeMeanings[attr.name];\n\t                  var message = _this._createI18nMessage([attr], meaning, '');\n\t                  var id = digestMessage(message);\n\t                  var nodes = _this._translations.get(id);\n\t                  if (nodes) {\n\t                      if (nodes[0] instanceof Text) {\n\t                          var value = nodes[0].value;\n\t                          translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n\t                      }\n\t                      else {\n\t                          _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + id + \"\\\")\");\n\t                      }\n\t                  }\n\t                  else {\n\t                      _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + id + \"\\\")\");\n\t                  }\n\t              }\n\t              else {\n\t                  translatedAttributes.push(attr);\n\t              }\n\t          });\n\t          return translatedAttributes;\n\t      };\n\t      /**\n\t       * Add the node as a child of the block when:\n\t       * - we are in a block,\n\t       * - we are not inside a ICU message (those are handled separately),\n\t       * - the node is a \"direct child\" of the block\n\t       */\n\t      _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n\t          if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n\t              this._blockChildren.push(node);\n\t          }\n\t      };\n\t      /**\n\t       * Marks the start of a section, see `_endSection`\n\t       */\n\t      _Visitor.prototype._openTranslatableSection = function (node) {\n\t          if (this._isInTranslatableSection) {\n\t              this._reportError(node, 'Unexpected section start');\n\t          }\n\t          else {\n\t              this._msgCountAtSectionStart = this._messages.length;\n\t          }\n\t      };\n\t      Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n\t          /**\n\t           * A translatable section could be:\n\t           * - a translatable element,\n\t           * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n\t           */\n\t          get: function () {\n\t              return this._msgCountAtSectionStart !== void 0;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      /**\n\t       * Terminates a section.\n\t       *\n\t       * If a section has only one significant children (comments not significant) then we should not\n\t       * keep the message from this children:\n\t       *\n\t       * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n\t       * - one for the <p> content with meaning and description,\n\t       * - another one for the ICU message.\n\t       *\n\t       * In this case the last message is discarded as it contains less information (the AST is\n\t       * otherwise identical).\n\t       *\n\t       * Note that we should still keep messages extracted from attributes inside the section (ie in the\n\t       * ICU message here)\n\t       */\n\t      _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n\t          if (!this._isInTranslatableSection) {\n\t              this._reportError(node, 'Unexpected section end');\n\t              return;\n\t          }\n\t          var startIndex = this._msgCountAtSectionStart;\n\t          var significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n\t          if (significantChildren == 1) {\n\t              for (var i = this._messages.length - 1; i >= startIndex; i--) {\n\t                  var ast = this._messages[i].nodes;\n\t                  if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n\t                      this._messages.splice(i, 1);\n\t                      break;\n\t                  }\n\t              }\n\t          }\n\t          this._msgCountAtSectionStart = void 0;\n\t      };\n\t      _Visitor.prototype._reportError = function (node, msg) {\n\t          this._errors.push(new I18nError(node.sourceSpan, msg));\n\t      };\n\t      return _Visitor;\n\t  }());\n\t  function _isOpeningComment(n) {\n\t      return n instanceof Comment && n.value && n.value.startsWith('i18n');\n\t  }\n\t  function _isClosingComment(n) {\n\t      return n instanceof Comment && n.value && n.value === '/i18n';\n\t  }\n\t  function _getI18nAttr(p) {\n\t      return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n\t  }\n\t  function _splitMeaningAndDesc(i18n) {\n\t      if (!i18n)\n\t          return ['', ''];\n\t      var pipeIndex = i18n.indexOf('|');\n\t      return pipeIndex == -1 ? ['', i18n] : [i18n.slice(0, pipeIndex), i18n.slice(pipeIndex + 1)];\n\t  }\n\t\n\t  /**\n\t   * A container for message extracted from the templates.\n\t   */\n\t  var MessageBundle = (function () {\n\t      function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs) {\n\t          this._htmlParser = _htmlParser;\n\t          this._implicitTags = _implicitTags;\n\t          this._implicitAttrs = _implicitAttrs;\n\t          this._messageMap = {};\n\t      }\n\t      MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n\t          var _this = this;\n\t          var htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n\t          if (htmlParserResult.errors.length) {\n\t              return htmlParserResult.errors;\n\t          }\n\t          var i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n\t          if (i18nParserResult.errors.length) {\n\t              return i18nParserResult.errors;\n\t          }\n\t          i18nParserResult.messages.forEach(function (message) { _this._messageMap[digestMessage(message)] = message; });\n\t      };\n\t      MessageBundle.prototype.getMessageMap = function () { return this._messageMap; };\n\t      MessageBundle.prototype.write = function (serializer) { return serializer.write(this._messageMap); };\n\t      return MessageBundle;\n\t  }());\n\t\n\t  var XmlTagDefinition = (function () {\n\t      function XmlTagDefinition() {\n\t          this.closedByParent = false;\n\t          this.contentType = TagContentType.PARSABLE_DATA;\n\t          this.isVoid = false;\n\t          this.ignoreFirstLf = false;\n\t          this.canSelfClose = true;\n\t      }\n\t      XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n\t      XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n\t      return XmlTagDefinition;\n\t  }());\n\t  var _TAG_DEFINITION = new XmlTagDefinition();\n\t  function getXmlTagDefinition(tagName) {\n\t      return _TAG_DEFINITION;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$6 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var XmlParser = (function (_super) {\n\t      __extends$6(XmlParser, _super);\n\t      function XmlParser() {\n\t          _super.call(this, getXmlTagDefinition);\n\t      }\n\t      XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n\t          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n\t          return _super.prototype.parse.call(this, source, url, parseExpansionForms, null);\n\t      };\n\t      return XmlParser;\n\t  }(Parser$1));\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  // Generate a map of placeholder to content indexed by message ids\n\t  function extractPlaceholders(messageBundle) {\n\t      var messageMap = messageBundle.getMessageMap();\n\t      var placeholders = {};\n\t      Object.keys(messageMap).forEach(function (msgId) {\n\t          placeholders[msgId] = messageMap[msgId].placeholders;\n\t      });\n\t      return placeholders;\n\t  }\n\t  // Generate a map of placeholder to message ids indexed by message ids\n\t  function extractPlaceholderToIds(messageBundle) {\n\t      var messageMap = messageBundle.getMessageMap();\n\t      var placeholderToIds = {};\n\t      Object.keys(messageMap).forEach(function (msgId) {\n\t          placeholderToIds[msgId] = messageMap[msgId].placeholderToMsgIds;\n\t      });\n\t      return placeholderToIds;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$7 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var _Visitor$1 = (function () {\n\t      function _Visitor() {\n\t      }\n\t      _Visitor.prototype.visitTag = function (tag) {\n\t          var _this = this;\n\t          var strAttrs = this._serializeAttributes(tag.attrs);\n\t          if (tag.children.length == 0) {\n\t              return \"<\" + tag.name + strAttrs + \"/>\";\n\t          }\n\t          var strChildren = tag.children.map(function (node) { return node.visit(_this); });\n\t          return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n\t      };\n\t      _Visitor.prototype.visitText = function (text) { return text.value; };\n\t      _Visitor.prototype.visitDeclaration = function (decl) {\n\t          return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n\t      };\n\t      _Visitor.prototype._serializeAttributes = function (attrs) {\n\t          var strAttrs = Object.keys(attrs).map(function (name) { return (name + \"=\\\"\" + attrs[name] + \"\\\"\"); }).join(' ');\n\t          return strAttrs.length > 0 ? ' ' + strAttrs : '';\n\t      };\n\t      _Visitor.prototype.visitDoctype = function (doctype) {\n\t          return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n\t      };\n\t      return _Visitor;\n\t  }());\n\t  var _visitor = new _Visitor$1();\n\t  function serialize(nodes) {\n\t      return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n\t  }\n\t  var Declaration = (function () {\n\t      function Declaration(unescapedAttrs) {\n\t          var _this = this;\n\t          this.attrs = {};\n\t          Object.keys(unescapedAttrs).forEach(function (k) {\n\t              _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n\t          });\n\t      }\n\t      Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n\t      return Declaration;\n\t  }());\n\t  var Doctype = (function () {\n\t      function Doctype(rootTag, dtd) {\n\t          this.rootTag = rootTag;\n\t          this.dtd = dtd;\n\t      }\n\t      ;\n\t      Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n\t      return Doctype;\n\t  }());\n\t  var Tag = (function () {\n\t      function Tag(name, unescapedAttrs, children) {\n\t          var _this = this;\n\t          if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n\t          if (children === void 0) { children = []; }\n\t          this.name = name;\n\t          this.children = children;\n\t          this.attrs = {};\n\t          Object.keys(unescapedAttrs).forEach(function (k) {\n\t              _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n\t          });\n\t      }\n\t      Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n\t      return Tag;\n\t  }());\n\t  var Text$2 = (function () {\n\t      function Text(unescapedValue) {\n\t          this.value = _escapeXml(unescapedValue);\n\t      }\n\t      ;\n\t      Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n\t      return Text;\n\t  }());\n\t  var CR = (function (_super) {\n\t      __extends$7(CR, _super);\n\t      function CR(ws) {\n\t          if (ws === void 0) { ws = 0; }\n\t          _super.call(this, \"\\n\" + new Array(ws + 1).join(' '));\n\t      }\n\t      return CR;\n\t  }(Text$2));\n\t  var _ESCAPED_CHARS = [\n\t      [/&/g, '&amp;'],\n\t      [/\"/g, '&quot;'],\n\t      [/'/g, '&apos;'],\n\t      [/</g, '&lt;'],\n\t      [/>/g, '&gt;'],\n\t  ];\n\t  function _escapeXml(text) {\n\t      return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n\t  }\n\t\n\t  var _VERSION = '1.2';\n\t  var _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n\t  // TODO(vicb): make this a param (s/_/-/)\n\t  var _SOURCE_LANG = 'en';\n\t  var _PLACEHOLDER_TAG = 'x';\n\t  var _SOURCE_TAG = 'source';\n\t  var _TARGET_TAG = 'target';\n\t  var _UNIT_TAG = 'trans-unit';\n\t  // http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n\t  // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\n\t  var Xliff = (function () {\n\t      function Xliff(_htmlParser, _interpolationConfig) {\n\t          this._htmlParser = _htmlParser;\n\t          this._interpolationConfig = _interpolationConfig;\n\t      }\n\t      Xliff.prototype.write = function (messageMap) {\n\t          var visitor = new _WriteVisitor();\n\t          var transUnits = [];\n\t          Object.keys(messageMap).forEach(function (id) {\n\t              var message = messageMap[id];\n\t              var transUnit = new Tag(_UNIT_TAG, { id: id, datatype: 'html' });\n\t              transUnit.children.push(new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new CR(8), new Tag(_TARGET_TAG));\n\t              if (message.description) {\n\t                  transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n\t              }\n\t              if (message.meaning) {\n\t                  transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n\t              }\n\t              transUnit.children.push(new CR(6));\n\t              transUnits.push(new CR(6), transUnit);\n\t          });\n\t          var body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n\t          var file = new Tag('file', { 'source-language': _SOURCE_LANG, datatype: 'plaintext', original: 'ng2.template' }, [new CR(4), body, new CR(2)]);\n\t          var xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n\t          return serialize([\n\t              new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n\t          ]);\n\t      };\n\t      Xliff.prototype.load = function (content, url, messageBundle) {\n\t          var _this = this;\n\t          // Parse the xtb file into xml nodes\n\t          var result = new XmlParser().parse(content, url);\n\t          if (result.errors.length) {\n\t              throw new Error(\"xtb parse errors:\\n\" + result.errors.join('\\n'));\n\t          }\n\t          // Replace the placeholders, messages are now string\n\t          var _a = new _LoadVisitor().parse(result.rootNodes, messageBundle), messages = _a.messages, errors = _a.errors;\n\t          if (errors.length) {\n\t              throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n\t          }\n\t          // Convert the string messages to html ast\n\t          // TODO(vicb): map error message back to the original message in xtb\n\t          var messageMap = {};\n\t          var parseErrors = [];\n\t          Object.keys(messages).forEach(function (id) {\n\t              var res = _this._htmlParser.parse(messages[id], url, true, _this._interpolationConfig);\n\t              parseErrors.push.apply(parseErrors, res.errors);\n\t              messageMap[id] = res.rootNodes;\n\t          });\n\t          if (parseErrors.length) {\n\t              throw new Error(\"xtb parse errors:\\n\" + parseErrors.join('\\n'));\n\t          }\n\t          return messageMap;\n\t      };\n\t      return Xliff;\n\t  }());\n\t  var _WriteVisitor = (function () {\n\t      function _WriteVisitor() {\n\t      }\n\t      _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n\t      _WriteVisitor.prototype.visitContainer = function (container, context) {\n\t          var _this = this;\n\t          var nodes = [];\n\t          container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n\t          return nodes;\n\t      };\n\t      _WriteVisitor.prototype.visitIcu = function (icu, context) {\n\t          if (this._isInIcu) {\n\t              // nested ICU is not supported\n\t              throw new Error('xliff does not support nested ICU messages');\n\t          }\n\t          this._isInIcu = true;\n\t          // TODO(vicb): support ICU messages\n\t          // https://lists.oasis-open.org/archives/xliff/201201/msg00028.html\n\t          // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-po/xliff-profile-po-1.2-cd02.html\n\t          var nodes = [];\n\t          this._isInIcu = false;\n\t          return nodes;\n\t      };\n\t      _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n\t          var ctype = getCtypeForTag(ph.tag);\n\t          var startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n\t          if (ph.isVoid) {\n\t              // void tags have no children nor closing tags\n\t              return [startTagPh];\n\t          }\n\t          var closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n\t          return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n\t      };\n\t      _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n\t          return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n\t      };\n\t      _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n\t          return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n\t      };\n\t      _WriteVisitor.prototype.serialize = function (nodes) {\n\t          var _this = this;\n\t          this._isInIcu = false;\n\t          return ListWrapper.flatten(nodes.map(function (node) { return node.visit(_this); }));\n\t      };\n\t      return _WriteVisitor;\n\t  }());\n\t  // TODO(vicb): add error management (structure)\n\t  // TODO(vicb): factorize (xtb) ?\n\t  var _LoadVisitor = (function () {\n\t      function _LoadVisitor() {\n\t      }\n\t      _LoadVisitor.prototype.parse = function (nodes, messageBundle) {\n\t          var _this = this;\n\t          this._messageNodes = [];\n\t          this._translatedMessages = {};\n\t          this._msgId = '';\n\t          this._target = [];\n\t          this._errors = [];\n\t          // Find all messages\n\t          visitAll(this, nodes, null);\n\t          var messageMap = messageBundle.getMessageMap();\n\t          var placeholders = extractPlaceholders(messageBundle);\n\t          var placeholderToIds = extractPlaceholderToIds(messageBundle);\n\t          this._messageNodes\n\t              .filter(function (message) {\n\t              // Remove any messages that is not present in the source message bundle.\n\t              return messageMap.hasOwnProperty(message[0]);\n\t          })\n\t              .sort(function (a, b) {\n\t              // Because there could be no ICU placeholders inside an ICU message,\n\t              // we do not need to take into account the `placeholderToMsgIds` of the referenced\n\t              // messages, those would always be empty\n\t              // TODO(vicb): overkill - create 2 buckets and [...woDeps, ...wDeps].process()\n\t              if (Object.keys(messageMap[a[0]].placeholderToMsgIds).length == 0) {\n\t                  return -1;\n\t              }\n\t              if (Object.keys(messageMap[b[0]].placeholderToMsgIds).length == 0) {\n\t                  return 1;\n\t              }\n\t              return 0;\n\t          })\n\t              .forEach(function (message) {\n\t              var id = message[0];\n\t              _this._placeholders = placeholders[id] || {};\n\t              _this._placeholderToIds = placeholderToIds[id] || {};\n\t              // TODO(vicb): make sure there is no `_TRANSLATIONS_TAG` nor `_TRANSLATION_TAG`\n\t              _this._translatedMessages[id] = visitAll(_this, message[1]).join('');\n\t          });\n\t          return { messages: this._translatedMessages, errors: this._errors };\n\t      };\n\t      _LoadVisitor.prototype.visitElement = function (element, context) {\n\t          switch (element.name) {\n\t              case _UNIT_TAG:\n\t                  this._target = null;\n\t                  var msgId = element.attrs.find(function (attr) { return attr.name === 'id'; });\n\t                  if (!msgId) {\n\t                      this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n\t                  }\n\t                  else {\n\t                      this._msgId = msgId.value;\n\t                  }\n\t                  visitAll(this, element.children, null);\n\t                  if (this._msgId !== null) {\n\t                      this._messageNodes.push([this._msgId, this._target]);\n\t                  }\n\t                  break;\n\t              case _SOURCE_TAG:\n\t                  // ignore source message\n\t                  break;\n\t              case _TARGET_TAG:\n\t                  this._target = element.children;\n\t                  break;\n\t              case _PLACEHOLDER_TAG:\n\t                  var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n\t                  if (!idAttr) {\n\t                      this._addError(element, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n\t                  }\n\t                  else {\n\t                      var id = idAttr.value;\n\t                      if (this._placeholders.hasOwnProperty(id)) {\n\t                          return this._placeholders[id];\n\t                      }\n\t                      if (this._placeholderToIds.hasOwnProperty(id) &&\n\t                          this._translatedMessages.hasOwnProperty(this._placeholderToIds[id])) {\n\t                          return this._translatedMessages[this._placeholderToIds[id]];\n\t                      }\n\t                      // TODO(vicb): better error message for when\n\t                      // !this._translatedMessages.hasOwnProperty(this._placeholderToIds[id])\n\t                      this._addError(element, \"The placeholder \\\"\" + id + \"\\\" does not exists in the source message\");\n\t                  }\n\t                  break;\n\t              default:\n\t                  visitAll(this, element.children, null);\n\t          }\n\t      };\n\t      _LoadVisitor.prototype.visitAttribute = function (attribute, context) {\n\t          throw new Error('unreachable code');\n\t      };\n\t      _LoadVisitor.prototype.visitText = function (text, context) { return text.value; };\n\t      _LoadVisitor.prototype.visitComment = function (comment, context) { return ''; };\n\t      _LoadVisitor.prototype.visitExpansion = function (expansion, context) {\n\t          throw new Error('unreachable code');\n\t      };\n\t      _LoadVisitor.prototype.visitExpansionCase = function (expansionCase, context) {\n\t          throw new Error('unreachable code');\n\t      };\n\t      _LoadVisitor.prototype._addError = function (node, message) {\n\t          this._errors.push(new I18nError(node.sourceSpan, message));\n\t      };\n\t      return _LoadVisitor;\n\t  }());\n\t  function getCtypeForTag(tag) {\n\t      switch (tag.toLowerCase()) {\n\t          case 'br':\n\t              return 'lb';\n\t          case 'img':\n\t              return 'image';\n\t          default:\n\t              return \"x-\" + tag;\n\t      }\n\t  }\n\t\n\t  var _MESSAGES_TAG = 'messagebundle';\n\t  var _MESSAGE_TAG = 'msg';\n\t  var _PLACEHOLDER_TAG$1 = 'ph';\n\t  var _EXEMPLE_TAG = 'ex';\n\t  var _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\n\t  var Xmb = (function () {\n\t      function Xmb() {\n\t      }\n\t      Xmb.prototype.write = function (messageMap) {\n\t          var visitor = new _Visitor$2();\n\t          var rootNode = new Tag(_MESSAGES_TAG);\n\t          Object.keys(messageMap).forEach(function (id) {\n\t              var message = messageMap[id];\n\t              var attrs = { id: id };\n\t              if (message.description) {\n\t                  attrs['desc'] = message.description;\n\t              }\n\t              if (message.meaning) {\n\t                  attrs['meaning'] = message.meaning;\n\t              }\n\t              rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, visitor.serialize(message.nodes)));\n\t          });\n\t          rootNode.children.push(new CR());\n\t          return serialize([\n\t              new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n\t              new CR(),\n\t              new Doctype(_MESSAGES_TAG, _DOCTYPE),\n\t              new CR(),\n\t              rootNode,\n\t              new CR(),\n\t          ]);\n\t      };\n\t      Xmb.prototype.load = function (content, url, messageBundle) {\n\t          throw new Error('Unsupported');\n\t      };\n\t      return Xmb;\n\t  }());\n\t  var _Visitor$2 = (function () {\n\t      function _Visitor() {\n\t      }\n\t      _Visitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n\t      _Visitor.prototype.visitContainer = function (container, context) {\n\t          var _this = this;\n\t          var nodes = [];\n\t          container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n\t          return nodes;\n\t      };\n\t      _Visitor.prototype.visitIcu = function (icu, context) {\n\t          var _this = this;\n\t          var nodes = [new Text$2(\"{\" + icu.expression + \", \" + icu.type + \", \")];\n\t          Object.keys(icu.cases).forEach(function (c) {\n\t              nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n\t          });\n\t          nodes.push(new Text$2(\"}\"));\n\t          return nodes;\n\t      };\n\t      _Visitor.prototype.visitTagPlaceholder = function (ph, context) {\n\t          var startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n\t          var startTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.startName }, [startEx]);\n\t          if (ph.isVoid) {\n\t              // void tags have no children nor closing tags\n\t              return [startTagPh];\n\t          }\n\t          var closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n\t          var closeTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.closeName }, [closeEx]);\n\t          return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n\t      };\n\t      _Visitor.prototype.visitPlaceholder = function (ph, context) {\n\t          return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n\t      };\n\t      _Visitor.prototype.visitIcuPlaceholder = function (ph, context) {\n\t          return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n\t      };\n\t      _Visitor.prototype.serialize = function (nodes) {\n\t          var _this = this;\n\t          return ListWrapper.flatten(nodes.map(function (node) { return node.visit(_this); }));\n\t      };\n\t      return _Visitor;\n\t  }());\n\t\n\t  var _TRANSLATIONS_TAG = 'translationbundle';\n\t  var _TRANSLATION_TAG = 'translation';\n\t  var _PLACEHOLDER_TAG$2 = 'ph';\n\t  var Xtb = (function () {\n\t      function Xtb(_htmlParser, _interpolationConfig) {\n\t          this._htmlParser = _htmlParser;\n\t          this._interpolationConfig = _interpolationConfig;\n\t      }\n\t      Xtb.prototype.write = function (messageMap) { throw new Error('Unsupported'); };\n\t      Xtb.prototype.load = function (content, url, messageBundle) {\n\t          var _this = this;\n\t          // Parse the xtb file into xml nodes\n\t          var result = new XmlParser().parse(content, url);\n\t          if (result.errors.length) {\n\t              throw new Error(\"xtb parse errors:\\n\" + result.errors.join('\\n'));\n\t          }\n\t          // Replace the placeholders, messages are now string\n\t          var _a = new _Visitor$3().parse(result.rootNodes, messageBundle), messages = _a.messages, errors = _a.errors;\n\t          if (errors.length) {\n\t              throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n\t          }\n\t          // Convert the string messages to html ast\n\t          // TODO(vicb): map error message back to the original message in xtb\n\t          var messageMap = {};\n\t          var parseErrors = [];\n\t          Object.keys(messages).forEach(function (id) {\n\t              var res = _this._htmlParser.parse(messages[id], url, true, _this._interpolationConfig);\n\t              parseErrors.push.apply(parseErrors, res.errors);\n\t              messageMap[id] = res.rootNodes;\n\t          });\n\t          if (parseErrors.length) {\n\t              throw new Error(\"xtb parse errors:\\n\" + parseErrors.join('\\n'));\n\t          }\n\t          return messageMap;\n\t      };\n\t      return Xtb;\n\t  }());\n\t  var _Visitor$3 = (function () {\n\t      function _Visitor() {\n\t      }\n\t      _Visitor.prototype.parse = function (nodes, messageBundle) {\n\t          var _this = this;\n\t          this._messageNodes = [];\n\t          this._translatedMessages = {};\n\t          this._bundleDepth = 0;\n\t          this._translationDepth = 0;\n\t          this._errors = [];\n\t          // Find all messages\n\t          visitAll(this, nodes, null);\n\t          var messageMap = messageBundle.getMessageMap();\n\t          var placeholders = extractPlaceholders(messageBundle);\n\t          var placeholderToIds = extractPlaceholderToIds(messageBundle);\n\t          this._messageNodes\n\t              .filter(function (message) {\n\t              // Remove any messages that is not present in the source message bundle.\n\t              return messageMap.hasOwnProperty(message[0]);\n\t          })\n\t              .sort(function (a, b) {\n\t              // Because there could be no ICU placeholders inside an ICU message,\n\t              // we do not need to take into account the `placeholderToMsgIds` of the referenced\n\t              // messages, those would always be empty\n\t              // TODO(vicb): overkill - create 2 buckets and [...woDeps, ...wDeps].process()\n\t              if (Object.keys(messageMap[a[0]].placeholderToMsgIds).length == 0) {\n\t                  return -1;\n\t              }\n\t              if (Object.keys(messageMap[b[0]].placeholderToMsgIds).length == 0) {\n\t                  return 1;\n\t              }\n\t              return 0;\n\t          })\n\t              .forEach(function (message) {\n\t              var id = message[0];\n\t              _this._placeholders = placeholders[id] || {};\n\t              _this._placeholderToIds = placeholderToIds[id] || {};\n\t              // TODO(vicb): make sure there is no `_TRANSLATIONS_TAG` nor `_TRANSLATION_TAG`\n\t              _this._translatedMessages[id] = visitAll(_this, message[1]).join('');\n\t          });\n\t          return { messages: this._translatedMessages, errors: this._errors };\n\t      };\n\t      _Visitor.prototype.visitElement = function (element, context) {\n\t          switch (element.name) {\n\t              case _TRANSLATIONS_TAG:\n\t                  this._bundleDepth++;\n\t                  if (this._bundleDepth > 1) {\n\t                      this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n\t                  }\n\t                  visitAll(this, element.children, null);\n\t                  this._bundleDepth--;\n\t                  break;\n\t              case _TRANSLATION_TAG:\n\t                  this._translationDepth++;\n\t                  if (this._translationDepth > 1) {\n\t                      this._addError(element, \"<\" + _TRANSLATION_TAG + \"> elements can not be nested\");\n\t                  }\n\t                  var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n\t                  if (!idAttr) {\n\t                      this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n\t                  }\n\t                  else {\n\t                      // ICU placeholders are reference to other messages.\n\t                      // The referenced message might not have been decoded yet.\n\t                      // We need to have all messages available to make sure deps are decoded first.\n\t                      // TODO(vicb): report an error on duplicate id\n\t                      this._messageNodes.push([idAttr.value, element.children]);\n\t                  }\n\t                  this._translationDepth--;\n\t                  break;\n\t              case _PLACEHOLDER_TAG$2:\n\t                  var nameAttr = element.attrs.find(function (attr) { return attr.name === 'name'; });\n\t                  if (!nameAttr) {\n\t                      this._addError(element, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"name\\\" attribute\");\n\t                  }\n\t                  else {\n\t                      var name_1 = nameAttr.value;\n\t                      if (this._placeholders.hasOwnProperty(name_1)) {\n\t                          return this._placeholders[name_1];\n\t                      }\n\t                      if (this._placeholderToIds.hasOwnProperty(name_1) &&\n\t                          this._translatedMessages.hasOwnProperty(this._placeholderToIds[name_1])) {\n\t                          return this._translatedMessages[this._placeholderToIds[name_1]];\n\t                      }\n\t                      // TODO(vicb): better error message for when\n\t                      // !this._translatedMessages.hasOwnProperty(this._placeholderToIds[name])\n\t                      this._addError(element, \"The placeholder \\\"\" + name_1 + \"\\\" does not exists in the source message\");\n\t                  }\n\t                  break;\n\t              default:\n\t                  this._addError(element, 'Unexpected tag');\n\t          }\n\t      };\n\t      _Visitor.prototype.visitAttribute = function (attribute, context) {\n\t          throw new Error('unreachable code');\n\t      };\n\t      _Visitor.prototype.visitText = function (text, context) { return text.value; };\n\t      _Visitor.prototype.visitComment = function (comment, context) { return ''; };\n\t      _Visitor.prototype.visitExpansion = function (expansion, context) {\n\t          var _this = this;\n\t          var strCases = expansion.cases.map(function (c) { return c.visit(_this, null); });\n\t          return \"{\" + expansion.switchValue + \", \" + expansion.type + \", strCases.join(' ')}\";\n\t      };\n\t      _Visitor.prototype.visitExpansionCase = function (expansionCase, context) {\n\t          return expansionCase.value + \" {\" + visitAll(this, expansionCase.expression, null) + \"}\";\n\t      };\n\t      _Visitor.prototype._addError = function (node, message) {\n\t          this._errors.push(new I18nError(node.sourceSpan, message));\n\t      };\n\t      return _Visitor;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  /**\n\t   * A container for translated messages\n\t   */\n\t  var TranslationBundle = (function () {\n\t      function TranslationBundle(_messageMap) {\n\t          if (_messageMap === void 0) { _messageMap = {}; }\n\t          this._messageMap = _messageMap;\n\t      }\n\t      TranslationBundle.load = function (content, url, messageBundle, serializer) {\n\t          return new TranslationBundle(serializer.load(content, url, messageBundle));\n\t      };\n\t      TranslationBundle.prototype.get = function (id) { return this._messageMap[id]; };\n\t      TranslationBundle.prototype.has = function (id) { return id in this._messageMap; };\n\t      return TranslationBundle;\n\t  }());\n\t\n\t  var I18NHtmlParser = (function () {\n\t      // TODO(vicb): transB.load() should not need a msgB & add transB.resolve(msgB,\n\t      // interpolationConfig)\n\t      // TODO(vicb): remove the interpolationConfig from the Xtb serializer\n\t      function I18NHtmlParser(_htmlParser, _translations, _translationsFormat) {\n\t          this._htmlParser = _htmlParser;\n\t          this._translations = _translations;\n\t          this._translationsFormat = _translationsFormat;\n\t      }\n\t      I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n\t          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          var parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n\t          if (!this._translations || this._translations === '') {\n\t              // Do not enable i18n when no translation bundle is provided\n\t              return parseResult;\n\t          }\n\t          // TODO(vicb): add support for implicit tags / attributes\n\t          var messageBundle = new MessageBundle(this._htmlParser, [], {});\n\t          var errors = messageBundle.updateFromTemplate(source, url, interpolationConfig);\n\t          if (errors && errors.length) {\n\t              return new ParseTreeResult(parseResult.rootNodes, parseResult.errors.concat(errors));\n\t          }\n\t          var serializer = this._createSerializer(interpolationConfig);\n\t          var translationBundle = TranslationBundle.load(this._translations, url, messageBundle, serializer);\n\t          return mergeTranslations(parseResult.rootNodes, translationBundle, interpolationConfig, [], {});\n\t      };\n\t      I18NHtmlParser.prototype._createSerializer = function (interpolationConfig) {\n\t          var format = (this._translationsFormat || 'xlf').toLowerCase();\n\t          switch (format) {\n\t              case 'xmb':\n\t                  return new Xmb();\n\t              case 'xtb':\n\t                  return new Xtb(this._htmlParser, interpolationConfig);\n\t              case 'xliff':\n\t              case 'xlf':\n\t              default:\n\t                  return new Xliff(this._htmlParser, interpolationConfig);\n\t          }\n\t      };\n\t      return I18NHtmlParser;\n\t  }());\n\t\n\t  var isDefaultChangeDetectionStrategy = _angular_core.__core_private__.isDefaultChangeDetectionStrategy;\n\t  var ChangeDetectorStatus = _angular_core.__core_private__.ChangeDetectorStatus;\n\t  var LifecycleHooks = _angular_core.__core_private__.LifecycleHooks;\n\t  var LIFECYCLE_HOOKS_VALUES = _angular_core.__core_private__.LIFECYCLE_HOOKS_VALUES;\n\t  var ReflectorReader = _angular_core.__core_private__.ReflectorReader;\n\t  var AppElement = _angular_core.__core_private__.AppElement;\n\t  var CodegenComponentFactoryResolver = _angular_core.__core_private__.CodegenComponentFactoryResolver;\n\t  var AppView = _angular_core.__core_private__.AppView;\n\t  var DebugAppView = _angular_core.__core_private__.DebugAppView;\n\t  var NgModuleInjector = _angular_core.__core_private__.NgModuleInjector;\n\t  var registerModuleFactory = _angular_core.__core_private__.registerModuleFactory;\n\t  var ViewType = _angular_core.__core_private__.ViewType;\n\t  var view_utils = _angular_core.__core_private__.view_utils;\n\t  var DebugContext = _angular_core.__core_private__.DebugContext;\n\t  var StaticNodeDebugInfo = _angular_core.__core_private__.StaticNodeDebugInfo;\n\t  var devModeEqual = _angular_core.__core_private__.devModeEqual;\n\t  var UNINITIALIZED = _angular_core.__core_private__.UNINITIALIZED;\n\t  var ValueUnwrapper = _angular_core.__core_private__.ValueUnwrapper;\n\t  var TemplateRef_ = _angular_core.__core_private__.TemplateRef_;\n\t  var Console = _angular_core.__core_private__.Console;\n\t  var reflector = _angular_core.__core_private__.reflector;\n\t  var Reflector = _angular_core.__core_private__.Reflector;\n\t  var ReflectionCapabilities = _angular_core.__core_private__.ReflectionCapabilities;\n\t  var NoOpAnimationPlayer = _angular_core.__core_private__.NoOpAnimationPlayer;\n\t  var AnimationSequencePlayer = _angular_core.__core_private__.AnimationSequencePlayer;\n\t  var AnimationGroupPlayer = _angular_core.__core_private__.AnimationGroupPlayer;\n\t  var AnimationKeyframe = _angular_core.__core_private__.AnimationKeyframe;\n\t  var AnimationStyles = _angular_core.__core_private__.AnimationStyles;\n\t  var ANY_STATE = _angular_core.__core_private__.ANY_STATE;\n\t  var DEFAULT_STATE = _angular_core.__core_private__.DEFAULT_STATE;\n\t  var EMPTY_ANIMATION_STATE = _angular_core.__core_private__.EMPTY_STATE;\n\t  var FILL_STYLE_FLAG = _angular_core.__core_private__.FILL_STYLE_FLAG;\n\t  var prepareFinalAnimationStyles = _angular_core.__core_private__.prepareFinalAnimationStyles;\n\t  var balanceAnimationKeyframes = _angular_core.__core_private__.balanceAnimationKeyframes;\n\t  var clearStyles = _angular_core.__core_private__.clearStyles;\n\t  var collectAndResolveStyles = _angular_core.__core_private__.collectAndResolveStyles;\n\t  var renderStyles = _angular_core.__core_private__.renderStyles;\n\t  var ComponentStillLoadingError = _angular_core.__core_private__.ComponentStillLoadingError;\n\t  var AnimationTransition = _angular_core.__core_private__.AnimationTransition;\n\t\n\t  var APP_VIEW_MODULE_URL = assetUrl('core', 'linker/view');\n\t  var VIEW_UTILS_MODULE_URL = assetUrl('core', 'linker/view_utils');\n\t  var CD_MODULE_URL = assetUrl('core', 'change_detection/change_detection');\n\t  var ANIMATION_STYLE_UTIL_ASSET_URL = assetUrl('core', 'animation/animation_style_util');\n\t  var Identifiers = (function () {\n\t      function Identifiers() {\n\t      }\n\t      Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n\t          name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n\t          moduleUrl: assetUrl('core', 'metadata/di'),\n\t          runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n\t      };\n\t      Identifiers.ViewUtils = {\n\t          name: 'ViewUtils',\n\t          moduleUrl: assetUrl('core', 'linker/view_utils'),\n\t          runtime: view_utils.ViewUtils\n\t      };\n\t      Identifiers.AppView = { name: 'AppView', moduleUrl: APP_VIEW_MODULE_URL, runtime: AppView };\n\t      Identifiers.DebugAppView = {\n\t          name: 'DebugAppView',\n\t          moduleUrl: APP_VIEW_MODULE_URL,\n\t          runtime: DebugAppView\n\t      };\n\t      Identifiers.AppElement = {\n\t          name: 'AppElement',\n\t          moduleUrl: assetUrl('core', 'linker/element'),\n\t          runtime: AppElement\n\t      };\n\t      Identifiers.ElementRef = {\n\t          name: 'ElementRef',\n\t          moduleUrl: assetUrl('core', 'linker/element_ref'),\n\t          runtime: _angular_core.ElementRef\n\t      };\n\t      Identifiers.ViewContainerRef = {\n\t          name: 'ViewContainerRef',\n\t          moduleUrl: assetUrl('core', 'linker/view_container_ref'),\n\t          runtime: _angular_core.ViewContainerRef\n\t      };\n\t      Identifiers.ChangeDetectorRef = {\n\t          name: 'ChangeDetectorRef',\n\t          moduleUrl: assetUrl('core', 'change_detection/change_detector_ref'),\n\t          runtime: _angular_core.ChangeDetectorRef\n\t      };\n\t      Identifiers.RenderComponentType = {\n\t          name: 'RenderComponentType',\n\t          moduleUrl: assetUrl('core', 'render/api'),\n\t          runtime: _angular_core.RenderComponentType\n\t      };\n\t      Identifiers.QueryList = {\n\t          name: 'QueryList',\n\t          moduleUrl: assetUrl('core', 'linker/query_list'),\n\t          runtime: _angular_core.QueryList\n\t      };\n\t      Identifiers.TemplateRef = {\n\t          name: 'TemplateRef',\n\t          moduleUrl: assetUrl('core', 'linker/template_ref'),\n\t          runtime: _angular_core.TemplateRef\n\t      };\n\t      Identifiers.TemplateRef_ = {\n\t          name: 'TemplateRef_',\n\t          moduleUrl: assetUrl('core', 'linker/template_ref'),\n\t          runtime: TemplateRef_\n\t      };\n\t      Identifiers.CodegenComponentFactoryResolver = {\n\t          name: 'CodegenComponentFactoryResolver',\n\t          moduleUrl: assetUrl('core', 'linker/component_factory_resolver'),\n\t          runtime: CodegenComponentFactoryResolver\n\t      };\n\t      Identifiers.ComponentFactoryResolver = {\n\t          name: 'ComponentFactoryResolver',\n\t          moduleUrl: assetUrl('core', 'linker/component_factory_resolver'),\n\t          runtime: _angular_core.ComponentFactoryResolver\n\t      };\n\t      Identifiers.ComponentFactory = {\n\t          name: 'ComponentFactory',\n\t          runtime: _angular_core.ComponentFactory,\n\t          moduleUrl: assetUrl('core', 'linker/component_factory')\n\t      };\n\t      Identifiers.NgModuleFactory = {\n\t          name: 'NgModuleFactory',\n\t          runtime: _angular_core.NgModuleFactory,\n\t          moduleUrl: assetUrl('core', 'linker/ng_module_factory')\n\t      };\n\t      Identifiers.NgModuleInjector = {\n\t          name: 'NgModuleInjector',\n\t          runtime: NgModuleInjector,\n\t          moduleUrl: assetUrl('core', 'linker/ng_module_factory')\n\t      };\n\t      Identifiers.RegisterModuleFactoryFn = {\n\t          name: 'registerModuleFactory',\n\t          runtime: registerModuleFactory,\n\t          moduleUrl: assetUrl('core', 'linker/ng_module_factory_loader')\n\t      };\n\t      Identifiers.ValueUnwrapper = { name: 'ValueUnwrapper', moduleUrl: CD_MODULE_URL, runtime: ValueUnwrapper };\n\t      Identifiers.Injector = {\n\t          name: 'Injector',\n\t          moduleUrl: assetUrl('core', 'di/injector'),\n\t          runtime: _angular_core.Injector\n\t      };\n\t      Identifiers.ViewEncapsulation = {\n\t          name: 'ViewEncapsulation',\n\t          moduleUrl: assetUrl('core', 'metadata/view'),\n\t          runtime: _angular_core.ViewEncapsulation\n\t      };\n\t      Identifiers.ViewType = {\n\t          name: 'ViewType',\n\t          moduleUrl: assetUrl('core', 'linker/view_type'),\n\t          runtime: ViewType\n\t      };\n\t      Identifiers.ChangeDetectionStrategy = {\n\t          name: 'ChangeDetectionStrategy',\n\t          moduleUrl: CD_MODULE_URL,\n\t          runtime: _angular_core.ChangeDetectionStrategy\n\t      };\n\t      Identifiers.StaticNodeDebugInfo = {\n\t          name: 'StaticNodeDebugInfo',\n\t          moduleUrl: assetUrl('core', 'linker/debug_context'),\n\t          runtime: StaticNodeDebugInfo\n\t      };\n\t      Identifiers.DebugContext = {\n\t          name: 'DebugContext',\n\t          moduleUrl: assetUrl('core', 'linker/debug_context'),\n\t          runtime: DebugContext\n\t      };\n\t      Identifiers.Renderer = {\n\t          name: 'Renderer',\n\t          moduleUrl: assetUrl('core', 'render/api'),\n\t          runtime: _angular_core.Renderer\n\t      };\n\t      Identifiers.SimpleChange = { name: 'SimpleChange', moduleUrl: CD_MODULE_URL, runtime: _angular_core.SimpleChange };\n\t      Identifiers.UNINITIALIZED = { name: 'UNINITIALIZED', moduleUrl: CD_MODULE_URL, runtime: UNINITIALIZED };\n\t      Identifiers.ChangeDetectorStatus = {\n\t          name: 'ChangeDetectorStatus',\n\t          moduleUrl: CD_MODULE_URL,\n\t          runtime: ChangeDetectorStatus\n\t      };\n\t      Identifiers.checkBinding = {\n\t          name: 'checkBinding',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.checkBinding\n\t      };\n\t      Identifiers.flattenNestedViewRenderNodes = {\n\t          name: 'flattenNestedViewRenderNodes',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.flattenNestedViewRenderNodes\n\t      };\n\t      Identifiers.devModeEqual = { name: 'devModeEqual', moduleUrl: CD_MODULE_URL, runtime: devModeEqual };\n\t      Identifiers.interpolate = {\n\t          name: 'interpolate',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.interpolate\n\t      };\n\t      Identifiers.castByValue = {\n\t          name: 'castByValue',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.castByValue\n\t      };\n\t      Identifiers.EMPTY_ARRAY = {\n\t          name: 'EMPTY_ARRAY',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.EMPTY_ARRAY\n\t      };\n\t      Identifiers.EMPTY_MAP = {\n\t          name: 'EMPTY_MAP',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.EMPTY_MAP\n\t      };\n\t      Identifiers.createRenderElement = {\n\t          name: 'createRenderElement',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.createRenderElement\n\t      };\n\t      Identifiers.selectOrCreateRenderHostElement = {\n\t          name: 'selectOrCreateRenderHostElement',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.selectOrCreateRenderHostElement\n\t      };\n\t      Identifiers.pureProxies = [\n\t          null,\n\t          { name: 'pureProxy1', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy1 },\n\t          { name: 'pureProxy2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy2 },\n\t          { name: 'pureProxy3', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy3 },\n\t          { name: 'pureProxy4', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy4 },\n\t          { name: 'pureProxy5', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy5 },\n\t          { name: 'pureProxy6', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy6 },\n\t          { name: 'pureProxy7', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy7 },\n\t          { name: 'pureProxy8', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy8 },\n\t          { name: 'pureProxy9', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy9 },\n\t          { name: 'pureProxy10', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy10 },\n\t      ];\n\t      Identifiers.SecurityContext = {\n\t          name: 'SecurityContext',\n\t          moduleUrl: assetUrl('core', 'security'),\n\t          runtime: _angular_core.SecurityContext,\n\t      };\n\t      Identifiers.AnimationKeyframe = {\n\t          name: 'AnimationKeyframe',\n\t          moduleUrl: assetUrl('core', 'animation/animation_keyframe'),\n\t          runtime: AnimationKeyframe\n\t      };\n\t      Identifiers.AnimationStyles = {\n\t          name: 'AnimationStyles',\n\t          moduleUrl: assetUrl('core', 'animation/animation_styles'),\n\t          runtime: AnimationStyles\n\t      };\n\t      Identifiers.NoOpAnimationPlayer = {\n\t          name: 'NoOpAnimationPlayer',\n\t          moduleUrl: assetUrl('core', 'animation/animation_player'),\n\t          runtime: NoOpAnimationPlayer\n\t      };\n\t      Identifiers.AnimationGroupPlayer = {\n\t          name: 'AnimationGroupPlayer',\n\t          moduleUrl: assetUrl('core', 'animation/animation_group_player'),\n\t          runtime: AnimationGroupPlayer\n\t      };\n\t      Identifiers.AnimationSequencePlayer = {\n\t          name: 'AnimationSequencePlayer',\n\t          moduleUrl: assetUrl('core', 'animation/animation_sequence_player'),\n\t          runtime: AnimationSequencePlayer\n\t      };\n\t      Identifiers.prepareFinalAnimationStyles = {\n\t          name: 'prepareFinalAnimationStyles',\n\t          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n\t          runtime: prepareFinalAnimationStyles\n\t      };\n\t      Identifiers.balanceAnimationKeyframes = {\n\t          name: 'balanceAnimationKeyframes',\n\t          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n\t          runtime: balanceAnimationKeyframes\n\t      };\n\t      Identifiers.clearStyles = {\n\t          name: 'clearStyles',\n\t          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n\t          runtime: clearStyles\n\t      };\n\t      Identifiers.renderStyles = {\n\t          name: 'renderStyles',\n\t          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n\t          runtime: renderStyles\n\t      };\n\t      Identifiers.collectAndResolveStyles = {\n\t          name: 'collectAndResolveStyles',\n\t          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n\t          runtime: collectAndResolveStyles\n\t      };\n\t      Identifiers.LOCALE_ID = {\n\t          name: 'LOCALE_ID',\n\t          moduleUrl: assetUrl('core', 'i18n/tokens'),\n\t          runtime: _angular_core.LOCALE_ID\n\t      };\n\t      Identifiers.TRANSLATIONS_FORMAT = {\n\t          name: 'TRANSLATIONS_FORMAT',\n\t          moduleUrl: assetUrl('core', 'i18n/tokens'),\n\t          runtime: _angular_core.TRANSLATIONS_FORMAT\n\t      };\n\t      Identifiers.setBindingDebugInfo = {\n\t          name: 'setBindingDebugInfo',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.setBindingDebugInfo\n\t      };\n\t      Identifiers.setBindingDebugInfoForChanges = {\n\t          name: 'setBindingDebugInfoForChanges',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.setBindingDebugInfoForChanges\n\t      };\n\t      Identifiers.AnimationTransition = {\n\t          name: 'AnimationTransition',\n\t          moduleUrl: assetUrl('core', 'animation/animation_transition'),\n\t          runtime: AnimationTransition\n\t      };\n\t      // This is just the interface!\n\t      Identifiers.InlineArray = { name: 'InlineArray', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: null };\n\t      Identifiers.inlineArrays = [\n\t          { name: 'InlineArray2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray2 },\n\t          { name: 'InlineArray2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray2 },\n\t          { name: 'InlineArray4', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray4 },\n\t          { name: 'InlineArray8', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray8 },\n\t          { name: 'InlineArray16', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray16 },\n\t      ];\n\t      Identifiers.EMPTY_INLINE_ARRAY = {\n\t          name: 'EMPTY_INLINE_ARRAY',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.EMPTY_INLINE_ARRAY\n\t      };\n\t      Identifiers.InlineArrayDynamic = {\n\t          name: 'InlineArrayDynamic',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.InlineArrayDynamic\n\t      };\n\t      return Identifiers;\n\t  }());\n\t  function assetUrl(pkg, path, type) {\n\t      if (path === void 0) { path = null; }\n\t      if (type === void 0) { type = 'src'; }\n\t      if (path == null) {\n\t          return \"asset:@angular/lib/\" + pkg + \"/index\";\n\t      }\n\t      else {\n\t          return \"asset:@angular/lib/\" + pkg + \"/src/\" + path;\n\t      }\n\t  }\n\t  function resolveIdentifier(identifier) {\n\t      return new CompileIdentifierMetadata({\n\t          name: identifier.name,\n\t          moduleUrl: identifier.moduleUrl,\n\t          reference: reflector.resolveIdentifier(identifier.name, identifier.moduleUrl, identifier.runtime)\n\t      });\n\t  }\n\t  function identifierToken(identifier) {\n\t      return new CompileTokenMetadata({ identifier: identifier });\n\t  }\n\t  function resolveIdentifierToken(identifier) {\n\t      return identifierToken(resolveIdentifier(identifier));\n\t  }\n\t  function resolveEnumIdentifier(enumType, name) {\n\t      var resolvedEnum = reflector.resolveEnum(enumType.reference, name);\n\t      return new CompileIdentifierMetadata({ name: enumType.name + \".\" + name, moduleUrl: enumType.moduleUrl, reference: resolvedEnum });\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$8 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var HtmlParser = (function (_super) {\n\t      __extends$8(HtmlParser, _super);\n\t      function HtmlParser() {\n\t          _super.call(this, getHtmlTagDefinition);\n\t      }\n\t      HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n\t          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n\t      };\n\t      HtmlParser.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      HtmlParser.ctorParameters = [];\n\t      return HtmlParser;\n\t  }(Parser$1));\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$9 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  // http://cldr.unicode.org/index/cldr-spec/plural-rules\n\t  var PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n\t  /**\n\t   * Expands special forms into elements.\n\t   *\n\t   * For example,\n\t   *\n\t   * ```\n\t   * { messages.length, plural,\n\t   *   =0 {zero}\n\t   *   =1 {one}\n\t   *   other {more than one}\n\t   * }\n\t   * ```\n\t   *\n\t   * will be expanded into\n\t   *\n\t   * ```\n\t   * <ng-container [ngPlural]=\"messages.length\">\n\t   *   <template ngPluralCase=\"=0\">zero</ng-container>\n\t   *   <template ngPluralCase=\"=1\">one</ng-container>\n\t   *   <template ngPluralCase=\"other\">more than one</ng-container>\n\t   * </ng-container>\n\t   * ```\n\t   */\n\t  function expandNodes(nodes) {\n\t      var expander = new _Expander();\n\t      return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n\t  }\n\t  var ExpansionResult = (function () {\n\t      function ExpansionResult(nodes, expanded, errors) {\n\t          this.nodes = nodes;\n\t          this.expanded = expanded;\n\t          this.errors = errors;\n\t      }\n\t      return ExpansionResult;\n\t  }());\n\t  var ExpansionError = (function (_super) {\n\t      __extends$9(ExpansionError, _super);\n\t      function ExpansionError(span, errorMsg) {\n\t          _super.call(this, span, errorMsg);\n\t      }\n\t      return ExpansionError;\n\t  }(ParseError));\n\t  /**\n\t   * Expand expansion forms (plural, select) to directives\n\t   *\n\t   * @internal\n\t   */\n\t  var _Expander = (function () {\n\t      function _Expander() {\n\t          this.isExpanded = false;\n\t          this.errors = [];\n\t      }\n\t      _Expander.prototype.visitElement = function (element, context) {\n\t          return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n\t      };\n\t      _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n\t      _Expander.prototype.visitText = function (text, context) { return text; };\n\t      _Expander.prototype.visitComment = function (comment, context) { return comment; };\n\t      _Expander.prototype.visitExpansion = function (icu, context) {\n\t          this.isExpanded = true;\n\t          return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n\t              _expandDefaultForm(icu, this.errors);\n\t      };\n\t      _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n\t          throw new Error('Should not be reached');\n\t      };\n\t      return _Expander;\n\t  }());\n\t  function _expandPluralForm(ast, errors) {\n\t      var children = ast.cases.map(function (c) {\n\t          if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n\t              errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n\t          }\n\t          var expansionResult = expandNodes(c.expression);\n\t          errors.push.apply(errors, expansionResult.errors);\n\t          return new Element(\"template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n\t      });\n\t      var switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n\t      return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n\t  }\n\t  function _expandDefaultForm(ast, errors) {\n\t      var children = ast.cases.map(function (c) {\n\t          var expansionResult = expandNodes(c.expression);\n\t          errors.push.apply(errors, expansionResult.errors);\n\t          return new Element(\"template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n\t      });\n\t      var switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n\t      return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$10 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var ProviderError = (function (_super) {\n\t      __extends$10(ProviderError, _super);\n\t      function ProviderError(message, span) {\n\t          _super.call(this, span, message);\n\t      }\n\t      return ProviderError;\n\t  }(ParseError));\n\t  var ProviderViewContext = (function () {\n\t      function ProviderViewContext(component, sourceSpan) {\n\t          var _this = this;\n\t          this.component = component;\n\t          this.sourceSpan = sourceSpan;\n\t          this.errors = [];\n\t          this.viewQueries = _getViewQueries(component);\n\t          this.viewProviders = new Map();\n\t          _normalizeProviders(component.viewProviders, sourceSpan, this.errors).forEach(function (provider) {\n\t              if (isBlank(_this.viewProviders.get(provider.token.reference))) {\n\t                  _this.viewProviders.set(provider.token.reference, true);\n\t              }\n\t          });\n\t      }\n\t      return ProviderViewContext;\n\t  }());\n\t  var ProviderElementContext = (function () {\n\t      function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, _sourceSpan) {\n\t          var _this = this;\n\t          this.viewContext = viewContext;\n\t          this._parent = _parent;\n\t          this._isViewRoot = _isViewRoot;\n\t          this._directiveAsts = _directiveAsts;\n\t          this._sourceSpan = _sourceSpan;\n\t          this._transformedProviders = new Map();\n\t          this._seenProviders = new Map();\n\t          this._hasViewContainer = false;\n\t          this._attrs = {};\n\t          attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n\t          var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n\t          this._allProviders =\n\t              _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n\t          this._contentQueries = _getContentQueries(directivesMeta);\n\t          var queriedTokens = new Map();\n\t          MapWrapper.values(this._allProviders).forEach(function (provider) {\n\t              _this._addQueryReadsTo(provider.token, queriedTokens);\n\t          });\n\t          refs.forEach(function (refAst) {\n\t              _this._addQueryReadsTo(new CompileTokenMetadata({ value: refAst.name }), queriedTokens);\n\t          });\n\t          if (isPresent(queriedTokens.get(resolveIdentifierToken(Identifiers.ViewContainerRef).reference))) {\n\t              this._hasViewContainer = true;\n\t          }\n\t          // create the providers that we know are eager first\n\t          MapWrapper.values(this._allProviders).forEach(function (provider) {\n\t              var eager = provider.eager || isPresent(queriedTokens.get(provider.token.reference));\n\t              if (eager) {\n\t                  _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n\t              }\n\t          });\n\t      }\n\t      ProviderElementContext.prototype.afterElement = function () {\n\t          var _this = this;\n\t          // collect lazy providers\n\t          MapWrapper.values(this._allProviders).forEach(function (provider) {\n\t              _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n\t          });\n\t      };\n\t      Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n\t          get: function () { return MapWrapper.values(this._transformedProviders); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n\t          get: function () {\n\t              var sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n\t              var sortedDirectives = this._directiveAsts.slice();\n\t              sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n\t                  sortedProviderTypes.indexOf(dir2.directive.type); });\n\t              return sortedDirectives;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n\t          get: function () { return this._hasViewContainer; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      ProviderElementContext.prototype._addQueryReadsTo = function (token, queryReadTokens) {\n\t          this._getQueriesFor(token).forEach(function (query) {\n\t              var queryReadToken = query.read || token;\n\t              if (isBlank(queryReadTokens.get(queryReadToken.reference))) {\n\t                  queryReadTokens.set(queryReadToken.reference, true);\n\t              }\n\t          });\n\t      };\n\t      ProviderElementContext.prototype._getQueriesFor = function (token) {\n\t          var result = [];\n\t          var currentEl = this;\n\t          var distance = 0;\n\t          var queries;\n\t          while (currentEl !== null) {\n\t              queries = currentEl._contentQueries.get(token.reference);\n\t              if (isPresent(queries)) {\n\t                  result.push.apply(result, queries.filter(function (query) { return query.descendants || distance <= 1; }));\n\t              }\n\t              if (currentEl._directiveAsts.length > 0) {\n\t                  distance++;\n\t              }\n\t              currentEl = currentEl._parent;\n\t          }\n\t          queries = this.viewContext.viewQueries.get(token.reference);\n\t          if (isPresent(queries)) {\n\t              result.push.apply(result, queries);\n\t          }\n\t          return result;\n\t      };\n\t      ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n\t          var _this = this;\n\t          var resolvedProvider = this._allProviders.get(token.reference);\n\t          if (!resolvedProvider || ((requestingProviderType === exports.ProviderAstType.Directive ||\n\t              requestingProviderType === exports.ProviderAstType.PublicService) &&\n\t              resolvedProvider.providerType === exports.ProviderAstType.PrivateService) ||\n\t              ((requestingProviderType === exports.ProviderAstType.PrivateService ||\n\t                  requestingProviderType === exports.ProviderAstType.PublicService) &&\n\t                  resolvedProvider.providerType === exports.ProviderAstType.Builtin)) {\n\t              return null;\n\t          }\n\t          var transformedProviderAst = this._transformedProviders.get(token.reference);\n\t          if (isPresent(transformedProviderAst)) {\n\t              return transformedProviderAst;\n\t          }\n\t          if (isPresent(this._seenProviders.get(token.reference))) {\n\t              this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + token.name, this._sourceSpan));\n\t              return null;\n\t          }\n\t          this._seenProviders.set(token.reference, true);\n\t          var transformedProviders = resolvedProvider.providers.map(function (provider) {\n\t              var transformedUseValue = provider.useValue;\n\t              var transformedUseExisting = provider.useExisting;\n\t              var transformedDeps;\n\t              if (isPresent(provider.useExisting)) {\n\t                  var existingDiDep = _this._getDependency(resolvedProvider.providerType, new CompileDiDependencyMetadata({ token: provider.useExisting }), eager);\n\t                  if (isPresent(existingDiDep.token)) {\n\t                      transformedUseExisting = existingDiDep.token;\n\t                  }\n\t                  else {\n\t                      transformedUseExisting = null;\n\t                      transformedUseValue = existingDiDep.value;\n\t                  }\n\t              }\n\t              else if (isPresent(provider.useFactory)) {\n\t                  var deps = provider.deps || provider.useFactory.diDeps;\n\t                  transformedDeps =\n\t                      deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n\t              }\n\t              else if (isPresent(provider.useClass)) {\n\t                  var deps = provider.deps || provider.useClass.diDeps;\n\t                  transformedDeps =\n\t                      deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n\t              }\n\t              return _transformProvider(provider, {\n\t                  useExisting: transformedUseExisting,\n\t                  useValue: transformedUseValue,\n\t                  deps: transformedDeps\n\t              });\n\t          });\n\t          transformedProviderAst =\n\t              _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n\t          this._transformedProviders.set(token.reference, transformedProviderAst);\n\t          return transformedProviderAst;\n\t      };\n\t      ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n\t          if (eager === void 0) { eager = null; }\n\t          if (dep.isAttribute) {\n\t              var attrValue = this._attrs[dep.token.value];\n\t              return new CompileDiDependencyMetadata({ isValue: true, value: attrValue == null ? null : attrValue });\n\t          }\n\t          if (isPresent(dep.query) || isPresent(dep.viewQuery)) {\n\t              return dep;\n\t          }\n\t          if (isPresent(dep.token)) {\n\t              // access builtints\n\t              if ((requestingProviderType === exports.ProviderAstType.Directive ||\n\t                  requestingProviderType === exports.ProviderAstType.Component)) {\n\t                  if (dep.token.reference === resolveIdentifierToken(Identifiers.Renderer).reference ||\n\t                      dep.token.reference === resolveIdentifierToken(Identifiers.ElementRef).reference ||\n\t                      dep.token.reference ===\n\t                          resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference ||\n\t                      dep.token.reference === resolveIdentifierToken(Identifiers.TemplateRef).reference) {\n\t                      return dep;\n\t                  }\n\t                  if (dep.token.reference ===\n\t                      resolveIdentifierToken(Identifiers.ViewContainerRef).reference) {\n\t                      this._hasViewContainer = true;\n\t                  }\n\t              }\n\t              // access the injector\n\t              if (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference) {\n\t                  return dep;\n\t              }\n\t              // access providers\n\t              if (isPresent(this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager))) {\n\t                  return dep;\n\t              }\n\t          }\n\t          return null;\n\t      };\n\t      ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n\t          if (eager === void 0) { eager = null; }\n\t          var currElement = this;\n\t          var currEager = eager;\n\t          var result = null;\n\t          if (!dep.isSkipSelf) {\n\t              result = this._getLocalDependency(requestingProviderType, dep, eager);\n\t          }\n\t          if (dep.isSelf) {\n\t              if (!result && dep.isOptional) {\n\t                  result = new CompileDiDependencyMetadata({ isValue: true, value: null });\n\t              }\n\t          }\n\t          else {\n\t              // check parent elements\n\t              while (!result && isPresent(currElement._parent)) {\n\t                  var prevElement = currElement;\n\t                  currElement = currElement._parent;\n\t                  if (prevElement._isViewRoot) {\n\t                      currEager = false;\n\t                  }\n\t                  result = currElement._getLocalDependency(exports.ProviderAstType.PublicService, dep, currEager);\n\t              }\n\t              // check @Host restriction\n\t              if (!result) {\n\t                  if (!dep.isHost || this.viewContext.component.type.isHost ||\n\t                      this.viewContext.component.type.reference === dep.token.reference ||\n\t                      isPresent(this.viewContext.viewProviders.get(dep.token.reference))) {\n\t                      result = dep;\n\t                  }\n\t                  else {\n\t                      result = dep.isOptional ?\n\t                          result = new CompileDiDependencyMetadata({ isValue: true, value: null }) :\n\t                          null;\n\t                  }\n\t              }\n\t          }\n\t          if (!result) {\n\t              this.viewContext.errors.push(new ProviderError(\"No provider for \" + dep.token.name, this._sourceSpan));\n\t          }\n\t          return result;\n\t      };\n\t      return ProviderElementContext;\n\t  }());\n\t  var NgModuleProviderAnalyzer = (function () {\n\t      function NgModuleProviderAnalyzer(ngModule, extraProviders, sourceSpan) {\n\t          var _this = this;\n\t          this._transformedProviders = new Map();\n\t          this._seenProviders = new Map();\n\t          this._errors = [];\n\t          this._allProviders = new Map();\n\t          var ngModuleTypes = ngModule.transitiveModule.modules.map(function (moduleMeta) { return moduleMeta.type; });\n\t          ngModuleTypes.forEach(function (ngModuleType) {\n\t              var ngModuleProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: ngModuleType }), useClass: ngModuleType });\n\t              _resolveProviders([ngModuleProvider], exports.ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n\t          });\n\t          _resolveProviders(_normalizeProviders(ngModule.transitiveModule.providers.concat(extraProviders), sourceSpan, this._errors), exports.ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n\t      }\n\t      NgModuleProviderAnalyzer.prototype.parse = function () {\n\t          var _this = this;\n\t          MapWrapper.values(this._allProviders).forEach(function (provider) {\n\t              _this._getOrCreateLocalProvider(provider.token, provider.eager);\n\t          });\n\t          if (this._errors.length > 0) {\n\t              var errorString = this._errors.join('\\n');\n\t              throw new Error(\"Provider parse errors:\\n\" + errorString);\n\t          }\n\t          return MapWrapper.values(this._transformedProviders);\n\t      };\n\t      NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n\t          var _this = this;\n\t          var resolvedProvider = this._allProviders.get(token.reference);\n\t          if (!resolvedProvider) {\n\t              return null;\n\t          }\n\t          var transformedProviderAst = this._transformedProviders.get(token.reference);\n\t          if (isPresent(transformedProviderAst)) {\n\t              return transformedProviderAst;\n\t          }\n\t          if (isPresent(this._seenProviders.get(token.reference))) {\n\t              this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + token.name, resolvedProvider.sourceSpan));\n\t              return null;\n\t          }\n\t          this._seenProviders.set(token.reference, true);\n\t          var transformedProviders = resolvedProvider.providers.map(function (provider) {\n\t              var transformedUseValue = provider.useValue;\n\t              var transformedUseExisting = provider.useExisting;\n\t              var transformedDeps;\n\t              if (isPresent(provider.useExisting)) {\n\t                  var existingDiDep = _this._getDependency(new CompileDiDependencyMetadata({ token: provider.useExisting }), eager, resolvedProvider.sourceSpan);\n\t                  if (isPresent(existingDiDep.token)) {\n\t                      transformedUseExisting = existingDiDep.token;\n\t                  }\n\t                  else {\n\t                      transformedUseExisting = null;\n\t                      transformedUseValue = existingDiDep.value;\n\t                  }\n\t              }\n\t              else if (isPresent(provider.useFactory)) {\n\t                  var deps = provider.deps || provider.useFactory.diDeps;\n\t                  transformedDeps =\n\t                      deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n\t              }\n\t              else if (isPresent(provider.useClass)) {\n\t                  var deps = provider.deps || provider.useClass.diDeps;\n\t                  transformedDeps =\n\t                      deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n\t              }\n\t              return _transformProvider(provider, {\n\t                  useExisting: transformedUseExisting,\n\t                  useValue: transformedUseValue,\n\t                  deps: transformedDeps\n\t              });\n\t          });\n\t          transformedProviderAst =\n\t              _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n\t          this._transformedProviders.set(token.reference, transformedProviderAst);\n\t          return transformedProviderAst;\n\t      };\n\t      NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n\t          if (eager === void 0) { eager = null; }\n\t          var foundLocal = false;\n\t          if (!dep.isSkipSelf && isPresent(dep.token)) {\n\t              // access the injector\n\t              if (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference ||\n\t                  dep.token.reference ===\n\t                      resolveIdentifierToken(Identifiers.ComponentFactoryResolver).reference) {\n\t                  foundLocal = true;\n\t              }\n\t              else if (isPresent(this._getOrCreateLocalProvider(dep.token, eager))) {\n\t                  foundLocal = true;\n\t              }\n\t          }\n\t          var result = dep;\n\t          if (dep.isSelf && !foundLocal) {\n\t              if (dep.isOptional) {\n\t                  result = new CompileDiDependencyMetadata({ isValue: true, value: null });\n\t              }\n\t              else {\n\t                  this._errors.push(new ProviderError(\"No provider for \" + dep.token.name, requestorSourceSpan));\n\t              }\n\t          }\n\t          return result;\n\t      };\n\t      return NgModuleProviderAnalyzer;\n\t  }());\n\t  function _transformProvider(provider, _a) {\n\t      var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n\t      return new CompileProviderMetadata({\n\t          token: provider.token,\n\t          useClass: provider.useClass,\n\t          useExisting: useExisting,\n\t          useFactory: provider.useFactory,\n\t          useValue: useValue,\n\t          deps: deps,\n\t          multi: provider.multi\n\t      });\n\t  }\n\t  function _transformProviderAst(provider, _a) {\n\t      var eager = _a.eager, providers = _a.providers;\n\t      return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n\t  }\n\t  function _normalizeProviders(providers, sourceSpan, targetErrors, targetProviders) {\n\t      if (targetProviders === void 0) { targetProviders = null; }\n\t      if (!targetProviders) {\n\t          targetProviders = [];\n\t      }\n\t      if (isPresent(providers)) {\n\t          providers.forEach(function (provider) {\n\t              if (Array.isArray(provider)) {\n\t                  _normalizeProviders(provider, sourceSpan, targetErrors, targetProviders);\n\t              }\n\t              else {\n\t                  var normalizeProvider = void 0;\n\t                  if (provider instanceof CompileProviderMetadata) {\n\t                      normalizeProvider = provider;\n\t                  }\n\t                  else if (provider instanceof CompileTypeMetadata) {\n\t                      normalizeProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: provider }), useClass: provider });\n\t                  }\n\t                  else {\n\t                      targetErrors.push(new ProviderError(\"Unknown provider type \" + provider, sourceSpan));\n\t                  }\n\t                  if (isPresent(normalizeProvider)) {\n\t                      targetProviders.push(normalizeProvider);\n\t                  }\n\t              }\n\t          });\n\t      }\n\t      return targetProviders;\n\t  }\n\t  function _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n\t      var providersByToken = new Map();\n\t      directives.forEach(function (directive) {\n\t          var dirProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: directive.type }), useClass: directive.type });\n\t          _resolveProviders([dirProvider], directive.isComponent ? exports.ProviderAstType.Component : exports.ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n\t      });\n\t      // Note: directives need to be able to overwrite providers of a component!\n\t      var directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n\t      directivesWithComponentFirst.forEach(function (directive) {\n\t          _resolveProviders(_normalizeProviders(directive.providers, sourceSpan, targetErrors), exports.ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n\t          _resolveProviders(_normalizeProviders(directive.viewProviders, sourceSpan, targetErrors), exports.ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n\t      });\n\t      return providersByToken;\n\t  }\n\t  function _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n\t      providers.forEach(function (provider) {\n\t          var resolvedProvider = targetProvidersByToken.get(provider.token.reference);\n\t          if (isPresent(resolvedProvider) && resolvedProvider.multiProvider !== provider.multi) {\n\t              targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + resolvedProvider.token.name, sourceSpan));\n\t          }\n\t          if (!resolvedProvider) {\n\t              var lifecycleHooks = provider.token.identifier && provider.token.identifier instanceof CompileTypeMetadata ?\n\t                  provider.token.identifier.lifecycleHooks :\n\t                  [];\n\t              resolvedProvider = new ProviderAst(provider.token, provider.multi, eager || lifecycleHooks.length > 0, [provider], providerType, lifecycleHooks, sourceSpan);\n\t              targetProvidersByToken.set(provider.token.reference, resolvedProvider);\n\t          }\n\t          else {\n\t              if (!provider.multi) {\n\t                  resolvedProvider.providers.length = 0;\n\t              }\n\t              resolvedProvider.providers.push(provider);\n\t          }\n\t      });\n\t  }\n\t  function _getViewQueries(component) {\n\t      var viewQueries = new Map();\n\t      if (isPresent(component.viewQueries)) {\n\t          component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, query); });\n\t      }\n\t      component.type.diDeps.forEach(function (dep) {\n\t          if (isPresent(dep.viewQuery)) {\n\t              _addQueryToTokenMap(viewQueries, dep.viewQuery);\n\t          }\n\t      });\n\t      return viewQueries;\n\t  }\n\t  function _getContentQueries(directives) {\n\t      var contentQueries = new Map();\n\t      directives.forEach(function (directive) {\n\t          if (isPresent(directive.queries)) {\n\t              directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, query); });\n\t          }\n\t          directive.type.diDeps.forEach(function (dep) {\n\t              if (isPresent(dep.query)) {\n\t                  _addQueryToTokenMap(contentQueries, dep.query);\n\t              }\n\t          });\n\t      });\n\t      return contentQueries;\n\t  }\n\t  function _addQueryToTokenMap(map, query) {\n\t      query.selectors.forEach(function (token) {\n\t          var entry = map.get(token.reference);\n\t          if (!entry) {\n\t              entry = [];\n\t              map.set(token.reference, entry);\n\t          }\n\t          entry.push(query);\n\t      });\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var ElementSchemaRegistry = (function () {\n\t      function ElementSchemaRegistry() {\n\t      }\n\t      return ElementSchemaRegistry;\n\t  }());\n\t\n\t  var StyleWithImports = (function () {\n\t      function StyleWithImports(style, styleUrls) {\n\t          this.style = style;\n\t          this.styleUrls = styleUrls;\n\t      }\n\t      return StyleWithImports;\n\t  }());\n\t  function isStyleUrlResolvable(url) {\n\t      if (isBlank(url) || url.length === 0 || url[0] == '/')\n\t          return false;\n\t      var schemeMatch = url.match(_urlWithSchemaRe);\n\t      return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n\t  }\n\t  /**\n\t   * Rewrites stylesheets by resolving and removing the @import urls that\n\t   * are either relative or don't have a `package:` scheme\n\t   */\n\t  function extractStyleUrls(resolver, baseUrl, cssText) {\n\t      var foundUrls = [];\n\t      var modifiedCssText = cssText.replace(_cssImportRe, function () {\n\t          var m = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              m[_i - 0] = arguments[_i];\n\t          }\n\t          var url = m[1] || m[2];\n\t          if (!isStyleUrlResolvable(url)) {\n\t              // Do not attempt to resolve non-package absolute URLs with URI scheme\n\t              return m[0];\n\t          }\n\t          foundUrls.push(resolver.resolve(baseUrl, url));\n\t          return '';\n\t      });\n\t      return new StyleWithImports(modifiedCssText, foundUrls);\n\t  }\n\t  var _cssImportRe = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\n\t  var _urlWithSchemaRe = /^([^:/?#]+):/;\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$11 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var PROPERTY_PARTS_SEPARATOR = '.';\n\t  var ATTRIBUTE_PREFIX = 'attr';\n\t  var CLASS_PREFIX = 'class';\n\t  var STYLE_PREFIX = 'style';\n\t  var ANIMATE_PROP_PREFIX = 'animate-';\n\t  var BoundPropertyType;\n\t  (function (BoundPropertyType) {\n\t      BoundPropertyType[BoundPropertyType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n\t      BoundPropertyType[BoundPropertyType[\"LITERAL_ATTR\"] = 1] = \"LITERAL_ATTR\";\n\t      BoundPropertyType[BoundPropertyType[\"ANIMATION\"] = 2] = \"ANIMATION\";\n\t  })(BoundPropertyType || (BoundPropertyType = {}));\n\t  /**\n\t   * Represents a parsed property.\n\t   */\n\t  var BoundProperty = (function () {\n\t      function BoundProperty(name, expression, type, sourceSpan) {\n\t          this.name = name;\n\t          this.expression = expression;\n\t          this.type = type;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n\t          get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n\t          get: function () { return this.type === BoundPropertyType.ANIMATION; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return BoundProperty;\n\t  }());\n\t  /**\n\t   * Parses bindings in templates and in the directive host area.\n\t   */\n\t  var BindingParser = (function () {\n\t      function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n\t          var _this = this;\n\t          this._exprParser = _exprParser;\n\t          this._interpolationConfig = _interpolationConfig;\n\t          this._schemaRegistry = _schemaRegistry;\n\t          this._targetErrors = _targetErrors;\n\t          this.pipesByName = new Map();\n\t          pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n\t      }\n\t      BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, sourceSpan) {\n\t          var _this = this;\n\t          if (dirMeta.hostProperties) {\n\t              var boundProps_1 = [];\n\t              Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n\t                  var expression = dirMeta.hostProperties[propName];\n\t                  if (typeof expression === 'string') {\n\t                      _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n\t                  }\n\t                  else {\n\t                      _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n\t                  }\n\t              });\n\t              return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(dirMeta.selector, prop); });\n\t          }\n\t      };\n\t      BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n\t          var _this = this;\n\t          if (dirMeta.hostListeners) {\n\t              var targetEventAsts_1 = [];\n\t              Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n\t                  var expression = dirMeta.hostListeners[propName];\n\t                  if (typeof expression === 'string') {\n\t                      _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n\t                  }\n\t                  else {\n\t                      _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n\t                  }\n\t              });\n\t              return targetEventAsts_1;\n\t          }\n\t      };\n\t      BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n\t          var sourceInfo = sourceSpan.start.toString();\n\t          try {\n\t              var ast = this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig);\n\t              if (ast)\n\t                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n\t              this._checkPipes(ast, sourceSpan);\n\t              if (ast &&\n\t                  ast.ast.expressions.length > view_utils.MAX_INTERPOLATION_VALUES) {\n\t                  throw new Error(\"Only support at most \" + view_utils.MAX_INTERPOLATION_VALUES + \" interpolation values!\");\n\t              }\n\t              return ast;\n\t          }\n\t          catch (e) {\n\t              this._reportError(\"\" + e, sourceSpan);\n\t              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n\t          }\n\t      };\n\t      BindingParser.prototype.parseInlineTemplateBinding = function (name, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n\t          var bindings = this._parseTemplateBindings(value, sourceSpan);\n\t          for (var i = 0; i < bindings.length; i++) {\n\t              var binding = bindings[i];\n\t              if (binding.keyIsVar) {\n\t                  targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n\t              }\n\t              else if (isPresent(binding.expression)) {\n\t                  this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n\t              }\n\t              else {\n\t                  targetMatchableAttrs.push([binding.key, '']);\n\t                  this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n\t              }\n\t          }\n\t      };\n\t      BindingParser.prototype._parseTemplateBindings = function (value, sourceSpan) {\n\t          var _this = this;\n\t          var sourceInfo = sourceSpan.start.toString();\n\t          try {\n\t              var bindingsResult = this._exprParser.parseTemplateBindings(value, sourceInfo);\n\t              this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n\t              bindingsResult.templateBindings.forEach(function (binding) {\n\t                  if (isPresent(binding.expression)) {\n\t                      _this._checkPipes(binding.expression, sourceSpan);\n\t                  }\n\t              });\n\t              bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, exports.ParseErrorLevel.WARNING); });\n\t              return bindingsResult.templateBindings;\n\t          }\n\t          catch (e) {\n\t              this._reportError(\"\" + e, sourceSpan);\n\t              return [];\n\t          }\n\t      };\n\t      BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n\t          if (_isAnimationLabel(name)) {\n\t              name = name.substring(1);\n\t              if (value) {\n\t                  this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n\t                      \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, exports.ParseErrorLevel.FATAL);\n\t              }\n\t              this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n\t          }\n\t          else {\n\t              targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n\t          }\n\t      };\n\t      BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n\t          var isAnimationProp = false;\n\t          if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n\t              isAnimationProp = true;\n\t              name = name.substring(ANIMATE_PROP_PREFIX.length);\n\t          }\n\t          else if (_isAnimationLabel(name)) {\n\t              isAnimationProp = true;\n\t              name = name.substring(1);\n\t          }\n\t          if (isAnimationProp) {\n\t              this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n\t          }\n\t          else {\n\t              this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n\t          }\n\t      };\n\t      BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n\t          var expr = this.parseInterpolation(value, sourceSpan);\n\t          if (isPresent(expr)) {\n\t              this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n\t              return true;\n\t          }\n\t          return false;\n\t      };\n\t      BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n\t          targetMatchableAttrs.push([name, ast.source]);\n\t          targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n\t      };\n\t      BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n\t          // This will occur when a @trigger is not paired with an expression.\n\t          // For animations it is valid to not have an expression since */void\n\t          // states will be applied by angular when the element is attached/detached\n\t          var ast = this._parseBinding(expression || 'null', false, sourceSpan);\n\t          targetMatchableAttrs.push([name, ast.source]);\n\t          targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n\t      };\n\t      BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n\t          var sourceInfo = sourceSpan.start.toString();\n\t          try {\n\t              var ast = isHostBinding ?\n\t                  this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n\t                  this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n\t              if (ast)\n\t                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n\t              this._checkPipes(ast, sourceSpan);\n\t              return ast;\n\t          }\n\t          catch (e) {\n\t              this._reportError(\"\" + e, sourceSpan);\n\t              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n\t          }\n\t      };\n\t      BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n\t          if (boundProp.isAnimation) {\n\t              return new BoundElementPropertyAst(boundProp.name, exports.PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, false, boundProp.expression, null, boundProp.sourceSpan);\n\t          }\n\t          var unit = null;\n\t          var bindingType;\n\t          var boundPropertyName;\n\t          var parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n\t          var securityContexts;\n\t          if (parts.length === 1) {\n\t              var partValue = parts[0];\n\t              boundPropertyName = this._schemaRegistry.getMappedPropName(partValue);\n\t              securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n\t              bindingType = exports.PropertyBindingType.Property;\n\t              this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n\t          }\n\t          else {\n\t              if (parts[0] == ATTRIBUTE_PREFIX) {\n\t                  boundPropertyName = parts[1];\n\t                  this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n\t                  securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n\t                  var nsSeparatorIdx = boundPropertyName.indexOf(':');\n\t                  if (nsSeparatorIdx > -1) {\n\t                      var ns = boundPropertyName.substring(0, nsSeparatorIdx);\n\t                      var name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n\t                      boundPropertyName = mergeNsAndName(ns, name_1);\n\t                  }\n\t                  bindingType = exports.PropertyBindingType.Attribute;\n\t              }\n\t              else if (parts[0] == CLASS_PREFIX) {\n\t                  boundPropertyName = parts[1];\n\t                  bindingType = exports.PropertyBindingType.Class;\n\t                  securityContexts = [_angular_core.SecurityContext.NONE];\n\t              }\n\t              else if (parts[0] == STYLE_PREFIX) {\n\t                  unit = parts.length > 2 ? parts[2] : null;\n\t                  boundPropertyName = parts[1];\n\t                  bindingType = exports.PropertyBindingType.Style;\n\t                  securityContexts = [_angular_core.SecurityContext.STYLE];\n\t              }\n\t              else {\n\t                  this._reportError(\"Invalid property name '\" + boundProp.name + \"'\", boundProp.sourceSpan);\n\t                  bindingType = null;\n\t                  securityContexts = [];\n\t              }\n\t          }\n\t          return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts.length === 1 ? securityContexts[0] : null, securityContexts.length > 1, boundProp.expression, unit, boundProp.sourceSpan);\n\t      };\n\t      BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n\t          if (_isAnimationLabel(name)) {\n\t              name = name.substr(1);\n\t              this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n\t          }\n\t          else {\n\t              this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n\t          }\n\t      };\n\t      BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n\t          var matches = splitAtPeriod(name, [name, '']);\n\t          var eventName = matches[0];\n\t          var phase = matches[1].toLowerCase();\n\t          if (phase) {\n\t              switch (phase) {\n\t                  case 'start':\n\t                  case 'done':\n\t                      var ast = this._parseAction(expression, sourceSpan);\n\t                      targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n\t                      break;\n\t                  default:\n\t                      this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n\t                      break;\n\t              }\n\t          }\n\t          else {\n\t              this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n\t          }\n\t      };\n\t      BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n\t          // long format: 'target: eventName'\n\t          var _a = splitAtColon(name, [null, name]), target = _a[0], eventName = _a[1];\n\t          var ast = this._parseAction(expression, sourceSpan);\n\t          targetMatchableAttrs.push([name, ast.source]);\n\t          targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n\t          // Don't detect directives for event names for now,\n\t          // so don't add the event name to the matchableAttrs\n\t      };\n\t      BindingParser.prototype._parseAction = function (value, sourceSpan) {\n\t          var sourceInfo = sourceSpan.start.toString();\n\t          try {\n\t              var ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n\t              if (ast) {\n\t                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n\t              }\n\t              if (!ast || ast.ast instanceof EmptyExpr) {\n\t                  this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n\t                  return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n\t              }\n\t              this._checkPipes(ast, sourceSpan);\n\t              return ast;\n\t          }\n\t          catch (e) {\n\t              this._reportError(\"\" + e, sourceSpan);\n\t              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n\t          }\n\t      };\n\t      BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n\t          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n\t          this._targetErrors.push(new ParseError(sourceSpan, message, level));\n\t      };\n\t      BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n\t          for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n\t              var error = errors_1[_i];\n\t              this._reportError(error.message, sourceSpan);\n\t          }\n\t      };\n\t      BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n\t          var _this = this;\n\t          if (isPresent(ast)) {\n\t              var collector = new PipeCollector();\n\t              ast.visit(collector);\n\t              collector.pipes.forEach(function (pipeName) {\n\t                  if (!_this.pipesByName.has(pipeName)) {\n\t                      _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", sourceSpan);\n\t                  }\n\t              });\n\t          }\n\t      };\n\t      /**\n\t       * @param propName the name of the property / attribute\n\t       * @param sourceSpan\n\t       * @param isAttr true when binding to an attribute\n\t       * @private\n\t       */\n\t      BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n\t          var report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n\t              this._schemaRegistry.validateProperty(propName);\n\t          if (report.error) {\n\t              this._reportError(report.msg, sourceSpan, exports.ParseErrorLevel.FATAL);\n\t          }\n\t      };\n\t      return BindingParser;\n\t  }());\n\t  var PipeCollector = (function (_super) {\n\t      __extends$11(PipeCollector, _super);\n\t      function PipeCollector() {\n\t          _super.apply(this, arguments);\n\t          this.pipes = new Set();\n\t      }\n\t      PipeCollector.prototype.visitPipe = function (ast, context) {\n\t          this.pipes.add(ast.name);\n\t          ast.exp.visit(this);\n\t          this.visitAll(ast.args, context);\n\t          return null;\n\t      };\n\t      return PipeCollector;\n\t  }(RecursiveAstVisitor));\n\t  function _isAnimationLabel(name) {\n\t      return name[0] == '@';\n\t  }\n\t  function calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n\t      var ctxs = [];\n\t      CssSelector.parse(selector).forEach(function (selector) {\n\t          var elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n\t          var notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n\t              .map(function (selector) { return selector.element; }));\n\t          var possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n\t          ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n\t      });\n\t      return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n\t  }\n\t\n\t  var NG_CONTENT_SELECT_ATTR = 'select';\n\t  var NG_CONTENT_ELEMENT = 'ng-content';\n\t  var LINK_ELEMENT = 'link';\n\t  var LINK_STYLE_REL_ATTR = 'rel';\n\t  var LINK_STYLE_HREF_ATTR = 'href';\n\t  var LINK_STYLE_REL_VALUE = 'stylesheet';\n\t  var STYLE_ELEMENT = 'style';\n\t  var SCRIPT_ELEMENT = 'script';\n\t  var NG_NON_BINDABLE_ATTR = 'ngNonBindable';\n\t  var NG_PROJECT_AS = 'ngProjectAs';\n\t  function preparseElement(ast) {\n\t      var selectAttr = null;\n\t      var hrefAttr = null;\n\t      var relAttr = null;\n\t      var nonBindable = false;\n\t      var projectAs = null;\n\t      ast.attrs.forEach(function (attr) {\n\t          var lcAttrName = attr.name.toLowerCase();\n\t          if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n\t              selectAttr = attr.value;\n\t          }\n\t          else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n\t              hrefAttr = attr.value;\n\t          }\n\t          else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n\t              relAttr = attr.value;\n\t          }\n\t          else if (attr.name == NG_NON_BINDABLE_ATTR) {\n\t              nonBindable = true;\n\t          }\n\t          else if (attr.name == NG_PROJECT_AS) {\n\t              if (attr.value.length > 0) {\n\t                  projectAs = attr.value;\n\t              }\n\t          }\n\t      });\n\t      selectAttr = normalizeNgContentSelect(selectAttr);\n\t      var nodeName = ast.name.toLowerCase();\n\t      var type = PreparsedElementType.OTHER;\n\t      if (splitNsName(nodeName)[1] == NG_CONTENT_ELEMENT) {\n\t          type = PreparsedElementType.NG_CONTENT;\n\t      }\n\t      else if (nodeName == STYLE_ELEMENT) {\n\t          type = PreparsedElementType.STYLE;\n\t      }\n\t      else if (nodeName == SCRIPT_ELEMENT) {\n\t          type = PreparsedElementType.SCRIPT;\n\t      }\n\t      else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n\t          type = PreparsedElementType.STYLESHEET;\n\t      }\n\t      return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n\t  }\n\t  var PreparsedElementType;\n\t  (function (PreparsedElementType) {\n\t      PreparsedElementType[PreparsedElementType[\"NG_CONTENT\"] = 0] = \"NG_CONTENT\";\n\t      PreparsedElementType[PreparsedElementType[\"STYLE\"] = 1] = \"STYLE\";\n\t      PreparsedElementType[PreparsedElementType[\"STYLESHEET\"] = 2] = \"STYLESHEET\";\n\t      PreparsedElementType[PreparsedElementType[\"SCRIPT\"] = 3] = \"SCRIPT\";\n\t      PreparsedElementType[PreparsedElementType[\"OTHER\"] = 4] = \"OTHER\";\n\t  })(PreparsedElementType || (PreparsedElementType = {}));\n\t  var PreparsedElement = (function () {\n\t      function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n\t          this.type = type;\n\t          this.selectAttr = selectAttr;\n\t          this.hrefAttr = hrefAttr;\n\t          this.nonBindable = nonBindable;\n\t          this.projectAs = projectAs;\n\t      }\n\t      return PreparsedElement;\n\t  }());\n\t  function normalizeNgContentSelect(selectAttr) {\n\t      if (selectAttr === null || selectAttr.length === 0) {\n\t          return '*';\n\t      }\n\t      return selectAttr;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  // Group 1 = \"bind-\"\n\t  // Group 2 = \"let-\"\n\t  // Group 3 = \"ref-/#\"\n\t  // Group 4 = \"on-\"\n\t  // Group 5 = \"bindon-\"\n\t  // Group 6 = \"@\"\n\t  // Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\n\t  // Group 8 = identifier inside [()]\n\t  // Group 9 = identifier inside []\n\t  // Group 10 = identifier inside ()\n\t  var BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n\t  var KW_BIND_IDX = 1;\n\t  var KW_LET_IDX = 2;\n\t  var KW_REF_IDX = 3;\n\t  var KW_ON_IDX = 4;\n\t  var KW_BINDON_IDX = 5;\n\t  var KW_AT_IDX = 6;\n\t  var IDENT_KW_IDX = 7;\n\t  var IDENT_BANANA_BOX_IDX = 8;\n\t  var IDENT_PROPERTY_IDX = 9;\n\t  var IDENT_EVENT_IDX = 10;\n\t  var TEMPLATE_ELEMENT = 'template';\n\t  var TEMPLATE_ATTR = 'template';\n\t  var TEMPLATE_ATTR_PREFIX = '*';\n\t  var CLASS_ATTR = 'class';\n\t  var TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n\t  /**\n\t   * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n\t   * parsed templates before compilation is invoked, allowing custom expression syntax\n\t   * and other advanced transformations.\n\t   *\n\t   * This is currently an internal-only feature and not meant for general use.\n\t   */\n\t  var TEMPLATE_TRANSFORMS = new _angular_core.OpaqueToken('TemplateTransforms');\n\t  var TemplateParseError = (function (_super) {\n\t      __extends(TemplateParseError, _super);\n\t      function TemplateParseError(message, span, level) {\n\t          _super.call(this, span, message, level);\n\t      }\n\t      return TemplateParseError;\n\t  }(ParseError));\n\t  var TemplateParseResult = (function () {\n\t      function TemplateParseResult(templateAst, errors) {\n\t          this.templateAst = templateAst;\n\t          this.errors = errors;\n\t      }\n\t      return TemplateParseResult;\n\t  }());\n\t  var TemplateParser = (function () {\n\t      function TemplateParser(_exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n\t          this._exprParser = _exprParser;\n\t          this._schemaRegistry = _schemaRegistry;\n\t          this._htmlParser = _htmlParser;\n\t          this._console = _console;\n\t          this.transforms = transforms;\n\t      }\n\t      TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n\t          var result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n\t          var warnings = result.errors.filter(function (error) { return error.level === exports.ParseErrorLevel.WARNING; });\n\t          var errors = result.errors.filter(function (error) { return error.level === exports.ParseErrorLevel.FATAL; });\n\t          if (warnings.length > 0) {\n\t              this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n\t          }\n\t          if (errors.length > 0) {\n\t              var errorString = errors.join('\\n');\n\t              throw new Error(\"Template parse errors:\\n\" + errorString);\n\t          }\n\t          return result.templateAst;\n\t      };\n\t      TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n\t          return this.tryParseHtml(this.expandHtml(this._htmlParser.parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, template, directives, pipes, schemas, templateUrl);\n\t      };\n\t      TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, template, directives, pipes, schemas, templateUrl) {\n\t          var result;\n\t          var errors = htmlAstWithErrors.errors;\n\t          if (htmlAstWithErrors.rootNodes.length > 0) {\n\t              var uniqDirectives = removeIdentifierDuplicates(directives);\n\t              var uniqPipes = removeIdentifierDuplicates(pipes);\n\t              var providerViewContext = new ProviderViewContext(component, htmlAstWithErrors.rootNodes[0].sourceSpan);\n\t              var interpolationConfig = void 0;\n\t              if (component.template && component.template.interpolation) {\n\t                  interpolationConfig = {\n\t                      start: component.template.interpolation[0],\n\t                      end: component.template.interpolation[1]\n\t                  };\n\t              }\n\t              var bindingParser = new BindingParser(this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n\t              var parseVisitor = new TemplateParseVisitor(providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n\t              result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n\t              errors.push.apply(errors, providerViewContext.errors);\n\t          }\n\t          else {\n\t              result = [];\n\t          }\n\t          this._assertNoReferenceDuplicationOnTemplate(result, errors);\n\t          if (errors.length > 0) {\n\t              return new TemplateParseResult(result, errors);\n\t          }\n\t          if (isPresent(this.transforms)) {\n\t              this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n\t          }\n\t          return new TemplateParseResult(result, errors);\n\t      };\n\t      TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n\t          if (forced === void 0) { forced = false; }\n\t          var errors = htmlAstWithErrors.errors;\n\t          if (errors.length == 0 || forced) {\n\t              // Transform ICU messages to angular directives\n\t              var expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n\t              errors.push.apply(errors, expandedHtmlAst.errors);\n\t              htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n\t          }\n\t          return htmlAstWithErrors;\n\t      };\n\t      TemplateParser.prototype.getInterpolationConfig = function (component) {\n\t          if (component.template) {\n\t              return InterpolationConfig.fromArray(component.template.interpolation);\n\t          }\n\t      };\n\t      /** @internal */\n\t      TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n\t          var existingReferences = [];\n\t          result.filter(function (element) { return !!element.references; })\n\t              .forEach(function (element) { return element.references.forEach(function (reference) {\n\t              var name = reference.name;\n\t              if (existingReferences.indexOf(name) < 0) {\n\t                  existingReferences.push(name);\n\t              }\n\t              else {\n\t                  var error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, exports.ParseErrorLevel.FATAL);\n\t                  errors.push(error);\n\t              }\n\t          }); });\n\t      };\n\t      TemplateParser.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      TemplateParser.ctorParameters = [\n\t          { type: Parser, },\n\t          { type: ElementSchemaRegistry, },\n\t          { type: I18NHtmlParser, },\n\t          { type: Console, },\n\t          { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n\t      ];\n\t      return TemplateParser;\n\t  }());\n\t  var TemplateParseVisitor = (function () {\n\t      function TemplateParseVisitor(providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n\t          var _this = this;\n\t          this.providerViewContext = providerViewContext;\n\t          this._bindingParser = _bindingParser;\n\t          this._schemaRegistry = _schemaRegistry;\n\t          this._schemas = _schemas;\n\t          this._targetErrors = _targetErrors;\n\t          this.selectorMatcher = new SelectorMatcher();\n\t          this.directivesIndex = new Map();\n\t          this.ngContentCount = 0;\n\t          directives.forEach(function (directive, index) {\n\t              var selector = CssSelector.parse(directive.selector);\n\t              _this.selectorMatcher.addSelectables(selector, directive);\n\t              _this.directivesIndex.set(directive, index);\n\t          });\n\t      }\n\t      TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n\t      TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n\t      TemplateParseVisitor.prototype.visitText = function (text, parent) {\n\t          var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n\t          var expr = this._bindingParser.parseInterpolation(text.value, text.sourceSpan);\n\t          if (isPresent(expr)) {\n\t              return new BoundTextAst(expr, ngContentIndex, text.sourceSpan);\n\t          }\n\t          else {\n\t              return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n\t          }\n\t      };\n\t      TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n\t          return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n\t      };\n\t      TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n\t      TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n\t          var _this = this;\n\t          var nodeName = element.name;\n\t          var preparsedElement = preparseElement(element);\n\t          if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n\t              preparsedElement.type === PreparsedElementType.STYLE) {\n\t              // Skipping <script> for security reasons\n\t              // Skipping <style> as we already processed them\n\t              // in the StyleCompiler\n\t              return null;\n\t          }\n\t          if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n\t              isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n\t              // Skipping stylesheets with either relative urls or package scheme as we already processed\n\t              // them in the StyleCompiler\n\t              return null;\n\t          }\n\t          var matchableAttrs = [];\n\t          var elementOrDirectiveProps = [];\n\t          var elementOrDirectiveRefs = [];\n\t          var elementVars = [];\n\t          var events = [];\n\t          var templateElementOrDirectiveProps = [];\n\t          var templateMatchableAttrs = [];\n\t          var templateElementVars = [];\n\t          var hasInlineTemplates = false;\n\t          var attrs = [];\n\t          var lcElName = splitNsName(nodeName.toLowerCase())[1];\n\t          var isTemplateElement = lcElName == TEMPLATE_ELEMENT;\n\t          element.attrs.forEach(function (attr) {\n\t              var hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n\t              var templateBindingsSource;\n\t              if (_this._normalizeAttributeName(attr.name) == TEMPLATE_ATTR) {\n\t                  templateBindingsSource = attr.value;\n\t              }\n\t              else if (attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n\t                  var key = attr.name.substring(TEMPLATE_ATTR_PREFIX.length); // remove the star\n\t                  templateBindingsSource = (attr.value.length == 0) ? key : key + ' ' + attr.value;\n\t              }\n\t              var hasTemplateBinding = isPresent(templateBindingsSource);\n\t              if (hasTemplateBinding) {\n\t                  if (hasInlineTemplates) {\n\t                      _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n\t                  }\n\t                  hasInlineTemplates = true;\n\t                  _this._bindingParser.parseInlineTemplateBinding(attr.name, templateBindingsSource, attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n\t              }\n\t              if (!hasBinding && !hasTemplateBinding) {\n\t                  // don't include the bindings as attributes as well in the AST\n\t                  attrs.push(_this.visitAttribute(attr, null));\n\t                  matchableAttrs.push([attr.name, attr.value]);\n\t              }\n\t          });\n\t          var elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n\t          var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n\t          var references = [];\n\t          var directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, element.sourceSpan, references);\n\t          var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directiveAsts);\n\t          var isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n\t          var providerContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs, references, element.sourceSpan);\n\t          var children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? parent.providerContext : providerContext));\n\t          providerContext.afterElement();\n\t          // Override the actual selector when the `ngProjectAs` attribute is provided\n\t          var projectionSelector = isPresent(preparsedElement.projectAs) ?\n\t              CssSelector.parse(preparsedElement.projectAs)[0] :\n\t              elementCssSelector;\n\t          var ngContentIndex = parent.findNgContentIndex(projectionSelector);\n\t          var parsedElement;\n\t          if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n\t              if (element.children && !element.children.every(_isEmptyTextNode)) {\n\t                  this._reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n\t              }\n\t              parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n\t          }\n\t          else if (isTemplateElement) {\n\t              this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n\t              this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, element.sourceSpan);\n\t              parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n\t          }\n\t          else {\n\t              this._assertElementExists(matchElement, element);\n\t              this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n\t              var ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n\t              parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan);\n\t              this._findComponentDirectives(directiveAsts)\n\t                  .forEach(function (componentDirectiveAst) { return _this._validateElementAnimationInputOutputs(componentDirectiveAst.hostProperties, componentDirectiveAst.hostEvents, componentDirectiveAst.directive.template); });\n\t              var componentTemplate = providerContext.viewContext.component.template;\n\t              this._validateElementAnimationInputOutputs(elementProps, events, componentTemplate);\n\t          }\n\t          if (hasInlineTemplates) {\n\t              var templateCssSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n\t              var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateCssSelector).directives;\n\t              var templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], element.sourceSpan, []);\n\t              var templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateDirectiveAsts);\n\t              this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, element.sourceSpan);\n\t              var templateProviderContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, parent.isTemplateElement, templateDirectiveAsts, [], [], element.sourceSpan);\n\t              templateProviderContext.afterElement();\n\t              parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, [parsedElement], ngContentIndex, element.sourceSpan);\n\t          }\n\t          return parsedElement;\n\t      };\n\t      TemplateParseVisitor.prototype._validateElementAnimationInputOutputs = function (inputs, outputs, template) {\n\t          var _this = this;\n\t          var triggerLookup = new Set();\n\t          template.animations.forEach(function (entry) { triggerLookup.add(entry.name); });\n\t          var animationInputs = inputs.filter(function (input) { return input.isAnimation; });\n\t          animationInputs.forEach(function (input) {\n\t              var name = input.name;\n\t              if (!triggerLookup.has(name)) {\n\t                  _this._reportError(\"Couldn't find an animation entry for \\\"\" + name + \"\\\"\", input.sourceSpan);\n\t              }\n\t          });\n\t          outputs.forEach(function (output) {\n\t              if (output.isAnimation) {\n\t                  var found = animationInputs.find(function (input) { return input.name == output.name; });\n\t                  if (!found) {\n\t                      _this._reportError(\"Unable to listen on (@\" + output.name + \".\" + output.phase + \") because the animation trigger [@\" + output.name + \"] isn't being used on the same element\", output.sourceSpan);\n\t                  }\n\t              }\n\t          });\n\t      };\n\t      TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n\t          var name = this._normalizeAttributeName(attr.name);\n\t          var value = attr.value;\n\t          var srcSpan = attr.sourceSpan;\n\t          var bindParts = name.match(BIND_NAME_REGEXP);\n\t          var hasBinding = false;\n\t          if (bindParts !== null) {\n\t              hasBinding = true;\n\t              if (isPresent(bindParts[KW_BIND_IDX])) {\n\t                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\t              }\n\t              else if (bindParts[KW_LET_IDX]) {\n\t                  if (isTemplateElement) {\n\t                      var identifier = bindParts[IDENT_KW_IDX];\n\t                      this._parseVariable(identifier, value, srcSpan, targetVars);\n\t                  }\n\t                  else {\n\t                      this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n\t                  }\n\t              }\n\t              else if (bindParts[KW_REF_IDX]) {\n\t                  var identifier = bindParts[IDENT_KW_IDX];\n\t                  this._parseReference(identifier, value, srcSpan, targetRefs);\n\t              }\n\t              else if (bindParts[KW_ON_IDX]) {\n\t                  this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\t              }\n\t              else if (bindParts[KW_BINDON_IDX]) {\n\t                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\t                  this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\t              }\n\t              else if (bindParts[KW_AT_IDX]) {\n\t                  this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n\t              }\n\t              else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n\t                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\t                  this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\t              }\n\t              else if (bindParts[IDENT_PROPERTY_IDX]) {\n\t                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\t              }\n\t              else if (bindParts[IDENT_EVENT_IDX]) {\n\t                  this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\t              }\n\t          }\n\t          else {\n\t              hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n\t          }\n\t          if (!hasBinding) {\n\t              this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n\t          }\n\t          return hasBinding;\n\t      };\n\t      TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n\t          return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n\t      };\n\t      TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n\t          if (identifier.indexOf('-') > -1) {\n\t              this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n\t          }\n\t          targetVars.push(new VariableAst(identifier, value, sourceSpan));\n\t      };\n\t      TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n\t          if (identifier.indexOf('-') > -1) {\n\t              this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n\t          }\n\t          targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n\t      };\n\t      TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n\t          this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n\t      };\n\t      TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n\t          var _this = this;\n\t          // Need to sort the directives so that we get consistent results throughout,\n\t          // as selectorMatcher uses Maps inside.\n\t          // Also deduplicate directives as they might match more than one time!\n\t          var directives = new Array(this.directivesIndex.size);\n\t          // Whether any directive selector matches on the element name\n\t          var matchElement = false;\n\t          selectorMatcher.match(elementCssSelector, function (selector, directive) {\n\t              directives[_this.directivesIndex.get(directive)] = directive;\n\t              matchElement = matchElement || selector.hasElementSelector();\n\t          });\n\t          return {\n\t              directives: directives.filter(function (dir) { return !!dir; }),\n\t              matchElement: matchElement,\n\t          };\n\t      };\n\t      TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences) {\n\t          var _this = this;\n\t          var matchedReferences = new Set();\n\t          var component = null;\n\t          var directiveAsts = directives.map(function (directive) {\n\t              var sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + directive.type.name);\n\t              if (directive.isComponent) {\n\t                  component = directive;\n\t              }\n\t              var directiveProperties = [];\n\t              var hostProperties = _this._bindingParser.createDirectiveHostPropertyAsts(directive, sourceSpan);\n\t              // Note: We need to check the host properties here as well,\n\t              // as we don't know the element name in the DirectiveWrapperCompiler yet.\n\t              _this._checkPropertiesInSchema(elementName, hostProperties);\n\t              var hostEvents = _this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n\t              _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);\n\t              elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n\t                  if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n\t                      (directive.exportAs == elOrDirRef.value)) {\n\t                      targetReferences.push(new ReferenceAst(elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n\t                      matchedReferences.add(elOrDirRef.name);\n\t                  }\n\t              });\n\t              return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, sourceSpan);\n\t          });\n\t          elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n\t              if (elOrDirRef.value.length > 0) {\n\t                  if (!matchedReferences.has(elOrDirRef.name)) {\n\t                      _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n\t                  }\n\t              }\n\t              else if (!component) {\n\t                  var refToken = null;\n\t                  if (isTemplateElement) {\n\t                      refToken = resolveIdentifierToken(Identifiers.TemplateRef);\n\t                  }\n\t                  targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n\t              }\n\t          }); // fix syntax highlighting issue: `\n\t          return directiveAsts;\n\t      };\n\t      TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps) {\n\t          if (directiveProperties) {\n\t              var boundPropsByName_1 = new Map();\n\t              boundProps.forEach(function (boundProp) {\n\t                  var prevValue = boundPropsByName_1.get(boundProp.name);\n\t                  if (!prevValue || prevValue.isLiteral) {\n\t                      // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n\t                      boundPropsByName_1.set(boundProp.name, boundProp);\n\t                  }\n\t              });\n\t              Object.keys(directiveProperties).forEach(function (dirProp) {\n\t                  var elProp = directiveProperties[dirProp];\n\t                  var boundProp = boundPropsByName_1.get(elProp);\n\t                  // Bindings are optional, so this binding only needs to be set up if an expression is given.\n\t                  if (boundProp) {\n\t                      targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n\t                  }\n\t              });\n\t          }\n\t      };\n\t      TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, directives) {\n\t          var _this = this;\n\t          var boundElementProps = [];\n\t          var boundDirectivePropsIndex = new Map();\n\t          directives.forEach(function (directive) {\n\t              directive.inputs.forEach(function (prop) {\n\t                  boundDirectivePropsIndex.set(prop.templateName, prop);\n\t              });\n\t          });\n\t          props.forEach(function (prop) {\n\t              if (!prop.isLiteral && !boundDirectivePropsIndex.get(prop.name)) {\n\t                  boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n\t              }\n\t          });\n\t          this._checkPropertiesInSchema(elementName, boundElementProps);\n\t          return boundElementProps;\n\t      };\n\t      TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n\t          return directives.filter(function (directive) { return directive.directive.isComponent; });\n\t      };\n\t      TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n\t          return this._findComponentDirectives(directives)\n\t              .map(function (directive) { return directive.directive.type.name; });\n\t      };\n\t      TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n\t          var componentTypeNames = this._findComponentDirectiveNames(directives);\n\t          if (componentTypeNames.length > 1) {\n\t              this._reportError(\"More than one component: \" + componentTypeNames.join(','), sourceSpan);\n\t          }\n\t      };\n\t      /**\n\t       * Make sure that non-angular tags conform to the schemas.\n\t       *\n\t       * Note: An element is considered an angular tag when at least one directive selector matches the\n\t       * tag name.\n\t       *\n\t       * @param matchElement Whether any directive has matched on the tag name\n\t       * @param element the html element\n\t       */\n\t      TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n\t          var elName = element.name.replace(/^:xhtml:/, '');\n\t          if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n\t              var errorMsg = (\"'\" + elName + \"' is not a known element:\\n\") +\n\t                  (\"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\") +\n\t                  (\"2. If '\" + elName + \"' is a Web Component then add \\\"CUSTOM_ELEMENTS_SCHEMA\\\" to the '@NgModule.schemas' of this component to suppress this message.\");\n\t              this._reportError(errorMsg, element.sourceSpan);\n\t          }\n\t      };\n\t      TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n\t          var _this = this;\n\t          var componentTypeNames = this._findComponentDirectiveNames(directives);\n\t          if (componentTypeNames.length > 0) {\n\t              this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n\t          }\n\t          elementProps.forEach(function (prop) {\n\t              _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"directives\\\" section.\", sourceSpan);\n\t          });\n\t      };\n\t      TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n\t          var _this = this;\n\t          var allDirectiveEvents = new Set();\n\t          directives.forEach(function (directive) {\n\t              Object.keys(directive.directive.outputs).forEach(function (k) {\n\t                  var eventName = directive.directive.outputs[k];\n\t                  allDirectiveEvents.add(eventName);\n\t              });\n\t          });\n\t          events.forEach(function (event) {\n\t              if (isPresent(event.target) || !allDirectiveEvents.has(event.name)) {\n\t                  _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"directives\\\" section.\", event.sourceSpan);\n\t              }\n\t          });\n\t      };\n\t      TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n\t          var _this = this;\n\t          boundProps.forEach(function (boundProp) {\n\t              if (boundProp.type === exports.PropertyBindingType.Property &&\n\t                  !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n\t                  var errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n\t                  if (elementName.indexOf('-') > -1) {\n\t                      errorMsg +=\n\t                          (\"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\") +\n\t                              (\"\\n2. If '\" + elementName + \"' is a Web Component then add \\\"CUSTOM_ELEMENTS_SCHEMA\\\" to the '@NgModule.schemas' of this component to suppress this message.\\n\");\n\t                  }\n\t                  _this._reportError(errorMsg, boundProp.sourceSpan);\n\t              }\n\t          });\n\t      };\n\t      TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n\t          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n\t          this._targetErrors.push(new ParseError(sourceSpan, message, level));\n\t      };\n\t      return TemplateParseVisitor;\n\t  }());\n\t  var NonBindableVisitor = (function () {\n\t      function NonBindableVisitor() {\n\t      }\n\t      NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n\t          var preparsedElement = preparseElement(ast);\n\t          if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n\t              preparsedElement.type === PreparsedElementType.STYLE ||\n\t              preparsedElement.type === PreparsedElementType.STYLESHEET) {\n\t              // Skipping <script> for security reasons\n\t              // Skipping <style> and stylesheets as we already processed them\n\t              // in the StyleCompiler\n\t              return null;\n\t          }\n\t          var attrNameAndValues = ast.attrs.map(function (attrAst) { return [attrAst.name, attrAst.value]; });\n\t          var selector = createElementCssSelector(ast.name, attrNameAndValues);\n\t          var ngContentIndex = parent.findNgContentIndex(selector);\n\t          var children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n\t          return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n\t      };\n\t      NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n\t      NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n\t          return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n\t      };\n\t      NonBindableVisitor.prototype.visitText = function (text, parent) {\n\t          var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n\t          return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n\t      };\n\t      NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n\t      NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n\t      return NonBindableVisitor;\n\t  }());\n\t  var ElementOrDirectiveRef = (function () {\n\t      function ElementOrDirectiveRef(name, value, sourceSpan) {\n\t          this.name = name;\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      return ElementOrDirectiveRef;\n\t  }());\n\t  function splitClasses(classAttrValue) {\n\t      return classAttrValue.trim().split(/\\s+/g);\n\t  }\n\t  var ElementContext = (function () {\n\t      function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n\t          this.isTemplateElement = isTemplateElement;\n\t          this._ngContentIndexMatcher = _ngContentIndexMatcher;\n\t          this._wildcardNgContentIndex = _wildcardNgContentIndex;\n\t          this.providerContext = providerContext;\n\t      }\n\t      ElementContext.create = function (isTemplateElement, directives, providerContext) {\n\t          var matcher = new SelectorMatcher();\n\t          var wildcardNgContentIndex = null;\n\t          var component = directives.find(function (directive) { return directive.directive.isComponent; });\n\t          if (component) {\n\t              var ngContentSelectors = component.directive.template.ngContentSelectors;\n\t              for (var i = 0; i < ngContentSelectors.length; i++) {\n\t                  var selector = ngContentSelectors[i];\n\t                  if (selector === '*') {\n\t                      wildcardNgContentIndex = i;\n\t                  }\n\t                  else {\n\t                      matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n\t                  }\n\t              }\n\t          }\n\t          return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n\t      };\n\t      ElementContext.prototype.findNgContentIndex = function (selector) {\n\t          var ngContentIndices = [];\n\t          this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n\t          ngContentIndices.sort();\n\t          if (isPresent(this._wildcardNgContentIndex)) {\n\t              ngContentIndices.push(this._wildcardNgContentIndex);\n\t          }\n\t          return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n\t      };\n\t      return ElementContext;\n\t  }());\n\t  function createElementCssSelector(elementName, matchableAttrs) {\n\t      var cssSelector = new CssSelector();\n\t      var elNameNoNs = splitNsName(elementName)[1];\n\t      cssSelector.setElement(elNameNoNs);\n\t      for (var i = 0; i < matchableAttrs.length; i++) {\n\t          var attrName = matchableAttrs[i][0];\n\t          var attrNameNoNs = splitNsName(attrName)[1];\n\t          var attrValue = matchableAttrs[i][1];\n\t          cssSelector.addAttribute(attrNameNoNs, attrValue);\n\t          if (attrName.toLowerCase() == CLASS_ATTR) {\n\t              var classes = splitClasses(attrValue);\n\t              classes.forEach(function (className) { return cssSelector.addClassName(className); });\n\t          }\n\t      }\n\t      return cssSelector;\n\t  }\n\t  var EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\n\t  var NON_BINDABLE_VISITOR = new NonBindableVisitor();\n\t  function _isEmptyTextNode(node) {\n\t      return node instanceof Text && node.value.trim().length == 0;\n\t  }\n\t\n\t  function unimplemented$1() {\n\t      throw new Error('unimplemented');\n\t  }\n\t  var CompilerConfig = (function () {\n\t      function CompilerConfig(_a) {\n\t          var _b = _a === void 0 ? {} : _a, _c = _b.renderTypes, renderTypes = _c === void 0 ? new DefaultRenderTypes() : _c, _d = _b.defaultEncapsulation, defaultEncapsulation = _d === void 0 ? _angular_core.ViewEncapsulation.Emulated : _d, genDebugInfo = _b.genDebugInfo, logBindingUpdate = _b.logBindingUpdate, _e = _b.useJit, useJit = _e === void 0 ? true : _e;\n\t          this.renderTypes = renderTypes;\n\t          this.defaultEncapsulation = defaultEncapsulation;\n\t          this._genDebugInfo = genDebugInfo;\n\t          this._logBindingUpdate = logBindingUpdate;\n\t          this.useJit = useJit;\n\t      }\n\t      Object.defineProperty(CompilerConfig.prototype, \"genDebugInfo\", {\n\t          get: function () {\n\t              return this._genDebugInfo === void 0 ? _angular_core.isDevMode() : this._genDebugInfo;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(CompilerConfig.prototype, \"logBindingUpdate\", {\n\t          get: function () {\n\t              return this._logBindingUpdate === void 0 ? _angular_core.isDevMode() : this._logBindingUpdate;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return CompilerConfig;\n\t  }());\n\t  /**\n\t   * Types used for the renderer.\n\t   * Can be replaced to specialize the generated output to a specific renderer\n\t   * to help tree shaking.\n\t   */\n\t  var RenderTypes = (function () {\n\t      function RenderTypes() {\n\t      }\n\t      Object.defineProperty(RenderTypes.prototype, \"renderer\", {\n\t          get: function () { return unimplemented$1(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(RenderTypes.prototype, \"renderText\", {\n\t          get: function () { return unimplemented$1(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(RenderTypes.prototype, \"renderElement\", {\n\t          get: function () { return unimplemented$1(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(RenderTypes.prototype, \"renderComment\", {\n\t          get: function () { return unimplemented$1(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(RenderTypes.prototype, \"renderNode\", {\n\t          get: function () { return unimplemented$1(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(RenderTypes.prototype, \"renderEvent\", {\n\t          get: function () { return unimplemented$1(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return RenderTypes;\n\t  }());\n\t  var DefaultRenderTypes = (function () {\n\t      function DefaultRenderTypes() {\n\t          this.renderText = null;\n\t          this.renderElement = null;\n\t          this.renderComment = null;\n\t          this.renderNode = null;\n\t          this.renderEvent = null;\n\t      }\n\t      Object.defineProperty(DefaultRenderTypes.prototype, \"renderer\", {\n\t          get: function () { return resolveIdentifier(Identifiers.Renderer); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      ;\n\t      return DefaultRenderTypes;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$12 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  //// Types\n\t  var TypeModifier;\n\t  (function (TypeModifier) {\n\t      TypeModifier[TypeModifier[\"Const\"] = 0] = \"Const\";\n\t  })(TypeModifier || (TypeModifier = {}));\n\t  var Type$1 = (function () {\n\t      function Type(modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          this.modifiers = modifiers;\n\t          if (!modifiers) {\n\t              this.modifiers = [];\n\t          }\n\t      }\n\t      Type.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n\t      return Type;\n\t  }());\n\t  var BuiltinTypeName;\n\t  (function (BuiltinTypeName) {\n\t      BuiltinTypeName[BuiltinTypeName[\"Dynamic\"] = 0] = \"Dynamic\";\n\t      BuiltinTypeName[BuiltinTypeName[\"Bool\"] = 1] = \"Bool\";\n\t      BuiltinTypeName[BuiltinTypeName[\"String\"] = 2] = \"String\";\n\t      BuiltinTypeName[BuiltinTypeName[\"Int\"] = 3] = \"Int\";\n\t      BuiltinTypeName[BuiltinTypeName[\"Number\"] = 4] = \"Number\";\n\t      BuiltinTypeName[BuiltinTypeName[\"Function\"] = 5] = \"Function\";\n\t  })(BuiltinTypeName || (BuiltinTypeName = {}));\n\t  var BuiltinType = (function (_super) {\n\t      __extends$12(BuiltinType, _super);\n\t      function BuiltinType(name, modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.name = name;\n\t      }\n\t      BuiltinType.prototype.visitType = function (visitor, context) {\n\t          return visitor.visitBuiltintType(this, context);\n\t      };\n\t      return BuiltinType;\n\t  }(Type$1));\n\t  var ExternalType = (function (_super) {\n\t      __extends$12(ExternalType, _super);\n\t      function ExternalType(value, typeParams, modifiers) {\n\t          if (typeParams === void 0) { typeParams = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.value = value;\n\t          this.typeParams = typeParams;\n\t      }\n\t      ExternalType.prototype.visitType = function (visitor, context) {\n\t          return visitor.visitExternalType(this, context);\n\t      };\n\t      return ExternalType;\n\t  }(Type$1));\n\t  var ArrayType = (function (_super) {\n\t      __extends$12(ArrayType, _super);\n\t      function ArrayType(of, modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.of = of;\n\t      }\n\t      ArrayType.prototype.visitType = function (visitor, context) {\n\t          return visitor.visitArrayType(this, context);\n\t      };\n\t      return ArrayType;\n\t  }(Type$1));\n\t  var MapType = (function (_super) {\n\t      __extends$12(MapType, _super);\n\t      function MapType(valueType, modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.valueType = valueType;\n\t      }\n\t      MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n\t      return MapType;\n\t  }(Type$1));\n\t  var DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\n\t  var BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\n\t  var INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\n\t  var NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\n\t  var STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\n\t  var FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n\t  ///// Expressions\n\t  var BinaryOperator;\n\t  (function (BinaryOperator) {\n\t      BinaryOperator[BinaryOperator[\"Equals\"] = 0] = \"Equals\";\n\t      BinaryOperator[BinaryOperator[\"NotEquals\"] = 1] = \"NotEquals\";\n\t      BinaryOperator[BinaryOperator[\"Identical\"] = 2] = \"Identical\";\n\t      BinaryOperator[BinaryOperator[\"NotIdentical\"] = 3] = \"NotIdentical\";\n\t      BinaryOperator[BinaryOperator[\"Minus\"] = 4] = \"Minus\";\n\t      BinaryOperator[BinaryOperator[\"Plus\"] = 5] = \"Plus\";\n\t      BinaryOperator[BinaryOperator[\"Divide\"] = 6] = \"Divide\";\n\t      BinaryOperator[BinaryOperator[\"Multiply\"] = 7] = \"Multiply\";\n\t      BinaryOperator[BinaryOperator[\"Modulo\"] = 8] = \"Modulo\";\n\t      BinaryOperator[BinaryOperator[\"And\"] = 9] = \"And\";\n\t      BinaryOperator[BinaryOperator[\"Or\"] = 10] = \"Or\";\n\t      BinaryOperator[BinaryOperator[\"Lower\"] = 11] = \"Lower\";\n\t      BinaryOperator[BinaryOperator[\"LowerEquals\"] = 12] = \"LowerEquals\";\n\t      BinaryOperator[BinaryOperator[\"Bigger\"] = 13] = \"Bigger\";\n\t      BinaryOperator[BinaryOperator[\"BiggerEquals\"] = 14] = \"BiggerEquals\";\n\t  })(BinaryOperator || (BinaryOperator = {}));\n\t  var Expression = (function () {\n\t      function Expression(type) {\n\t          this.type = type;\n\t      }\n\t      Expression.prototype.prop = function (name) { return new ReadPropExpr(this, name); };\n\t      Expression.prototype.key = function (index, type) {\n\t          if (type === void 0) { type = null; }\n\t          return new ReadKeyExpr(this, index, type);\n\t      };\n\t      Expression.prototype.callMethod = function (name, params) {\n\t          return new InvokeMethodExpr(this, name, params);\n\t      };\n\t      Expression.prototype.callFn = function (params) { return new InvokeFunctionExpr(this, params); };\n\t      Expression.prototype.instantiate = function (params, type) {\n\t          if (type === void 0) { type = null; }\n\t          return new InstantiateExpr(this, params, type);\n\t      };\n\t      Expression.prototype.conditional = function (trueCase, falseCase) {\n\t          if (falseCase === void 0) { falseCase = null; }\n\t          return new ConditionalExpr(this, trueCase, falseCase);\n\t      };\n\t      Expression.prototype.equals = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs);\n\t      };\n\t      Expression.prototype.notEquals = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs);\n\t      };\n\t      Expression.prototype.identical = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs);\n\t      };\n\t      Expression.prototype.notIdentical = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs);\n\t      };\n\t      Expression.prototype.minus = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs);\n\t      };\n\t      Expression.prototype.plus = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs);\n\t      };\n\t      Expression.prototype.divide = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs);\n\t      };\n\t      Expression.prototype.multiply = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs);\n\t      };\n\t      Expression.prototype.modulo = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs);\n\t      };\n\t      Expression.prototype.and = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.And, this, rhs);\n\t      };\n\t      Expression.prototype.or = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs);\n\t      };\n\t      Expression.prototype.lower = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs);\n\t      };\n\t      Expression.prototype.lowerEquals = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs);\n\t      };\n\t      Expression.prototype.bigger = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs);\n\t      };\n\t      Expression.prototype.biggerEquals = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs);\n\t      };\n\t      Expression.prototype.isBlank = function () {\n\t          // Note: We use equals by purpose here to compare to null and undefined in JS.\n\t          return this.equals(NULL_EXPR);\n\t      };\n\t      Expression.prototype.cast = function (type) { return new CastExpr(this, type); };\n\t      Expression.prototype.toStmt = function () { return new ExpressionStatement(this); };\n\t      return Expression;\n\t  }());\n\t  var BuiltinVar;\n\t  (function (BuiltinVar) {\n\t      BuiltinVar[BuiltinVar[\"This\"] = 0] = \"This\";\n\t      BuiltinVar[BuiltinVar[\"Super\"] = 1] = \"Super\";\n\t      BuiltinVar[BuiltinVar[\"CatchError\"] = 2] = \"CatchError\";\n\t      BuiltinVar[BuiltinVar[\"CatchStack\"] = 3] = \"CatchStack\";\n\t  })(BuiltinVar || (BuiltinVar = {}));\n\t  var ReadVarExpr = (function (_super) {\n\t      __extends$12(ReadVarExpr, _super);\n\t      function ReadVarExpr(name, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          if (typeof name === 'string') {\n\t              this.name = name;\n\t              this.builtin = null;\n\t          }\n\t          else {\n\t              this.name = null;\n\t              this.builtin = name;\n\t          }\n\t      }\n\t      ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitReadVarExpr(this, context);\n\t      };\n\t      ReadVarExpr.prototype.set = function (value) { return new WriteVarExpr(this.name, value); };\n\t      return ReadVarExpr;\n\t  }(Expression));\n\t  var WriteVarExpr = (function (_super) {\n\t      __extends$12(WriteVarExpr, _super);\n\t      function WriteVarExpr(name, value, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type || value.type);\n\t          this.name = name;\n\t          this.value = value;\n\t      }\n\t      WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitWriteVarExpr(this, context);\n\t      };\n\t      WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          return new DeclareVarStmt(this.name, this.value, type, modifiers);\n\t      };\n\t      return WriteVarExpr;\n\t  }(Expression));\n\t  var WriteKeyExpr = (function (_super) {\n\t      __extends$12(WriteKeyExpr, _super);\n\t      function WriteKeyExpr(receiver, index, value, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type || value.type);\n\t          this.receiver = receiver;\n\t          this.index = index;\n\t          this.value = value;\n\t      }\n\t      WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitWriteKeyExpr(this, context);\n\t      };\n\t      return WriteKeyExpr;\n\t  }(Expression));\n\t  var WritePropExpr = (function (_super) {\n\t      __extends$12(WritePropExpr, _super);\n\t      function WritePropExpr(receiver, name, value, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type || value.type);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t          this.value = value;\n\t      }\n\t      WritePropExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitWritePropExpr(this, context);\n\t      };\n\t      return WritePropExpr;\n\t  }(Expression));\n\t  var BuiltinMethod;\n\t  (function (BuiltinMethod) {\n\t      BuiltinMethod[BuiltinMethod[\"ConcatArray\"] = 0] = \"ConcatArray\";\n\t      BuiltinMethod[BuiltinMethod[\"SubscribeObservable\"] = 1] = \"SubscribeObservable\";\n\t      BuiltinMethod[BuiltinMethod[\"Bind\"] = 2] = \"Bind\";\n\t  })(BuiltinMethod || (BuiltinMethod = {}));\n\t  var InvokeMethodExpr = (function (_super) {\n\t      __extends$12(InvokeMethodExpr, _super);\n\t      function InvokeMethodExpr(receiver, method, args, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.receiver = receiver;\n\t          this.args = args;\n\t          if (typeof method === 'string') {\n\t              this.name = method;\n\t              this.builtin = null;\n\t          }\n\t          else {\n\t              this.name = null;\n\t              this.builtin = method;\n\t          }\n\t      }\n\t      InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitInvokeMethodExpr(this, context);\n\t      };\n\t      return InvokeMethodExpr;\n\t  }(Expression));\n\t  var InvokeFunctionExpr = (function (_super) {\n\t      __extends$12(InvokeFunctionExpr, _super);\n\t      function InvokeFunctionExpr(fn, args, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.fn = fn;\n\t          this.args = args;\n\t      }\n\t      InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitInvokeFunctionExpr(this, context);\n\t      };\n\t      return InvokeFunctionExpr;\n\t  }(Expression));\n\t  var InstantiateExpr = (function (_super) {\n\t      __extends$12(InstantiateExpr, _super);\n\t      function InstantiateExpr(classExpr, args, type) {\n\t          _super.call(this, type);\n\t          this.classExpr = classExpr;\n\t          this.args = args;\n\t      }\n\t      InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitInstantiateExpr(this, context);\n\t      };\n\t      return InstantiateExpr;\n\t  }(Expression));\n\t  var LiteralExpr = (function (_super) {\n\t      __extends$12(LiteralExpr, _super);\n\t      function LiteralExpr(value, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.value = value;\n\t      }\n\t      LiteralExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitLiteralExpr(this, context);\n\t      };\n\t      return LiteralExpr;\n\t  }(Expression));\n\t  var ExternalExpr = (function (_super) {\n\t      __extends$12(ExternalExpr, _super);\n\t      function ExternalExpr(value, type, typeParams) {\n\t          if (type === void 0) { type = null; }\n\t          if (typeParams === void 0) { typeParams = null; }\n\t          _super.call(this, type);\n\t          this.value = value;\n\t          this.typeParams = typeParams;\n\t      }\n\t      ExternalExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitExternalExpr(this, context);\n\t      };\n\t      return ExternalExpr;\n\t  }(Expression));\n\t  var ConditionalExpr = (function (_super) {\n\t      __extends$12(ConditionalExpr, _super);\n\t      function ConditionalExpr(condition, trueCase, falseCase, type) {\n\t          if (falseCase === void 0) { falseCase = null; }\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type || trueCase.type);\n\t          this.condition = condition;\n\t          this.falseCase = falseCase;\n\t          this.trueCase = trueCase;\n\t      }\n\t      ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitConditionalExpr(this, context);\n\t      };\n\t      return ConditionalExpr;\n\t  }(Expression));\n\t  var NotExpr = (function (_super) {\n\t      __extends$12(NotExpr, _super);\n\t      function NotExpr(condition) {\n\t          _super.call(this, BOOL_TYPE);\n\t          this.condition = condition;\n\t      }\n\t      NotExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitNotExpr(this, context);\n\t      };\n\t      return NotExpr;\n\t  }(Expression));\n\t  var CastExpr = (function (_super) {\n\t      __extends$12(CastExpr, _super);\n\t      function CastExpr(value, type) {\n\t          _super.call(this, type);\n\t          this.value = value;\n\t      }\n\t      CastExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitCastExpr(this, context);\n\t      };\n\t      return CastExpr;\n\t  }(Expression));\n\t  var FnParam = (function () {\n\t      function FnParam(name, type) {\n\t          if (type === void 0) { type = null; }\n\t          this.name = name;\n\t          this.type = type;\n\t      }\n\t      return FnParam;\n\t  }());\n\t  var FunctionExpr = (function (_super) {\n\t      __extends$12(FunctionExpr, _super);\n\t      function FunctionExpr(params, statements, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.params = params;\n\t          this.statements = statements;\n\t      }\n\t      FunctionExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitFunctionExpr(this, context);\n\t      };\n\t      FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers);\n\t      };\n\t      return FunctionExpr;\n\t  }(Expression));\n\t  var BinaryOperatorExpr = (function (_super) {\n\t      __extends$12(BinaryOperatorExpr, _super);\n\t      function BinaryOperatorExpr(operator, lhs, rhs, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type || lhs.type);\n\t          this.operator = operator;\n\t          this.rhs = rhs;\n\t          this.lhs = lhs;\n\t      }\n\t      BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitBinaryOperatorExpr(this, context);\n\t      };\n\t      return BinaryOperatorExpr;\n\t  }(Expression));\n\t  var ReadPropExpr = (function (_super) {\n\t      __extends$12(ReadPropExpr, _super);\n\t      function ReadPropExpr(receiver, name, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t      }\n\t      ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitReadPropExpr(this, context);\n\t      };\n\t      ReadPropExpr.prototype.set = function (value) {\n\t          return new WritePropExpr(this.receiver, this.name, value);\n\t      };\n\t      return ReadPropExpr;\n\t  }(Expression));\n\t  var ReadKeyExpr = (function (_super) {\n\t      __extends$12(ReadKeyExpr, _super);\n\t      function ReadKeyExpr(receiver, index, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.receiver = receiver;\n\t          this.index = index;\n\t      }\n\t      ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitReadKeyExpr(this, context);\n\t      };\n\t      ReadKeyExpr.prototype.set = function (value) {\n\t          return new WriteKeyExpr(this.receiver, this.index, value);\n\t      };\n\t      return ReadKeyExpr;\n\t  }(Expression));\n\t  var LiteralArrayExpr = (function (_super) {\n\t      __extends$12(LiteralArrayExpr, _super);\n\t      function LiteralArrayExpr(entries, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.entries = entries;\n\t      }\n\t      LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitLiteralArrayExpr(this, context);\n\t      };\n\t      return LiteralArrayExpr;\n\t  }(Expression));\n\t  var LiteralMapExpr = (function (_super) {\n\t      __extends$12(LiteralMapExpr, _super);\n\t      function LiteralMapExpr(entries, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.entries = entries;\n\t          this.valueType = null;\n\t          if (isPresent(type)) {\n\t              this.valueType = type.valueType;\n\t          }\n\t      }\n\t      LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitLiteralMapExpr(this, context);\n\t      };\n\t      return LiteralMapExpr;\n\t  }(Expression));\n\t  var THIS_EXPR = new ReadVarExpr(BuiltinVar.This);\n\t  var SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super);\n\t  var CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError);\n\t  var CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack);\n\t  var NULL_EXPR = new LiteralExpr(null, null);\n\t  //// Statements\n\t  var StmtModifier;\n\t  (function (StmtModifier) {\n\t      StmtModifier[StmtModifier[\"Final\"] = 0] = \"Final\";\n\t      StmtModifier[StmtModifier[\"Private\"] = 1] = \"Private\";\n\t  })(StmtModifier || (StmtModifier = {}));\n\t  var Statement = (function () {\n\t      function Statement(modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          this.modifiers = modifiers;\n\t          if (!modifiers) {\n\t              this.modifiers = [];\n\t          }\n\t      }\n\t      Statement.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n\t      return Statement;\n\t  }());\n\t  var DeclareVarStmt = (function (_super) {\n\t      __extends$12(DeclareVarStmt, _super);\n\t      function DeclareVarStmt(name, value, type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.name = name;\n\t          this.value = value;\n\t          this.type = type || value.type;\n\t      }\n\t      DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitDeclareVarStmt(this, context);\n\t      };\n\t      return DeclareVarStmt;\n\t  }(Statement));\n\t  var DeclareFunctionStmt = (function (_super) {\n\t      __extends$12(DeclareFunctionStmt, _super);\n\t      function DeclareFunctionStmt(name, params, statements, type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.name = name;\n\t          this.params = params;\n\t          this.statements = statements;\n\t          this.type = type;\n\t      }\n\t      DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitDeclareFunctionStmt(this, context);\n\t      };\n\t      return DeclareFunctionStmt;\n\t  }(Statement));\n\t  var ExpressionStatement = (function (_super) {\n\t      __extends$12(ExpressionStatement, _super);\n\t      function ExpressionStatement(expr) {\n\t          _super.call(this);\n\t          this.expr = expr;\n\t      }\n\t      ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitExpressionStmt(this, context);\n\t      };\n\t      return ExpressionStatement;\n\t  }(Statement));\n\t  var ReturnStatement = (function (_super) {\n\t      __extends$12(ReturnStatement, _super);\n\t      function ReturnStatement(value) {\n\t          _super.call(this);\n\t          this.value = value;\n\t      }\n\t      ReturnStatement.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitReturnStmt(this, context);\n\t      };\n\t      return ReturnStatement;\n\t  }(Statement));\n\t  var AbstractClassPart = (function () {\n\t      function AbstractClassPart(type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          this.type = type;\n\t          this.modifiers = modifiers;\n\t          if (!modifiers) {\n\t              this.modifiers = [];\n\t          }\n\t      }\n\t      AbstractClassPart.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n\t      return AbstractClassPart;\n\t  }());\n\t  var ClassField = (function (_super) {\n\t      __extends$12(ClassField, _super);\n\t      function ClassField(name, type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, type, modifiers);\n\t          this.name = name;\n\t      }\n\t      return ClassField;\n\t  }(AbstractClassPart));\n\t  var ClassMethod = (function (_super) {\n\t      __extends$12(ClassMethod, _super);\n\t      function ClassMethod(name, params, body, type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, type, modifiers);\n\t          this.name = name;\n\t          this.params = params;\n\t          this.body = body;\n\t      }\n\t      return ClassMethod;\n\t  }(AbstractClassPart));\n\t  var ClassGetter = (function (_super) {\n\t      __extends$12(ClassGetter, _super);\n\t      function ClassGetter(name, body, type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, type, modifiers);\n\t          this.name = name;\n\t          this.body = body;\n\t      }\n\t      return ClassGetter;\n\t  }(AbstractClassPart));\n\t  var ClassStmt = (function (_super) {\n\t      __extends$12(ClassStmt, _super);\n\t      function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.name = name;\n\t          this.parent = parent;\n\t          this.fields = fields;\n\t          this.getters = getters;\n\t          this.constructorMethod = constructorMethod;\n\t          this.methods = methods;\n\t      }\n\t      ClassStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitDeclareClassStmt(this, context);\n\t      };\n\t      return ClassStmt;\n\t  }(Statement));\n\t  var IfStmt = (function (_super) {\n\t      __extends$12(IfStmt, _super);\n\t      function IfStmt(condition, trueCase, falseCase) {\n\t          if (falseCase === void 0) { falseCase = []; }\n\t          _super.call(this);\n\t          this.condition = condition;\n\t          this.trueCase = trueCase;\n\t          this.falseCase = falseCase;\n\t      }\n\t      IfStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitIfStmt(this, context);\n\t      };\n\t      return IfStmt;\n\t  }(Statement));\n\t  var CommentStmt = (function (_super) {\n\t      __extends$12(CommentStmt, _super);\n\t      function CommentStmt(comment) {\n\t          _super.call(this);\n\t          this.comment = comment;\n\t      }\n\t      CommentStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitCommentStmt(this, context);\n\t      };\n\t      return CommentStmt;\n\t  }(Statement));\n\t  var TryCatchStmt = (function (_super) {\n\t      __extends$12(TryCatchStmt, _super);\n\t      function TryCatchStmt(bodyStmts, catchStmts) {\n\t          _super.call(this);\n\t          this.bodyStmts = bodyStmts;\n\t          this.catchStmts = catchStmts;\n\t      }\n\t      TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitTryCatchStmt(this, context);\n\t      };\n\t      return TryCatchStmt;\n\t  }(Statement));\n\t  var ThrowStmt = (function (_super) {\n\t      __extends$12(ThrowStmt, _super);\n\t      function ThrowStmt(error) {\n\t          _super.call(this);\n\t          this.error = error;\n\t      }\n\t      ThrowStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitThrowStmt(this, context);\n\t      };\n\t      return ThrowStmt;\n\t  }(Statement));\n\t  var ExpressionTransformer = (function () {\n\t      function ExpressionTransformer() {\n\t      }\n\t      ExpressionTransformer.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n\t      ExpressionTransformer.prototype.visitWriteVarExpr = function (expr, context) {\n\t          return new WriteVarExpr(expr.name, expr.value.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitWriteKeyExpr = function (expr, context) {\n\t          return new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitWritePropExpr = function (expr, context) {\n\t          return new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitInvokeMethodExpr = function (ast, context) {\n\t          var method = ast.builtin || ast.name;\n\t          return new InvokeMethodExpr(ast.receiver.visitExpression(this, context), method, this.visitAllExpressions(ast.args, context), ast.type);\n\t      };\n\t      ExpressionTransformer.prototype.visitInvokeFunctionExpr = function (ast, context) {\n\t          return new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type);\n\t      };\n\t      ExpressionTransformer.prototype.visitInstantiateExpr = function (ast, context) {\n\t          return new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type);\n\t      };\n\t      ExpressionTransformer.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n\t      ExpressionTransformer.prototype.visitExternalExpr = function (ast, context) { return ast; };\n\t      ExpressionTransformer.prototype.visitConditionalExpr = function (ast, context) {\n\t          return new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), ast.falseCase.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitNotExpr = function (ast, context) {\n\t          return new NotExpr(ast.condition.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitCastExpr = function (ast, context) {\n\t          return new CastExpr(ast.value.visitExpression(this, context), context);\n\t      };\n\t      ExpressionTransformer.prototype.visitFunctionExpr = function (ast, context) {\n\t          // Don't descend into nested functions\n\t          return ast;\n\t      };\n\t      ExpressionTransformer.prototype.visitBinaryOperatorExpr = function (ast, context) {\n\t          return new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type);\n\t      };\n\t      ExpressionTransformer.prototype.visitReadPropExpr = function (ast, context) {\n\t          return new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type);\n\t      };\n\t      ExpressionTransformer.prototype.visitReadKeyExpr = function (ast, context) {\n\t          return new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type);\n\t      };\n\t      ExpressionTransformer.prototype.visitLiteralArrayExpr = function (ast, context) {\n\t          return new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitLiteralMapExpr = function (ast, context) {\n\t          var _this = this;\n\t          var entries = ast.entries.map(function (entry) { return [entry[0], entry[1].visitExpression(_this, context),]; });\n\t          return new LiteralMapExpr(entries);\n\t      };\n\t      ExpressionTransformer.prototype.visitAllExpressions = function (exprs, context) {\n\t          var _this = this;\n\t          return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n\t      };\n\t      ExpressionTransformer.prototype.visitDeclareVarStmt = function (stmt, context) {\n\t          return new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers);\n\t      };\n\t      ExpressionTransformer.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n\t          // Don't descend into nested functions\n\t          return stmt;\n\t      };\n\t      ExpressionTransformer.prototype.visitExpressionStmt = function (stmt, context) {\n\t          return new ExpressionStatement(stmt.expr.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitReturnStmt = function (stmt, context) {\n\t          return new ReturnStatement(stmt.value.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitDeclareClassStmt = function (stmt, context) {\n\t          // Don't descend into nested functions\n\t          return stmt;\n\t      };\n\t      ExpressionTransformer.prototype.visitIfStmt = function (stmt, context) {\n\t          return new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitTryCatchStmt = function (stmt, context) {\n\t          return new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitThrowStmt = function (stmt, context) {\n\t          return new ThrowStmt(stmt.error.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n\t      ExpressionTransformer.prototype.visitAllStatements = function (stmts, context) {\n\t          var _this = this;\n\t          return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n\t      };\n\t      return ExpressionTransformer;\n\t  }());\n\t  var RecursiveExpressionVisitor = (function () {\n\t      function RecursiveExpressionVisitor() {\n\t      }\n\t      RecursiveExpressionVisitor.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n\t      RecursiveExpressionVisitor.prototype.visitWriteVarExpr = function (expr, context) {\n\t          expr.value.visitExpression(this, context);\n\t          return expr;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitWriteKeyExpr = function (expr, context) {\n\t          expr.receiver.visitExpression(this, context);\n\t          expr.index.visitExpression(this, context);\n\t          expr.value.visitExpression(this, context);\n\t          return expr;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitWritePropExpr = function (expr, context) {\n\t          expr.receiver.visitExpression(this, context);\n\t          expr.value.visitExpression(this, context);\n\t          return expr;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitInvokeMethodExpr = function (ast, context) {\n\t          ast.receiver.visitExpression(this, context);\n\t          this.visitAllExpressions(ast.args, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitInvokeFunctionExpr = function (ast, context) {\n\t          ast.fn.visitExpression(this, context);\n\t          this.visitAllExpressions(ast.args, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitInstantiateExpr = function (ast, context) {\n\t          ast.classExpr.visitExpression(this, context);\n\t          this.visitAllExpressions(ast.args, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n\t      RecursiveExpressionVisitor.prototype.visitExternalExpr = function (ast, context) { return ast; };\n\t      RecursiveExpressionVisitor.prototype.visitConditionalExpr = function (ast, context) {\n\t          ast.condition.visitExpression(this, context);\n\t          ast.trueCase.visitExpression(this, context);\n\t          ast.falseCase.visitExpression(this, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitNotExpr = function (ast, context) {\n\t          ast.condition.visitExpression(this, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitCastExpr = function (ast, context) {\n\t          ast.value.visitExpression(this, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitFunctionExpr = function (ast, context) { return ast; };\n\t      RecursiveExpressionVisitor.prototype.visitBinaryOperatorExpr = function (ast, context) {\n\t          ast.lhs.visitExpression(this, context);\n\t          ast.rhs.visitExpression(this, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitReadPropExpr = function (ast, context) {\n\t          ast.receiver.visitExpression(this, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitReadKeyExpr = function (ast, context) {\n\t          ast.receiver.visitExpression(this, context);\n\t          ast.index.visitExpression(this, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n\t          this.visitAllExpressions(ast.entries, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n\t          var _this = this;\n\t          ast.entries.forEach(function (entry) { return entry[1].visitExpression(_this, context); });\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitAllExpressions = function (exprs, context) {\n\t          var _this = this;\n\t          exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitDeclareVarStmt = function (stmt, context) {\n\t          stmt.value.visitExpression(this, context);\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n\t          // Don't descend into nested functions\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitExpressionStmt = function (stmt, context) {\n\t          stmt.expr.visitExpression(this, context);\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitReturnStmt = function (stmt, context) {\n\t          stmt.value.visitExpression(this, context);\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n\t          // Don't descend into nested functions\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitIfStmt = function (stmt, context) {\n\t          stmt.condition.visitExpression(this, context);\n\t          this.visitAllStatements(stmt.trueCase, context);\n\t          this.visitAllStatements(stmt.falseCase, context);\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitTryCatchStmt = function (stmt, context) {\n\t          this.visitAllStatements(stmt.bodyStmts, context);\n\t          this.visitAllStatements(stmt.catchStmts, context);\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitThrowStmt = function (stmt, context) {\n\t          stmt.error.visitExpression(this, context);\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n\t      RecursiveExpressionVisitor.prototype.visitAllStatements = function (stmts, context) {\n\t          var _this = this;\n\t          stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n\t      };\n\t      return RecursiveExpressionVisitor;\n\t  }());\n\t  function replaceVarInExpression(varName, newValue, expression) {\n\t      var transformer = new _ReplaceVariableTransformer(varName, newValue);\n\t      return expression.visitExpression(transformer, null);\n\t  }\n\t  var _ReplaceVariableTransformer = (function (_super) {\n\t      __extends$12(_ReplaceVariableTransformer, _super);\n\t      function _ReplaceVariableTransformer(_varName, _newValue) {\n\t          _super.call(this);\n\t          this._varName = _varName;\n\t          this._newValue = _newValue;\n\t      }\n\t      _ReplaceVariableTransformer.prototype.visitReadVarExpr = function (ast, context) {\n\t          return ast.name == this._varName ? this._newValue : ast;\n\t      };\n\t      return _ReplaceVariableTransformer;\n\t  }(ExpressionTransformer));\n\t  function findReadVarNames(stmts) {\n\t      var finder = new _VariableFinder();\n\t      finder.visitAllStatements(stmts, null);\n\t      return finder.varNames;\n\t  }\n\t  var _VariableFinder = (function (_super) {\n\t      __extends$12(_VariableFinder, _super);\n\t      function _VariableFinder() {\n\t          _super.apply(this, arguments);\n\t          this.varNames = new Set();\n\t      }\n\t      _VariableFinder.prototype.visitReadVarExpr = function (ast, context) {\n\t          this.varNames.add(ast.name);\n\t          return null;\n\t      };\n\t      return _VariableFinder;\n\t  }(RecursiveExpressionVisitor));\n\t  function variable(name, type) {\n\t      if (type === void 0) { type = null; }\n\t      return new ReadVarExpr(name, type);\n\t  }\n\t  function importExpr(id, typeParams) {\n\t      if (typeParams === void 0) { typeParams = null; }\n\t      return new ExternalExpr(id, null, typeParams);\n\t  }\n\t  function importType(id, typeParams, typeModifiers) {\n\t      if (typeParams === void 0) { typeParams = null; }\n\t      if (typeModifiers === void 0) { typeModifiers = null; }\n\t      return isPresent(id) ? new ExternalType(id, typeParams, typeModifiers) : null;\n\t  }\n\t  function literalArr(values, type) {\n\t      if (type === void 0) { type = null; }\n\t      return new LiteralArrayExpr(values, type);\n\t  }\n\t  function literalMap(values, type) {\n\t      if (type === void 0) { type = null; }\n\t      return new LiteralMapExpr(values, type);\n\t  }\n\t  function not(expr) {\n\t      return new NotExpr(expr);\n\t  }\n\t  function fn(params, body, type) {\n\t      if (type === void 0) { type = null; }\n\t      return new FunctionExpr(params, body, type);\n\t  }\n\t  function literal(value, type) {\n\t      if (type === void 0) { type = null; }\n\t      return new LiteralExpr(value, type);\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$13 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var AnimationAst = (function () {\n\t      function AnimationAst() {\n\t          this.startTime = 0;\n\t          this.playTime = 0;\n\t      }\n\t      return AnimationAst;\n\t  }());\n\t  var AnimationStateAst = (function (_super) {\n\t      __extends$13(AnimationStateAst, _super);\n\t      function AnimationStateAst() {\n\t          _super.apply(this, arguments);\n\t      }\n\t      return AnimationStateAst;\n\t  }(AnimationAst));\n\t  var AnimationEntryAst = (function (_super) {\n\t      __extends$13(AnimationEntryAst, _super);\n\t      function AnimationEntryAst(name, stateDeclarations, stateTransitions) {\n\t          _super.call(this);\n\t          this.name = name;\n\t          this.stateDeclarations = stateDeclarations;\n\t          this.stateTransitions = stateTransitions;\n\t      }\n\t      AnimationEntryAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationEntry(this, context);\n\t      };\n\t      return AnimationEntryAst;\n\t  }(AnimationAst));\n\t  var AnimationStateDeclarationAst = (function (_super) {\n\t      __extends$13(AnimationStateDeclarationAst, _super);\n\t      function AnimationStateDeclarationAst(stateName, styles) {\n\t          _super.call(this);\n\t          this.stateName = stateName;\n\t          this.styles = styles;\n\t      }\n\t      AnimationStateDeclarationAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationStateDeclaration(this, context);\n\t      };\n\t      return AnimationStateDeclarationAst;\n\t  }(AnimationStateAst));\n\t  var AnimationStateTransitionExpression = (function () {\n\t      function AnimationStateTransitionExpression(fromState, toState) {\n\t          this.fromState = fromState;\n\t          this.toState = toState;\n\t      }\n\t      return AnimationStateTransitionExpression;\n\t  }());\n\t  var AnimationStateTransitionAst = (function (_super) {\n\t      __extends$13(AnimationStateTransitionAst, _super);\n\t      function AnimationStateTransitionAst(stateChanges, animation) {\n\t          _super.call(this);\n\t          this.stateChanges = stateChanges;\n\t          this.animation = animation;\n\t      }\n\t      AnimationStateTransitionAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationStateTransition(this, context);\n\t      };\n\t      return AnimationStateTransitionAst;\n\t  }(AnimationStateAst));\n\t  var AnimationStepAst = (function (_super) {\n\t      __extends$13(AnimationStepAst, _super);\n\t      function AnimationStepAst(startingStyles, keyframes, duration, delay, easing) {\n\t          _super.call(this);\n\t          this.startingStyles = startingStyles;\n\t          this.keyframes = keyframes;\n\t          this.duration = duration;\n\t          this.delay = delay;\n\t          this.easing = easing;\n\t      }\n\t      AnimationStepAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationStep(this, context);\n\t      };\n\t      return AnimationStepAst;\n\t  }(AnimationAst));\n\t  var AnimationStylesAst = (function (_super) {\n\t      __extends$13(AnimationStylesAst, _super);\n\t      function AnimationStylesAst(styles) {\n\t          _super.call(this);\n\t          this.styles = styles;\n\t      }\n\t      AnimationStylesAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationStyles(this, context);\n\t      };\n\t      return AnimationStylesAst;\n\t  }(AnimationAst));\n\t  var AnimationKeyframeAst = (function (_super) {\n\t      __extends$13(AnimationKeyframeAst, _super);\n\t      function AnimationKeyframeAst(offset, styles) {\n\t          _super.call(this);\n\t          this.offset = offset;\n\t          this.styles = styles;\n\t      }\n\t      AnimationKeyframeAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationKeyframe(this, context);\n\t      };\n\t      return AnimationKeyframeAst;\n\t  }(AnimationAst));\n\t  var AnimationWithStepsAst = (function (_super) {\n\t      __extends$13(AnimationWithStepsAst, _super);\n\t      function AnimationWithStepsAst(steps) {\n\t          _super.call(this);\n\t          this.steps = steps;\n\t      }\n\t      return AnimationWithStepsAst;\n\t  }(AnimationAst));\n\t  var AnimationGroupAst = (function (_super) {\n\t      __extends$13(AnimationGroupAst, _super);\n\t      function AnimationGroupAst(steps) {\n\t          _super.call(this, steps);\n\t      }\n\t      AnimationGroupAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationGroup(this, context);\n\t      };\n\t      return AnimationGroupAst;\n\t  }(AnimationWithStepsAst));\n\t  var AnimationSequenceAst = (function (_super) {\n\t      __extends$13(AnimationSequenceAst, _super);\n\t      function AnimationSequenceAst(steps) {\n\t          _super.call(this, steps);\n\t      }\n\t      AnimationSequenceAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationSequence(this, context);\n\t      };\n\t      return AnimationSequenceAst;\n\t  }(AnimationWithStepsAst));\n\t\n\t  var AnimationEntryCompileResult = (function () {\n\t      function AnimationEntryCompileResult(name, statements, fnExp) {\n\t          this.name = name;\n\t          this.statements = statements;\n\t          this.fnExp = fnExp;\n\t      }\n\t      return AnimationEntryCompileResult;\n\t  }());\n\t  var AnimationCompiler = (function () {\n\t      function AnimationCompiler() {\n\t      }\n\t      AnimationCompiler.prototype.compile = function (factoryNamePrefix, parsedAnimations) {\n\t          return parsedAnimations.map(function (entry) {\n\t              var factoryName = factoryNamePrefix + \"_\" + entry.name;\n\t              var visitor = new _AnimationBuilder(entry.name, factoryName);\n\t              return visitor.build(entry);\n\t          });\n\t      };\n\t      return AnimationCompiler;\n\t  }());\n\t  var _ANIMATION_FACTORY_ELEMENT_VAR = variable('element');\n\t  var _ANIMATION_DEFAULT_STATE_VAR = variable('defaultStateStyles');\n\t  var _ANIMATION_FACTORY_VIEW_VAR = variable('view');\n\t  var _ANIMATION_FACTORY_VIEW_CONTEXT = _ANIMATION_FACTORY_VIEW_VAR.prop('animationContext');\n\t  var _ANIMATION_FACTORY_RENDERER_VAR = _ANIMATION_FACTORY_VIEW_VAR.prop('renderer');\n\t  var _ANIMATION_CURRENT_STATE_VAR = variable('currentState');\n\t  var _ANIMATION_NEXT_STATE_VAR = variable('nextState');\n\t  var _ANIMATION_PLAYER_VAR = variable('player');\n\t  var _ANIMATION_TIME_VAR = variable('totalTime');\n\t  var _ANIMATION_START_STATE_STYLES_VAR = variable('startStateStyles');\n\t  var _ANIMATION_END_STATE_STYLES_VAR = variable('endStateStyles');\n\t  var _ANIMATION_COLLECTED_STYLES = variable('collectedStyles');\n\t  var EMPTY_MAP = literalMap([]);\n\t  var _AnimationBuilder = (function () {\n\t      function _AnimationBuilder(animationName, factoryName) {\n\t          this.animationName = animationName;\n\t          this._fnVarName = factoryName + '_factory';\n\t          this._statesMapVarName = factoryName + '_states';\n\t          this._statesMapVar = variable(this._statesMapVarName);\n\t      }\n\t      _AnimationBuilder.prototype.visitAnimationStyles = function (ast, context) {\n\t          var stylesArr = [];\n\t          if (context.isExpectingFirstStyleStep) {\n\t              stylesArr.push(_ANIMATION_START_STATE_STYLES_VAR);\n\t              context.isExpectingFirstStyleStep = false;\n\t          }\n\t          ast.styles.forEach(function (entry) {\n\t              var entries = Object.keys(entry).map(function (key) { return [key, literal(entry[key])]; });\n\t              stylesArr.push(literalMap(entries));\n\t          });\n\t          return importExpr(resolveIdentifier(Identifiers.AnimationStyles)).instantiate([\n\t              importExpr(resolveIdentifier(Identifiers.collectAndResolveStyles)).callFn([\n\t                  _ANIMATION_COLLECTED_STYLES, literalArr(stylesArr)\n\t              ])\n\t          ]);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationKeyframe = function (ast, context) {\n\t          return importExpr(resolveIdentifier(Identifiers.AnimationKeyframe)).instantiate([\n\t              literal(ast.offset), ast.styles.visit(this, context)\n\t          ]);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationStep = function (ast, context) {\n\t          var _this = this;\n\t          if (context.endStateAnimateStep === ast) {\n\t              return this._visitEndStateAnimation(ast, context);\n\t          }\n\t          var startingStylesExpr = ast.startingStyles.visit(this, context);\n\t          var keyframeExpressions = ast.keyframes.map(function (keyframeEntry) { return keyframeEntry.visit(_this, context); });\n\t          return this._callAnimateMethod(ast, startingStylesExpr, literalArr(keyframeExpressions), context);\n\t      };\n\t      /** @internal */\n\t      _AnimationBuilder.prototype._visitEndStateAnimation = function (ast, context) {\n\t          var _this = this;\n\t          var startingStylesExpr = ast.startingStyles.visit(this, context);\n\t          var keyframeExpressions = ast.keyframes.map(function (keyframe) { return keyframe.visit(_this, context); });\n\t          var keyframesExpr = importExpr(resolveIdentifier(Identifiers.balanceAnimationKeyframes)).callFn([\n\t              _ANIMATION_COLLECTED_STYLES, _ANIMATION_END_STATE_STYLES_VAR,\n\t              literalArr(keyframeExpressions)\n\t          ]);\n\t          return this._callAnimateMethod(ast, startingStylesExpr, keyframesExpr, context);\n\t      };\n\t      /** @internal */\n\t      _AnimationBuilder.prototype._callAnimateMethod = function (ast, startingStylesExpr, keyframesExpr, context) {\n\t          context.totalTransitionTime += ast.duration + ast.delay;\n\t          return _ANIMATION_FACTORY_RENDERER_VAR.callMethod('animate', [\n\t              _ANIMATION_FACTORY_ELEMENT_VAR, startingStylesExpr, keyframesExpr, literal(ast.duration),\n\t              literal(ast.delay), literal(ast.easing)\n\t          ]);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationSequence = function (ast, context) {\n\t          var _this = this;\n\t          var playerExprs = ast.steps.map(function (step) { return step.visit(_this, context); });\n\t          return importExpr(resolveIdentifier(Identifiers.AnimationSequencePlayer)).instantiate([\n\t              literalArr(playerExprs)\n\t          ]);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationGroup = function (ast, context) {\n\t          var _this = this;\n\t          var playerExprs = ast.steps.map(function (step) { return step.visit(_this, context); });\n\t          return importExpr(resolveIdentifier(Identifiers.AnimationGroupPlayer)).instantiate([\n\t              literalArr(playerExprs)\n\t          ]);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationStateDeclaration = function (ast, context) {\n\t          var flatStyles = {};\n\t          _getStylesArray(ast).forEach(function (entry) { Object.keys(entry).forEach(function (key) { flatStyles[key] = entry[key]; }); });\n\t          context.stateMap.registerState(ast.stateName, flatStyles);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationStateTransition = function (ast, context) {\n\t          var steps = ast.animation.steps;\n\t          var lastStep = steps[steps.length - 1];\n\t          if (_isEndStateAnimateStep(lastStep)) {\n\t              context.endStateAnimateStep = lastStep;\n\t          }\n\t          context.totalTransitionTime = 0;\n\t          context.isExpectingFirstStyleStep = true;\n\t          var stateChangePreconditions = [];\n\t          ast.stateChanges.forEach(function (stateChange) {\n\t              stateChangePreconditions.push(_compareToAnimationStateExpr(_ANIMATION_CURRENT_STATE_VAR, stateChange.fromState)\n\t                  .and(_compareToAnimationStateExpr(_ANIMATION_NEXT_STATE_VAR, stateChange.toState)));\n\t              if (stateChange.fromState != ANY_STATE) {\n\t                  context.stateMap.registerState(stateChange.fromState);\n\t              }\n\t              if (stateChange.toState != ANY_STATE) {\n\t                  context.stateMap.registerState(stateChange.toState);\n\t              }\n\t          });\n\t          var animationPlayerExpr = ast.animation.visit(this, context);\n\t          var reducedStateChangesPrecondition = stateChangePreconditions.reduce(function (a, b) { return a.or(b); });\n\t          var precondition = _ANIMATION_PLAYER_VAR.equals(NULL_EXPR).and(reducedStateChangesPrecondition);\n\t          var animationStmt = _ANIMATION_PLAYER_VAR.set(animationPlayerExpr).toStmt();\n\t          var totalTimeStmt = _ANIMATION_TIME_VAR.set(literal(context.totalTransitionTime)).toStmt();\n\t          return new IfStmt(precondition, [animationStmt, totalTimeStmt]);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationEntry = function (ast, context) {\n\t          var _this = this;\n\t          // visit each of the declarations first to build the context state map\n\t          ast.stateDeclarations.forEach(function (def) { return def.visit(_this, context); });\n\t          // this should always be defined even if the user overrides it\n\t          context.stateMap.registerState(DEFAULT_STATE, {});\n\t          var statements = [];\n\t          statements.push(_ANIMATION_FACTORY_VIEW_CONTEXT\n\t              .callMethod('cancelActiveAnimation', [\n\t              _ANIMATION_FACTORY_ELEMENT_VAR, literal(this.animationName),\n\t              _ANIMATION_NEXT_STATE_VAR.equals(literal(EMPTY_ANIMATION_STATE))\n\t          ])\n\t              .toStmt());\n\t          statements.push(_ANIMATION_COLLECTED_STYLES.set(EMPTY_MAP).toDeclStmt());\n\t          statements.push(_ANIMATION_PLAYER_VAR.set(NULL_EXPR).toDeclStmt());\n\t          statements.push(_ANIMATION_TIME_VAR.set(literal(0)).toDeclStmt());\n\t          statements.push(_ANIMATION_DEFAULT_STATE_VAR.set(this._statesMapVar.key(literal(DEFAULT_STATE)))\n\t              .toDeclStmt());\n\t          statements.push(_ANIMATION_START_STATE_STYLES_VAR.set(this._statesMapVar.key(_ANIMATION_CURRENT_STATE_VAR))\n\t              .toDeclStmt());\n\t          statements.push(new IfStmt(_ANIMATION_START_STATE_STYLES_VAR.equals(NULL_EXPR), [_ANIMATION_START_STATE_STYLES_VAR.set(_ANIMATION_DEFAULT_STATE_VAR).toStmt()]));\n\t          statements.push(_ANIMATION_END_STATE_STYLES_VAR.set(this._statesMapVar.key(_ANIMATION_NEXT_STATE_VAR))\n\t              .toDeclStmt());\n\t          statements.push(new IfStmt(_ANIMATION_END_STATE_STYLES_VAR.equals(NULL_EXPR), [_ANIMATION_END_STATE_STYLES_VAR.set(_ANIMATION_DEFAULT_STATE_VAR).toStmt()]));\n\t          var RENDER_STYLES_FN = importExpr(resolveIdentifier(Identifiers.renderStyles));\n\t          // before we start any animation we want to clear out the starting\n\t          // styles from the element's style property (since they were placed\n\t          // there at the end of the last animation\n\t          statements.push(RENDER_STYLES_FN\n\t              .callFn([\n\t              _ANIMATION_FACTORY_ELEMENT_VAR, _ANIMATION_FACTORY_RENDERER_VAR,\n\t              importExpr(resolveIdentifier(Identifiers.clearStyles))\n\t                  .callFn([_ANIMATION_START_STATE_STYLES_VAR])\n\t          ])\n\t              .toStmt());\n\t          ast.stateTransitions.forEach(function (transAst) { return statements.push(transAst.visit(_this, context)); });\n\t          // this check ensures that the animation factory always returns a player\n\t          // so that the onDone callback can be used for tracking\n\t          statements.push(new IfStmt(_ANIMATION_PLAYER_VAR.equals(NULL_EXPR), [_ANIMATION_PLAYER_VAR\n\t                  .set(importExpr(resolveIdentifier(Identifiers.NoOpAnimationPlayer)).instantiate([]))\n\t                  .toStmt()]));\n\t          // once complete we want to apply the styles on the element\n\t          // since the destination state's values should persist once\n\t          // the animation sequence has completed.\n\t          statements.push(_ANIMATION_PLAYER_VAR\n\t              .callMethod('onDone', [fn([], [RENDER_STYLES_FN\n\t                      .callFn([\n\t                      _ANIMATION_FACTORY_ELEMENT_VAR, _ANIMATION_FACTORY_RENDERER_VAR,\n\t                      importExpr(resolveIdentifier(Identifiers.prepareFinalAnimationStyles))\n\t                          .callFn([\n\t                          _ANIMATION_START_STATE_STYLES_VAR, _ANIMATION_END_STATE_STYLES_VAR\n\t                      ])\n\t                  ])\n\t                      .toStmt()])])\n\t              .toStmt());\n\t          statements.push(_ANIMATION_FACTORY_VIEW_CONTEXT\n\t              .callMethod('queueAnimation', [\n\t              _ANIMATION_FACTORY_ELEMENT_VAR, literal(this.animationName),\n\t              _ANIMATION_PLAYER_VAR\n\t          ])\n\t              .toStmt());\n\t          statements.push(new ReturnStatement(importExpr(resolveIdentifier(Identifiers.AnimationTransition)).instantiate([\n\t              _ANIMATION_PLAYER_VAR, _ANIMATION_CURRENT_STATE_VAR, _ANIMATION_NEXT_STATE_VAR,\n\t              _ANIMATION_TIME_VAR\n\t          ])));\n\t          return fn([\n\t              new FnParam(_ANIMATION_FACTORY_VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n\t              new FnParam(_ANIMATION_FACTORY_ELEMENT_VAR.name, DYNAMIC_TYPE),\n\t              new FnParam(_ANIMATION_CURRENT_STATE_VAR.name, DYNAMIC_TYPE),\n\t              new FnParam(_ANIMATION_NEXT_STATE_VAR.name, DYNAMIC_TYPE)\n\t          ], statements, importType(resolveIdentifier(Identifiers.AnimationTransition)));\n\t      };\n\t      _AnimationBuilder.prototype.build = function (ast) {\n\t          var context = new _AnimationBuilderContext();\n\t          var fnStatement = ast.visit(this, context).toDeclStmt(this._fnVarName);\n\t          var fnVariable = variable(this._fnVarName);\n\t          var lookupMap = [];\n\t          Object.keys(context.stateMap.states).forEach(function (stateName) {\n\t              var value = context.stateMap.states[stateName];\n\t              var variableValue = EMPTY_MAP;\n\t              if (isPresent(value)) {\n\t                  var styleMap_1 = [];\n\t                  Object.keys(value).forEach(function (key) { styleMap_1.push([key, literal(value[key])]); });\n\t                  variableValue = literalMap(styleMap_1);\n\t              }\n\t              lookupMap.push([stateName, variableValue]);\n\t          });\n\t          var compiledStatesMapStmt = this._statesMapVar.set(literalMap(lookupMap)).toDeclStmt();\n\t          var statements = [compiledStatesMapStmt, fnStatement];\n\t          return new AnimationEntryCompileResult(this.animationName, statements, fnVariable);\n\t      };\n\t      return _AnimationBuilder;\n\t  }());\n\t  var _AnimationBuilderContext = (function () {\n\t      function _AnimationBuilderContext() {\n\t          this.stateMap = new _AnimationBuilderStateMap();\n\t          this.endStateAnimateStep = null;\n\t          this.isExpectingFirstStyleStep = false;\n\t          this.totalTransitionTime = 0;\n\t      }\n\t      return _AnimationBuilderContext;\n\t  }());\n\t  var _AnimationBuilderStateMap = (function () {\n\t      function _AnimationBuilderStateMap() {\n\t          this._states = {};\n\t      }\n\t      Object.defineProperty(_AnimationBuilderStateMap.prototype, \"states\", {\n\t          get: function () { return this._states; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      _AnimationBuilderStateMap.prototype.registerState = function (name, value) {\n\t          if (value === void 0) { value = null; }\n\t          var existingEntry = this._states[name];\n\t          if (!existingEntry) {\n\t              this._states[name] = value;\n\t          }\n\t      };\n\t      return _AnimationBuilderStateMap;\n\t  }());\n\t  function _compareToAnimationStateExpr(value, animationState) {\n\t      var emptyStateLiteral = literal(EMPTY_ANIMATION_STATE);\n\t      switch (animationState) {\n\t          case EMPTY_ANIMATION_STATE:\n\t              return value.equals(emptyStateLiteral);\n\t          case ANY_STATE:\n\t              return literal(true);\n\t          default:\n\t              return value.equals(literal(animationState));\n\t      }\n\t  }\n\t  function _isEndStateAnimateStep(step) {\n\t      // the final animation step is characterized by having only TWO\n\t      // keyframe values and it must have zero styles for both keyframes\n\t      if (step instanceof AnimationStepAst && step.duration > 0 && step.keyframes.length == 2) {\n\t          var styles1 = _getStylesArray(step.keyframes[0])[0];\n\t          var styles2 = _getStylesArray(step.keyframes[1])[0];\n\t          return Object.keys(styles1).length === 0 && Object.keys(styles2).length === 0;\n\t      }\n\t      return false;\n\t  }\n\t  function _getStylesArray(obj) {\n\t      return obj.styles.styles;\n\t  }\n\t\n\t  var StylesCollectionEntry = (function () {\n\t      function StylesCollectionEntry(time, value) {\n\t          this.time = time;\n\t          this.value = value;\n\t      }\n\t      StylesCollectionEntry.prototype.matches = function (time, value) {\n\t          return time == this.time && value == this.value;\n\t      };\n\t      return StylesCollectionEntry;\n\t  }());\n\t  var StylesCollection = (function () {\n\t      function StylesCollection() {\n\t          this.styles = {};\n\t      }\n\t      StylesCollection.prototype.insertAtTime = function (property, time, value) {\n\t          var tuple = new StylesCollectionEntry(time, value);\n\t          var entries = this.styles[property];\n\t          if (!isPresent(entries)) {\n\t              entries = this.styles[property] = [];\n\t          }\n\t          // insert this at the right stop in the array\n\t          // this way we can keep it sorted\n\t          var insertionIndex = 0;\n\t          for (var i = entries.length - 1; i >= 0; i--) {\n\t              if (entries[i].time <= time) {\n\t                  insertionIndex = i + 1;\n\t                  break;\n\t              }\n\t          }\n\t          entries.splice(insertionIndex, 0, tuple);\n\t      };\n\t      StylesCollection.prototype.getByIndex = function (property, index) {\n\t          var items = this.styles[property];\n\t          if (isPresent(items)) {\n\t              return index >= items.length ? null : items[index];\n\t          }\n\t          return null;\n\t      };\n\t      StylesCollection.prototype.indexOfAtOrBeforeTime = function (property, time) {\n\t          var entries = this.styles[property];\n\t          if (isPresent(entries)) {\n\t              for (var i = entries.length - 1; i >= 0; i--) {\n\t                  if (entries[i].time <= time)\n\t                      return i;\n\t              }\n\t          }\n\t          return null;\n\t      };\n\t      return StylesCollection;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$14 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var _INITIAL_KEYFRAME = 0;\n\t  var _TERMINAL_KEYFRAME = 1;\n\t  var _ONE_SECOND = 1000;\n\t  var AnimationParseError = (function (_super) {\n\t      __extends$14(AnimationParseError, _super);\n\t      function AnimationParseError(message) {\n\t          _super.call(this, null, message);\n\t      }\n\t      AnimationParseError.prototype.toString = function () { return \"\" + this.msg; };\n\t      return AnimationParseError;\n\t  }(ParseError));\n\t  var AnimationEntryParseResult = (function () {\n\t      function AnimationEntryParseResult(ast, errors) {\n\t          this.ast = ast;\n\t          this.errors = errors;\n\t      }\n\t      return AnimationEntryParseResult;\n\t  }());\n\t  var AnimationParser = (function () {\n\t      function AnimationParser() {\n\t      }\n\t      AnimationParser.prototype.parseComponent = function (component) {\n\t          var _this = this;\n\t          var errors = [];\n\t          var componentName = component.type.name;\n\t          var animationTriggerNames = new Set();\n\t          var asts = component.template.animations.map(function (entry) {\n\t              var result = _this.parseEntry(entry);\n\t              var ast = result.ast;\n\t              var triggerName = ast.name;\n\t              if (animationTriggerNames.has(triggerName)) {\n\t                  result.errors.push(new AnimationParseError(\"The animation trigger \\\"\" + triggerName + \"\\\" has already been registered for the \" + componentName + \" component\"));\n\t              }\n\t              else {\n\t                  animationTriggerNames.add(triggerName);\n\t              }\n\t              if (result.errors.length > 0) {\n\t                  var errorMessage_1 = \"- Unable to parse the animation sequence for \\\"\" + triggerName + \"\\\" on the \" + componentName + \" component due to the following errors:\";\n\t                  result.errors.forEach(function (error) { errorMessage_1 += '\\n-- ' + error.msg; });\n\t                  errors.push(errorMessage_1);\n\t              }\n\t              return ast;\n\t          });\n\t          if (errors.length > 0) {\n\t              var errorString = errors.join('\\n');\n\t              throw new Error(\"Animation parse errors:\\n\" + errorString);\n\t          }\n\t          return asts;\n\t      };\n\t      AnimationParser.prototype.parseEntry = function (entry) {\n\t          var errors = [];\n\t          var stateStyles = {};\n\t          var transitions = [];\n\t          var stateDeclarationAsts = [];\n\t          entry.definitions.forEach(function (def) {\n\t              if (def instanceof CompileAnimationStateDeclarationMetadata) {\n\t                  _parseAnimationDeclarationStates(def, errors).forEach(function (ast) {\n\t                      stateDeclarationAsts.push(ast);\n\t                      stateStyles[ast.stateName] = ast.styles;\n\t                  });\n\t              }\n\t              else {\n\t                  transitions.push(def);\n\t              }\n\t          });\n\t          var stateTransitionAsts = transitions.map(function (transDef) { return _parseAnimationStateTransition(transDef, stateStyles, errors); });\n\t          var ast = new AnimationEntryAst(entry.name, stateDeclarationAsts, stateTransitionAsts);\n\t          return new AnimationEntryParseResult(ast, errors);\n\t      };\n\t      return AnimationParser;\n\t  }());\n\t  function _parseAnimationDeclarationStates(stateMetadata, errors) {\n\t      var styleValues = [];\n\t      stateMetadata.styles.styles.forEach(function (stylesEntry) {\n\t          // TODO (matsko): change this when we get CSS class integration support\n\t          if (typeof stylesEntry === 'object' && stylesEntry !== null) {\n\t              styleValues.push(stylesEntry);\n\t          }\n\t          else {\n\t              errors.push(new AnimationParseError(\"State based animations cannot contain references to other states\"));\n\t          }\n\t      });\n\t      var defStyles = new AnimationStylesAst(styleValues);\n\t      var states = stateMetadata.stateNameExpr.split(/\\s*,\\s*/);\n\t      return states.map(function (state) { return new AnimationStateDeclarationAst(state, defStyles); });\n\t  }\n\t  function _parseAnimationStateTransition(transitionStateMetadata, stateStyles, errors) {\n\t      var styles = new StylesCollection();\n\t      var transitionExprs = [];\n\t      var transitionStates = transitionStateMetadata.stateChangeExpr.split(/\\s*,\\s*/);\n\t      transitionStates.forEach(function (expr) { transitionExprs.push.apply(transitionExprs, _parseAnimationTransitionExpr(expr, errors)); });\n\t      var entry = _normalizeAnimationEntry(transitionStateMetadata.steps);\n\t      var animation = _normalizeStyleSteps(entry, stateStyles, errors);\n\t      var animationAst = _parseTransitionAnimation(animation, 0, styles, stateStyles, errors);\n\t      if (errors.length == 0) {\n\t          _fillAnimationAstStartingKeyframes(animationAst, styles, errors);\n\t      }\n\t      var stepsAst = (animationAst instanceof AnimationWithStepsAst) ?\n\t          animationAst :\n\t          new AnimationSequenceAst([animationAst]);\n\t      return new AnimationStateTransitionAst(transitionExprs, stepsAst);\n\t  }\n\t  function _parseAnimationAlias(alias, errors) {\n\t      switch (alias) {\n\t          case ':enter':\n\t              return 'void => *';\n\t          case ':leave':\n\t              return '* => void';\n\t          default:\n\t              errors.push(new AnimationParseError(\"the transition alias value \\\"\" + alias + \"\\\" is not supported\"));\n\t              return '* => *';\n\t      }\n\t  }\n\t  function _parseAnimationTransitionExpr(eventStr, errors) {\n\t      var expressions = [];\n\t      if (eventStr[0] == ':') {\n\t          eventStr = _parseAnimationAlias(eventStr, errors);\n\t      }\n\t      var match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n\t      if (!isPresent(match) || match.length < 4) {\n\t          errors.push(new AnimationParseError(\"the provided \" + eventStr + \" is not of a supported format\"));\n\t          return expressions;\n\t      }\n\t      var fromState = match[1];\n\t      var separator = match[2];\n\t      var toState = match[3];\n\t      expressions.push(new AnimationStateTransitionExpression(fromState, toState));\n\t      var isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n\t      if (separator[0] == '<' && !isFullAnyStateExpr) {\n\t          expressions.push(new AnimationStateTransitionExpression(toState, fromState));\n\t      }\n\t      return expressions;\n\t  }\n\t  function _normalizeAnimationEntry(entry) {\n\t      return Array.isArray(entry) ? new CompileAnimationSequenceMetadata(entry) : entry;\n\t  }\n\t  function _normalizeStyleMetadata(entry, stateStyles, errors) {\n\t      var normalizedStyles = [];\n\t      entry.styles.forEach(function (styleEntry) {\n\t          if (typeof styleEntry === 'string') {\n\t              normalizedStyles.push.apply(normalizedStyles, _resolveStylesFromState(styleEntry, stateStyles, errors));\n\t          }\n\t          else {\n\t              normalizedStyles.push(styleEntry);\n\t          }\n\t      });\n\t      return normalizedStyles;\n\t  }\n\t  function _normalizeStyleSteps(entry, stateStyles, errors) {\n\t      var steps = _normalizeStyleStepEntry(entry, stateStyles, errors);\n\t      return (entry instanceof CompileAnimationGroupMetadata) ?\n\t          new CompileAnimationGroupMetadata(steps) :\n\t          new CompileAnimationSequenceMetadata(steps);\n\t  }\n\t  function _mergeAnimationStyles(stylesList, newItem) {\n\t      if (typeof newItem === 'object' && newItem !== null && stylesList.length > 0) {\n\t          var lastIndex = stylesList.length - 1;\n\t          var lastItem = stylesList[lastIndex];\n\t          if (typeof lastItem === 'object' && lastItem !== null) {\n\t              stylesList[lastIndex] = StringMapWrapper.merge(lastItem, newItem);\n\t              return;\n\t          }\n\t      }\n\t      stylesList.push(newItem);\n\t  }\n\t  function _normalizeStyleStepEntry(entry, stateStyles, errors) {\n\t      var steps;\n\t      if (entry instanceof CompileAnimationWithStepsMetadata) {\n\t          steps = entry.steps;\n\t      }\n\t      else {\n\t          return [entry];\n\t      }\n\t      var newSteps = [];\n\t      var combinedStyles;\n\t      steps.forEach(function (step) {\n\t          if (step instanceof CompileAnimationStyleMetadata) {\n\t              // this occurs when a style step is followed by a previous style step\n\t              // or when the first style step is run. We want to concatenate all subsequent\n\t              // style steps together into a single style step such that we have the correct\n\t              // starting keyframe data to pass into the animation player.\n\t              if (!isPresent(combinedStyles)) {\n\t                  combinedStyles = [];\n\t              }\n\t              _normalizeStyleMetadata(step, stateStyles, errors)\n\t                  .forEach(function (entry) { _mergeAnimationStyles(combinedStyles, entry); });\n\t          }\n\t          else {\n\t              // it is important that we create a metadata entry of the combined styles\n\t              // before we go on an process the animate, sequence or group metadata steps.\n\t              // This will ensure that the AST will have the previous styles painted on\n\t              // screen before any further animations that use the styles take place.\n\t              if (isPresent(combinedStyles)) {\n\t                  newSteps.push(new CompileAnimationStyleMetadata(0, combinedStyles));\n\t                  combinedStyles = null;\n\t              }\n\t              if (step instanceof CompileAnimationAnimateMetadata) {\n\t                  // we do not recurse into CompileAnimationAnimateMetadata since\n\t                  // those style steps are not going to be squashed\n\t                  var animateStyleValue = step.styles;\n\t                  if (animateStyleValue instanceof CompileAnimationStyleMetadata) {\n\t                      animateStyleValue.styles =\n\t                          _normalizeStyleMetadata(animateStyleValue, stateStyles, errors);\n\t                  }\n\t                  else if (animateStyleValue instanceof CompileAnimationKeyframesSequenceMetadata) {\n\t                      animateStyleValue.steps.forEach(function (step) { step.styles = _normalizeStyleMetadata(step, stateStyles, errors); });\n\t                  }\n\t              }\n\t              else if (step instanceof CompileAnimationWithStepsMetadata) {\n\t                  var innerSteps = _normalizeStyleStepEntry(step, stateStyles, errors);\n\t                  step = step instanceof CompileAnimationGroupMetadata ?\n\t                      new CompileAnimationGroupMetadata(innerSteps) :\n\t                      new CompileAnimationSequenceMetadata(innerSteps);\n\t              }\n\t              newSteps.push(step);\n\t          }\n\t      });\n\t      // this happens when only styles were animated within the sequence\n\t      if (isPresent(combinedStyles)) {\n\t          newSteps.push(new CompileAnimationStyleMetadata(0, combinedStyles));\n\t      }\n\t      return newSteps;\n\t  }\n\t  function _resolveStylesFromState(stateName, stateStyles, errors) {\n\t      var styles = [];\n\t      if (stateName[0] != ':') {\n\t          errors.push(new AnimationParseError(\"Animation states via styles must be prefixed with a \\\":\\\"\"));\n\t      }\n\t      else {\n\t          var normalizedStateName = stateName.substring(1);\n\t          var value = stateStyles[normalizedStateName];\n\t          if (!isPresent(value)) {\n\t              errors.push(new AnimationParseError(\"Unable to apply styles due to missing a state: \\\"\" + normalizedStateName + \"\\\"\"));\n\t          }\n\t          else {\n\t              value.styles.forEach(function (stylesEntry) {\n\t                  if (typeof stylesEntry === 'object' && stylesEntry !== null) {\n\t                      styles.push(stylesEntry);\n\t                  }\n\t              });\n\t          }\n\t      }\n\t      return styles;\n\t  }\n\t  var _AnimationTimings = (function () {\n\t      function _AnimationTimings(duration, delay, easing) {\n\t          this.duration = duration;\n\t          this.delay = delay;\n\t          this.easing = easing;\n\t      }\n\t      return _AnimationTimings;\n\t  }());\n\t  function _parseAnimationKeyframes(keyframeSequence, currentTime, collectedStyles, stateStyles, errors) {\n\t      var totalEntries = keyframeSequence.steps.length;\n\t      var totalOffsets = 0;\n\t      keyframeSequence.steps.forEach(function (step) { return totalOffsets += (isPresent(step.offset) ? 1 : 0); });\n\t      if (totalOffsets > 0 && totalOffsets < totalEntries) {\n\t          errors.push(new AnimationParseError(\"Not all style() entries contain an offset for the provided keyframe()\"));\n\t          totalOffsets = totalEntries;\n\t      }\n\t      var limit = totalEntries - 1;\n\t      var margin = totalOffsets == 0 ? (1 / limit) : 0;\n\t      var rawKeyframes = [];\n\t      var index = 0;\n\t      var doSortKeyframes = false;\n\t      var lastOffset = 0;\n\t      keyframeSequence.steps.forEach(function (styleMetadata) {\n\t          var offset = styleMetadata.offset;\n\t          var keyframeStyles = {};\n\t          styleMetadata.styles.forEach(function (entry) {\n\t              Object.keys(entry).forEach(function (prop) {\n\t                  if (prop != 'offset') {\n\t                      keyframeStyles[prop] = entry[prop];\n\t                  }\n\t              });\n\t          });\n\t          if (isPresent(offset)) {\n\t              doSortKeyframes = doSortKeyframes || (offset < lastOffset);\n\t          }\n\t          else {\n\t              offset = index == limit ? _TERMINAL_KEYFRAME : (margin * index);\n\t          }\n\t          rawKeyframes.push([offset, keyframeStyles]);\n\t          lastOffset = offset;\n\t          index++;\n\t      });\n\t      if (doSortKeyframes) {\n\t          rawKeyframes.sort(function (a, b) { return a[0] <= b[0] ? -1 : 1; });\n\t      }\n\t      var firstKeyframe = rawKeyframes[0];\n\t      if (firstKeyframe[0] != _INITIAL_KEYFRAME) {\n\t          rawKeyframes.splice(0, 0, firstKeyframe = [_INITIAL_KEYFRAME, {}]);\n\t      }\n\t      var firstKeyframeStyles = firstKeyframe[1];\n\t      limit = rawKeyframes.length - 1;\n\t      var lastKeyframe = rawKeyframes[limit];\n\t      if (lastKeyframe[0] != _TERMINAL_KEYFRAME) {\n\t          rawKeyframes.push(lastKeyframe = [_TERMINAL_KEYFRAME, {}]);\n\t          limit++;\n\t      }\n\t      var lastKeyframeStyles = lastKeyframe[1];\n\t      for (var i = 1; i <= limit; i++) {\n\t          var entry = rawKeyframes[i];\n\t          var styles = entry[1];\n\t          Object.keys(styles).forEach(function (prop) {\n\t              if (!isPresent(firstKeyframeStyles[prop])) {\n\t                  firstKeyframeStyles[prop] = FILL_STYLE_FLAG;\n\t              }\n\t          });\n\t      }\n\t      var _loop_1 = function(i) {\n\t          var entry = rawKeyframes[i];\n\t          var styles = entry[1];\n\t          Object.keys(styles).forEach(function (prop) {\n\t              if (!isPresent(lastKeyframeStyles[prop])) {\n\t                  lastKeyframeStyles[prop] = styles[prop];\n\t              }\n\t          });\n\t      };\n\t      for (var i = limit - 1; i >= 0; i--) {\n\t          _loop_1(i);\n\t      }\n\t      return rawKeyframes.map(function (entry) { return new AnimationKeyframeAst(entry[0], new AnimationStylesAst([entry[1]])); });\n\t  }\n\t  function _parseTransitionAnimation(entry, currentTime, collectedStyles, stateStyles, errors) {\n\t      var ast;\n\t      var playTime = 0;\n\t      var startingTime = currentTime;\n\t      if (entry instanceof CompileAnimationWithStepsMetadata) {\n\t          var maxDuration = 0;\n\t          var steps = [];\n\t          var isGroup = entry instanceof CompileAnimationGroupMetadata;\n\t          var previousStyles;\n\t          entry.steps.forEach(function (entry) {\n\t              // these will get picked up by the next step...\n\t              var time = isGroup ? startingTime : currentTime;\n\t              if (entry instanceof CompileAnimationStyleMetadata) {\n\t                  entry.styles.forEach(function (stylesEntry) {\n\t                      // by this point we know that we only have stringmap values\n\t                      var map = stylesEntry;\n\t                      Object.keys(map).forEach(function (prop) { collectedStyles.insertAtTime(prop, time, map[prop]); });\n\t                  });\n\t                  previousStyles = entry.styles;\n\t                  return;\n\t              }\n\t              var innerAst = _parseTransitionAnimation(entry, time, collectedStyles, stateStyles, errors);\n\t              if (isPresent(previousStyles)) {\n\t                  if (entry instanceof CompileAnimationWithStepsMetadata) {\n\t                      var startingStyles = new AnimationStylesAst(previousStyles);\n\t                      steps.push(new AnimationStepAst(startingStyles, [], 0, 0, ''));\n\t                  }\n\t                  else {\n\t                      var innerStep = innerAst;\n\t                      (_a = innerStep.startingStyles.styles).push.apply(_a, previousStyles);\n\t                  }\n\t                  previousStyles = null;\n\t              }\n\t              var astDuration = innerAst.playTime;\n\t              currentTime += astDuration;\n\t              playTime += astDuration;\n\t              maxDuration = Math.max(astDuration, maxDuration);\n\t              steps.push(innerAst);\n\t              var _a;\n\t          });\n\t          if (isPresent(previousStyles)) {\n\t              var startingStyles = new AnimationStylesAst(previousStyles);\n\t              steps.push(new AnimationStepAst(startingStyles, [], 0, 0, ''));\n\t          }\n\t          if (isGroup) {\n\t              ast = new AnimationGroupAst(steps);\n\t              playTime = maxDuration;\n\t              currentTime = startingTime + playTime;\n\t          }\n\t          else {\n\t              ast = new AnimationSequenceAst(steps);\n\t          }\n\t      }\n\t      else if (entry instanceof CompileAnimationAnimateMetadata) {\n\t          var timings = _parseTimeExpression(entry.timings, errors);\n\t          var styles = entry.styles;\n\t          var keyframes;\n\t          if (styles instanceof CompileAnimationKeyframesSequenceMetadata) {\n\t              keyframes =\n\t                  _parseAnimationKeyframes(styles, currentTime, collectedStyles, stateStyles, errors);\n\t          }\n\t          else {\n\t              var styleData = styles;\n\t              var offset = _TERMINAL_KEYFRAME;\n\t              var styleAst = new AnimationStylesAst(styleData.styles);\n\t              var keyframe = new AnimationKeyframeAst(offset, styleAst);\n\t              keyframes = [keyframe];\n\t          }\n\t          ast = new AnimationStepAst(new AnimationStylesAst([]), keyframes, timings.duration, timings.delay, timings.easing);\n\t          playTime = timings.duration + timings.delay;\n\t          currentTime += playTime;\n\t          keyframes.forEach(function (keyframe /** TODO #9100 */) { return keyframe.styles.styles.forEach(function (entry /** TODO #9100 */) { return Object.keys(entry).forEach(function (prop) { collectedStyles.insertAtTime(prop, currentTime, entry[prop]); }); }); });\n\t      }\n\t      else {\n\t          // if the code reaches this stage then an error\n\t          // has already been populated within the _normalizeStyleSteps()\n\t          // operation...\n\t          ast = new AnimationStepAst(null, [], 0, 0, '');\n\t      }\n\t      ast.playTime = playTime;\n\t      ast.startTime = startingTime;\n\t      return ast;\n\t  }\n\t  function _fillAnimationAstStartingKeyframes(ast, collectedStyles, errors) {\n\t      // steps that only contain style will not be filled\n\t      if ((ast instanceof AnimationStepAst) && ast.keyframes.length > 0) {\n\t          var keyframes = ast.keyframes;\n\t          if (keyframes.length == 1) {\n\t              var endKeyframe = keyframes[0];\n\t              var startKeyframe = _createStartKeyframeFromEndKeyframe(endKeyframe, ast.startTime, ast.playTime, collectedStyles, errors);\n\t              ast.keyframes = [startKeyframe, endKeyframe];\n\t          }\n\t      }\n\t      else if (ast instanceof AnimationWithStepsAst) {\n\t          ast.steps.forEach(function (entry) { return _fillAnimationAstStartingKeyframes(entry, collectedStyles, errors); });\n\t      }\n\t  }\n\t  function _parseTimeExpression(exp, errors) {\n\t      var regex = /^([\\.\\d]+)(m?s)(?:\\s+([\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?/i;\n\t      var duration;\n\t      var delay = 0;\n\t      var easing = null;\n\t      if (typeof exp === 'string') {\n\t          var matches = exp.match(regex);\n\t          if (matches === null) {\n\t              errors.push(new AnimationParseError(\"The provided timing value \\\"\" + exp + \"\\\" is invalid.\"));\n\t              return new _AnimationTimings(0, 0, null);\n\t          }\n\t          var durationMatch = parseFloat(matches[1]);\n\t          var durationUnit = matches[2];\n\t          if (durationUnit == 's') {\n\t              durationMatch *= _ONE_SECOND;\n\t          }\n\t          duration = Math.floor(durationMatch);\n\t          var delayMatch = matches[3];\n\t          var delayUnit = matches[4];\n\t          if (isPresent(delayMatch)) {\n\t              var delayVal = parseFloat(delayMatch);\n\t              if (isPresent(delayUnit) && delayUnit == 's') {\n\t                  delayVal *= _ONE_SECOND;\n\t              }\n\t              delay = Math.floor(delayVal);\n\t          }\n\t          var easingVal = matches[5];\n\t          if (!isBlank(easingVal)) {\n\t              easing = easingVal;\n\t          }\n\t      }\n\t      else {\n\t          duration = exp;\n\t      }\n\t      return new _AnimationTimings(duration, delay, easing);\n\t  }\n\t  function _createStartKeyframeFromEndKeyframe(endKeyframe, startTime, duration, collectedStyles, errors) {\n\t      var values = {};\n\t      var endTime = startTime + duration;\n\t      endKeyframe.styles.styles.forEach(function (styleData) {\n\t          Object.keys(styleData).forEach(function (prop) {\n\t              var val = styleData[prop];\n\t              if (prop == 'offset')\n\t                  return;\n\t              var resultIndex = collectedStyles.indexOfAtOrBeforeTime(prop, startTime);\n\t              var resultEntry /** TODO #9100 */, nextEntry /** TODO #9100 */, value;\n\t              if (isPresent(resultIndex)) {\n\t                  resultEntry = collectedStyles.getByIndex(prop, resultIndex);\n\t                  value = resultEntry.value;\n\t                  nextEntry = collectedStyles.getByIndex(prop, resultIndex + 1);\n\t              }\n\t              else {\n\t                  // this is a flag that the runtime code uses to pass\n\t                  // in a value either from the state declaration styles\n\t                  // or using the AUTO_STYLE value (e.g. getComputedStyle)\n\t                  value = FILL_STYLE_FLAG;\n\t              }\n\t              if (isPresent(nextEntry) && !nextEntry.matches(endTime, val)) {\n\t                  errors.push(new AnimationParseError(\"The animated CSS property \\\"\" + prop + \"\\\" unexpectedly changes between steps \\\"\" + resultEntry.time + \"ms\\\" and \\\"\" + endTime + \"ms\\\" at \\\"\" + nextEntry.time + \"ms\\\"\"));\n\t              }\n\t              values[prop] = value;\n\t          });\n\t      });\n\t      return new AnimationKeyframeAst(_INITIAL_KEYFRAME, new AnimationStylesAst([values]));\n\t  }\n\t\n\t  function createDiTokenExpression(token) {\n\t      if (isPresent(token.value)) {\n\t          return literal(token.value);\n\t      }\n\t      else if (token.identifierIsInstance) {\n\t          return importExpr(token.identifier)\n\t              .instantiate([], importType(token.identifier, [], [TypeModifier.Const]));\n\t      }\n\t      else {\n\t          return importExpr(token.identifier);\n\t      }\n\t  }\n\t  function createInlineArray(values) {\n\t      if (values.length === 0) {\n\t          return importExpr(resolveIdentifier(Identifiers.EMPTY_INLINE_ARRAY));\n\t      }\n\t      var log2 = Math.log(values.length) / Math.log(2);\n\t      var index = Math.ceil(log2);\n\t      var identifierSpec = index < Identifiers.inlineArrays.length ? Identifiers.inlineArrays[index] :\n\t          Identifiers.InlineArrayDynamic;\n\t      var identifier = resolveIdentifier(identifierSpec);\n\t      return importExpr(identifier).instantiate([\n\t          literal(values.length)\n\t      ].concat(values));\n\t  }\n\t  function createPureProxy(fn, argCount, pureProxyProp, builder) {\n\t      builder.fields.push(new ClassField(pureProxyProp.name, null));\n\t      var pureProxyId = argCount < Identifiers.pureProxies.length ? Identifiers.pureProxies[argCount] : null;\n\t      if (!pureProxyId) {\n\t          throw new Error(\"Unsupported number of argument for pure functions: \" + argCount);\n\t      }\n\t      builder.ctorStmts.push(THIS_EXPR.prop(pureProxyProp.name)\n\t          .set(importExpr(resolveIdentifier(pureProxyId)).callFn([fn]))\n\t          .toStmt());\n\t  }\n\t  function createEnumExpression(enumType, enumValue) {\n\t      var enumName = Object.keys(enumType.runtime).find(function (propName) { return enumType.runtime[propName] === enumValue; });\n\t      if (!enumName) {\n\t          throw new Error(\"Unknown enum value \" + enumValue + \" in \" + enumType.name);\n\t      }\n\t      return importExpr(resolveEnumIdentifier(resolveIdentifier(enumType), enumName));\n\t  }\n\t\n\t  var CheckBindingField = (function () {\n\t      function CheckBindingField(expression, bindingId) {\n\t          this.expression = expression;\n\t          this.bindingId = bindingId;\n\t      }\n\t      return CheckBindingField;\n\t  }());\n\t  function createCheckBindingField(builder) {\n\t      var bindingId = \"\" + builder.fields.length;\n\t      var fieldExpr = createBindFieldExpr(bindingId);\n\t      // private is fine here as no child view will reference the cached value...\n\t      builder.fields.push(new ClassField(fieldExpr.name, null, [StmtModifier.Private]));\n\t      builder.ctorStmts.push(THIS_EXPR.prop(fieldExpr.name)\n\t          .set(importExpr(resolveIdentifier(Identifiers.UNINITIALIZED)))\n\t          .toStmt());\n\t      return new CheckBindingField(fieldExpr, bindingId);\n\t  }\n\t  function createCheckBindingStmt(evalResult, fieldExpr, throwOnChangeVar, actions) {\n\t      var condition = importExpr(resolveIdentifier(Identifiers.checkBinding)).callFn([\n\t          throwOnChangeVar, fieldExpr, evalResult.currValExpr\n\t      ]);\n\t      if (evalResult.forceUpdate) {\n\t          condition = evalResult.forceUpdate.or(condition);\n\t      }\n\t      return evalResult.stmts.concat([\n\t          new IfStmt(condition, actions.concat([\n\t              THIS_EXPR.prop(fieldExpr.name).set(evalResult.currValExpr).toStmt()\n\t          ]))\n\t      ]);\n\t  }\n\t  function createBindFieldExpr(bindingId) {\n\t      return THIS_EXPR.prop(\"_expr_\" + bindingId);\n\t  }\n\t\n\t  var VAL_UNWRAPPER_VAR = variable(\"valUnwrapper\");\n\t  var EventHandlerVars = (function () {\n\t      function EventHandlerVars() {\n\t      }\n\t      EventHandlerVars.event = variable('$event');\n\t      return EventHandlerVars;\n\t  }());\n\t  var ConvertPropertyBindingResult = (function () {\n\t      function ConvertPropertyBindingResult(stmts, currValExpr, forceUpdate) {\n\t          this.stmts = stmts;\n\t          this.currValExpr = currValExpr;\n\t          this.forceUpdate = forceUpdate;\n\t      }\n\t      return ConvertPropertyBindingResult;\n\t  }());\n\t  /**\n\t   * Converts the given expression AST into an executable output AST, assuming the expression is\n\t   * used in a property binding.\n\t   */\n\t  function convertPropertyBinding(builder, nameResolver, implicitReceiver, expression, bindingId) {\n\t      var currValExpr = createCurrValueExpr(bindingId);\n\t      var stmts = [];\n\t      if (!nameResolver) {\n\t          nameResolver = new DefaultNameResolver();\n\t      }\n\t      var visitor = new _AstToIrVisitor(builder, nameResolver, implicitReceiver, VAL_UNWRAPPER_VAR, bindingId, false);\n\t      var outputExpr = expression.visit(visitor, _Mode.Expression);\n\t      if (!outputExpr) {\n\t          // e.g. an empty expression was given\n\t          return null;\n\t      }\n\t      if (visitor.temporaryCount) {\n\t          for (var i = 0; i < visitor.temporaryCount; i++) {\n\t              stmts.push(temporaryDeclaration(bindingId, i));\n\t          }\n\t      }\n\t      if (visitor.needsValueUnwrapper) {\n\t          var initValueUnwrapperStmt = VAL_UNWRAPPER_VAR.callMethod('reset', []).toStmt();\n\t          stmts.push(initValueUnwrapperStmt);\n\t      }\n\t      stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n\t      if (visitor.needsValueUnwrapper) {\n\t          return new ConvertPropertyBindingResult(stmts, currValExpr, VAL_UNWRAPPER_VAR.prop('hasWrappedValue'));\n\t      }\n\t      else {\n\t          return new ConvertPropertyBindingResult(stmts, currValExpr, null);\n\t      }\n\t  }\n\t  var ConvertActionBindingResult = (function () {\n\t      function ConvertActionBindingResult(stmts, preventDefault) {\n\t          this.stmts = stmts;\n\t          this.preventDefault = preventDefault;\n\t      }\n\t      return ConvertActionBindingResult;\n\t  }());\n\t  /**\n\t   * Converts the given expression AST into an executable output AST, assuming the expression is\n\t   * used in an action binding (e.g. an event handler).\n\t   */\n\t  function convertActionBinding(builder, nameResolver, implicitReceiver, action, bindingId) {\n\t      if (!nameResolver) {\n\t          nameResolver = new DefaultNameResolver();\n\t      }\n\t      var visitor = new _AstToIrVisitor(builder, nameResolver, implicitReceiver, null, bindingId, true);\n\t      var actionStmts = [];\n\t      flattenStatements(action.visit(visitor, _Mode.Statement), actionStmts);\n\t      prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n\t      var lastIndex = actionStmts.length - 1;\n\t      var preventDefaultVar = null;\n\t      if (lastIndex >= 0) {\n\t          var lastStatement = actionStmts[lastIndex];\n\t          var returnExpr = convertStmtIntoExpression(lastStatement);\n\t          if (returnExpr) {\n\t              // Note: We need to cast the result of the method call to dynamic,\n\t              // as it might be a void method!\n\t              preventDefaultVar = createPreventDefaultVar(bindingId);\n\t              actionStmts[lastIndex] =\n\t                  preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n\t                      .toDeclStmt(null, [StmtModifier.Final]);\n\t          }\n\t      }\n\t      return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n\t  }\n\t  /**\n\t   * Creates variables that are shared by multiple calls to `convertActionBinding` /\n\t   * `convertPropertyBinding`\n\t   */\n\t  function createSharedBindingVariablesIfNeeded(stmts) {\n\t      var unwrapperStmts = [];\n\t      var readVars = findReadVarNames(stmts);\n\t      if (readVars.has(VAL_UNWRAPPER_VAR.name)) {\n\t          unwrapperStmts.push(VAL_UNWRAPPER_VAR\n\t              .set(importExpr(resolveIdentifier(Identifiers.ValueUnwrapper)).instantiate([]))\n\t              .toDeclStmt(null, [StmtModifier.Final]));\n\t      }\n\t      return unwrapperStmts;\n\t  }\n\t  function temporaryName(bindingId, temporaryNumber) {\n\t      return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n\t  }\n\t  function temporaryDeclaration(bindingId, temporaryNumber) {\n\t      return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n\t  }\n\t  function prependTemporaryDecls(temporaryCount, bindingId, statements) {\n\t      for (var i = temporaryCount - 1; i >= 0; i--) {\n\t          statements.unshift(temporaryDeclaration(bindingId, i));\n\t      }\n\t  }\n\t  var _Mode;\n\t  (function (_Mode) {\n\t      _Mode[_Mode[\"Statement\"] = 0] = \"Statement\";\n\t      _Mode[_Mode[\"Expression\"] = 1] = \"Expression\";\n\t  })(_Mode || (_Mode = {}));\n\t  function ensureStatementMode(mode, ast) {\n\t      if (mode !== _Mode.Statement) {\n\t          throw new Error(\"Expected a statement, but saw \" + ast);\n\t      }\n\t  }\n\t  function ensureExpressionMode(mode, ast) {\n\t      if (mode !== _Mode.Expression) {\n\t          throw new Error(\"Expected an expression, but saw \" + ast);\n\t      }\n\t  }\n\t  function convertToStatementIfNeeded(mode, expr) {\n\t      if (mode === _Mode.Statement) {\n\t          return expr.toStmt();\n\t      }\n\t      else {\n\t          return expr;\n\t      }\n\t  }\n\t  var _AstToIrVisitor = (function () {\n\t      function _AstToIrVisitor(_builder, _nameResolver, _implicitReceiver, _valueUnwrapper, bindingId, isAction) {\n\t          this._builder = _builder;\n\t          this._nameResolver = _nameResolver;\n\t          this._implicitReceiver = _implicitReceiver;\n\t          this._valueUnwrapper = _valueUnwrapper;\n\t          this.bindingId = bindingId;\n\t          this.isAction = isAction;\n\t          this._nodeMap = new Map();\n\t          this._resultMap = new Map();\n\t          this._currentTemporary = 0;\n\t          this.needsValueUnwrapper = false;\n\t          this.temporaryCount = 0;\n\t      }\n\t      _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n\t          var op;\n\t          switch (ast.operation) {\n\t              case '+':\n\t                  op = BinaryOperator.Plus;\n\t                  break;\n\t              case '-':\n\t                  op = BinaryOperator.Minus;\n\t                  break;\n\t              case '*':\n\t                  op = BinaryOperator.Multiply;\n\t                  break;\n\t              case '/':\n\t                  op = BinaryOperator.Divide;\n\t                  break;\n\t              case '%':\n\t                  op = BinaryOperator.Modulo;\n\t                  break;\n\t              case '&&':\n\t                  op = BinaryOperator.And;\n\t                  break;\n\t              case '||':\n\t                  op = BinaryOperator.Or;\n\t                  break;\n\t              case '==':\n\t                  op = BinaryOperator.Equals;\n\t                  break;\n\t              case '!=':\n\t                  op = BinaryOperator.NotEquals;\n\t                  break;\n\t              case '===':\n\t                  op = BinaryOperator.Identical;\n\t                  break;\n\t              case '!==':\n\t                  op = BinaryOperator.NotIdentical;\n\t                  break;\n\t              case '<':\n\t                  op = BinaryOperator.Lower;\n\t                  break;\n\t              case '>':\n\t                  op = BinaryOperator.Bigger;\n\t                  break;\n\t              case '<=':\n\t                  op = BinaryOperator.LowerEquals;\n\t                  break;\n\t              case '>=':\n\t                  op = BinaryOperator.BiggerEquals;\n\t                  break;\n\t              default:\n\t                  throw new Error(\"Unsupported operation \" + ast.operation);\n\t          }\n\t          return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this.visit(ast.left, _Mode.Expression), this.visit(ast.right, _Mode.Expression)));\n\t      };\n\t      _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n\t          ensureStatementMode(mode, ast);\n\t          return this.visitAll(ast.expressions, mode);\n\t      };\n\t      _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n\t          var value = this.visit(ast.condition, _Mode.Expression);\n\t          return convertToStatementIfNeeded(mode, value.conditional(this.visit(ast.trueExp, _Mode.Expression), this.visit(ast.falseExp, _Mode.Expression)));\n\t      };\n\t      _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n\t          var input = this.visit(ast.exp, _Mode.Expression);\n\t          var args = this.visitAll(ast.args, _Mode.Expression);\n\t          var value = this._nameResolver.callPipe(ast.name, input, args);\n\t          if (!value) {\n\t              throw new Error(\"Illegal state: Pipe \" + ast.name + \" is not allowed here!\");\n\t          }\n\t          this.needsValueUnwrapper = true;\n\t          return convertToStatementIfNeeded(mode, this._valueUnwrapper.callMethod('unwrap', [value]));\n\t      };\n\t      _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n\t          return convertToStatementIfNeeded(mode, this.visit(ast.target, _Mode.Expression).callFn(this.visitAll(ast.args, _Mode.Expression)));\n\t      };\n\t      _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n\t          ensureExpressionMode(mode, ast);\n\t          return this._implicitReceiver;\n\t      };\n\t      _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n\t          ensureExpressionMode(mode, ast);\n\t          var args = [literal(ast.expressions.length)];\n\t          for (var i = 0; i < ast.strings.length - 1; i++) {\n\t              args.push(literal(ast.strings[i]));\n\t              args.push(this.visit(ast.expressions[i], _Mode.Expression));\n\t          }\n\t          args.push(literal(ast.strings[ast.strings.length - 1]));\n\t          return importExpr(resolveIdentifier(Identifiers.interpolate)).callFn(args);\n\t      };\n\t      _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n\t          return convertToStatementIfNeeded(mode, this.visit(ast.obj, _Mode.Expression).key(this.visit(ast.key, _Mode.Expression)));\n\t      };\n\t      _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n\t          var obj = this.visit(ast.obj, _Mode.Expression);\n\t          var key = this.visit(ast.key, _Mode.Expression);\n\t          var value = this.visit(ast.value, _Mode.Expression);\n\t          return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n\t      };\n\t      _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n\t          var parts = this.visitAll(ast.expressions, mode);\n\t          var literalArr$$ = this.isAction ? literalArr(parts) : createCachedLiteralArray(this._builder, parts);\n\t          return convertToStatementIfNeeded(mode, literalArr$$);\n\t      };\n\t      _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n\t          var parts = [];\n\t          for (var i = 0; i < ast.keys.length; i++) {\n\t              parts.push([ast.keys[i], this.visit(ast.values[i], _Mode.Expression)]);\n\t          }\n\t          var literalMap$$ = this.isAction ? literalMap(parts) : createCachedLiteralMap(this._builder, parts);\n\t          return convertToStatementIfNeeded(mode, literalMap$$);\n\t      };\n\t      _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n\t          return convertToStatementIfNeeded(mode, literal(ast.value));\n\t      };\n\t      _AstToIrVisitor.prototype._getLocal = function (name) {\n\t          if (this.isAction && name == EventHandlerVars.event.name) {\n\t              return EventHandlerVars.event;\n\t          }\n\t          return this._nameResolver.getLocal(name);\n\t      };\n\t      _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n\t          var leftMostSafe = this.leftMostSafeNode(ast);\n\t          if (leftMostSafe) {\n\t              return this.convertSafeAccess(ast, leftMostSafe, mode);\n\t          }\n\t          else {\n\t              var args = this.visitAll(ast.args, _Mode.Expression);\n\t              var result = null;\n\t              var receiver = this.visit(ast.receiver, _Mode.Expression);\n\t              if (receiver === this._implicitReceiver) {\n\t                  var varExpr = this._getLocal(ast.name);\n\t                  if (isPresent(varExpr)) {\n\t                      result = varExpr.callFn(args);\n\t                  }\n\t              }\n\t              if (isBlank(result)) {\n\t                  result = receiver.callMethod(ast.name, args);\n\t              }\n\t              return convertToStatementIfNeeded(mode, result);\n\t          }\n\t      };\n\t      _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n\t          return convertToStatementIfNeeded(mode, not(this.visit(ast.expression, _Mode.Expression)));\n\t      };\n\t      _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n\t          var leftMostSafe = this.leftMostSafeNode(ast);\n\t          if (leftMostSafe) {\n\t              return this.convertSafeAccess(ast, leftMostSafe, mode);\n\t          }\n\t          else {\n\t              var result = null;\n\t              var receiver = this.visit(ast.receiver, _Mode.Expression);\n\t              if (receiver === this._implicitReceiver) {\n\t                  result = this._getLocal(ast.name);\n\t              }\n\t              if (isBlank(result)) {\n\t                  result = receiver.prop(ast.name);\n\t              }\n\t              return convertToStatementIfNeeded(mode, result);\n\t          }\n\t      };\n\t      _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n\t          var receiver = this.visit(ast.receiver, _Mode.Expression);\n\t          if (receiver === this._implicitReceiver) {\n\t              var varExpr = this._getLocal(ast.name);\n\t              if (isPresent(varExpr)) {\n\t                  throw new Error('Cannot assign to a reference or variable!');\n\t              }\n\t          }\n\t          return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this.visit(ast.value, _Mode.Expression)));\n\t      };\n\t      _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n\t          return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n\t      };\n\t      _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n\t          return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n\t      };\n\t      _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n\t          var _this = this;\n\t          return asts.map(function (ast) { return _this.visit(ast, mode); });\n\t      };\n\t      _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n\t          throw new Error('Quotes are not supported for evaluation!');\n\t      };\n\t      _AstToIrVisitor.prototype.visit = function (ast, mode) {\n\t          var result = this._resultMap.get(ast);\n\t          if (result)\n\t              return result;\n\t          return (this._nodeMap.get(ast) || ast).visit(this, mode);\n\t      };\n\t      _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n\t          // If the expression contains a safe access node on the left it needs to be converted to\n\t          // an expression that guards the access to the member by checking the receiver for blank. As\n\t          // execution proceeds from left to right, the left most part of the expression must be guarded\n\t          // first but, because member access is left associative, the right side of the expression is at\n\t          // the top of the AST. The desired result requires lifting a copy of the the left part of the\n\t          // expression up to test it for blank before generating the unguarded version.\n\t          // Consider, for example the following expression: a?.b.c?.d.e\n\t          // This results in the ast:\n\t          //         .\n\t          //        / \\\n\t          //       ?.   e\n\t          //      /  \\\n\t          //     .    d\n\t          //    / \\\n\t          //   ?.  c\n\t          //  /  \\\n\t          // a    b\n\t          // The following tree should be generated:\n\t          //\n\t          //        /---- ? ----\\\n\t          //       /      |      \\\n\t          //     a   /--- ? ---\\  null\n\t          //        /     |     \\\n\t          //       .      .     null\n\t          //      / \\    / \\\n\t          //     .  c   .   e\n\t          //    / \\    / \\\n\t          //   a   b  ,   d\n\t          //         / \\\n\t          //        .   c\n\t          //       / \\\n\t          //      a   b\n\t          //\n\t          // Notice that the first guard condition is the left hand of the left most safe access node\n\t          // which comes in as leftMostSafe to this routine.\n\t          var guardedExpression = this.visit(leftMostSafe.receiver, _Mode.Expression);\n\t          var temporary;\n\t          if (this.needsTemporary(leftMostSafe.receiver)) {\n\t              // If the expression has method calls or pipes then we need to save the result into a\n\t              // temporary variable to avoid calling stateful or impure code more than once.\n\t              temporary = this.allocateTemporary();\n\t              // Preserve the result in the temporary variable\n\t              guardedExpression = temporary.set(guardedExpression);\n\t              // Ensure all further references to the guarded expression refer to the temporary instead.\n\t              this._resultMap.set(leftMostSafe.receiver, temporary);\n\t          }\n\t          var condition = guardedExpression.isBlank();\n\t          // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n\t          // leftMostNode with its unguarded version in the call to `this.visit()`.\n\t          if (leftMostSafe instanceof SafeMethodCall) {\n\t              this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n\t          }\n\t          else {\n\t              this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n\t          }\n\t          // Recursively convert the node now without the guarded member access.\n\t          var access = this.visit(ast, _Mode.Expression);\n\t          // Remove the mapping. This is not strictly required as the converter only traverses each node\n\t          // once but is safer if the conversion is changed to traverse the nodes more than once.\n\t          this._nodeMap.delete(leftMostSafe);\n\t          // If we allcoated a temporary, release it.\n\t          if (temporary) {\n\t              this.releaseTemporary(temporary);\n\t          }\n\t          // Produce the conditional\n\t          return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n\t      };\n\t      // Given a expression of the form a?.b.c?.d.e the the left most safe node is\n\t      // the (a?.b). The . and ?. are left associative thus can be rewritten as:\n\t      // ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or\n\t      // safe method call as this needs be transform initially to:\n\t      //   a == null ? null : a.c.b.c?.d.e\n\t      // then to:\n\t      //   a == null ? null : a.b.c == null ? null : a.b.c.d.e\n\t      _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n\t          var _this = this;\n\t          var visit = function (visitor, ast) {\n\t              return (_this._nodeMap.get(ast) || ast).visit(visitor);\n\t          };\n\t          return ast.visit({\n\t              visitBinary: function (ast) { return null; },\n\t              visitChain: function (ast) { return null; },\n\t              visitConditional: function (ast) { return null; },\n\t              visitFunctionCall: function (ast) { return null; },\n\t              visitImplicitReceiver: function (ast) { return null; },\n\t              visitInterpolation: function (ast) { return null; },\n\t              visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n\t              visitKeyedWrite: function (ast) { return null; },\n\t              visitLiteralArray: function (ast) { return null; },\n\t              visitLiteralMap: function (ast) { return null; },\n\t              visitLiteralPrimitive: function (ast) { return null; },\n\t              visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n\t              visitPipe: function (ast) { return null; },\n\t              visitPrefixNot: function (ast) { return null; },\n\t              visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n\t              visitPropertyWrite: function (ast) { return null; },\n\t              visitQuote: function (ast) { return null; },\n\t              visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n\t              visitSafePropertyRead: function (ast) {\n\t                  return visit(this, ast.receiver) || ast;\n\t              }\n\t          });\n\t      };\n\t      // Returns true of the AST includes a method or a pipe indicating that, if the\n\t      // expression is used as the target of a safe property or method access then\n\t      // the expression should be stored into a temporary variable.\n\t      _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n\t          var _this = this;\n\t          var visit = function (visitor, ast) {\n\t              return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n\t          };\n\t          var visitSome = function (visitor, ast) {\n\t              return ast.some(function (ast) { return visit(visitor, ast); });\n\t          };\n\t          return ast.visit({\n\t              visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n\t              visitChain: function (ast) { return false; },\n\t              visitConditional: function (ast) {\n\t                  return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n\t                      visit(this, ast.falseExp);\n\t              },\n\t              visitFunctionCall: function (ast) { return true; },\n\t              visitImplicitReceiver: function (ast) { return false; },\n\t              visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n\t              visitKeyedRead: function (ast) { return false; },\n\t              visitKeyedWrite: function (ast) { return false; },\n\t              visitLiteralArray: function (ast) { return true; },\n\t              visitLiteralMap: function (ast) { return true; },\n\t              visitLiteralPrimitive: function (ast) { return false; },\n\t              visitMethodCall: function (ast) { return true; },\n\t              visitPipe: function (ast) { return true; },\n\t              visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n\t              visitPropertyRead: function (ast) { return false; },\n\t              visitPropertyWrite: function (ast) { return false; },\n\t              visitQuote: function (ast) { return false; },\n\t              visitSafeMethodCall: function (ast) { return true; },\n\t              visitSafePropertyRead: function (ast) { return false; }\n\t          });\n\t      };\n\t      _AstToIrVisitor.prototype.allocateTemporary = function () {\n\t          var tempNumber = this._currentTemporary++;\n\t          this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n\t          return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n\t      };\n\t      _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n\t          this._currentTemporary--;\n\t          if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n\t              throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n\t          }\n\t      };\n\t      return _AstToIrVisitor;\n\t  }());\n\t  function flattenStatements(arg, output) {\n\t      if (Array.isArray(arg)) {\n\t          arg.forEach(function (entry) { return flattenStatements(entry, output); });\n\t      }\n\t      else {\n\t          output.push(arg);\n\t      }\n\t  }\n\t  function createCachedLiteralArray(builder, values) {\n\t      if (values.length === 0) {\n\t          return importExpr(resolveIdentifier(Identifiers.EMPTY_ARRAY));\n\t      }\n\t      var proxyExpr = THIS_EXPR.prop(\"_arr_\" + builder.fields.length);\n\t      var proxyParams = [];\n\t      var proxyReturnEntries = [];\n\t      for (var i = 0; i < values.length; i++) {\n\t          var paramName = \"p\" + i;\n\t          proxyParams.push(new FnParam(paramName));\n\t          proxyReturnEntries.push(variable(paramName));\n\t      }\n\t      createPureProxy(fn(proxyParams, [new ReturnStatement(literalArr(proxyReturnEntries))], new ArrayType(DYNAMIC_TYPE)), values.length, proxyExpr, builder);\n\t      return proxyExpr.callFn(values);\n\t  }\n\t  function createCachedLiteralMap(builder, entries) {\n\t      if (entries.length === 0) {\n\t          return importExpr(resolveIdentifier(Identifiers.EMPTY_MAP));\n\t      }\n\t      var proxyExpr = THIS_EXPR.prop(\"_map_\" + builder.fields.length);\n\t      var proxyParams = [];\n\t      var proxyReturnEntries = [];\n\t      var values = [];\n\t      for (var i = 0; i < entries.length; i++) {\n\t          var paramName = \"p\" + i;\n\t          proxyParams.push(new FnParam(paramName));\n\t          proxyReturnEntries.push([entries[i][0], variable(paramName)]);\n\t          values.push(entries[i][1]);\n\t      }\n\t      createPureProxy(fn(proxyParams, [new ReturnStatement(literalMap(proxyReturnEntries))], new MapType(DYNAMIC_TYPE)), entries.length, proxyExpr, builder);\n\t      return proxyExpr.callFn(values);\n\t  }\n\t  var DefaultNameResolver = (function () {\n\t      function DefaultNameResolver() {\n\t      }\n\t      DefaultNameResolver.prototype.callPipe = function (name, input, args) { return null; };\n\t      DefaultNameResolver.prototype.getLocal = function (name) { return null; };\n\t      return DefaultNameResolver;\n\t  }());\n\t  function createCurrValueExpr(bindingId) {\n\t      return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n\t  }\n\t  function createPreventDefaultVar(bindingId) {\n\t      return variable(\"pd_\" + bindingId);\n\t  }\n\t  function convertStmtIntoExpression(stmt) {\n\t      if (stmt instanceof ExpressionStatement) {\n\t          return stmt.expr;\n\t      }\n\t      else if (stmt instanceof ReturnStatement) {\n\t          return stmt.value;\n\t      }\n\t      return null;\n\t  }\n\t\n\t  function writeToRenderer(view, boundProp, renderElement, renderValue, logBindingUpdate, securityContextExpression) {\n\t      var updateStmts = [];\n\t      var renderer = view.prop('renderer');\n\t      renderValue = sanitizedValue(view, boundProp, renderValue, securityContextExpression);\n\t      switch (boundProp.type) {\n\t          case exports.PropertyBindingType.Property:\n\t              if (logBindingUpdate) {\n\t                  updateStmts.push(importExpr(resolveIdentifier(Identifiers.setBindingDebugInfo))\n\t                      .callFn([renderer, renderElement, literal(boundProp.name), renderValue])\n\t                      .toStmt());\n\t              }\n\t              updateStmts.push(renderer\n\t                  .callMethod('setElementProperty', [renderElement, literal(boundProp.name), renderValue])\n\t                  .toStmt());\n\t              break;\n\t          case exports.PropertyBindingType.Attribute:\n\t              renderValue =\n\t                  renderValue.isBlank().conditional(NULL_EXPR, renderValue.callMethod('toString', []));\n\t              updateStmts.push(renderer\n\t                  .callMethod('setElementAttribute', [renderElement, literal(boundProp.name), renderValue])\n\t                  .toStmt());\n\t              break;\n\t          case exports.PropertyBindingType.Class:\n\t              updateStmts.push(renderer\n\t                  .callMethod('setElementClass', [renderElement, literal(boundProp.name), renderValue])\n\t                  .toStmt());\n\t              break;\n\t          case exports.PropertyBindingType.Style:\n\t              var strValue = renderValue.callMethod('toString', []);\n\t              if (isPresent(boundProp.unit)) {\n\t                  strValue = strValue.plus(literal(boundProp.unit));\n\t              }\n\t              renderValue = renderValue.isBlank().conditional(NULL_EXPR, strValue);\n\t              updateStmts.push(renderer\n\t                  .callMethod('setElementStyle', [renderElement, literal(boundProp.name), renderValue])\n\t                  .toStmt());\n\t              break;\n\t          case exports.PropertyBindingType.Animation:\n\t              throw new Error('Illegal state: Should not come here!');\n\t      }\n\t      return updateStmts;\n\t  }\n\t  function sanitizedValue(view, boundProp, renderValue, securityContextExpression) {\n\t      if (boundProp.securityContext === _angular_core.SecurityContext.NONE) {\n\t          return renderValue; // No sanitization needed.\n\t      }\n\t      if (!boundProp.needsRuntimeSecurityContext) {\n\t          securityContextExpression =\n\t              createEnumExpression(Identifiers.SecurityContext, boundProp.securityContext);\n\t      }\n\t      if (!securityContextExpression) {\n\t          throw new Error(\"internal error, no SecurityContext given \" + boundProp.name);\n\t      }\n\t      var ctx = view.prop('viewUtils').prop('sanitizer');\n\t      var args = [securityContextExpression, renderValue];\n\t      return ctx.callMethod('sanitize', args);\n\t  }\n\t\n\t  /**\n\t   * Create a new class stmts based on the given data.\n\t   */\n\t  function createClassStmt(config) {\n\t      var parentArgs = config.parentArgs || [];\n\t      var superCtorStmts = config.parent ? [SUPER_EXPR.callFn(parentArgs).toStmt()] : [];\n\t      var builder = concatClassBuilderParts(Array.isArray(config.builders) ? config.builders : [config.builders]);\n\t      var ctor = new ClassMethod(null, config.ctorParams || [], superCtorStmts.concat(builder.ctorStmts));\n\t      return new ClassStmt(config.name, config.parent, builder.fields, builder.getters, ctor, builder.methods, config.modifiers || []);\n\t  }\n\t  function concatClassBuilderParts(builders) {\n\t      return {\n\t          fields: (_a = []).concat.apply(_a, builders.map(function (builder) { return builder.fields || []; })),\n\t          methods: (_b = []).concat.apply(_b, builders.map(function (builder) { return builder.methods || []; })),\n\t          getters: (_c = []).concat.apply(_c, builders.map(function (builder) { return builder.getters || []; })),\n\t          ctorStmts: (_d = []).concat.apply(_d, builders.map(function (builder) { return builder.ctorStmts || []; })),\n\t      };\n\t      var _a, _b, _c, _d;\n\t  }\n\t\n\t  var DirectiveWrapperCompileResult = (function () {\n\t      function DirectiveWrapperCompileResult(statements, dirWrapperClassVar) {\n\t          this.statements = statements;\n\t          this.dirWrapperClassVar = dirWrapperClassVar;\n\t      }\n\t      return DirectiveWrapperCompileResult;\n\t  }());\n\t  var CONTEXT_FIELD_NAME = 'context';\n\t  var CHANGES_FIELD_NAME = 'changes';\n\t  var CHANGED_FIELD_NAME = 'changed';\n\t  var CURR_VALUE_VAR = variable('currValue');\n\t  var THROW_ON_CHANGE_VAR = variable('throwOnChange');\n\t  var FORCE_UPDATE_VAR = variable('forceUpdate');\n\t  var VIEW_VAR = variable('view');\n\t  var RENDER_EL_VAR = variable('el');\n\t  var RESET_CHANGES_STMT = THIS_EXPR.prop(CHANGES_FIELD_NAME).set(literalMap([])).toStmt();\n\t  /**\n\t   * We generate directive wrappers to prevent code bloat when a directive is used.\n\t   * A directive wrapper encapsulates\n\t   * the dirty checking for `@Input`, the handling of `@HostListener` / `@HostBinding`\n\t   * and calling the lifecyclehooks `ngOnInit`, `ngOnChanges`, `ngDoCheck`.\n\t   *\n\t   * So far, only `@Input` and the lifecycle hooks have been implemented.\n\t   */\n\t  var DirectiveWrapperCompiler = (function () {\n\t      function DirectiveWrapperCompiler(compilerConfig, _exprParser, _schemaRegistry, _console) {\n\t          this.compilerConfig = compilerConfig;\n\t          this._exprParser = _exprParser;\n\t          this._schemaRegistry = _schemaRegistry;\n\t          this._console = _console;\n\t      }\n\t      DirectiveWrapperCompiler.dirWrapperClassName = function (id) { return \"Wrapper_\" + id.name; };\n\t      DirectiveWrapperCompiler.prototype.compile = function (dirMeta) {\n\t          var builder = new DirectiveWrapperBuilder(this.compilerConfig, dirMeta);\n\t          Object.keys(dirMeta.inputs).forEach(function (inputFieldName) {\n\t              addCheckInputMethod(inputFieldName, builder);\n\t          });\n\t          addDetectChangesInInputPropsMethod(builder);\n\t          var hostParseResult = parseHostBindings(dirMeta, this._exprParser, this._schemaRegistry);\n\t          reportParseErrors(hostParseResult.errors, this._console);\n\t          // host properties are change detected by the DirectiveWrappers,\n\t          // except for the animation properties as they need close integration with animation events\n\t          // and DirectiveWrappers don't support\n\t          // event listeners right now.\n\t          addDetectChangesInHostPropsMethod(hostParseResult.hostProps.filter(function (hostProp) { return !hostProp.isAnimation; }), builder);\n\t          // TODO(tbosch): implement hostListeners via DirectiveWrapper as well!\n\t          var classStmt = builder.build();\n\t          return new DirectiveWrapperCompileResult([classStmt], classStmt.name);\n\t      };\n\t      DirectiveWrapperCompiler.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      DirectiveWrapperCompiler.ctorParameters = [\n\t          { type: CompilerConfig, },\n\t          { type: Parser, },\n\t          { type: ElementSchemaRegistry, },\n\t          { type: Console, },\n\t      ];\n\t      return DirectiveWrapperCompiler;\n\t  }());\n\t  var DirectiveWrapperBuilder = (function () {\n\t      function DirectiveWrapperBuilder(compilerConfig, dirMeta) {\n\t          this.compilerConfig = compilerConfig;\n\t          this.dirMeta = dirMeta;\n\t          this.fields = [];\n\t          this.getters = [];\n\t          this.methods = [];\n\t          this.ctorStmts = [];\n\t          var dirLifecycleHooks = dirMeta.type.lifecycleHooks;\n\t          this.genChanges = dirLifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1 ||\n\t              this.compilerConfig.logBindingUpdate;\n\t          this.ngOnChanges = dirLifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1;\n\t          this.ngOnInit = dirLifecycleHooks.indexOf(LifecycleHooks.OnInit) !== -1;\n\t          this.ngDoCheck = dirLifecycleHooks.indexOf(LifecycleHooks.DoCheck) !== -1;\n\t      }\n\t      DirectiveWrapperBuilder.prototype.build = function () {\n\t          var dirDepParamNames = [];\n\t          for (var i = 0; i < this.dirMeta.type.diDeps.length; i++) {\n\t              dirDepParamNames.push(\"p\" + i);\n\t          }\n\t          var fields = [\n\t              new ClassField(CONTEXT_FIELD_NAME, importType(this.dirMeta.type)),\n\t              new ClassField(CHANGED_FIELD_NAME, BOOL_TYPE),\n\t          ];\n\t          var ctorStmts = [THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(false)).toStmt()];\n\t          if (this.genChanges) {\n\t              fields.push(new ClassField(CHANGES_FIELD_NAME, new MapType(DYNAMIC_TYPE)));\n\t              ctorStmts.push(RESET_CHANGES_STMT);\n\t          }\n\t          ctorStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n\t              .set(importExpr(this.dirMeta.type)\n\t              .instantiate(dirDepParamNames.map(function (paramName) { return variable(paramName); })))\n\t              .toStmt());\n\t          return createClassStmt({\n\t              name: DirectiveWrapperCompiler.dirWrapperClassName(this.dirMeta.type),\n\t              ctorParams: dirDepParamNames.map(function (paramName) { return new FnParam(paramName, DYNAMIC_TYPE); }),\n\t              builders: [{ fields: fields, ctorStmts: ctorStmts }, this]\n\t          });\n\t      };\n\t      return DirectiveWrapperBuilder;\n\t  }());\n\t  function addDetectChangesInInputPropsMethod(builder) {\n\t      var changedVar = variable('changed');\n\t      var stmts = [\n\t          changedVar.set(THIS_EXPR.prop(CHANGED_FIELD_NAME)).toDeclStmt(),\n\t          THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(false)).toStmt(),\n\t      ];\n\t      var lifecycleStmts = [];\n\t      if (builder.genChanges) {\n\t          var onChangesStmts = [];\n\t          if (builder.ngOnChanges) {\n\t              onChangesStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n\t                  .callMethod('ngOnChanges', [THIS_EXPR.prop(CHANGES_FIELD_NAME)])\n\t                  .toStmt());\n\t          }\n\t          if (builder.compilerConfig.logBindingUpdate) {\n\t              onChangesStmts.push(importExpr(resolveIdentifier(Identifiers.setBindingDebugInfoForChanges))\n\t                  .callFn([VIEW_VAR.prop('renderer'), RENDER_EL_VAR, THIS_EXPR.prop(CHANGES_FIELD_NAME)])\n\t                  .toStmt());\n\t          }\n\t          onChangesStmts.push(RESET_CHANGES_STMT);\n\t          lifecycleStmts.push(new IfStmt(changedVar, onChangesStmts));\n\t      }\n\t      if (builder.ngOnInit) {\n\t          lifecycleStmts.push(new IfStmt(VIEW_VAR.prop('numberOfChecks').identical(new LiteralExpr(0)), [THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngOnInit', []).toStmt()]));\n\t      }\n\t      if (builder.ngDoCheck) {\n\t          lifecycleStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngDoCheck', []).toStmt());\n\t      }\n\t      if (lifecycleStmts.length > 0) {\n\t          stmts.push(new IfStmt(not(THROW_ON_CHANGE_VAR), lifecycleStmts));\n\t      }\n\t      stmts.push(new ReturnStatement(changedVar));\n\t      builder.methods.push(new ClassMethod('detectChangesInInputProps', [\n\t          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n\t          new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n\t          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n\t      ], stmts, BOOL_TYPE));\n\t  }\n\t  function addCheckInputMethod(input, builder) {\n\t      var field = createCheckBindingField(builder);\n\t      var onChangeStatements = [\n\t          THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(true)).toStmt(),\n\t          THIS_EXPR.prop(CONTEXT_FIELD_NAME).prop(input).set(CURR_VALUE_VAR).toStmt(),\n\t      ];\n\t      if (builder.genChanges) {\n\t          onChangeStatements.push(THIS_EXPR.prop(CHANGES_FIELD_NAME)\n\t              .key(literal(input))\n\t              .set(importExpr(resolveIdentifier(Identifiers.SimpleChange))\n\t              .instantiate([field.expression, CURR_VALUE_VAR]))\n\t              .toStmt());\n\t      }\n\t      var methodBody = createCheckBindingStmt({ currValExpr: CURR_VALUE_VAR, forceUpdate: FORCE_UPDATE_VAR, stmts: [] }, field.expression, THROW_ON_CHANGE_VAR, onChangeStatements);\n\t      builder.methods.push(new ClassMethod(\"check_\" + input, [\n\t          new FnParam(CURR_VALUE_VAR.name, DYNAMIC_TYPE),\n\t          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n\t          new FnParam(FORCE_UPDATE_VAR.name, BOOL_TYPE),\n\t      ], methodBody));\n\t  }\n\t  function addDetectChangesInHostPropsMethod(hostProps, builder) {\n\t      var stmts = [];\n\t      var methodParams = [\n\t          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n\t          new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n\t          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n\t      ];\n\t      hostProps.forEach(function (hostProp) {\n\t          var field = createCheckBindingField(builder);\n\t          var evalResult = convertPropertyBinding(builder, null, THIS_EXPR.prop(CONTEXT_FIELD_NAME), hostProp.value, field.bindingId);\n\t          if (!evalResult) {\n\t              return;\n\t          }\n\t          var securityContextExpr;\n\t          if (hostProp.needsRuntimeSecurityContext) {\n\t              securityContextExpr = variable(\"secCtx_\" + methodParams.length);\n\t              methodParams.push(new FnParam(securityContextExpr.name, importType(resolveIdentifier(Identifiers.SecurityContext))));\n\t          }\n\t          stmts.push.apply(stmts, createCheckBindingStmt(evalResult, field.expression, THROW_ON_CHANGE_VAR, writeToRenderer(VIEW_VAR, hostProp, RENDER_EL_VAR, evalResult.currValExpr, builder.compilerConfig.logBindingUpdate, securityContextExpr)));\n\t      });\n\t      builder.methods.push(new ClassMethod('detectChangesInHostProps', methodParams, stmts));\n\t  }\n\t  var ParseResult = (function () {\n\t      function ParseResult(hostProps, hostListeners, errors) {\n\t          this.hostProps = hostProps;\n\t          this.hostListeners = hostListeners;\n\t          this.errors = errors;\n\t      }\n\t      return ParseResult;\n\t  }());\n\t  function parseHostBindings(dirMeta, exprParser, schemaRegistry) {\n\t      var errors = [];\n\t      var parser = new BindingParser(exprParser, DEFAULT_INTERPOLATION_CONFIG, schemaRegistry, [], errors);\n\t      var sourceFileName = dirMeta.type.moduleUrl ?\n\t          \"in Directive \" + dirMeta.type.name + \" in \" + dirMeta.type.moduleUrl :\n\t          \"in Directive \" + dirMeta.type.name;\n\t      var sourceFile = new ParseSourceFile('', sourceFileName);\n\t      var sourceSpan = new ParseSourceSpan(new ParseLocation(sourceFile, null, null, null), new ParseLocation(sourceFile, null, null, null));\n\t      var parsedHostProps = parser.createDirectiveHostPropertyAsts(dirMeta, sourceSpan);\n\t      var parsedHostListeners = parser.createDirectiveHostEventAsts(dirMeta, sourceSpan);\n\t      return new ParseResult(parsedHostProps, parsedHostListeners, errors);\n\t  }\n\t  function reportParseErrors(parseErrors, console) {\n\t      var warnings = parseErrors.filter(function (error) { return error.level === exports.ParseErrorLevel.WARNING; });\n\t      var errors = parseErrors.filter(function (error) { return error.level === exports.ParseErrorLevel.FATAL; });\n\t      if (warnings.length > 0) {\n\t          this._console.warn(\"Directive parse warnings:\\n\" + warnings.join('\\n'));\n\t      }\n\t      if (errors.length > 0) {\n\t          throw new Error(\"Directive parse errors:\\n\" + errors.join('\\n'));\n\t      }\n\t  }\n\t\n\t  function convertValueToOutputAst(value, type) {\n\t      if (type === void 0) { type = null; }\n\t      return visitValue(value, new _ValueOutputAstTransformer(), type);\n\t  }\n\t  var _ValueOutputAstTransformer = (function () {\n\t      function _ValueOutputAstTransformer() {\n\t      }\n\t      _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n\t          var _this = this;\n\t          return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n\t      };\n\t      _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n\t          var _this = this;\n\t          var entries = [];\n\t          Object.keys(map).forEach(function (key) { entries.push([key, visitValue(map[key], _this, null)]); });\n\t          return literalMap(entries, type);\n\t      };\n\t      _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n\t      _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n\t          if (value instanceof CompileIdentifierMetadata) {\n\t              return importExpr(value);\n\t          }\n\t          else if (value instanceof Expression) {\n\t              return value;\n\t          }\n\t          else {\n\t              throw new Error(\"Illegal state: Don't now how to compile value \" + value);\n\t          }\n\t      };\n\t      return _ValueOutputAstTransformer;\n\t  }());\n\t\n\t  var _DebugState = (function () {\n\t      function _DebugState(nodeIndex, sourceAst) {\n\t          this.nodeIndex = nodeIndex;\n\t          this.sourceAst = sourceAst;\n\t      }\n\t      return _DebugState;\n\t  }());\n\t  var NULL_DEBUG_STATE = new _DebugState(null, null);\n\t  var CompileMethod = (function () {\n\t      function CompileMethod(_view) {\n\t          this._view = _view;\n\t          this._newState = NULL_DEBUG_STATE;\n\t          this._currState = NULL_DEBUG_STATE;\n\t          this._bodyStatements = [];\n\t          this._debugEnabled = this._view.genConfig.genDebugInfo;\n\t      }\n\t      CompileMethod.prototype._updateDebugContextIfNeeded = function () {\n\t          if (this._newState.nodeIndex !== this._currState.nodeIndex ||\n\t              this._newState.sourceAst !== this._currState.sourceAst) {\n\t              var expr = this._updateDebugContext(this._newState);\n\t              if (isPresent(expr)) {\n\t                  this._bodyStatements.push(expr.toStmt());\n\t              }\n\t          }\n\t      };\n\t      CompileMethod.prototype._updateDebugContext = function (newState) {\n\t          this._currState = this._newState = newState;\n\t          if (this._debugEnabled) {\n\t              var sourceLocation = isPresent(newState.sourceAst) ? newState.sourceAst.sourceSpan.start : null;\n\t              return THIS_EXPR.callMethod('debug', [\n\t                  literal(newState.nodeIndex),\n\t                  isPresent(sourceLocation) ? literal(sourceLocation.line) : NULL_EXPR,\n\t                  isPresent(sourceLocation) ? literal(sourceLocation.col) : NULL_EXPR\n\t              ]);\n\t          }\n\t          else {\n\t              return null;\n\t          }\n\t      };\n\t      CompileMethod.prototype.resetDebugInfoExpr = function (nodeIndex, templateAst) {\n\t          var res = this._updateDebugContext(new _DebugState(nodeIndex, templateAst));\n\t          return res || NULL_EXPR;\n\t      };\n\t      CompileMethod.prototype.resetDebugInfo = function (nodeIndex, templateAst) {\n\t          this._newState = new _DebugState(nodeIndex, templateAst);\n\t      };\n\t      CompileMethod.prototype.push = function () {\n\t          var stmts = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              stmts[_i - 0] = arguments[_i];\n\t          }\n\t          this.addStmts(stmts);\n\t      };\n\t      CompileMethod.prototype.addStmt = function (stmt) {\n\t          this._updateDebugContextIfNeeded();\n\t          this._bodyStatements.push(stmt);\n\t      };\n\t      CompileMethod.prototype.addStmts = function (stmts) {\n\t          this._updateDebugContextIfNeeded();\n\t          (_a = this._bodyStatements).push.apply(_a, stmts);\n\t          var _a;\n\t      };\n\t      CompileMethod.prototype.finish = function () { return this._bodyStatements; };\n\t      CompileMethod.prototype.isEmpty = function () { return this._bodyStatements.length === 0; };\n\t      return CompileMethod;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$16 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  function getPropertyInView(property, callingView, definedView) {\n\t      if (callingView === definedView) {\n\t          return property;\n\t      }\n\t      else {\n\t          var viewProp = THIS_EXPR;\n\t          var currView = callingView;\n\t          while (currView !== definedView && isPresent(currView.declarationElement.view)) {\n\t              currView = currView.declarationElement.view;\n\t              viewProp = viewProp.prop('parent');\n\t          }\n\t          if (currView !== definedView) {\n\t              throw new Error(\"Internal error: Could not calculate a property in a parent view: \" + property);\n\t          }\n\t          return property.visitExpression(new _ReplaceViewTransformer(viewProp, definedView), null);\n\t      }\n\t  }\n\t  var _ReplaceViewTransformer = (function (_super) {\n\t      __extends$16(_ReplaceViewTransformer, _super);\n\t      function _ReplaceViewTransformer(_viewExpr, _view) {\n\t          _super.call(this);\n\t          this._viewExpr = _viewExpr;\n\t          this._view = _view;\n\t      }\n\t      _ReplaceViewTransformer.prototype._isThis = function (expr) {\n\t          return expr instanceof ReadVarExpr && expr.builtin === BuiltinVar.This;\n\t      };\n\t      _ReplaceViewTransformer.prototype.visitReadVarExpr = function (ast, context) {\n\t          return this._isThis(ast) ? this._viewExpr : ast;\n\t      };\n\t      _ReplaceViewTransformer.prototype.visitReadPropExpr = function (ast, context) {\n\t          if (this._isThis(ast.receiver)) {\n\t              // Note: Don't cast for members of the AppView base class...\n\t              if (this._view.fields.some(function (field) { return field.name == ast.name; }) ||\n\t                  this._view.getters.some(function (field) { return field.name == ast.name; })) {\n\t                  return this._viewExpr.cast(this._view.classType).prop(ast.name);\n\t              }\n\t          }\n\t          return _super.prototype.visitReadPropExpr.call(this, ast, context);\n\t      };\n\t      return _ReplaceViewTransformer;\n\t  }(ExpressionTransformer));\n\t  function injectFromViewParentInjector(token, optional) {\n\t      var args = [createDiTokenExpression(token)];\n\t      if (optional) {\n\t          args.push(NULL_EXPR);\n\t      }\n\t      return THIS_EXPR.prop('parentInjector').callMethod('get', args);\n\t  }\n\t  function getViewFactoryName(component, embeddedTemplateIndex) {\n\t      return \"viewFactory_\" + component.type.name + embeddedTemplateIndex;\n\t  }\n\t  function createFlatArray(expressions) {\n\t      var lastNonArrayExpressions = [];\n\t      var result = literalArr([]);\n\t      for (var i = 0; i < expressions.length; i++) {\n\t          var expr = expressions[i];\n\t          if (expr.type instanceof ArrayType) {\n\t              if (lastNonArrayExpressions.length > 0) {\n\t                  result =\n\t                      result.callMethod(BuiltinMethod.ConcatArray, [literalArr(lastNonArrayExpressions)]);\n\t                  lastNonArrayExpressions = [];\n\t              }\n\t              result = result.callMethod(BuiltinMethod.ConcatArray, [expr]);\n\t          }\n\t          else {\n\t              lastNonArrayExpressions.push(expr);\n\t          }\n\t      }\n\t      if (lastNonArrayExpressions.length > 0) {\n\t          result =\n\t              result.callMethod(BuiltinMethod.ConcatArray, [literalArr(lastNonArrayExpressions)]);\n\t      }\n\t      return result;\n\t  }\n\t\n\t  var ViewQueryValues = (function () {\n\t      function ViewQueryValues(view, values) {\n\t          this.view = view;\n\t          this.values = values;\n\t      }\n\t      return ViewQueryValues;\n\t  }());\n\t  var CompileQuery = (function () {\n\t      function CompileQuery(meta, queryList, ownerDirectiveExpression, view) {\n\t          this.meta = meta;\n\t          this.queryList = queryList;\n\t          this.ownerDirectiveExpression = ownerDirectiveExpression;\n\t          this.view = view;\n\t          this._values = new ViewQueryValues(view, []);\n\t      }\n\t      CompileQuery.prototype.addValue = function (value, view) {\n\t          var currentView = view;\n\t          var elPath = [];\n\t          while (isPresent(currentView) && currentView !== this.view) {\n\t              var parentEl = currentView.declarationElement;\n\t              elPath.unshift(parentEl);\n\t              currentView = parentEl.view;\n\t          }\n\t          var queryListForDirtyExpr = getPropertyInView(this.queryList, view, this.view);\n\t          var viewValues = this._values;\n\t          elPath.forEach(function (el) {\n\t              var last = viewValues.values.length > 0 ? viewValues.values[viewValues.values.length - 1] : null;\n\t              if (last instanceof ViewQueryValues && last.view === el.embeddedView) {\n\t                  viewValues = last;\n\t              }\n\t              else {\n\t                  var newViewValues = new ViewQueryValues(el.embeddedView, []);\n\t                  viewValues.values.push(newViewValues);\n\t                  viewValues = newViewValues;\n\t              }\n\t          });\n\t          viewValues.values.push(value);\n\t          if (elPath.length > 0) {\n\t              view.dirtyParentQueriesMethod.addStmt(queryListForDirtyExpr.callMethod('setDirty', []).toStmt());\n\t          }\n\t      };\n\t      CompileQuery.prototype._isStatic = function () {\n\t          return !this._values.values.some(function (value) { return value instanceof ViewQueryValues; });\n\t      };\n\t      CompileQuery.prototype.afterChildren = function (targetStaticMethod, targetDynamicMethod) {\n\t          var values = createQueryValues(this._values);\n\t          var updateStmts = [this.queryList.callMethod('reset', [literalArr(values)]).toStmt()];\n\t          if (isPresent(this.ownerDirectiveExpression)) {\n\t              var valueExpr = this.meta.first ? this.queryList.prop('first') : this.queryList;\n\t              updateStmts.push(this.ownerDirectiveExpression.prop(this.meta.propertyName).set(valueExpr).toStmt());\n\t          }\n\t          if (!this.meta.first) {\n\t              updateStmts.push(this.queryList.callMethod('notifyOnChanges', []).toStmt());\n\t          }\n\t          if (this.meta.first && this._isStatic()) {\n\t              // for queries that don't change and the user asked for a single element,\n\t              // set it immediately. That is e.g. needed for querying for ViewContainerRefs, ...\n\t              // we don't do this for QueryLists for now as this would break the timing when\n\t              // we call QueryList listeners...\n\t              targetStaticMethod.addStmts(updateStmts);\n\t          }\n\t          else {\n\t              targetDynamicMethod.addStmt(new IfStmt(this.queryList.prop('dirty'), updateStmts));\n\t          }\n\t      };\n\t      return CompileQuery;\n\t  }());\n\t  function createQueryValues(viewValues) {\n\t      return ListWrapper.flatten(viewValues.values.map(function (entry) {\n\t          if (entry instanceof ViewQueryValues) {\n\t              return mapNestedViews(entry.view.declarationElement.appElement, entry.view, createQueryValues(entry));\n\t          }\n\t          else {\n\t              return entry;\n\t          }\n\t      }));\n\t  }\n\t  function mapNestedViews(declarationAppElement, view, expressions) {\n\t      var adjustedExpressions = expressions.map(function (expr) { return replaceVarInExpression(THIS_EXPR.name, variable('nestedView'), expr); });\n\t      return declarationAppElement.callMethod('mapNestedViews', [\n\t          variable(view.className),\n\t          fn([new FnParam('nestedView', view.classType)], [new ReturnStatement(literalArr(adjustedExpressions))], DYNAMIC_TYPE)\n\t      ]);\n\t  }\n\t  function createQueryList(query, directiveInstance, propertyName, compileView) {\n\t      compileView.fields.push(new ClassField(propertyName, importType(resolveIdentifier(Identifiers.QueryList), [DYNAMIC_TYPE])));\n\t      var expr = THIS_EXPR.prop(propertyName);\n\t      compileView.createMethod.addStmt(THIS_EXPR.prop(propertyName)\n\t          .set(importExpr(resolveIdentifier(Identifiers.QueryList), [DYNAMIC_TYPE])\n\t          .instantiate([]))\n\t          .toStmt());\n\t      return expr;\n\t  }\n\t  function addQueryToTokenMap(map, query) {\n\t      query.meta.selectors.forEach(function (selector) {\n\t          var entry = map.get(selector.reference);\n\t          if (!entry) {\n\t              entry = [];\n\t              map.set(selector.reference, entry);\n\t          }\n\t          entry.push(query);\n\t      });\n\t  }\n\t\n\t  var ViewTypeEnum = (function () {\n\t      function ViewTypeEnum() {\n\t      }\n\t      ViewTypeEnum.fromValue = function (value) {\n\t          return createEnumExpression(Identifiers.ViewType, value);\n\t      };\n\t      return ViewTypeEnum;\n\t  }());\n\t  var ViewEncapsulationEnum = (function () {\n\t      function ViewEncapsulationEnum() {\n\t      }\n\t      ViewEncapsulationEnum.fromValue = function (value) {\n\t          return createEnumExpression(Identifiers.ViewEncapsulation, value);\n\t      };\n\t      return ViewEncapsulationEnum;\n\t  }());\n\t  var ChangeDetectorStatusEnum = (function () {\n\t      function ChangeDetectorStatusEnum() {\n\t      }\n\t      ChangeDetectorStatusEnum.fromValue = function (value) {\n\t          return createEnumExpression(Identifiers.ChangeDetectorStatus, value);\n\t      };\n\t      return ChangeDetectorStatusEnum;\n\t  }());\n\t  var ViewConstructorVars = (function () {\n\t      function ViewConstructorVars() {\n\t      }\n\t      ViewConstructorVars.viewUtils = variable('viewUtils');\n\t      ViewConstructorVars.parentInjector = variable('parentInjector');\n\t      ViewConstructorVars.declarationEl = variable('declarationEl');\n\t      return ViewConstructorVars;\n\t  }());\n\t  var ViewProperties = (function () {\n\t      function ViewProperties() {\n\t      }\n\t      ViewProperties.renderer = THIS_EXPR.prop('renderer');\n\t      ViewProperties.projectableNodes = THIS_EXPR.prop('projectableNodes');\n\t      ViewProperties.viewUtils = THIS_EXPR.prop('viewUtils');\n\t      return ViewProperties;\n\t  }());\n\t  var InjectMethodVars = (function () {\n\t      function InjectMethodVars() {\n\t      }\n\t      InjectMethodVars.token = variable('token');\n\t      InjectMethodVars.requestNodeIndex = variable('requestNodeIndex');\n\t      InjectMethodVars.notFoundResult = variable('notFoundResult');\n\t      return InjectMethodVars;\n\t  }());\n\t  var DetectChangesVars = (function () {\n\t      function DetectChangesVars() {\n\t      }\n\t      DetectChangesVars.throwOnChange = variable(\"throwOnChange\");\n\t      DetectChangesVars.changes = variable(\"changes\");\n\t      DetectChangesVars.changed = variable(\"changed\");\n\t      return DetectChangesVars;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var ViewFactoryDependency = (function () {\n\t      function ViewFactoryDependency(comp, placeholder) {\n\t          this.comp = comp;\n\t          this.placeholder = placeholder;\n\t      }\n\t      return ViewFactoryDependency;\n\t  }());\n\t  var ComponentFactoryDependency = (function () {\n\t      function ComponentFactoryDependency(comp, placeholder) {\n\t          this.comp = comp;\n\t          this.placeholder = placeholder;\n\t      }\n\t      return ComponentFactoryDependency;\n\t  }());\n\t  var DirectiveWrapperDependency = (function () {\n\t      function DirectiveWrapperDependency(dir, placeholder) {\n\t          this.dir = dir;\n\t          this.placeholder = placeholder;\n\t      }\n\t      return DirectiveWrapperDependency;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$15 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var CompileNode = (function () {\n\t      function CompileNode(parent, view, nodeIndex, renderNode, sourceAst) {\n\t          this.parent = parent;\n\t          this.view = view;\n\t          this.nodeIndex = nodeIndex;\n\t          this.renderNode = renderNode;\n\t          this.sourceAst = sourceAst;\n\t      }\n\t      CompileNode.prototype.isNull = function () { return !this.renderNode; };\n\t      CompileNode.prototype.isRootElement = function () { return this.view != this.parent.view; };\n\t      return CompileNode;\n\t  }());\n\t  var CompileElement = (function (_super) {\n\t      __extends$15(CompileElement, _super);\n\t      function CompileElement(parent, view, nodeIndex, renderNode, sourceAst, component, _directives, _resolvedProvidersArray, hasViewContainer, hasEmbeddedView, references, _targetDependencies) {\n\t          var _this = this;\n\t          _super.call(this, parent, view, nodeIndex, renderNode, sourceAst);\n\t          this.component = component;\n\t          this._directives = _directives;\n\t          this._resolvedProvidersArray = _resolvedProvidersArray;\n\t          this.hasViewContainer = hasViewContainer;\n\t          this.hasEmbeddedView = hasEmbeddedView;\n\t          this._targetDependencies = _targetDependencies;\n\t          this._compViewExpr = null;\n\t          this.instances = new Map();\n\t          this.directiveWrapperInstance = new Map();\n\t          this._queryCount = 0;\n\t          this._queries = new Map();\n\t          this._componentConstructorViewQueryLists = [];\n\t          this.contentNodesByNgContentIndex = null;\n\t          this.referenceTokens = {};\n\t          references.forEach(function (ref) { return _this.referenceTokens[ref.name] = ref.value; });\n\t          this.elementRef =\n\t              importExpr(resolveIdentifier(Identifiers.ElementRef)).instantiate([this.renderNode]);\n\t          this.instances.set(resolveIdentifierToken(Identifiers.ElementRef).reference, this.elementRef);\n\t          this.injector = THIS_EXPR.callMethod('injector', [literal(this.nodeIndex)]);\n\t          this.instances.set(resolveIdentifierToken(Identifiers.Injector).reference, this.injector);\n\t          this.instances.set(resolveIdentifierToken(Identifiers.Renderer).reference, THIS_EXPR.prop('renderer'));\n\t          if (this.hasViewContainer || this.hasEmbeddedView || isPresent(this.component)) {\n\t              this._createAppElement();\n\t          }\n\t          if (this.component) {\n\t              this._createComponentFactoryResolver();\n\t          }\n\t      }\n\t      CompileElement.createNull = function () {\n\t          return new CompileElement(null, null, null, null, null, null, [], [], false, false, [], []);\n\t      };\n\t      CompileElement.prototype._createAppElement = function () {\n\t          var fieldName = \"_appEl_\" + this.nodeIndex;\n\t          var parentNodeIndex = this.isRootElement() ? null : this.parent.nodeIndex;\n\t          // private is fine here as no child view will reference an AppElement\n\t          this.view.fields.push(new ClassField(fieldName, importType(resolveIdentifier(Identifiers.AppElement)), [StmtModifier.Private]));\n\t          var statement = THIS_EXPR.prop(fieldName)\n\t              .set(importExpr(resolveIdentifier(Identifiers.AppElement)).instantiate([\n\t              literal(this.nodeIndex), literal(parentNodeIndex), THIS_EXPR, this.renderNode\n\t          ]))\n\t              .toStmt();\n\t          this.view.createMethod.addStmt(statement);\n\t          this.appElement = THIS_EXPR.prop(fieldName);\n\t          this.instances.set(resolveIdentifierToken(Identifiers.AppElement).reference, this.appElement);\n\t      };\n\t      CompileElement.prototype._createComponentFactoryResolver = function () {\n\t          var _this = this;\n\t          var entryComponents = this.component.entryComponents.map(function (entryComponent) {\n\t              var id = new CompileIdentifierMetadata({ name: entryComponent.name });\n\t              _this._targetDependencies.push(new ComponentFactoryDependency(entryComponent, id));\n\t              return id;\n\t          });\n\t          if (!entryComponents || entryComponents.length === 0) {\n\t              return;\n\t          }\n\t          var createComponentFactoryResolverExpr = importExpr(resolveIdentifier(Identifiers.CodegenComponentFactoryResolver)).instantiate([\n\t              literalArr(entryComponents.map(function (entryComponent) { return importExpr(entryComponent); })),\n\t              injectFromViewParentInjector(resolveIdentifierToken(Identifiers.ComponentFactoryResolver), false)\n\t          ]);\n\t          var provider = new CompileProviderMetadata({\n\t              token: resolveIdentifierToken(Identifiers.ComponentFactoryResolver),\n\t              useValue: createComponentFactoryResolverExpr\n\t          });\n\t          // Add ComponentFactoryResolver as first provider as it does not have deps on other providers\n\t          // ProviderAstType.PrivateService as only the component and its view can see it,\n\t          // but nobody else\n\t          this._resolvedProvidersArray.unshift(new ProviderAst(provider.token, false, true, [provider], exports.ProviderAstType.PrivateService, [], this.sourceAst.sourceSpan));\n\t      };\n\t      CompileElement.prototype.setComponentView = function (compViewExpr) {\n\t          this._compViewExpr = compViewExpr;\n\t          this.contentNodesByNgContentIndex =\n\t              new Array(this.component.template.ngContentSelectors.length);\n\t          for (var i = 0; i < this.contentNodesByNgContentIndex.length; i++) {\n\t              this.contentNodesByNgContentIndex[i] = [];\n\t          }\n\t      };\n\t      CompileElement.prototype.setEmbeddedView = function (embeddedView) {\n\t          this.embeddedView = embeddedView;\n\t          if (isPresent(embeddedView)) {\n\t              var createTemplateRefExpr = importExpr(resolveIdentifier(Identifiers.TemplateRef_)).instantiate([\n\t                  this.appElement, this.embeddedView.viewFactory\n\t              ]);\n\t              var provider = new CompileProviderMetadata({\n\t                  token: resolveIdentifierToken(Identifiers.TemplateRef),\n\t                  useValue: createTemplateRefExpr\n\t              });\n\t              // Add TemplateRef as first provider as it does not have deps on other providers\n\t              this._resolvedProvidersArray.unshift(new ProviderAst(provider.token, false, true, [provider], exports.ProviderAstType.Builtin, [], this.sourceAst.sourceSpan));\n\t          }\n\t      };\n\t      CompileElement.prototype.beforeChildren = function () {\n\t          var _this = this;\n\t          if (this.hasViewContainer) {\n\t              this.instances.set(resolveIdentifierToken(Identifiers.ViewContainerRef).reference, this.appElement.prop('vcRef'));\n\t          }\n\t          this._resolvedProviders = new Map();\n\t          this._resolvedProvidersArray.forEach(function (provider) { return _this._resolvedProviders.set(provider.token.reference, provider); });\n\t          // create all the provider instances, some in the view constructor,\n\t          // some as getters. We rely on the fact that they are already sorted topologically.\n\t          MapWrapper.values(this._resolvedProviders).forEach(function (resolvedProvider) {\n\t              var isDirectiveWrapper = resolvedProvider.providerType === exports.ProviderAstType.Component ||\n\t                  resolvedProvider.providerType === exports.ProviderAstType.Directive;\n\t              var providerValueExpressions = resolvedProvider.providers.map(function (provider) {\n\t                  if (isPresent(provider.useExisting)) {\n\t                      return _this._getDependency(resolvedProvider.providerType, new CompileDiDependencyMetadata({ token: provider.useExisting }));\n\t                  }\n\t                  else if (isPresent(provider.useFactory)) {\n\t                      var deps = provider.deps || provider.useFactory.diDeps;\n\t                      var depsExpr = deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep); });\n\t                      return importExpr(provider.useFactory).callFn(depsExpr);\n\t                  }\n\t                  else if (isPresent(provider.useClass)) {\n\t                      var deps = provider.deps || provider.useClass.diDeps;\n\t                      var depsExpr = deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep); });\n\t                      if (isDirectiveWrapper) {\n\t                          var directiveWrapperIdentifier = new CompileIdentifierMetadata({ name: DirectiveWrapperCompiler.dirWrapperClassName(provider.useClass) });\n\t                          _this._targetDependencies.push(new DirectiveWrapperDependency(provider.useClass, directiveWrapperIdentifier));\n\t                          return importExpr(directiveWrapperIdentifier)\n\t                              .instantiate(depsExpr, importType(directiveWrapperIdentifier));\n\t                      }\n\t                      else {\n\t                          return importExpr(provider.useClass)\n\t                              .instantiate(depsExpr, importType(provider.useClass));\n\t                      }\n\t                  }\n\t                  else {\n\t                      return convertValueToOutputAst(provider.useValue);\n\t                  }\n\t              });\n\t              var propName = \"_\" + resolvedProvider.token.name + \"_\" + _this.nodeIndex + \"_\" + _this.instances.size;\n\t              var instance = createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager, _this);\n\t              if (isDirectiveWrapper) {\n\t                  _this.directiveWrapperInstance.set(resolvedProvider.token.reference, instance);\n\t                  _this.instances.set(resolvedProvider.token.reference, instance.prop('context'));\n\t              }\n\t              else {\n\t                  _this.instances.set(resolvedProvider.token.reference, instance);\n\t              }\n\t          });\n\t          for (var i = 0; i < this._directives.length; i++) {\n\t              var directive = this._directives[i];\n\t              var directiveInstance = this.instances.get(identifierToken(directive.type).reference);\n\t              directive.queries.forEach(function (queryMeta) { _this._addQuery(queryMeta, directiveInstance); });\n\t          }\n\t          var queriesWithReads = [];\n\t          MapWrapper.values(this._resolvedProviders).forEach(function (resolvedProvider) {\n\t              var queriesForProvider = _this._getQueriesFor(resolvedProvider.token);\n\t              queriesWithReads.push.apply(queriesWithReads, queriesForProvider.map(function (query) { return new _QueryWithRead(query, resolvedProvider.token); }));\n\t          });\n\t          Object.keys(this.referenceTokens).forEach(function (varName) {\n\t              var token = _this.referenceTokens[varName];\n\t              var varValue;\n\t              if (isPresent(token)) {\n\t                  varValue = _this.instances.get(token.reference);\n\t              }\n\t              else {\n\t                  varValue = _this.renderNode;\n\t              }\n\t              _this.view.locals.set(varName, varValue);\n\t              var varToken = new CompileTokenMetadata({ value: varName });\n\t              queriesWithReads.push.apply(queriesWithReads, _this._getQueriesFor(varToken).map(function (query) { return new _QueryWithRead(query, varToken); }));\n\t          });\n\t          queriesWithReads.forEach(function (queryWithRead) {\n\t              var value;\n\t              if (isPresent(queryWithRead.read.identifier)) {\n\t                  // query for an identifier\n\t                  value = _this.instances.get(queryWithRead.read.reference);\n\t              }\n\t              else {\n\t                  // query for a reference\n\t                  var token = _this.referenceTokens[queryWithRead.read.value];\n\t                  if (isPresent(token)) {\n\t                      value = _this.instances.get(token.reference);\n\t                  }\n\t                  else {\n\t                      value = _this.elementRef;\n\t                  }\n\t              }\n\t              if (isPresent(value)) {\n\t                  queryWithRead.query.addValue(value, _this.view);\n\t              }\n\t          });\n\t          if (isPresent(this.component)) {\n\t              var componentConstructorViewQueryList = isPresent(this.component) ?\n\t                  literalArr(this._componentConstructorViewQueryLists) :\n\t                  NULL_EXPR;\n\t              var compExpr = isPresent(this.getComponent()) ? this.getComponent() : NULL_EXPR;\n\t              this.view.createMethod.addStmt(this.appElement\n\t                  .callMethod('initComponent', [compExpr, componentConstructorViewQueryList, this._compViewExpr])\n\t                  .toStmt());\n\t          }\n\t      };\n\t      CompileElement.prototype.afterChildren = function (childNodeCount) {\n\t          var _this = this;\n\t          MapWrapper.values(this._resolvedProviders).forEach(function (resolvedProvider) {\n\t              // Note: afterChildren is called after recursing into children.\n\t              // This is good so that an injector match in an element that is closer to a requesting element\n\t              // matches first.\n\t              var providerExpr = _this.instances.get(resolvedProvider.token.reference);\n\t              // Note: view providers are only visible on the injector of that element.\n\t              // This is not fully correct as the rules during codegen don't allow a directive\n\t              // to get hold of a view provdier on the same element. We still do this semantic\n\t              // as it simplifies our model to having only one runtime injector per element.\n\t              var providerChildNodeCount = resolvedProvider.providerType === exports.ProviderAstType.PrivateService ? 0 : childNodeCount;\n\t              _this.view.injectorGetMethod.addStmt(createInjectInternalCondition(_this.nodeIndex, providerChildNodeCount, resolvedProvider, providerExpr));\n\t          });\n\t          MapWrapper.values(this._queries)\n\t              .forEach(function (queries) { return queries.forEach(function (query) { return query.afterChildren(_this.view.createMethod, _this.view.updateContentQueriesMethod); }); });\n\t      };\n\t      CompileElement.prototype.addContentNode = function (ngContentIndex, nodeExpr) {\n\t          this.contentNodesByNgContentIndex[ngContentIndex].push(nodeExpr);\n\t      };\n\t      CompileElement.prototype.getComponent = function () {\n\t          return isPresent(this.component) ?\n\t              this.instances.get(identifierToken(this.component.type).reference) :\n\t              null;\n\t      };\n\t      CompileElement.prototype.getProviderTokens = function () {\n\t          return MapWrapper.values(this._resolvedProviders)\n\t              .map(function (resolvedProvider) { return createDiTokenExpression(resolvedProvider.token); });\n\t      };\n\t      CompileElement.prototype._getQueriesFor = function (token) {\n\t          var result = [];\n\t          var currentEl = this;\n\t          var distance = 0;\n\t          var queries;\n\t          while (!currentEl.isNull()) {\n\t              queries = currentEl._queries.get(token.reference);\n\t              if (isPresent(queries)) {\n\t                  result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n\t              }\n\t              if (currentEl._directives.length > 0) {\n\t                  distance++;\n\t              }\n\t              currentEl = currentEl.parent;\n\t          }\n\t          queries = this.view.componentView.viewQueries.get(token.reference);\n\t          if (isPresent(queries)) {\n\t              result.push.apply(result, queries);\n\t          }\n\t          return result;\n\t      };\n\t      CompileElement.prototype._addQuery = function (queryMeta, directiveInstance) {\n\t          var propName = \"_query_\" + queryMeta.selectors[0].name + \"_\" + this.nodeIndex + \"_\" + this._queryCount++;\n\t          var queryList = createQueryList(queryMeta, directiveInstance, propName, this.view);\n\t          var query = new CompileQuery(queryMeta, queryList, directiveInstance, this.view);\n\t          addQueryToTokenMap(this._queries, query);\n\t          return query;\n\t      };\n\t      CompileElement.prototype._getLocalDependency = function (requestingProviderType, dep) {\n\t          var result = null;\n\t          // constructor content query\n\t          if (!result && isPresent(dep.query)) {\n\t              result = this._addQuery(dep.query, null).queryList;\n\t          }\n\t          // constructor view query\n\t          if (!result && isPresent(dep.viewQuery)) {\n\t              result = createQueryList(dep.viewQuery, null, \"_viewQuery_\" + dep.viewQuery.selectors[0].name + \"_\" + this.nodeIndex + \"_\" + this._componentConstructorViewQueryLists.length, this.view);\n\t              this._componentConstructorViewQueryLists.push(result);\n\t          }\n\t          if (isPresent(dep.token)) {\n\t              // access builtins with special visibility\n\t              if (!result) {\n\t                  if (dep.token.reference ===\n\t                      resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference) {\n\t                      if (requestingProviderType === exports.ProviderAstType.Component) {\n\t                          return this._compViewExpr.prop('ref');\n\t                      }\n\t                      else {\n\t                          return getPropertyInView(THIS_EXPR.prop('ref'), this.view, this.view.componentView);\n\t                      }\n\t                  }\n\t              }\n\t              // access regular providers on the element\n\t              if (!result) {\n\t                  var resolvedProvider = this._resolvedProviders.get(dep.token.reference);\n\t                  // don't allow directives / public services to access private services.\n\t                  // only components and private services can access private services.\n\t                  if (resolvedProvider && (requestingProviderType === exports.ProviderAstType.Directive ||\n\t                      requestingProviderType === exports.ProviderAstType.PublicService) &&\n\t                      resolvedProvider.providerType === exports.ProviderAstType.PrivateService) {\n\t                      return null;\n\t                  }\n\t                  result = this.instances.get(dep.token.reference);\n\t              }\n\t          }\n\t          return result;\n\t      };\n\t      CompileElement.prototype._getDependency = function (requestingProviderType, dep) {\n\t          var currElement = this;\n\t          var result = null;\n\t          if (dep.isValue) {\n\t              result = literal(dep.value);\n\t          }\n\t          if (!result && !dep.isSkipSelf) {\n\t              result = this._getLocalDependency(requestingProviderType, dep);\n\t          }\n\t          // check parent elements\n\t          while (!result && !currElement.parent.isNull()) {\n\t              currElement = currElement.parent;\n\t              result = currElement._getLocalDependency(exports.ProviderAstType.PublicService, new CompileDiDependencyMetadata({ token: dep.token }));\n\t          }\n\t          if (!result) {\n\t              result = injectFromViewParentInjector(dep.token, dep.isOptional);\n\t          }\n\t          if (!result) {\n\t              result = NULL_EXPR;\n\t          }\n\t          return getPropertyInView(result, this.view, currElement.view);\n\t      };\n\t      return CompileElement;\n\t  }(CompileNode));\n\t  function createInjectInternalCondition(nodeIndex, childNodeCount, provider, providerExpr) {\n\t      var indexCondition;\n\t      if (childNodeCount > 0) {\n\t          indexCondition = literal(nodeIndex)\n\t              .lowerEquals(InjectMethodVars.requestNodeIndex)\n\t              .and(InjectMethodVars.requestNodeIndex.lowerEquals(literal(nodeIndex + childNodeCount)));\n\t      }\n\t      else {\n\t          indexCondition = literal(nodeIndex).identical(InjectMethodVars.requestNodeIndex);\n\t      }\n\t      return new IfStmt(InjectMethodVars.token.identical(createDiTokenExpression(provider.token)).and(indexCondition), [new ReturnStatement(providerExpr)]);\n\t  }\n\t  function createProviderProperty(propName, provider, providerValueExpressions, isMulti, isEager, compileElement) {\n\t      var view = compileElement.view;\n\t      var resolvedProviderValueExpr;\n\t      var type;\n\t      if (isMulti) {\n\t          resolvedProviderValueExpr = literalArr(providerValueExpressions);\n\t          type = new ArrayType(DYNAMIC_TYPE);\n\t      }\n\t      else {\n\t          resolvedProviderValueExpr = providerValueExpressions[0];\n\t          type = providerValueExpressions[0].type;\n\t      }\n\t      if (!type) {\n\t          type = DYNAMIC_TYPE;\n\t      }\n\t      if (isEager) {\n\t          view.fields.push(new ClassField(propName, type));\n\t          view.createMethod.addStmt(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n\t      }\n\t      else {\n\t          var internalField = \"_\" + propName;\n\t          view.fields.push(new ClassField(internalField, type));\n\t          var getter = new CompileMethod(view);\n\t          getter.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\t          // Note: Equals is important for JS so that it also checks the undefined case!\n\t          getter.addStmt(new IfStmt(THIS_EXPR.prop(internalField).isBlank(), [THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]));\n\t          getter.addStmt(new ReturnStatement(THIS_EXPR.prop(internalField)));\n\t          view.getters.push(new ClassGetter(propName, getter.finish(), type));\n\t      }\n\t      return THIS_EXPR.prop(propName);\n\t  }\n\t  var _QueryWithRead = (function () {\n\t      function _QueryWithRead(query, match) {\n\t          this.query = query;\n\t          this.read = query.meta.read || match;\n\t      }\n\t      return _QueryWithRead;\n\t  }());\n\t\n\t  var CompilePipe = (function () {\n\t      function CompilePipe(view, meta) {\n\t          var _this = this;\n\t          this.view = view;\n\t          this.meta = meta;\n\t          this._purePipeProxyCount = 0;\n\t          this.instance = THIS_EXPR.prop(\"_pipe_\" + meta.name + \"_\" + view.pipeCount++);\n\t          var deps = this.meta.type.diDeps.map(function (diDep) {\n\t              if (diDep.token.reference ===\n\t                  resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference) {\n\t                  return getPropertyInView(THIS_EXPR.prop('ref'), _this.view, _this.view.componentView);\n\t              }\n\t              return injectFromViewParentInjector(diDep.token, false);\n\t          });\n\t          this.view.fields.push(new ClassField(this.instance.name, importType(this.meta.type)));\n\t          this.view.createMethod.resetDebugInfo(null, null);\n\t          this.view.createMethod.addStmt(THIS_EXPR.prop(this.instance.name)\n\t              .set(importExpr(this.meta.type).instantiate(deps))\n\t              .toStmt());\n\t      }\n\t      CompilePipe.call = function (view, name, args) {\n\t          var compView = view.componentView;\n\t          var meta = _findPipeMeta(compView, name);\n\t          var pipe;\n\t          if (meta.pure) {\n\t              // pure pipes live on the component view\n\t              pipe = compView.purePipes.get(name);\n\t              if (!pipe) {\n\t                  pipe = new CompilePipe(compView, meta);\n\t                  compView.purePipes.set(name, pipe);\n\t                  compView.pipes.push(pipe);\n\t              }\n\t          }\n\t          else {\n\t              // Non pure pipes live on the view that called it\n\t              pipe = new CompilePipe(view, meta);\n\t              view.pipes.push(pipe);\n\t          }\n\t          return pipe._call(view, args);\n\t      };\n\t      Object.defineProperty(CompilePipe.prototype, \"pure\", {\n\t          get: function () { return this.meta.pure; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      CompilePipe.prototype._call = function (callingView, args) {\n\t          if (this.meta.pure) {\n\t              // PurePipeProxies live on the view that called them.\n\t              var purePipeProxyInstance = THIS_EXPR.prop(this.instance.name + \"_\" + this._purePipeProxyCount++);\n\t              var pipeInstanceSeenFromPureProxy = getPropertyInView(this.instance, callingView, this.view);\n\t              createPureProxy(pipeInstanceSeenFromPureProxy.prop('transform')\n\t                  .callMethod(BuiltinMethod.Bind, [pipeInstanceSeenFromPureProxy]), args.length, purePipeProxyInstance, { fields: callingView.fields, ctorStmts: callingView.createMethod });\n\t              return importExpr(resolveIdentifier(Identifiers.castByValue))\n\t                  .callFn([purePipeProxyInstance, pipeInstanceSeenFromPureProxy.prop('transform')])\n\t                  .callFn(args);\n\t          }\n\t          else {\n\t              return getPropertyInView(this.instance, callingView, this.view).callMethod('transform', args);\n\t          }\n\t      };\n\t      return CompilePipe;\n\t  }());\n\t  function _findPipeMeta(view, name) {\n\t      var pipeMeta = null;\n\t      for (var i = view.pipeMetas.length - 1; i >= 0; i--) {\n\t          var localPipeMeta = view.pipeMetas[i];\n\t          if (localPipeMeta.name == name) {\n\t              pipeMeta = localPipeMeta;\n\t              break;\n\t          }\n\t      }\n\t      if (!pipeMeta) {\n\t          throw new Error(\"Illegal state: Could not find pipe \" + name + \" although the parser should have detected this error!\");\n\t      }\n\t      return pipeMeta;\n\t  }\n\t\n\t  var CompileView = (function () {\n\t      function CompileView(component, genConfig, pipeMetas, styles, animations, viewIndex, declarationElement, templateVariableBindings) {\n\t          var _this = this;\n\t          this.component = component;\n\t          this.genConfig = genConfig;\n\t          this.pipeMetas = pipeMetas;\n\t          this.styles = styles;\n\t          this.animations = animations;\n\t          this.viewIndex = viewIndex;\n\t          this.declarationElement = declarationElement;\n\t          this.templateVariableBindings = templateVariableBindings;\n\t          this.nodes = [];\n\t          // root nodes or AppElements for ViewContainers\n\t          this.rootNodesOrAppElements = [];\n\t          this.methods = [];\n\t          this.ctorStmts = [];\n\t          this.fields = [];\n\t          this.getters = [];\n\t          this.disposables = [];\n\t          this.subscriptions = [];\n\t          this.purePipes = new Map();\n\t          this.pipes = [];\n\t          this.locals = new Map();\n\t          this.literalArrayCount = 0;\n\t          this.literalMapCount = 0;\n\t          this.pipeCount = 0;\n\t          this.createMethod = new CompileMethod(this);\n\t          this.animationBindingsMethod = new CompileMethod(this);\n\t          this.injectorGetMethod = new CompileMethod(this);\n\t          this.updateContentQueriesMethod = new CompileMethod(this);\n\t          this.dirtyParentQueriesMethod = new CompileMethod(this);\n\t          this.updateViewQueriesMethod = new CompileMethod(this);\n\t          this.detectChangesInInputsMethod = new CompileMethod(this);\n\t          this.detectChangesRenderPropertiesMethod = new CompileMethod(this);\n\t          this.afterContentLifecycleCallbacksMethod = new CompileMethod(this);\n\t          this.afterViewLifecycleCallbacksMethod = new CompileMethod(this);\n\t          this.destroyMethod = new CompileMethod(this);\n\t          this.detachMethod = new CompileMethod(this);\n\t          this.viewType = getViewType(component, viewIndex);\n\t          this.className = \"_View_\" + component.type.name + viewIndex;\n\t          this.classType = importType(new CompileIdentifierMetadata({ name: this.className }));\n\t          this.viewFactory = variable(getViewFactoryName(component, viewIndex));\n\t          if (this.viewType === ViewType.COMPONENT || this.viewType === ViewType.HOST) {\n\t              this.componentView = this;\n\t          }\n\t          else {\n\t              this.componentView = this.declarationElement.view.componentView;\n\t          }\n\t          this.componentContext =\n\t              getPropertyInView(THIS_EXPR.prop('context'), this, this.componentView);\n\t          var viewQueries = new Map();\n\t          if (this.viewType === ViewType.COMPONENT) {\n\t              var directiveInstance = THIS_EXPR.prop('context');\n\t              this.component.viewQueries.forEach(function (queryMeta, queryIndex) {\n\t                  var propName = \"_viewQuery_\" + queryMeta.selectors[0].name + \"_\" + queryIndex;\n\t                  var queryList = createQueryList(queryMeta, directiveInstance, propName, _this);\n\t                  var query = new CompileQuery(queryMeta, queryList, directiveInstance, _this);\n\t                  addQueryToTokenMap(viewQueries, query);\n\t              });\n\t              var constructorViewQueryCount = 0;\n\t              this.component.type.diDeps.forEach(function (dep) {\n\t                  if (isPresent(dep.viewQuery)) {\n\t                      var queryList = THIS_EXPR.prop('declarationAppElement')\n\t                          .prop('componentConstructorViewQueries')\n\t                          .key(literal(constructorViewQueryCount++));\n\t                      var query = new CompileQuery(dep.viewQuery, queryList, null, _this);\n\t                      addQueryToTokenMap(viewQueries, query);\n\t                  }\n\t              });\n\t          }\n\t          this.viewQueries = viewQueries;\n\t          templateVariableBindings.forEach(function (entry) { _this.locals.set(entry[1], THIS_EXPR.prop('context').prop(entry[0])); });\n\t          if (!this.declarationElement.isNull()) {\n\t              this.declarationElement.setEmbeddedView(this);\n\t          }\n\t      }\n\t      CompileView.prototype.callPipe = function (name, input, args) {\n\t          return CompilePipe.call(this, name, [input].concat(args));\n\t      };\n\t      CompileView.prototype.getLocal = function (name) {\n\t          if (name == EventHandlerVars.event.name) {\n\t              return EventHandlerVars.event;\n\t          }\n\t          var currView = this;\n\t          var result = currView.locals.get(name);\n\t          while (!result && isPresent(currView.declarationElement.view)) {\n\t              currView = currView.declarationElement.view;\n\t              result = currView.locals.get(name);\n\t          }\n\t          if (isPresent(result)) {\n\t              return getPropertyInView(result, this, currView);\n\t          }\n\t          else {\n\t              return null;\n\t          }\n\t      };\n\t      CompileView.prototype.afterNodes = function () {\n\t          var _this = this;\n\t          MapWrapper.values(this.viewQueries)\n\t              .forEach(function (queries) { return queries.forEach(function (query) { return query.afterChildren(_this.createMethod, _this.updateViewQueriesMethod); }); });\n\t      };\n\t      return CompileView;\n\t  }());\n\t  function getViewType(component, embeddedTemplateIndex) {\n\t      if (embeddedTemplateIndex > 0) {\n\t          return ViewType.EMBEDDED;\n\t      }\n\t      else if (component.type.isHost) {\n\t          return ViewType.HOST;\n\t      }\n\t      else {\n\t          return ViewType.COMPONENT;\n\t      }\n\t  }\n\t\n\t  var CompileEventListener = (function () {\n\t      function CompileEventListener(compileElement, eventTarget, eventName, eventPhase, listenerIndex) {\n\t          this.compileElement = compileElement;\n\t          this.eventTarget = eventTarget;\n\t          this.eventName = eventName;\n\t          this.eventPhase = eventPhase;\n\t          this._hasComponentHostListener = false;\n\t          this._actionResultExprs = [];\n\t          this._method = new CompileMethod(compileElement.view);\n\t          this._methodName =\n\t              \"_handle_\" + sanitizeEventName(eventName) + \"_\" + compileElement.nodeIndex + \"_\" + listenerIndex;\n\t          this._eventParam = new FnParam(EventHandlerVars.event.name, importType(this.compileElement.view.genConfig.renderTypes.renderEvent));\n\t      }\n\t      CompileEventListener.getOrCreate = function (compileElement, eventTarget, eventName, eventPhase, targetEventListeners) {\n\t          var listener = targetEventListeners.find(function (listener) { return listener.eventTarget == eventTarget && listener.eventName == eventName &&\n\t              listener.eventPhase == eventPhase; });\n\t          if (!listener) {\n\t              listener = new CompileEventListener(compileElement, eventTarget, eventName, eventPhase, targetEventListeners.length);\n\t              targetEventListeners.push(listener);\n\t          }\n\t          return listener;\n\t      };\n\t      Object.defineProperty(CompileEventListener.prototype, \"methodName\", {\n\t          get: function () { return this._methodName; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(CompileEventListener.prototype, \"isAnimation\", {\n\t          get: function () { return !!this.eventPhase; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      CompileEventListener.prototype.addAction = function (hostEvent, directive, directiveInstance) {\n\t          if (isPresent(directive) && directive.isComponent) {\n\t              this._hasComponentHostListener = true;\n\t          }\n\t          this._method.resetDebugInfo(this.compileElement.nodeIndex, hostEvent);\n\t          var context = directiveInstance || this.compileElement.view.componentContext;\n\t          var view = this.compileElement.view;\n\t          var evalResult = convertActionBinding(view, directive ? null : view, context, hostEvent.handler, this.compileElement.nodeIndex + \"_\" + this._actionResultExprs.length);\n\t          if (evalResult.preventDefault) {\n\t              this._actionResultExprs.push(evalResult.preventDefault);\n\t          }\n\t          this._method.addStmts(evalResult.stmts);\n\t      };\n\t      CompileEventListener.prototype.finishMethod = function () {\n\t          var markPathToRootStart = this._hasComponentHostListener ?\n\t              this.compileElement.appElement.prop('componentView') :\n\t              THIS_EXPR;\n\t          var resultExpr = literal(true);\n\t          this._actionResultExprs.forEach(function (expr) { resultExpr = resultExpr.and(expr); });\n\t          var stmts = [markPathToRootStart.callMethod('markPathToRootAsCheckOnce', []).toStmt()]\n\t              .concat(this._method.finish())\n\t              .concat([new ReturnStatement(resultExpr)]);\n\t          // private is fine here as no child view will reference the event handler...\n\t          this.compileElement.view.methods.push(new ClassMethod(this._methodName, [this._eventParam], stmts, BOOL_TYPE, [StmtModifier.Private]));\n\t      };\n\t      CompileEventListener.prototype.listenToRenderer = function () {\n\t          var listenExpr;\n\t          var eventListener = THIS_EXPR.callMethod('eventHandler', [THIS_EXPR.prop(this._methodName).callMethod(BuiltinMethod.Bind, [THIS_EXPR])]);\n\t          if (isPresent(this.eventTarget)) {\n\t              listenExpr = ViewProperties.renderer.callMethod('listenGlobal', [literal(this.eventTarget), literal(this.eventName), eventListener]);\n\t          }\n\t          else {\n\t              listenExpr = ViewProperties.renderer.callMethod('listen', [this.compileElement.renderNode, literal(this.eventName), eventListener]);\n\t          }\n\t          var disposable = variable(\"disposable_\" + this.compileElement.view.disposables.length);\n\t          this.compileElement.view.disposables.push(disposable);\n\t          // private is fine here as no child view will reference the event handler...\n\t          this.compileElement.view.createMethod.addStmt(disposable.set(listenExpr).toDeclStmt(FUNCTION_TYPE, [StmtModifier.Private]));\n\t      };\n\t      CompileEventListener.prototype.listenToAnimation = function (animationTransitionVar) {\n\t          var callbackMethod = this.eventPhase == 'start' ? 'onStart' : 'onDone';\n\t          return animationTransitionVar\n\t              .callMethod(callbackMethod, [THIS_EXPR.prop(this.methodName).callMethod(BuiltinMethod.Bind, [THIS_EXPR])])\n\t              .toStmt();\n\t      };\n\t      CompileEventListener.prototype.listenToDirective = function (directiveInstance, observablePropName) {\n\t          var subscription = variable(\"subscription_\" + this.compileElement.view.subscriptions.length);\n\t          this.compileElement.view.subscriptions.push(subscription);\n\t          var eventListener = THIS_EXPR.callMethod('eventHandler', [THIS_EXPR.prop(this._methodName).callMethod(BuiltinMethod.Bind, [THIS_EXPR])]);\n\t          this.compileElement.view.createMethod.addStmt(subscription\n\t              .set(directiveInstance.prop(observablePropName)\n\t              .callMethod(BuiltinMethod.SubscribeObservable, [eventListener]))\n\t              .toDeclStmt(null, [StmtModifier.Final]));\n\t      };\n\t      return CompileEventListener;\n\t  }());\n\t  function collectEventListeners(hostEvents, dirs, compileElement) {\n\t      var eventListeners = [];\n\t      hostEvents.forEach(function (hostEvent) {\n\t          var listener = CompileEventListener.getOrCreate(compileElement, hostEvent.target, hostEvent.name, hostEvent.phase, eventListeners);\n\t          listener.addAction(hostEvent, null, null);\n\t      });\n\t      dirs.forEach(function (directiveAst) {\n\t          var directiveInstance = compileElement.instances.get(identifierToken(directiveAst.directive.type).reference);\n\t          directiveAst.hostEvents.forEach(function (hostEvent) {\n\t              var listener = CompileEventListener.getOrCreate(compileElement, hostEvent.target, hostEvent.name, hostEvent.phase, eventListeners);\n\t              listener.addAction(hostEvent, directiveAst.directive, directiveInstance);\n\t          });\n\t      });\n\t      eventListeners.forEach(function (listener) { return listener.finishMethod(); });\n\t      return eventListeners;\n\t  }\n\t  function bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners) {\n\t      Object.keys(directiveAst.directive.outputs).forEach(function (observablePropName) {\n\t          var eventName = directiveAst.directive.outputs[observablePropName];\n\t          eventListeners.filter(function (listener) { return listener.eventName == eventName; }).forEach(function (listener) {\n\t              listener.listenToDirective(directiveInstance, observablePropName);\n\t          });\n\t      });\n\t  }\n\t  function bindRenderOutputs(eventListeners) {\n\t      eventListeners.forEach(function (listener) {\n\t          // the animation listeners are handled within property_binder.ts to\n\t          // allow them to be placed next to the animation factory statements\n\t          if (!listener.isAnimation) {\n\t              listener.listenToRenderer();\n\t          }\n\t      });\n\t  }\n\t  function sanitizeEventName(name) {\n\t      return name.replace(/[^a-zA-Z_]/g, '_');\n\t  }\n\t\n\t  var STATE_IS_NEVER_CHECKED = THIS_EXPR.prop('numberOfChecks').identical(new LiteralExpr(0));\n\t  var NOT_THROW_ON_CHANGES = not(DetectChangesVars.throwOnChange);\n\t  function bindDirectiveAfterContentLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {\n\t      var view = compileElement.view;\n\t      var lifecycleHooks = directiveMeta.type.lifecycleHooks;\n\t      var afterContentLifecycleCallbacksMethod = view.afterContentLifecycleCallbacksMethod;\n\t      afterContentLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\t      if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentInit) !== -1) {\n\t          afterContentLifecycleCallbacksMethod.addStmt(new IfStmt(STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterContentInit', []).toStmt()]));\n\t      }\n\t      if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentChecked) !== -1) {\n\t          afterContentLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterContentChecked', []).toStmt());\n\t      }\n\t  }\n\t  function bindDirectiveAfterViewLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {\n\t      var view = compileElement.view;\n\t      var lifecycleHooks = directiveMeta.type.lifecycleHooks;\n\t      var afterViewLifecycleCallbacksMethod = view.afterViewLifecycleCallbacksMethod;\n\t      afterViewLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\t      if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewInit) !== -1) {\n\t          afterViewLifecycleCallbacksMethod.addStmt(new IfStmt(STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterViewInit', []).toStmt()]));\n\t      }\n\t      if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewChecked) !== -1) {\n\t          afterViewLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterViewChecked', []).toStmt());\n\t      }\n\t  }\n\t  function bindInjectableDestroyLifecycleCallbacks(provider, providerInstance, compileElement) {\n\t      var onDestroyMethod = compileElement.view.destroyMethod;\n\t      onDestroyMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\t      if (provider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n\t          onDestroyMethod.addStmt(providerInstance.callMethod('ngOnDestroy', []).toStmt());\n\t      }\n\t  }\n\t  function bindPipeDestroyLifecycleCallbacks(pipeMeta, pipeInstance, view) {\n\t      var onDestroyMethod = view.destroyMethod;\n\t      if (pipeMeta.type.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n\t          onDestroyMethod.addStmt(pipeInstance.callMethod('ngOnDestroy', []).toStmt());\n\t      }\n\t  }\n\t\n\t  function bindRenderText(boundText, compileNode, view) {\n\t      var valueField = createCheckBindingField(view);\n\t      var evalResult = convertPropertyBinding(view, view, view.componentContext, boundText.value, valueField.bindingId);\n\t      if (!evalResult) {\n\t          return null;\n\t      }\n\t      view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileNode.nodeIndex, boundText);\n\t      view.detectChangesRenderPropertiesMethod.addStmts(createCheckBindingStmt(evalResult, valueField.expression, DetectChangesVars.throwOnChange, [THIS_EXPR.prop('renderer')\n\t              .callMethod('setText', [compileNode.renderNode, evalResult.currValExpr])\n\t              .toStmt()]));\n\t  }\n\t  function bindAndWriteToRenderer(boundProps, context, compileElement, isHostProp, eventListeners) {\n\t      var view = compileElement.view;\n\t      var renderNode = compileElement.renderNode;\n\t      boundProps.forEach(function (boundProp) {\n\t          var bindingField = createCheckBindingField(view);\n\t          view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileElement.nodeIndex, boundProp);\n\t          var evalResult = convertPropertyBinding(view, isHostProp ? null : view, context, boundProp.value, bindingField.bindingId);\n\t          var updateStmts = [];\n\t          var compileMethod = view.detectChangesRenderPropertiesMethod;\n\t          switch (boundProp.type) {\n\t              case exports.PropertyBindingType.Property:\n\t              case exports.PropertyBindingType.Attribute:\n\t              case exports.PropertyBindingType.Class:\n\t              case exports.PropertyBindingType.Style:\n\t                  updateStmts.push.apply(updateStmts, writeToRenderer(THIS_EXPR, boundProp, renderNode, evalResult.currValExpr, view.genConfig.logBindingUpdate));\n\t                  break;\n\t              case exports.PropertyBindingType.Animation:\n\t                  compileMethod = view.animationBindingsMethod;\n\t                  var detachStmts_1 = [];\n\t                  var animationName_1 = boundProp.name;\n\t                  var targetViewExpr = isHostProp ? compileElement.appElement.prop('componentView') : THIS_EXPR;\n\t                  var animationFnExpr = targetViewExpr.prop('componentType').prop('animations').key(literal(animationName_1));\n\t                  // it's important to normalize the void value as `void` explicitly\n\t                  // so that the styles data can be obtained from the stringmap\n\t                  var emptyStateValue = literal(EMPTY_ANIMATION_STATE);\n\t                  var unitializedValue = importExpr(resolveIdentifier(Identifiers.UNINITIALIZED));\n\t                  var animationTransitionVar_1 = variable('animationTransition_' + animationName_1);\n\t                  updateStmts.push(animationTransitionVar_1\n\t                      .set(animationFnExpr.callFn([\n\t                      THIS_EXPR, renderNode,\n\t                      bindingField.expression.equals(unitializedValue)\n\t                          .conditional(emptyStateValue, bindingField.expression),\n\t                      evalResult.currValExpr.equals(unitializedValue)\n\t                          .conditional(emptyStateValue, evalResult.currValExpr)\n\t                  ]))\n\t                      .toDeclStmt());\n\t                  detachStmts_1.push(animationTransitionVar_1\n\t                      .set(animationFnExpr.callFn([THIS_EXPR, renderNode, bindingField.expression, emptyStateValue]))\n\t                      .toDeclStmt());\n\t                  eventListeners.forEach(function (listener) {\n\t                      if (listener.isAnimation && listener.eventName === animationName_1) {\n\t                          var animationStmt = listener.listenToAnimation(animationTransitionVar_1);\n\t                          updateStmts.push(animationStmt);\n\t                          detachStmts_1.push(animationStmt);\n\t                      }\n\t                  });\n\t                  view.detachMethod.addStmts(detachStmts_1);\n\t                  break;\n\t          }\n\t          compileMethod.addStmts(createCheckBindingStmt(evalResult, bindingField.expression, DetectChangesVars.throwOnChange, updateStmts));\n\t      });\n\t  }\n\t  function bindRenderInputs(boundProps, compileElement, eventListeners) {\n\t      bindAndWriteToRenderer(boundProps, compileElement.view.componentContext, compileElement, false, eventListeners);\n\t  }\n\t  function bindDirectiveHostProps(directiveAst, directiveWrapperInstance, compileElement, eventListeners, elementName, schemaRegistry) {\n\t      // host properties are change detected by the DirectiveWrappers,\n\t      // except for the animation properties as they need close integration with animation events\n\t      // and DirectiveWrappers don't support\n\t      // event listeners right now.\n\t      bindAndWriteToRenderer(directiveAst.hostProperties.filter(function (boundProp) { return boundProp.isAnimation; }), directiveWrapperInstance.prop('context'), compileElement, true, eventListeners);\n\t      var methodArgs = [THIS_EXPR, compileElement.renderNode, DetectChangesVars.throwOnChange];\n\t      // We need to provide the SecurityContext for properties that could need sanitization.\n\t      directiveAst.hostProperties.filter(function (boundProp) { return boundProp.needsRuntimeSecurityContext; })\n\t          .forEach(function (boundProp) {\n\t          var ctx;\n\t          switch (boundProp.type) {\n\t              case exports.PropertyBindingType.Property:\n\t                  ctx = schemaRegistry.securityContext(elementName, boundProp.name, false);\n\t                  break;\n\t              case exports.PropertyBindingType.Attribute:\n\t                  ctx = schemaRegistry.securityContext(elementName, boundProp.name, true);\n\t                  break;\n\t              default:\n\t                  throw new Error(\"Illegal state: Only property / attribute bindings can have an unknown security context! Binding \" + boundProp.name);\n\t          }\n\t          methodArgs.push(createEnumExpression(Identifiers.SecurityContext, ctx));\n\t      });\n\t      compileElement.view.detectChangesRenderPropertiesMethod.addStmt(directiveWrapperInstance.callMethod('detectChangesInHostProps', methodArgs).toStmt());\n\t  }\n\t  function bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement) {\n\t      var view = compileElement.view;\n\t      var detectChangesInInputsMethod = view.detectChangesInInputsMethod;\n\t      detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\t      directiveAst.inputs.forEach(function (input, inputIdx) {\n\t          // Note: We can't use `fields.length` here, as we are not adding a field!\n\t          var bindingId = compileElement.nodeIndex + \"_\" + dirIndex + \"_\" + inputIdx;\n\t          detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, input);\n\t          var evalResult = convertPropertyBinding(view, view, view.componentContext, input.value, bindingId);\n\t          if (!evalResult) {\n\t              return;\n\t          }\n\t          detectChangesInInputsMethod.addStmts(evalResult.stmts);\n\t          detectChangesInInputsMethod.addStmt(directiveWrapperInstance\n\t              .callMethod(\"check_\" + input.directiveName, [\n\t              evalResult.currValExpr, DetectChangesVars.throwOnChange,\n\t              evalResult.forceUpdate || literal(false)\n\t          ])\n\t              .toStmt());\n\t      });\n\t      var isOnPushComp = directiveAst.directive.isComponent &&\n\t          !isDefaultChangeDetectionStrategy(directiveAst.directive.changeDetection);\n\t      var directiveDetectChangesExpr = directiveWrapperInstance.callMethod('detectChangesInInputProps', [THIS_EXPR, compileElement.renderNode, DetectChangesVars.throwOnChange]);\n\t      var directiveDetectChangesStmt = isOnPushComp ?\n\t          new IfStmt(directiveDetectChangesExpr, [compileElement.appElement.prop('componentView')\n\t                  .callMethod('markAsCheckOnce', [])\n\t                  .toStmt()]) :\n\t          directiveDetectChangesExpr.toStmt();\n\t      detectChangesInInputsMethod.addStmt(directiveDetectChangesStmt);\n\t  }\n\t\n\t  function bindView(view, parsedTemplate, schemaRegistry) {\n\t      var visitor = new ViewBinderVisitor(view, schemaRegistry);\n\t      templateVisitAll(visitor, parsedTemplate);\n\t      view.pipes.forEach(function (pipe) { bindPipeDestroyLifecycleCallbacks(pipe.meta, pipe.instance, pipe.view); });\n\t  }\n\t  var ViewBinderVisitor = (function () {\n\t      function ViewBinderVisitor(view, _schemaRegistry) {\n\t          this.view = view;\n\t          this._schemaRegistry = _schemaRegistry;\n\t          this._nodeIndex = 0;\n\t      }\n\t      ViewBinderVisitor.prototype.visitBoundText = function (ast, parent) {\n\t          var node = this.view.nodes[this._nodeIndex++];\n\t          bindRenderText(ast, node, this.view);\n\t          return null;\n\t      };\n\t      ViewBinderVisitor.prototype.visitText = function (ast, parent) {\n\t          this._nodeIndex++;\n\t          return null;\n\t      };\n\t      ViewBinderVisitor.prototype.visitNgContent = function (ast, parent) { return null; };\n\t      ViewBinderVisitor.prototype.visitElement = function (ast, parent) {\n\t          var _this = this;\n\t          var compileElement = this.view.nodes[this._nodeIndex++];\n\t          var eventListeners = [];\n\t          collectEventListeners(ast.outputs, ast.directives, compileElement).forEach(function (entry) {\n\t              eventListeners.push(entry);\n\t          });\n\t          bindRenderInputs(ast.inputs, compileElement, eventListeners);\n\t          bindRenderOutputs(eventListeners);\n\t          ast.directives.forEach(function (directiveAst, dirIndex) {\n\t              var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n\t              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n\t              bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement);\n\t              bindDirectiveHostProps(directiveAst, directiveWrapperInstance, compileElement, eventListeners, ast.name, _this._schemaRegistry);\n\t              bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners);\n\t          });\n\t          templateVisitAll(this, ast.children, compileElement);\n\t          // afterContent and afterView lifecycles need to be called bottom up\n\t          // so that children are notified before parents\n\t          ast.directives.forEach(function (directiveAst) {\n\t              var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n\t              bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n\t              bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n\t          });\n\t          ast.providers.forEach(function (providerAst) {\n\t              var providerInstance = compileElement.instances.get(providerAst.token.reference);\n\t              bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n\t          });\n\t          return null;\n\t      };\n\t      ViewBinderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {\n\t          var compileElement = this.view.nodes[this._nodeIndex++];\n\t          var eventListeners = collectEventListeners(ast.outputs, ast.directives, compileElement);\n\t          ast.directives.forEach(function (directiveAst, dirIndex) {\n\t              var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n\t              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n\t              bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement);\n\t              bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners);\n\t              bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n\t              bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n\t          });\n\t          ast.providers.forEach(function (providerAst) {\n\t              var providerInstance = compileElement.instances.get(providerAst.token.reference);\n\t              bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n\t          });\n\t          bindView(compileElement.embeddedView, ast.children, this._schemaRegistry);\n\t          return null;\n\t      };\n\t      ViewBinderVisitor.prototype.visitAttr = function (ast, ctx) { return null; };\n\t      ViewBinderVisitor.prototype.visitDirective = function (ast, ctx) { return null; };\n\t      ViewBinderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\n\t          return null;\n\t      };\n\t      ViewBinderVisitor.prototype.visitReference = function (ast, ctx) { return null; };\n\t      ViewBinderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\n\t      ViewBinderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\n\t      ViewBinderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\n\t      return ViewBinderVisitor;\n\t  }());\n\t\n\t  var IMPLICIT_TEMPLATE_VAR = '\\$implicit';\n\t  var CLASS_ATTR$1 = 'class';\n\t  var STYLE_ATTR = 'style';\n\t  var NG_CONTAINER_TAG = 'ng-container';\n\t  var parentRenderNodeVar = variable('parentRenderNode');\n\t  var rootSelectorVar = variable('rootSelector');\n\t  function buildView(view, template, targetDependencies) {\n\t      var builderVisitor = new ViewBuilderVisitor(view, targetDependencies);\n\t      templateVisitAll(builderVisitor, template, view.declarationElement.isNull() ? view.declarationElement : view.declarationElement.parent);\n\t      return builderVisitor.nestedViewCount;\n\t  }\n\t  function finishView(view, targetStatements) {\n\t      view.afterNodes();\n\t      createViewTopLevelStmts(view, targetStatements);\n\t      view.nodes.forEach(function (node) {\n\t          if (node instanceof CompileElement && node.hasEmbeddedView) {\n\t              finishView(node.embeddedView, targetStatements);\n\t          }\n\t      });\n\t  }\n\t  var ViewBuilderVisitor = (function () {\n\t      function ViewBuilderVisitor(view, targetDependencies) {\n\t          this.view = view;\n\t          this.targetDependencies = targetDependencies;\n\t          this.nestedViewCount = 0;\n\t      }\n\t      ViewBuilderVisitor.prototype._isRootNode = function (parent) { return parent.view !== this.view; };\n\t      ViewBuilderVisitor.prototype._addRootNodeAndProject = function (node) {\n\t          var projectedNode = _getOuterContainerOrSelf(node);\n\t          var parent = projectedNode.parent;\n\t          var ngContentIndex = projectedNode.sourceAst.ngContentIndex;\n\t          var vcAppEl = (node instanceof CompileElement && node.hasViewContainer) ? node.appElement : null;\n\t          if (this._isRootNode(parent)) {\n\t              // store appElement as root node only for ViewContainers\n\t              if (this.view.viewType !== ViewType.COMPONENT) {\n\t                  this.view.rootNodesOrAppElements.push(vcAppEl || node.renderNode);\n\t              }\n\t          }\n\t          else if (isPresent(parent.component) && isPresent(ngContentIndex)) {\n\t              parent.addContentNode(ngContentIndex, vcAppEl || node.renderNode);\n\t          }\n\t      };\n\t      ViewBuilderVisitor.prototype._getParentRenderNode = function (parent) {\n\t          parent = _getOuterContainerParentOrSelf(parent);\n\t          if (this._isRootNode(parent)) {\n\t              if (this.view.viewType === ViewType.COMPONENT) {\n\t                  return parentRenderNodeVar;\n\t              }\n\t              else {\n\t                  // root node of an embedded/host view\n\t                  return NULL_EXPR;\n\t              }\n\t          }\n\t          else {\n\t              return isPresent(parent.component) &&\n\t                  parent.component.template.encapsulation !== _angular_core.ViewEncapsulation.Native ?\n\t                  NULL_EXPR :\n\t                  parent.renderNode;\n\t          }\n\t      };\n\t      ViewBuilderVisitor.prototype.visitBoundText = function (ast, parent) {\n\t          return this._visitText(ast, '', parent);\n\t      };\n\t      ViewBuilderVisitor.prototype.visitText = function (ast, parent) {\n\t          return this._visitText(ast, ast.value, parent);\n\t      };\n\t      ViewBuilderVisitor.prototype._visitText = function (ast, value, parent) {\n\t          var fieldName = \"_text_\" + this.view.nodes.length;\n\t          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderText)));\n\t          var renderNode = THIS_EXPR.prop(fieldName);\n\t          var compileNode = new CompileNode(parent, this.view, this.view.nodes.length, renderNode, ast);\n\t          var createRenderNode = THIS_EXPR.prop(fieldName)\n\t              .set(ViewProperties.renderer.callMethod('createText', [\n\t              this._getParentRenderNode(parent), literal(value),\n\t              this.view.createMethod.resetDebugInfoExpr(this.view.nodes.length, ast)\n\t          ]))\n\t              .toStmt();\n\t          this.view.nodes.push(compileNode);\n\t          this.view.createMethod.addStmt(createRenderNode);\n\t          this._addRootNodeAndProject(compileNode);\n\t          return renderNode;\n\t      };\n\t      ViewBuilderVisitor.prototype.visitNgContent = function (ast, parent) {\n\t          // the projected nodes originate from a different view, so we don't\n\t          // have debug information for them...\n\t          this.view.createMethod.resetDebugInfo(null, ast);\n\t          var parentRenderNode = this._getParentRenderNode(parent);\n\t          var nodesExpression = ViewProperties.projectableNodes.key(literal(ast.index), new ArrayType(importType(this.view.genConfig.renderTypes.renderNode)));\n\t          if (parentRenderNode !== NULL_EXPR) {\n\t              this.view.createMethod.addStmt(ViewProperties.renderer\n\t                  .callMethod('projectNodes', [\n\t                  parentRenderNode,\n\t                  importExpr(resolveIdentifier(Identifiers.flattenNestedViewRenderNodes))\n\t                      .callFn([nodesExpression])\n\t              ])\n\t                  .toStmt());\n\t          }\n\t          else if (this._isRootNode(parent)) {\n\t              if (this.view.viewType !== ViewType.COMPONENT) {\n\t                  // store root nodes only for embedded/host views\n\t                  this.view.rootNodesOrAppElements.push(nodesExpression);\n\t              }\n\t          }\n\t          else {\n\t              if (isPresent(parent.component) && isPresent(ast.ngContentIndex)) {\n\t                  parent.addContentNode(ast.ngContentIndex, nodesExpression);\n\t              }\n\t          }\n\t          return null;\n\t      };\n\t      ViewBuilderVisitor.prototype.visitElement = function (ast, parent) {\n\t          var nodeIndex = this.view.nodes.length;\n\t          var createRenderNodeExpr;\n\t          var debugContextExpr = this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast);\n\t          var directives = ast.directives.map(function (directiveAst) { return directiveAst.directive; });\n\t          var component = directives.find(function (directive) { return directive.isComponent; });\n\t          if (ast.name === NG_CONTAINER_TAG) {\n\t              createRenderNodeExpr = ViewProperties.renderer.callMethod('createTemplateAnchor', [this._getParentRenderNode(parent), debugContextExpr]);\n\t          }\n\t          else {\n\t              var htmlAttrs = _readHtmlAttrs(ast.attrs);\n\t              var attrNameAndValues = createInlineArray(_mergeHtmlAndDirectiveAttrs(htmlAttrs, directives).map(function (v) { return literal(v); }));\n\t              if (nodeIndex === 0 && this.view.viewType === ViewType.HOST) {\n\t                  createRenderNodeExpr =\n\t                      importExpr(resolveIdentifier(Identifiers.selectOrCreateRenderHostElement)).callFn([\n\t                          ViewProperties.renderer, literal(ast.name), attrNameAndValues, rootSelectorVar,\n\t                          debugContextExpr\n\t                      ]);\n\t              }\n\t              else {\n\t                  createRenderNodeExpr =\n\t                      importExpr(resolveIdentifier(Identifiers.createRenderElement)).callFn([\n\t                          ViewProperties.renderer, this._getParentRenderNode(parent), literal(ast.name),\n\t                          attrNameAndValues, debugContextExpr\n\t                      ]);\n\t              }\n\t          }\n\t          var fieldName = \"_el_\" + nodeIndex;\n\t          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderElement)));\n\t          this.view.createMethod.addStmt(THIS_EXPR.prop(fieldName).set(createRenderNodeExpr).toStmt());\n\t          var renderNode = THIS_EXPR.prop(fieldName);\n\t          var compileElement = new CompileElement(parent, this.view, nodeIndex, renderNode, ast, component, directives, ast.providers, ast.hasViewContainer, false, ast.references, this.targetDependencies);\n\t          this.view.nodes.push(compileElement);\n\t          var compViewExpr = null;\n\t          if (isPresent(component)) {\n\t              var nestedComponentIdentifier = new CompileIdentifierMetadata({ name: getViewFactoryName(component, 0) });\n\t              this.targetDependencies.push(new ViewFactoryDependency(component.type, nestedComponentIdentifier));\n\t              compViewExpr = variable(\"compView_\" + nodeIndex); // fix highlighting: `\n\t              compileElement.setComponentView(compViewExpr);\n\t              this.view.createMethod.addStmt(compViewExpr\n\t                  .set(importExpr(nestedComponentIdentifier).callFn([\n\t                  ViewProperties.viewUtils, compileElement.injector, compileElement.appElement\n\t              ]))\n\t                  .toDeclStmt());\n\t          }\n\t          compileElement.beforeChildren();\n\t          this._addRootNodeAndProject(compileElement);\n\t          templateVisitAll(this, ast.children, compileElement);\n\t          compileElement.afterChildren(this.view.nodes.length - nodeIndex - 1);\n\t          if (isPresent(compViewExpr)) {\n\t              var codeGenContentNodes;\n\t              if (this.view.component.type.isHost) {\n\t                  codeGenContentNodes = ViewProperties.projectableNodes;\n\t              }\n\t              else {\n\t                  codeGenContentNodes = literalArr(compileElement.contentNodesByNgContentIndex.map(function (nodes) { return createFlatArray(nodes); }));\n\t              }\n\t              this.view.createMethod.addStmt(compViewExpr\n\t                  .callMethod('create', [compileElement.getComponent(), codeGenContentNodes, NULL_EXPR])\n\t                  .toStmt());\n\t          }\n\t          return null;\n\t      };\n\t      ViewBuilderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {\n\t          var nodeIndex = this.view.nodes.length;\n\t          var fieldName = \"_anchor_\" + nodeIndex;\n\t          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderComment)));\n\t          this.view.createMethod.addStmt(THIS_EXPR.prop(fieldName)\n\t              .set(ViewProperties.renderer.callMethod('createTemplateAnchor', [\n\t              this._getParentRenderNode(parent),\n\t              this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast)\n\t          ]))\n\t              .toStmt());\n\t          var renderNode = THIS_EXPR.prop(fieldName);\n\t          var templateVariableBindings = ast.variables.map(function (varAst) { return [varAst.value.length > 0 ? varAst.value : IMPLICIT_TEMPLATE_VAR, varAst.name]; });\n\t          var directives = ast.directives.map(function (directiveAst) { return directiveAst.directive; });\n\t          var compileElement = new CompileElement(parent, this.view, nodeIndex, renderNode, ast, null, directives, ast.providers, ast.hasViewContainer, true, ast.references, this.targetDependencies);\n\t          this.view.nodes.push(compileElement);\n\t          this.nestedViewCount++;\n\t          var embeddedView = new CompileView(this.view.component, this.view.genConfig, this.view.pipeMetas, NULL_EXPR, this.view.animations, this.view.viewIndex + this.nestedViewCount, compileElement, templateVariableBindings);\n\t          this.nestedViewCount += buildView(embeddedView, ast.children, this.targetDependencies);\n\t          compileElement.beforeChildren();\n\t          this._addRootNodeAndProject(compileElement);\n\t          compileElement.afterChildren(0);\n\t          return null;\n\t      };\n\t      ViewBuilderVisitor.prototype.visitAttr = function (ast, ctx) { return null; };\n\t      ViewBuilderVisitor.prototype.visitDirective = function (ast, ctx) { return null; };\n\t      ViewBuilderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\n\t          return null;\n\t      };\n\t      ViewBuilderVisitor.prototype.visitReference = function (ast, ctx) { return null; };\n\t      ViewBuilderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\n\t      ViewBuilderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\n\t      ViewBuilderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\n\t      return ViewBuilderVisitor;\n\t  }());\n\t  /**\n\t   * Walks up the nodes while the direct parent is a container.\n\t   *\n\t   * Returns the outer container or the node itself when it is not a direct child of a container.\n\t   *\n\t   * @internal\n\t   */\n\t  function _getOuterContainerOrSelf(node) {\n\t      var view = node.view;\n\t      while (_isNgContainer(node.parent, view)) {\n\t          node = node.parent;\n\t      }\n\t      return node;\n\t  }\n\t  /**\n\t   * Walks up the nodes while they are container and returns the first parent which is not.\n\t   *\n\t   * Returns the parent of the outer container or the node itself when it is not a container.\n\t   *\n\t   * @internal\n\t   */\n\t  function _getOuterContainerParentOrSelf(el) {\n\t      var view = el.view;\n\t      while (_isNgContainer(el, view)) {\n\t          el = el.parent;\n\t      }\n\t      return el;\n\t  }\n\t  function _isNgContainer(node, view) {\n\t      return !node.isNull() && node.sourceAst.name === NG_CONTAINER_TAG &&\n\t          node.view === view;\n\t  }\n\t  function _mergeHtmlAndDirectiveAttrs(declaredHtmlAttrs, directives) {\n\t      var mapResult = {};\n\t      Object.keys(declaredHtmlAttrs).forEach(function (key) { mapResult[key] = declaredHtmlAttrs[key]; });\n\t      directives.forEach(function (directiveMeta) {\n\t          Object.keys(directiveMeta.hostAttributes).forEach(function (name) {\n\t              var value = directiveMeta.hostAttributes[name];\n\t              var prevValue = mapResult[name];\n\t              mapResult[name] = isPresent(prevValue) ? mergeAttributeValue(name, prevValue, value) : value;\n\t          });\n\t      });\n\t      var arrResult = [];\n\t      // Note: We need to sort to get a defined output order\n\t      // for tests and for caching generated artifacts...\n\t      Object.keys(mapResult).sort().forEach(function (attrName) { arrResult.push(attrName, mapResult[attrName]); });\n\t      return arrResult;\n\t  }\n\t  function _readHtmlAttrs(attrs) {\n\t      var htmlAttrs = {};\n\t      attrs.forEach(function (ast) { htmlAttrs[ast.name] = ast.value; });\n\t      return htmlAttrs;\n\t  }\n\t  function mergeAttributeValue(attrName, attrValue1, attrValue2) {\n\t      if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n\t          return attrValue1 + \" \" + attrValue2;\n\t      }\n\t      else {\n\t          return attrValue2;\n\t      }\n\t  }\n\t  function createViewTopLevelStmts(view, targetStatements) {\n\t      var nodeDebugInfosVar = NULL_EXPR;\n\t      if (view.genConfig.genDebugInfo) {\n\t          nodeDebugInfosVar = variable(\"nodeDebugInfos_\" + view.component.type.name + view.viewIndex); // fix highlighting: `\n\t          targetStatements.push(nodeDebugInfosVar\n\t              .set(literalArr(view.nodes.map(createStaticNodeDebugInfo), new ArrayType(new ExternalType(resolveIdentifier(Identifiers.StaticNodeDebugInfo)), [TypeModifier.Const])))\n\t              .toDeclStmt(null, [StmtModifier.Final]));\n\t      }\n\t      var renderCompTypeVar = variable(\"renderType_\" + view.component.type.name); // fix highlighting: `\n\t      if (view.viewIndex === 0) {\n\t          targetStatements.push(renderCompTypeVar.set(NULL_EXPR)\n\t              .toDeclStmt(importType(resolveIdentifier(Identifiers.RenderComponentType))));\n\t      }\n\t      var viewClass = createViewClass(view, renderCompTypeVar, nodeDebugInfosVar);\n\t      targetStatements.push(viewClass);\n\t      targetStatements.push(createViewFactory(view, viewClass, renderCompTypeVar));\n\t  }\n\t  function createStaticNodeDebugInfo(node) {\n\t      var compileElement = node instanceof CompileElement ? node : null;\n\t      var providerTokens = [];\n\t      var componentToken = NULL_EXPR;\n\t      var varTokenEntries = [];\n\t      if (isPresent(compileElement)) {\n\t          providerTokens = compileElement.getProviderTokens();\n\t          if (isPresent(compileElement.component)) {\n\t              componentToken = createDiTokenExpression(identifierToken(compileElement.component.type));\n\t          }\n\t          Object.keys(compileElement.referenceTokens).forEach(function (varName) {\n\t              var token = compileElement.referenceTokens[varName];\n\t              varTokenEntries.push([varName, isPresent(token) ? createDiTokenExpression(token) : NULL_EXPR]);\n\t          });\n\t      }\n\t      return importExpr(resolveIdentifier(Identifiers.StaticNodeDebugInfo))\n\t          .instantiate([\n\t          literalArr(providerTokens, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])),\n\t          componentToken,\n\t          literalMap(varTokenEntries, new MapType(DYNAMIC_TYPE, [TypeModifier.Const]))\n\t      ], importType(resolveIdentifier(Identifiers.StaticNodeDebugInfo), null, [TypeModifier.Const]));\n\t  }\n\t  function createViewClass(view, renderCompTypeVar, nodeDebugInfosVar) {\n\t      var viewConstructorArgs = [\n\t          new FnParam(ViewConstructorVars.viewUtils.name, importType(resolveIdentifier(Identifiers.ViewUtils))),\n\t          new FnParam(ViewConstructorVars.parentInjector.name, importType(resolveIdentifier(Identifiers.Injector))),\n\t          new FnParam(ViewConstructorVars.declarationEl.name, importType(resolveIdentifier(Identifiers.AppElement)))\n\t      ];\n\t      var superConstructorArgs = [\n\t          variable(view.className), renderCompTypeVar, ViewTypeEnum.fromValue(view.viewType),\n\t          ViewConstructorVars.viewUtils, ViewConstructorVars.parentInjector,\n\t          ViewConstructorVars.declarationEl,\n\t          ChangeDetectorStatusEnum.fromValue(getChangeDetectionMode(view))\n\t      ];\n\t      if (view.genConfig.genDebugInfo) {\n\t          superConstructorArgs.push(nodeDebugInfosVar);\n\t      }\n\t      var viewMethods = [\n\t          new ClassMethod('createInternal', [new FnParam(rootSelectorVar.name, STRING_TYPE)], generateCreateMethod(view), importType(resolveIdentifier(Identifiers.AppElement))),\n\t          new ClassMethod('injectorGetInternal', [\n\t              new FnParam(InjectMethodVars.token.name, DYNAMIC_TYPE),\n\t              // Note: Can't use o.INT_TYPE here as the method in AppView uses number\n\t              new FnParam(InjectMethodVars.requestNodeIndex.name, NUMBER_TYPE),\n\t              new FnParam(InjectMethodVars.notFoundResult.name, DYNAMIC_TYPE)\n\t          ], addReturnValuefNotEmpty(view.injectorGetMethod.finish(), InjectMethodVars.notFoundResult), DYNAMIC_TYPE),\n\t          new ClassMethod('detectChangesInternal', [new FnParam(DetectChangesVars.throwOnChange.name, BOOL_TYPE)], generateDetectChangesMethod(view)),\n\t          new ClassMethod('dirtyParentQueriesInternal', [], view.dirtyParentQueriesMethod.finish()),\n\t          new ClassMethod('destroyInternal', [], view.destroyMethod.finish()),\n\t          new ClassMethod('detachInternal', [], view.detachMethod.finish())\n\t      ].filter(function (method) { return method.body.length > 0; });\n\t      var superClass = view.genConfig.genDebugInfo ? Identifiers.DebugAppView : Identifiers.AppView;\n\t      var viewClass = createClassStmt({\n\t          name: view.className,\n\t          parent: importExpr(resolveIdentifier(superClass), [getContextType(view)]),\n\t          parentArgs: superConstructorArgs,\n\t          ctorParams: viewConstructorArgs,\n\t          builders: [{ methods: viewMethods }, view]\n\t      });\n\t      return viewClass;\n\t  }\n\t  function createViewFactory(view, viewClass, renderCompTypeVar) {\n\t      var viewFactoryArgs = [\n\t          new FnParam(ViewConstructorVars.viewUtils.name, importType(resolveIdentifier(Identifiers.ViewUtils))),\n\t          new FnParam(ViewConstructorVars.parentInjector.name, importType(resolveIdentifier(Identifiers.Injector))),\n\t          new FnParam(ViewConstructorVars.declarationEl.name, importType(resolveIdentifier(Identifiers.AppElement)))\n\t      ];\n\t      var initRenderCompTypeStmts = [];\n\t      var templateUrlInfo;\n\t      if (view.component.template.templateUrl == view.component.type.moduleUrl) {\n\t          templateUrlInfo =\n\t              view.component.type.moduleUrl + \" class \" + view.component.type.name + \" - inline template\";\n\t      }\n\t      else {\n\t          templateUrlInfo = view.component.template.templateUrl;\n\t      }\n\t      if (view.viewIndex === 0) {\n\t          var animationsExpr = literalMap(view.animations.map(function (entry) { return [entry.name, entry.fnExp]; }));\n\t          initRenderCompTypeStmts = [\n\t              new IfStmt(renderCompTypeVar.identical(NULL_EXPR), [\n\t                  renderCompTypeVar\n\t                      .set(ViewConstructorVars.viewUtils.callMethod('createRenderComponentType', [\n\t                      view.genConfig.genDebugInfo ? literal(templateUrlInfo) : literal(''),\n\t                      literal(view.component.template.ngContentSelectors.length),\n\t                      ViewEncapsulationEnum.fromValue(view.component.template.encapsulation),\n\t                      view.styles,\n\t                      animationsExpr,\n\t                  ]))\n\t                      .toStmt(),\n\t              ]),\n\t          ];\n\t      }\n\t      return fn(viewFactoryArgs, initRenderCompTypeStmts.concat([\n\t          new ReturnStatement(variable(viewClass.name)\n\t              .instantiate(viewClass.constructorMethod.params.map(function (param) { return variable(param.name); }))),\n\t      ]), importType(resolveIdentifier(Identifiers.AppView), [getContextType(view)]))\n\t          .toDeclStmt(view.viewFactory.name, [StmtModifier.Final]);\n\t  }\n\t  function generateCreateMethod(view) {\n\t      var parentRenderNodeExpr = NULL_EXPR;\n\t      var parentRenderNodeStmts = [];\n\t      if (view.viewType === ViewType.COMPONENT) {\n\t          parentRenderNodeExpr = ViewProperties.renderer.callMethod('createViewRoot', [THIS_EXPR.prop('declarationAppElement').prop('nativeElement')]);\n\t          parentRenderNodeStmts =\n\t              [parentRenderNodeVar.set(parentRenderNodeExpr)\n\t                      .toDeclStmt(importType(view.genConfig.renderTypes.renderNode), [StmtModifier.Final])];\n\t      }\n\t      var resultExpr;\n\t      if (view.viewType === ViewType.HOST) {\n\t          resultExpr = view.nodes[0].appElement;\n\t      }\n\t      else {\n\t          resultExpr = NULL_EXPR;\n\t      }\n\t      return parentRenderNodeStmts.concat(view.createMethod.finish(), [\n\t          THIS_EXPR\n\t              .callMethod('init', [\n\t              createFlatArray(view.rootNodesOrAppElements),\n\t              literalArr(view.nodes.map(function (node) { return node.renderNode; })), literalArr(view.disposables),\n\t              literalArr(view.subscriptions)\n\t          ])\n\t              .toStmt(),\n\t          new ReturnStatement(resultExpr)\n\t      ]);\n\t  }\n\t  function generateDetectChangesMethod(view) {\n\t      var stmts = [];\n\t      if (view.animationBindingsMethod.isEmpty() && view.detectChangesInInputsMethod.isEmpty() &&\n\t          view.updateContentQueriesMethod.isEmpty() &&\n\t          view.afterContentLifecycleCallbacksMethod.isEmpty() &&\n\t          view.detectChangesRenderPropertiesMethod.isEmpty() &&\n\t          view.updateViewQueriesMethod.isEmpty() && view.afterViewLifecycleCallbacksMethod.isEmpty()) {\n\t          return stmts;\n\t      }\n\t      stmts.push.apply(stmts, view.animationBindingsMethod.finish());\n\t      stmts.push.apply(stmts, view.detectChangesInInputsMethod.finish());\n\t      stmts.push(THIS_EXPR.callMethod('detectContentChildrenChanges', [DetectChangesVars.throwOnChange])\n\t          .toStmt());\n\t      var afterContentStmts = view.updateContentQueriesMethod.finish().concat(view.afterContentLifecycleCallbacksMethod.finish());\n\t      if (afterContentStmts.length > 0) {\n\t          stmts.push(new IfStmt(not(DetectChangesVars.throwOnChange), afterContentStmts));\n\t      }\n\t      stmts.push.apply(stmts, view.detectChangesRenderPropertiesMethod.finish());\n\t      stmts.push(THIS_EXPR.callMethod('detectViewChildrenChanges', [DetectChangesVars.throwOnChange])\n\t          .toStmt());\n\t      var afterViewStmts = view.updateViewQueriesMethod.finish().concat(view.afterViewLifecycleCallbacksMethod.finish());\n\t      if (afterViewStmts.length > 0) {\n\t          stmts.push(new IfStmt(not(DetectChangesVars.throwOnChange), afterViewStmts));\n\t      }\n\t      var varStmts = [];\n\t      var readVars = findReadVarNames(stmts);\n\t      if (readVars.has(DetectChangesVars.changed.name)) {\n\t          varStmts.push(DetectChangesVars.changed.set(literal(true)).toDeclStmt(BOOL_TYPE));\n\t      }\n\t      if (readVars.has(DetectChangesVars.changes.name)) {\n\t          varStmts.push(DetectChangesVars.changes.set(NULL_EXPR)\n\t              .toDeclStmt(new MapType(importType(resolveIdentifier(Identifiers.SimpleChange)))));\n\t      }\n\t      varStmts.push.apply(varStmts, createSharedBindingVariablesIfNeeded(stmts));\n\t      return varStmts.concat(stmts);\n\t  }\n\t  function addReturnValuefNotEmpty(statements, value) {\n\t      if (statements.length > 0) {\n\t          return statements.concat([new ReturnStatement(value)]);\n\t      }\n\t      else {\n\t          return statements;\n\t      }\n\t  }\n\t  function getContextType(view) {\n\t      if (view.viewType === ViewType.COMPONENT) {\n\t          return importType(view.component.type);\n\t      }\n\t      return DYNAMIC_TYPE;\n\t  }\n\t  function getChangeDetectionMode(view) {\n\t      var mode;\n\t      if (view.viewType === ViewType.COMPONENT) {\n\t          mode = isDefaultChangeDetectionStrategy(view.component.changeDetection) ?\n\t              ChangeDetectorStatus.CheckAlways :\n\t              ChangeDetectorStatus.CheckOnce;\n\t      }\n\t      else {\n\t          mode = ChangeDetectorStatus.CheckAlways;\n\t      }\n\t      return mode;\n\t  }\n\t\n\t  var ViewCompileResult = (function () {\n\t      function ViewCompileResult(statements, viewFactoryVar, dependencies) {\n\t          this.statements = statements;\n\t          this.viewFactoryVar = viewFactoryVar;\n\t          this.dependencies = dependencies;\n\t      }\n\t      return ViewCompileResult;\n\t  }());\n\t  var ViewCompiler = (function () {\n\t      function ViewCompiler(_genConfig, _schemaRegistry) {\n\t          this._genConfig = _genConfig;\n\t          this._schemaRegistry = _schemaRegistry;\n\t      }\n\t      ViewCompiler.prototype.compileComponent = function (component, template, styles, pipes, compiledAnimations) {\n\t          var dependencies = [];\n\t          var view = new CompileView(component, this._genConfig, pipes, styles, compiledAnimations, 0, CompileElement.createNull(), []);\n\t          var statements = [];\n\t          buildView(view, template, dependencies);\n\t          // Need to separate binding from creation to be able to refer to\n\t          // variables that have been declared after usage.\n\t          bindView(view, template, this._schemaRegistry);\n\t          finishView(view, statements);\n\t          return new ViewCompileResult(statements, view.viewFactory.name, dependencies);\n\t      };\n\t      ViewCompiler.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      ViewCompiler.ctorParameters = [\n\t          { type: CompilerConfig, },\n\t          { type: ElementSchemaRegistry, },\n\t      ];\n\t      return ViewCompiler;\n\t  }());\n\t\n\t  var SourceModule = (function () {\n\t      function SourceModule(fileUrl, moduleUrl, source) {\n\t          this.fileUrl = fileUrl;\n\t          this.moduleUrl = moduleUrl;\n\t          this.source = source;\n\t      }\n\t      return SourceModule;\n\t  }());\n\t  // Returns all the source files and a mapping from modules to directives\n\t  function analyzeNgModules(programStaticSymbols, options, metadataResolver) {\n\t      var _a = _extractModulesAndPipesOrDirectives(programStaticSymbols, metadataResolver), programNgModules = _a.ngModules, programPipesOrDirectives = _a.pipesAndDirectives;\n\t      var moduleMetasByRef = new Map();\n\t      programNgModules.forEach(function (modMeta) {\n\t          if (options.transitiveModules) {\n\t              // For every input modules add the list of transitively included modules\n\t              modMeta.transitiveModule.modules.forEach(function (modMeta) { moduleMetasByRef.set(modMeta.type.reference, modMeta); });\n\t          }\n\t          else {\n\t              moduleMetasByRef.set(modMeta.type.reference, modMeta);\n\t          }\n\t      });\n\t      var ngModuleMetas = MapWrapper.values(moduleMetasByRef);\n\t      var ngModuleByPipeOrDirective = new Map();\n\t      var ngModulesByFile = new Map();\n\t      var ngDirectivesByFile = new Map();\n\t      var filePaths = new Set();\n\t      // Looping over all modules to construct:\n\t      // - a map from file to modules `ngModulesByFile`,\n\t      // - a map from file to directives `ngDirectivesByFile`,\n\t      // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n\t      ngModuleMetas.forEach(function (ngModuleMeta) {\n\t          var srcFileUrl = ngModuleMeta.type.reference.filePath;\n\t          filePaths.add(srcFileUrl);\n\t          ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n\t          ngModuleMeta.declaredDirectives.forEach(function (dirMeta) {\n\t              var fileUrl = dirMeta.type.reference.filePath;\n\t              filePaths.add(fileUrl);\n\t              ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirMeta.type.reference));\n\t              ngModuleByPipeOrDirective.set(dirMeta.type.reference, ngModuleMeta);\n\t          });\n\t          ngModuleMeta.declaredPipes.forEach(function (pipeMeta) {\n\t              var fileUrl = pipeMeta.type.reference.filePath;\n\t              filePaths.add(fileUrl);\n\t              ngModuleByPipeOrDirective.set(pipeMeta.type.reference, ngModuleMeta);\n\t          });\n\t      });\n\t      // Throw an error if any of the program pipe or directives is not declared by a module\n\t      var symbolsMissingModule = programPipesOrDirectives.filter(function (s) { return !ngModuleByPipeOrDirective.has(s); });\n\t      if (symbolsMissingModule.length) {\n\t          var messages = symbolsMissingModule.map(function (s) { return (\"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"!\"); });\n\t          throw new Error(messages.join('\\n'));\n\t      }\n\t      var files = [];\n\t      filePaths.forEach(function (srcUrl) {\n\t          var directives = ngDirectivesByFile.get(srcUrl) || [];\n\t          var ngModules = ngModulesByFile.get(srcUrl) || [];\n\t          files.push({ srcUrl: srcUrl, directives: directives, ngModules: ngModules });\n\t      });\n\t      return {\n\t          // map directive/pipe to module\n\t          ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n\t          // list modules and directives for every source file\n\t          files: files,\n\t      };\n\t  }\n\t  var OfflineCompiler = (function () {\n\t      function OfflineCompiler(_metadataResolver, _directiveNormalizer, _templateParser, _styleCompiler, _viewCompiler, _dirWrapperCompiler, _ngModuleCompiler, _outputEmitter, _localeId, _translationFormat) {\n\t          this._metadataResolver = _metadataResolver;\n\t          this._directiveNormalizer = _directiveNormalizer;\n\t          this._templateParser = _templateParser;\n\t          this._styleCompiler = _styleCompiler;\n\t          this._viewCompiler = _viewCompiler;\n\t          this._dirWrapperCompiler = _dirWrapperCompiler;\n\t          this._ngModuleCompiler = _ngModuleCompiler;\n\t          this._outputEmitter = _outputEmitter;\n\t          this._localeId = _localeId;\n\t          this._translationFormat = _translationFormat;\n\t          this._animationParser = new AnimationParser();\n\t          this._animationCompiler = new AnimationCompiler();\n\t      }\n\t      OfflineCompiler.prototype.clearCache = function () {\n\t          this._directiveNormalizer.clearCache();\n\t          this._metadataResolver.clearCache();\n\t      };\n\t      OfflineCompiler.prototype.compileModules = function (staticSymbols, options) {\n\t          var _this = this;\n\t          var _a = analyzeNgModules(staticSymbols, options, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files;\n\t          var sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.ngModules); });\n\t          return Promise.all(sourceModules)\n\t              .then(function (modules) { return ListWrapper.flatten(modules); });\n\t      };\n\t      OfflineCompiler.prototype._compileSrcFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, ngModules) {\n\t          var _this = this;\n\t          var fileSuffix = _splitTypescriptSuffix(srcFileUrl)[1];\n\t          var statements = [];\n\t          var exportedVars = [];\n\t          var outputSourceModules = [];\n\t          // compile all ng modules\n\t          exportedVars.push.apply(exportedVars, ngModules.map(function (ngModuleType) { return _this._compileModule(ngModuleType, statements); }));\n\t          // compile directive wrappers\n\t          exportedVars.push.apply(exportedVars, directives.map(function (directiveType) { return _this._compileDirectiveWrapper(directiveType, statements); }));\n\t          // compile components\n\t          return Promise\n\t              .all(directives.map(function (dirType) {\n\t              var compMeta = _this._metadataResolver.getDirectiveMetadata(dirType);\n\t              if (!compMeta.isComponent) {\n\t                  return Promise.resolve(null);\n\t              }\n\t              var ngModule = ngModuleByPipeOrDirective.get(dirType);\n\t              if (!ngModule) {\n\t                  throw new Error(\"Internal Error: cannot determine the module for component \" + compMeta.type.name + \"!\");\n\t              }\n\t              return Promise\n\t                  .all([compMeta].concat(ngModule.transitiveModule.directives).map(function (dirMeta) { return _this._directiveNormalizer.normalizeDirective(dirMeta).asyncResult; }))\n\t                  .then(function (normalizedCompWithDirectives) {\n\t                  var compMeta = normalizedCompWithDirectives[0], dirMetas = normalizedCompWithDirectives.slice(1);\n\t                  _assertComponent(compMeta);\n\t                  // compile styles\n\t                  var stylesCompileResults = _this._styleCompiler.compileComponent(compMeta);\n\t                  stylesCompileResults.externalStylesheets.forEach(function (compiledStyleSheet) {\n\t                      outputSourceModules.push(_this._codgenStyles(srcFileUrl, compiledStyleSheet, fileSuffix));\n\t                  });\n\t                  // compile components\n\t                  exportedVars.push(_this._compileComponentFactory(compMeta, fileSuffix, statements), _this._compileComponent(compMeta, dirMetas, ngModule.transitiveModule.pipes, ngModule.schemas, stylesCompileResults.componentStylesheet, fileSuffix, statements));\n\t              });\n\t          }))\n\t              .then(function () {\n\t              if (statements.length > 0) {\n\t                  var srcModule = _this._codegenSourceModule(srcFileUrl, _ngfactoryModuleUrl(srcFileUrl), statements, exportedVars);\n\t                  outputSourceModules.unshift(srcModule);\n\t              }\n\t              return outputSourceModules;\n\t          });\n\t      };\n\t      OfflineCompiler.prototype._compileModule = function (ngModuleType, targetStatements) {\n\t          var ngModule = this._metadataResolver.getNgModuleMetadata(ngModuleType);\n\t          var providers = [];\n\t          if (this._localeId) {\n\t              providers.push(new CompileProviderMetadata({\n\t                  token: resolveIdentifierToken(Identifiers.LOCALE_ID),\n\t                  useValue: this._localeId,\n\t              }));\n\t          }\n\t          if (this._translationFormat) {\n\t              providers.push(new CompileProviderMetadata({\n\t                  token: resolveIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),\n\t                  useValue: this._translationFormat\n\t              }));\n\t          }\n\t          var appCompileResult = this._ngModuleCompiler.compile(ngModule, providers);\n\t          appCompileResult.dependencies.forEach(function (dep) {\n\t              dep.placeholder.name = _componentFactoryName(dep.comp);\n\t              dep.placeholder.moduleUrl = _ngfactoryModuleUrl(dep.comp.moduleUrl);\n\t          });\n\t          targetStatements.push.apply(targetStatements, appCompileResult.statements);\n\t          return appCompileResult.ngModuleFactoryVar;\n\t      };\n\t      OfflineCompiler.prototype._compileDirectiveWrapper = function (directiveType, targetStatements) {\n\t          var dirMeta = this._metadataResolver.getDirectiveMetadata(directiveType);\n\t          var dirCompileResult = this._dirWrapperCompiler.compile(dirMeta);\n\t          targetStatements.push.apply(targetStatements, dirCompileResult.statements);\n\t          return dirCompileResult.dirWrapperClassVar;\n\t      };\n\t      OfflineCompiler.prototype._compileComponentFactory = function (compMeta, fileSuffix, targetStatements) {\n\t          var hostMeta = createHostComponentMeta(compMeta);\n\t          var hostViewFactoryVar = this._compileComponent(hostMeta, [compMeta], [], [], null, fileSuffix, targetStatements);\n\t          var compFactoryVar = _componentFactoryName(compMeta.type);\n\t          targetStatements.push(variable(compFactoryVar)\n\t              .set(importExpr(resolveIdentifier(Identifiers.ComponentFactory), [importType(compMeta.type)])\n\t              .instantiate([\n\t              literal(compMeta.selector),\n\t              variable(hostViewFactoryVar),\n\t              importExpr(compMeta.type),\n\t          ], importType(resolveIdentifier(Identifiers.ComponentFactory), [importType(compMeta.type)], [TypeModifier.Const])))\n\t              .toDeclStmt(null, [StmtModifier.Final]));\n\t          return compFactoryVar;\n\t      };\n\t      OfflineCompiler.prototype._compileComponent = function (compMeta, directives, pipes, schemas, componentStyles, fileSuffix, targetStatements) {\n\t          var parsedAnimations = this._animationParser.parseComponent(compMeta);\n\t          var parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, schemas, compMeta.type.name);\n\t          var stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n\t          var compiledAnimations = this._animationCompiler.compile(compMeta.type.name, parsedAnimations);\n\t          var viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, stylesExpr, pipes, compiledAnimations);\n\t          if (componentStyles) {\n\t              targetStatements.push.apply(targetStatements, _resolveStyleStatements(componentStyles, fileSuffix));\n\t          }\n\t          compiledAnimations.forEach(function (entry) { entry.statements.forEach(function (statement) { targetStatements.push(statement); }); });\n\t          targetStatements.push.apply(targetStatements, _resolveViewStatements(viewResult));\n\t          return viewResult.viewFactoryVar;\n\t      };\n\t      OfflineCompiler.prototype._codgenStyles = function (fileUrl, stylesCompileResult, fileSuffix) {\n\t          _resolveStyleStatements(stylesCompileResult, fileSuffix);\n\t          return this._codegenSourceModule(fileUrl, _stylesModuleUrl(stylesCompileResult.meta.moduleUrl, stylesCompileResult.isShimmed, fileSuffix), stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n\t      };\n\t      OfflineCompiler.prototype._codegenSourceModule = function (fileUrl, moduleUrl, statements, exportedVars) {\n\t          return new SourceModule(fileUrl, moduleUrl, this._outputEmitter.emitStatements(moduleUrl, statements, exportedVars));\n\t      };\n\t      return OfflineCompiler;\n\t  }());\n\t  function _resolveViewStatements(compileResult) {\n\t      compileResult.dependencies.forEach(function (dep) {\n\t          if (dep instanceof ViewFactoryDependency) {\n\t              var vfd = dep;\n\t              vfd.placeholder.moduleUrl = _ngfactoryModuleUrl(vfd.comp.moduleUrl);\n\t          }\n\t          else if (dep instanceof ComponentFactoryDependency) {\n\t              var cfd = dep;\n\t              cfd.placeholder.name = _componentFactoryName(cfd.comp);\n\t              cfd.placeholder.moduleUrl = _ngfactoryModuleUrl(cfd.comp.moduleUrl);\n\t          }\n\t          else if (dep instanceof DirectiveWrapperDependency) {\n\t              var dwd = dep;\n\t              dwd.placeholder.moduleUrl = _ngfactoryModuleUrl(dwd.dir.moduleUrl);\n\t          }\n\t      });\n\t      return compileResult.statements;\n\t  }\n\t  function _resolveStyleStatements(compileResult, fileSuffix) {\n\t      compileResult.dependencies.forEach(function (dep) {\n\t          dep.valuePlaceholder.moduleUrl = _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix);\n\t      });\n\t      return compileResult.statements;\n\t  }\n\t  function _ngfactoryModuleUrl(dirUrl) {\n\t      var urlWithSuffix = _splitTypescriptSuffix(dirUrl);\n\t      return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n\t  }\n\t  function _componentFactoryName(comp) {\n\t      return comp.name + \"NgFactory\";\n\t  }\n\t  function _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n\t      return shim ? stylesheetUrl + \".shim\" + suffix : \"\" + stylesheetUrl + suffix;\n\t  }\n\t  function _assertComponent(meta) {\n\t      if (!meta.isComponent) {\n\t          throw new Error(\"Could not compile '\" + meta.type.name + \"' because it is not a component.\");\n\t      }\n\t  }\n\t  function _splitTypescriptSuffix(path) {\n\t      if (path.endsWith('.d.ts')) {\n\t          return [path.slice(0, -5), '.ts'];\n\t      }\n\t      var lastDot = path.lastIndexOf('.');\n\t      if (lastDot !== -1) {\n\t          return [path.substring(0, lastDot), path.substring(lastDot)];\n\t      }\n\t      return [path, ''];\n\t  }\n\t  // Group the symbols by types:\n\t  // - NgModules,\n\t  // - Pipes and Directives.\n\t  function _extractModulesAndPipesOrDirectives(programStaticSymbols, metadataResolver) {\n\t      var ngModules = [];\n\t      var pipesAndDirectives = [];\n\t      programStaticSymbols.forEach(function (staticSymbol) {\n\t          var ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n\t          var directive = metadataResolver.getDirectiveMetadata(staticSymbol, false);\n\t          var pipe = metadataResolver.getPipeMetadata(staticSymbol, false);\n\t          if (ngModule) {\n\t              ngModules.push(ngModule);\n\t          }\n\t          else if (directive) {\n\t              pipesAndDirectives.push(staticSymbol);\n\t          }\n\t          else if (pipe) {\n\t              pipesAndDirectives.push(staticSymbol);\n\t          }\n\t      });\n\t      return { ngModules: ngModules, pipesAndDirectives: pipesAndDirectives };\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  /**\n\t   * An interface for retrieving documents by URL that the compiler uses\n\t   * to load templates.\n\t   */\n\t  var ResourceLoader = (function () {\n\t      function ResourceLoader() {\n\t      }\n\t      ResourceLoader.prototype.get = function (url) { return null; };\n\t      return ResourceLoader;\n\t  }());\n\t\n\t  var _ASSET_SCHEME = 'asset:';\n\t  /**\n\t   * Create a {@link UrlResolver} with no package prefix.\n\t   */\n\t  function createUrlResolverWithoutPackagePrefix() {\n\t      return new UrlResolver();\n\t  }\n\t  function createOfflineCompileUrlResolver() {\n\t      return new UrlResolver(_ASSET_SCHEME);\n\t  }\n\t  /**\n\t   * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n\t   */\n\t  var DEFAULT_PACKAGE_URL_PROVIDER = {\n\t      provide: _angular_core.PACKAGE_ROOT_URL,\n\t      useValue: '/'\n\t  };\n\t  /**\n\t   * Used by the {@link Compiler} when resolving HTML and CSS template URLs.\n\t   *\n\t   * This class can be overridden by the application developer to create custom behavior.\n\t   *\n\t   * See {@link Compiler}\n\t   *\n\t   * ## Example\n\t   *\n\t   * {@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n\t   *\n\t   * @security  When compiling templates at runtime, you must\n\t   * ensure that the entire template comes from a trusted source.\n\t   * Attacker-controlled data introduced by a template could expose your\n\t   * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n\t   */\n\t  var UrlResolver = (function () {\n\t      function UrlResolver(_packagePrefix) {\n\t          if (_packagePrefix === void 0) { _packagePrefix = null; }\n\t          this._packagePrefix = _packagePrefix;\n\t      }\n\t      /**\n\t       * Resolves the `url` given the `baseUrl`:\n\t       * - when the `url` is null, the `baseUrl` is returned,\n\t       * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n\t       * `baseUrl` and `url`,\n\t       * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n\t       * returned as is (ignoring the `baseUrl`)\n\t       */\n\t      UrlResolver.prototype.resolve = function (baseUrl, url) {\n\t          var resolvedUrl = url;\n\t          if (isPresent(baseUrl) && baseUrl.length > 0) {\n\t              resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n\t          }\n\t          var resolvedParts = _split(resolvedUrl);\n\t          var prefix = this._packagePrefix;\n\t          if (isPresent(prefix) && isPresent(resolvedParts) &&\n\t              resolvedParts[_ComponentIndex.Scheme] == 'package') {\n\t              var path = resolvedParts[_ComponentIndex.Path];\n\t              if (this._packagePrefix === _ASSET_SCHEME) {\n\t                  var pathSegements = path.split(/\\//);\n\t                  resolvedUrl = \"asset:\" + pathSegements[0] + \"/lib/\" + pathSegements.slice(1).join('/');\n\t              }\n\t              else {\n\t                  prefix = prefix.replace(/\\/+$/, '');\n\t                  path = path.replace(/^\\/+/, '');\n\t                  return prefix + \"/\" + path;\n\t              }\n\t          }\n\t          return resolvedUrl;\n\t      };\n\t      UrlResolver.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      UrlResolver.ctorParameters = [\n\t          { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n\t      ];\n\t      return UrlResolver;\n\t  }());\n\t  /**\n\t   * Extract the scheme of a URL.\n\t   */\n\t  function getUrlScheme(url) {\n\t      var match = _split(url);\n\t      return (match && match[_ComponentIndex.Scheme]) || '';\n\t  }\n\t  // The code below is adapted from Traceur:\n\t  // https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js\n\t  /**\n\t   * Builds a URI string from already-encoded parts.\n\t   *\n\t   * No encoding is performed.  Any component may be omitted as either null or\n\t   * undefined.\n\t   *\n\t   * @param opt_scheme The scheme such as 'http'.\n\t   * @param opt_userInfo The user name before the '@'.\n\t   * @param opt_domain The domain such as 'www.google.com', already\n\t   *     URI-encoded.\n\t   * @param opt_port The port number.\n\t   * @param opt_path The path, already URI-encoded.  If it is not\n\t   *     empty, it must begin with a slash.\n\t   * @param opt_queryData The URI-encoded query data.\n\t   * @param opt_fragment The URI-encoded fragment identifier.\n\t   * @return The fully combined URI.\n\t   */\n\t  function _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n\t      var out = [];\n\t      if (isPresent(opt_scheme)) {\n\t          out.push(opt_scheme + ':');\n\t      }\n\t      if (isPresent(opt_domain)) {\n\t          out.push('//');\n\t          if (isPresent(opt_userInfo)) {\n\t              out.push(opt_userInfo + '@');\n\t          }\n\t          out.push(opt_domain);\n\t          if (isPresent(opt_port)) {\n\t              out.push(':' + opt_port);\n\t          }\n\t      }\n\t      if (isPresent(opt_path)) {\n\t          out.push(opt_path);\n\t      }\n\t      if (isPresent(opt_queryData)) {\n\t          out.push('?' + opt_queryData);\n\t      }\n\t      if (isPresent(opt_fragment)) {\n\t          out.push('#' + opt_fragment);\n\t      }\n\t      return out.join('');\n\t  }\n\t  /**\n\t   * A regular expression for breaking a URI into its component parts.\n\t   *\n\t   * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n\t   * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n\t   * disambiguation method used by POSIX regular expressions, it is natural and\n\t   * commonplace to use a regular expression for parsing the potential five\n\t   * components of a URI reference.\n\t   *\n\t   * The following line is the regular expression for breaking-down a\n\t   * well-formed URI reference into its components.\n\t   *\n\t   * <pre>\n\t   * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n\t   *  12            3  4          5       6  7        8 9\n\t   * </pre>\n\t   *\n\t   * The numbers in the second line above are only to assist readability; they\n\t   * indicate the reference points for each subexpression (i.e., each paired\n\t   * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n\t   * For example, matching the above expression to\n\t   * <pre>\n\t   *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n\t   * </pre>\n\t   * results in the following subexpression matches:\n\t   * <pre>\n\t   *    $1 = http:\n\t   *    $2 = http\n\t   *    $3 = //www.ics.uci.edu\n\t   *    $4 = www.ics.uci.edu\n\t   *    $5 = /pub/ietf/uri/\n\t   *    $6 = <undefined>\n\t   *    $7 = <undefined>\n\t   *    $8 = #Related\n\t   *    $9 = Related\n\t   * </pre>\n\t   * where <undefined> indicates that the component is not present, as is the\n\t   * case for the query component in the above example. Therefore, we can\n\t   * determine the value of the five components as\n\t   * <pre>\n\t   *    scheme    = $2\n\t   *    authority = $4\n\t   *    path      = $5\n\t   *    query     = $7\n\t   *    fragment  = $9\n\t   * </pre>\n\t   *\n\t   * The regular expression has been modified slightly to expose the\n\t   * userInfo, domain, and port separately from the authority.\n\t   * The modified version yields\n\t   * <pre>\n\t   *    $1 = http              scheme\n\t   *    $2 = <undefined>       userInfo -\\\n\t   *    $3 = www.ics.uci.edu   domain     | authority\n\t   *    $4 = <undefined>       port     -/\n\t   *    $5 = /pub/ietf/uri/    path\n\t   *    $6 = <undefined>       query without ?\n\t   *    $7 = Related           fragment without #\n\t   * </pre>\n\t   * @type {!RegExp}\n\t   * @internal\n\t   */\n\t  var _splitRe = new RegExp('^' +\n\t      '(?:' +\n\t      '([^:/?#.]+)' +\n\t      // used by other URL parts such as :,\n\t      // ?, /, #, and .\n\t      ':)?' +\n\t      '(?://' +\n\t      '(?:([^/?#]*)@)?' +\n\t      '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n\t      // digits, dashes, dots, percent\n\t      // escapes, and unicode characters.\n\t      '(?::([0-9]+))?' +\n\t      ')?' +\n\t      '([^?#]+)?' +\n\t      '(?:\\\\?([^#]*))?' +\n\t      '(?:#(.*))?' +\n\t      '$');\n\t  /**\n\t   * The index of each URI component in the return value of goog.uri.utils.split.\n\t   * @enum {number}\n\t   */\n\t  var _ComponentIndex;\n\t  (function (_ComponentIndex) {\n\t      _ComponentIndex[_ComponentIndex[\"Scheme\"] = 1] = \"Scheme\";\n\t      _ComponentIndex[_ComponentIndex[\"UserInfo\"] = 2] = \"UserInfo\";\n\t      _ComponentIndex[_ComponentIndex[\"Domain\"] = 3] = \"Domain\";\n\t      _ComponentIndex[_ComponentIndex[\"Port\"] = 4] = \"Port\";\n\t      _ComponentIndex[_ComponentIndex[\"Path\"] = 5] = \"Path\";\n\t      _ComponentIndex[_ComponentIndex[\"QueryData\"] = 6] = \"QueryData\";\n\t      _ComponentIndex[_ComponentIndex[\"Fragment\"] = 7] = \"Fragment\";\n\t  })(_ComponentIndex || (_ComponentIndex = {}));\n\t  /**\n\t   * Splits a URI into its component parts.\n\t   *\n\t   * Each component can be accessed via the component indices; for example:\n\t   * <pre>\n\t   * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n\t   * </pre>\n\t   *\n\t   * @param uri The URI string to examine.\n\t   * @return Each component still URI-encoded.\n\t   *     Each component that is present will contain the encoded value, whereas\n\t   *     components that are not present will be undefined or empty, depending\n\t   *     on the browser's regular expression implementation.  Never null, since\n\t   *     arbitrary strings may still look like path names.\n\t   */\n\t  function _split(uri) {\n\t      return uri.match(_splitRe);\n\t  }\n\t  /**\n\t    * Removes dot segments in given path component, as described in\n\t    * RFC 3986, section 5.2.4.\n\t    *\n\t    * @param path A non-empty path component.\n\t    * @return Path component with removed dot segments.\n\t    */\n\t  function _removeDotSegments(path) {\n\t      if (path == '/')\n\t          return '/';\n\t      var leadingSlash = path[0] == '/' ? '/' : '';\n\t      var trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n\t      var segments = path.split('/');\n\t      var out = [];\n\t      var up = 0;\n\t      for (var pos = 0; pos < segments.length; pos++) {\n\t          var segment = segments[pos];\n\t          switch (segment) {\n\t              case '':\n\t              case '.':\n\t                  break;\n\t              case '..':\n\t                  if (out.length > 0) {\n\t                      out.pop();\n\t                  }\n\t                  else {\n\t                      up++;\n\t                  }\n\t                  break;\n\t              default:\n\t                  out.push(segment);\n\t          }\n\t      }\n\t      if (leadingSlash == '') {\n\t          while (up-- > 0) {\n\t              out.unshift('..');\n\t          }\n\t          if (out.length === 0)\n\t              out.push('.');\n\t      }\n\t      return leadingSlash + out.join('/') + trailingSlash;\n\t  }\n\t  /**\n\t   * Takes an array of the parts from split and canonicalizes the path part\n\t   * and then joins all the parts.\n\t   */\n\t  function _joinAndCanonicalizePath(parts) {\n\t      var path = parts[_ComponentIndex.Path];\n\t      path = isBlank(path) ? '' : _removeDotSegments(path);\n\t      parts[_ComponentIndex.Path] = path;\n\t      return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n\t  }\n\t  /**\n\t   * Resolves a URL.\n\t   * @param base The URL acting as the base URL.\n\t   * @param to The URL to resolve.\n\t   */\n\t  function _resolveUrl(base, url) {\n\t      var parts = _split(encodeURI(url));\n\t      var baseParts = _split(base);\n\t      if (isPresent(parts[_ComponentIndex.Scheme])) {\n\t          return _joinAndCanonicalizePath(parts);\n\t      }\n\t      else {\n\t          parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n\t      }\n\t      for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n\t          if (isBlank(parts[i])) {\n\t              parts[i] = baseParts[i];\n\t          }\n\t      }\n\t      if (parts[_ComponentIndex.Path][0] == '/') {\n\t          return _joinAndCanonicalizePath(parts);\n\t      }\n\t      var path = baseParts[_ComponentIndex.Path];\n\t      if (isBlank(path))\n\t          path = '/';\n\t      var index = path.lastIndexOf('/');\n\t      path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n\t      parts[_ComponentIndex.Path] = path;\n\t      return _joinAndCanonicalizePath(parts);\n\t  }\n\t\n\t  var DirectiveNormalizer = (function () {\n\t      function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n\t          this._resourceLoader = _resourceLoader;\n\t          this._urlResolver = _urlResolver;\n\t          this._htmlParser = _htmlParser;\n\t          this._config = _config;\n\t          this._resourceLoaderCache = new Map();\n\t      }\n\t      DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n\t      DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n\t          var _this = this;\n\t          if (!normalizedDirective.isComponent) {\n\t              return;\n\t          }\n\t          this._resourceLoaderCache.delete(normalizedDirective.template.templateUrl);\n\t          normalizedDirective.template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(stylesheet.moduleUrl); });\n\t      };\n\t      DirectiveNormalizer.prototype._fetch = function (url) {\n\t          var result = this._resourceLoaderCache.get(url);\n\t          if (!result) {\n\t              result = this._resourceLoader.get(url);\n\t              this._resourceLoaderCache.set(url, result);\n\t          }\n\t          return result;\n\t      };\n\t      DirectiveNormalizer.prototype.normalizeDirective = function (directive) {\n\t          var _this = this;\n\t          if (!directive.isComponent) {\n\t              // For non components there is nothing to be normalized yet.\n\t              return new SyncAsyncResult(directive, Promise.resolve(directive));\n\t          }\n\t          var normalizedTemplateSync = null;\n\t          var normalizedTemplateAsync;\n\t          if (isPresent(directive.template.template)) {\n\t              normalizedTemplateSync = this.normalizeTemplateSync(directive.type, directive.template);\n\t              normalizedTemplateAsync = Promise.resolve(normalizedTemplateSync);\n\t          }\n\t          else if (directive.template.templateUrl) {\n\t              normalizedTemplateAsync = this.normalizeTemplateAsync(directive.type, directive.template);\n\t          }\n\t          else {\n\t              throw new Error(\"No template specified for component \" + directive.type.name);\n\t          }\n\t          if (normalizedTemplateSync && normalizedTemplateSync.styleUrls.length === 0) {\n\t              // sync case\n\t              var normalizedDirective = _cloneDirectiveWithTemplate(directive, normalizedTemplateSync);\n\t              return new SyncAsyncResult(normalizedDirective, Promise.resolve(normalizedDirective));\n\t          }\n\t          else {\n\t              // async case\n\t              return new SyncAsyncResult(null, normalizedTemplateAsync\n\t                  .then(function (normalizedTemplate) { return _this.normalizeExternalStylesheets(normalizedTemplate); })\n\t                  .then(function (normalizedTemplate) {\n\t                  return _cloneDirectiveWithTemplate(directive, normalizedTemplate);\n\t              }));\n\t          }\n\t      };\n\t      DirectiveNormalizer.prototype.normalizeTemplateSync = function (directiveType, template) {\n\t          return this.normalizeLoadedTemplate(directiveType, template, template.template, directiveType.moduleUrl);\n\t      };\n\t      DirectiveNormalizer.prototype.normalizeTemplateAsync = function (directiveType, template) {\n\t          var _this = this;\n\t          var templateUrl = this._urlResolver.resolve(directiveType.moduleUrl, template.templateUrl);\n\t          return this._fetch(templateUrl)\n\t              .then(function (value) { return _this.normalizeLoadedTemplate(directiveType, template, value, templateUrl); });\n\t      };\n\t      DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (directiveType, templateMeta, template, templateAbsUrl) {\n\t          var interpolationConfig = InterpolationConfig.fromArray(templateMeta.interpolation);\n\t          var rootNodesAndErrors = this._htmlParser.parse(template, directiveType.name, false, interpolationConfig);\n\t          if (rootNodesAndErrors.errors.length > 0) {\n\t              var errorString = rootNodesAndErrors.errors.join('\\n');\n\t              throw new Error(\"Template parse errors:\\n\" + errorString);\n\t          }\n\t          var templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n\t              styles: templateMeta.styles,\n\t              styleUrls: templateMeta.styleUrls,\n\t              moduleUrl: directiveType.moduleUrl\n\t          }));\n\t          var visitor = new TemplatePreparseVisitor();\n\t          visitAll(visitor, rootNodesAndErrors.rootNodes);\n\t          var templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n\t          var encapsulation = templateMeta.encapsulation;\n\t          if (isBlank(encapsulation)) {\n\t              encapsulation = this._config.defaultEncapsulation;\n\t          }\n\t          var styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n\t          var styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n\t          if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n\t              styleUrls.length === 0) {\n\t              encapsulation = _angular_core.ViewEncapsulation.None;\n\t          }\n\t          return new CompileTemplateMetadata({\n\t              encapsulation: encapsulation,\n\t              template: template,\n\t              templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n\t              externalStylesheets: templateMeta.externalStylesheets,\n\t              ngContentSelectors: visitor.ngContentSelectors,\n\t              animations: templateMeta.animations,\n\t              interpolation: templateMeta.interpolation,\n\t          });\n\t      };\n\t      DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n\t          return this._loadMissingExternalStylesheets(templateMeta.styleUrls)\n\t              .then(function (externalStylesheets) { return new CompileTemplateMetadata({\n\t              encapsulation: templateMeta.encapsulation,\n\t              template: templateMeta.template,\n\t              templateUrl: templateMeta.templateUrl,\n\t              styles: templateMeta.styles,\n\t              styleUrls: templateMeta.styleUrls,\n\t              externalStylesheets: externalStylesheets,\n\t              ngContentSelectors: templateMeta.ngContentSelectors,\n\t              animations: templateMeta.animations,\n\t              interpolation: templateMeta.interpolation\n\t          }); });\n\t      };\n\t      DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n\t          var _this = this;\n\t          if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n\t          return Promise\n\t              .all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n\t              .map(function (styleUrl) { return _this._fetch(styleUrl).then(function (loadedStyle) {\n\t              var stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n\t              loadedStylesheets.set(styleUrl, stylesheet);\n\t              return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n\t          }); }))\n\t              .then(function (_) { return MapWrapper.values(loadedStylesheets); });\n\t      };\n\t      DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n\t          var _this = this;\n\t          var allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n\t              .map(function (url) { return _this._urlResolver.resolve(stylesheet.moduleUrl, url); });\n\t          var allStyles = stylesheet.styles.map(function (style) {\n\t              var styleWithImports = extractStyleUrls(_this._urlResolver, stylesheet.moduleUrl, style);\n\t              allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n\t              return styleWithImports.style;\n\t          });\n\t          return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: stylesheet.moduleUrl });\n\t      };\n\t      DirectiveNormalizer.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      DirectiveNormalizer.ctorParameters = [\n\t          { type: ResourceLoader, },\n\t          { type: UrlResolver, },\n\t          { type: HtmlParser, },\n\t          { type: CompilerConfig, },\n\t      ];\n\t      return DirectiveNormalizer;\n\t  }());\n\t  var TemplatePreparseVisitor = (function () {\n\t      function TemplatePreparseVisitor() {\n\t          this.ngContentSelectors = [];\n\t          this.styles = [];\n\t          this.styleUrls = [];\n\t          this.ngNonBindableStackCount = 0;\n\t      }\n\t      TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n\t          var preparsedElement = preparseElement(ast);\n\t          switch (preparsedElement.type) {\n\t              case PreparsedElementType.NG_CONTENT:\n\t                  if (this.ngNonBindableStackCount === 0) {\n\t                      this.ngContentSelectors.push(preparsedElement.selectAttr);\n\t                  }\n\t                  break;\n\t              case PreparsedElementType.STYLE:\n\t                  var textContent = '';\n\t                  ast.children.forEach(function (child) {\n\t                      if (child instanceof Text) {\n\t                          textContent += child.value;\n\t                      }\n\t                  });\n\t                  this.styles.push(textContent);\n\t                  break;\n\t              case PreparsedElementType.STYLESHEET:\n\t                  this.styleUrls.push(preparsedElement.hrefAttr);\n\t                  break;\n\t              default:\n\t                  break;\n\t          }\n\t          if (preparsedElement.nonBindable) {\n\t              this.ngNonBindableStackCount++;\n\t          }\n\t          visitAll(this, ast.children);\n\t          if (preparsedElement.nonBindable) {\n\t              this.ngNonBindableStackCount--;\n\t          }\n\t          return null;\n\t      };\n\t      TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n\t      TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n\t      TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n\t      TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { return null; };\n\t      TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) { return null; };\n\t      return TemplatePreparseVisitor;\n\t  }());\n\t  function _cloneDirectiveWithTemplate(directive, template) {\n\t      return new CompileDirectiveMetadata({\n\t          type: directive.type,\n\t          isComponent: directive.isComponent,\n\t          selector: directive.selector,\n\t          exportAs: directive.exportAs,\n\t          changeDetection: directive.changeDetection,\n\t          inputs: directive.inputs,\n\t          outputs: directive.outputs,\n\t          hostListeners: directive.hostListeners,\n\t          hostProperties: directive.hostProperties,\n\t          hostAttributes: directive.hostAttributes,\n\t          providers: directive.providers,\n\t          viewProviders: directive.viewProviders,\n\t          queries: directive.queries,\n\t          viewQueries: directive.viewQueries,\n\t          entryComponents: directive.entryComponents, template: template,\n\t      });\n\t  }\n\t\n\t  /*\n\t   * Resolve a `Type` for {@link Directive}.\n\t   *\n\t   * This interface can be overridden by the application developer to create custom behavior.\n\t   *\n\t   * See {@link Compiler}\n\t   */\n\t  var DirectiveResolver = (function () {\n\t      function DirectiveResolver(_reflector) {\n\t          if (_reflector === void 0) { _reflector = reflector; }\n\t          this._reflector = _reflector;\n\t      }\n\t      /**\n\t       * Return {@link Directive} for a given `Type`.\n\t       */\n\t      DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n\t          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n\t          var typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n\t          if (typeMetadata) {\n\t              var metadata = typeMetadata.find(isDirectiveMetadata);\n\t              if (metadata) {\n\t                  var propertyMetadata = this._reflector.propMetadata(type);\n\t                  return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n\t              }\n\t          }\n\t          if (throwIfNotFound) {\n\t              throw new Error(\"No Directive annotation found on \" + stringify(type));\n\t          }\n\t          return null;\n\t      };\n\t      DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n\t          var inputs = [];\n\t          var outputs = [];\n\t          var host = {};\n\t          var queries = {};\n\t          Object.keys(propertyMetadata).forEach(function (propName) {\n\t              propertyMetadata[propName].forEach(function (a) {\n\t                  if (a instanceof _angular_core.Input) {\n\t                      if (a.bindingPropertyName) {\n\t                          inputs.push(propName + \": \" + a.bindingPropertyName);\n\t                      }\n\t                      else {\n\t                          inputs.push(propName);\n\t                      }\n\t                  }\n\t                  else if (a instanceof _angular_core.Output) {\n\t                      var output = a;\n\t                      if (output.bindingPropertyName) {\n\t                          outputs.push(propName + \": \" + output.bindingPropertyName);\n\t                      }\n\t                      else {\n\t                          outputs.push(propName);\n\t                      }\n\t                  }\n\t                  else if (a instanceof _angular_core.HostBinding) {\n\t                      var hostBinding = a;\n\t                      if (hostBinding.hostPropertyName) {\n\t                          var startWith = hostBinding.hostPropertyName[0];\n\t                          if (startWith === '(') {\n\t                              throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n\t                          }\n\t                          else if (startWith === '[') {\n\t                              throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n\t                          }\n\t                          host[(\"[\" + hostBinding.hostPropertyName + \"]\")] = propName;\n\t                      }\n\t                      else {\n\t                          host[(\"[\" + propName + \"]\")] = propName;\n\t                      }\n\t                  }\n\t                  else if (a instanceof _angular_core.HostListener) {\n\t                      var hostListener = a;\n\t                      var args = hostListener.args || [];\n\t                      host[(\"(\" + hostListener.eventName + \")\")] = propName + \"(\" + args.join(',') + \")\";\n\t                  }\n\t                  else if (a instanceof _angular_core.Query) {\n\t                      queries[propName] = a;\n\t                  }\n\t              });\n\t          });\n\t          return this._merge(dm, inputs, outputs, host, queries, directiveType);\n\t      };\n\t      DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [null, def])[1].trim(); };\n\t      DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n\t          var _this = this;\n\t          var mergedInputs = inputs;\n\t          if (directive.inputs) {\n\t              var inputNames_1 = directive.inputs.map(function (def) { return _this._extractPublicName(def); });\n\t              inputs.forEach(function (inputDef) {\n\t                  var publicName = _this._extractPublicName(inputDef);\n\t                  if (inputNames_1.indexOf(publicName) > -1) {\n\t                      throw new Error(\"Input '\" + publicName + \"' defined multiple times in '\" + stringify(directiveType) + \"'\");\n\t                  }\n\t              });\n\t              mergedInputs.unshift.apply(mergedInputs, directive.inputs);\n\t          }\n\t          var mergedOutputs = outputs;\n\t          if (directive.outputs) {\n\t              var outputNames_1 = directive.outputs.map(function (def) { return _this._extractPublicName(def); });\n\t              outputs.forEach(function (outputDef) {\n\t                  var publicName = _this._extractPublicName(outputDef);\n\t                  if (outputNames_1.indexOf(publicName) > -1) {\n\t                      throw new Error(\"Output event '\" + publicName + \"' defined multiple times in '\" + stringify(directiveType) + \"'\");\n\t                  }\n\t              });\n\t              mergedOutputs.unshift.apply(mergedOutputs, directive.outputs);\n\t          }\n\t          var mergedHost = directive.host ? StringMapWrapper.merge(directive.host, host) : host;\n\t          var mergedQueries = directive.queries ? StringMapWrapper.merge(directive.queries, queries) : queries;\n\t          if (directive instanceof _angular_core.Component) {\n\t              return new _angular_core.Component({\n\t                  selector: directive.selector,\n\t                  inputs: mergedInputs,\n\t                  outputs: mergedOutputs,\n\t                  host: mergedHost,\n\t                  exportAs: directive.exportAs,\n\t                  moduleId: directive.moduleId,\n\t                  queries: mergedQueries,\n\t                  changeDetection: directive.changeDetection,\n\t                  providers: directive.providers,\n\t                  viewProviders: directive.viewProviders,\n\t                  entryComponents: directive.entryComponents,\n\t                  template: directive.template,\n\t                  templateUrl: directive.templateUrl,\n\t                  styles: directive.styles,\n\t                  styleUrls: directive.styleUrls,\n\t                  encapsulation: directive.encapsulation,\n\t                  animations: directive.animations,\n\t                  interpolation: directive.interpolation\n\t              });\n\t          }\n\t          else {\n\t              return new _angular_core.Directive({\n\t                  selector: directive.selector,\n\t                  inputs: mergedInputs,\n\t                  outputs: mergedOutputs,\n\t                  host: mergedHost,\n\t                  exportAs: directive.exportAs,\n\t                  queries: mergedQueries,\n\t                  providers: directive.providers\n\t              });\n\t          }\n\t      };\n\t      DirectiveResolver.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      DirectiveResolver.ctorParameters = [\n\t          { type: ReflectorReader, },\n\t      ];\n\t      return DirectiveResolver;\n\t  }());\n\t  function isDirectiveMetadata(type) {\n\t      return type instanceof _angular_core.Directive;\n\t  }\n\t\n\t  function hasLifecycleHook(hook, token) {\n\t      return reflector.hasLifecycleHook(token, getHookName(hook));\n\t  }\n\t  function getHookName(hook) {\n\t      switch (hook) {\n\t          case LifecycleHooks.OnInit:\n\t              return 'ngOnInit';\n\t          case LifecycleHooks.OnDestroy:\n\t              return 'ngOnDestroy';\n\t          case LifecycleHooks.DoCheck:\n\t              return 'ngDoCheck';\n\t          case LifecycleHooks.OnChanges:\n\t              return 'ngOnChanges';\n\t          case LifecycleHooks.AfterContentInit:\n\t              return 'ngAfterContentInit';\n\t          case LifecycleHooks.AfterContentChecked:\n\t              return 'ngAfterContentChecked';\n\t          case LifecycleHooks.AfterViewInit:\n\t              return 'ngAfterViewInit';\n\t          case LifecycleHooks.AfterViewChecked:\n\t              return 'ngAfterViewChecked';\n\t      }\n\t  }\n\t\n\t  function _isNgModuleMetadata(obj) {\n\t      return obj instanceof _angular_core.NgModule;\n\t  }\n\t  /**\n\t   * Resolves types to {@link NgModule}.\n\t   */\n\t  var NgModuleResolver = (function () {\n\t      function NgModuleResolver(_reflector) {\n\t          if (_reflector === void 0) { _reflector = reflector; }\n\t          this._reflector = _reflector;\n\t      }\n\t      NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n\t          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n\t          var ngModuleMeta = this._reflector.annotations(type).find(_isNgModuleMetadata);\n\t          if (isPresent(ngModuleMeta)) {\n\t              return ngModuleMeta;\n\t          }\n\t          else {\n\t              if (throwIfNotFound) {\n\t                  throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n\t              }\n\t              return null;\n\t          }\n\t      };\n\t      NgModuleResolver.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      NgModuleResolver.ctorParameters = [\n\t          { type: ReflectorReader, },\n\t      ];\n\t      return NgModuleResolver;\n\t  }());\n\t\n\t  function _isPipeMetadata(type) {\n\t      return type instanceof _angular_core.Pipe;\n\t  }\n\t  /**\n\t   * Resolve a `Type` for {@link Pipe}.\n\t   *\n\t   * This interface can be overridden by the application developer to create custom behavior.\n\t   *\n\t   * See {@link Compiler}\n\t   */\n\t  var PipeResolver = (function () {\n\t      function PipeResolver(_reflector) {\n\t          if (_reflector === void 0) { _reflector = reflector; }\n\t          this._reflector = _reflector;\n\t      }\n\t      /**\n\t       * Return {@link Pipe} for a given `Type`.\n\t       */\n\t      PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n\t          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n\t          var metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n\t          if (isPresent(metas)) {\n\t              var annotation = metas.find(_isPipeMetadata);\n\t              if (isPresent(annotation)) {\n\t                  return annotation;\n\t              }\n\t          }\n\t          if (throwIfNotFound) {\n\t              throw new Error(\"No Pipe decorator found on \" + stringify(type));\n\t          }\n\t          return null;\n\t      };\n\t      PipeResolver.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      PipeResolver.ctorParameters = [\n\t          { type: ReflectorReader, },\n\t      ];\n\t      return PipeResolver;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$17 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var CompileMetadataResolver = (function () {\n\t      function CompileMetadataResolver(_ngModuleResolver, _directiveResolver, _pipeResolver, _schemaRegistry, _reflector) {\n\t          if (_reflector === void 0) { _reflector = reflector; }\n\t          this._ngModuleResolver = _ngModuleResolver;\n\t          this._directiveResolver = _directiveResolver;\n\t          this._pipeResolver = _pipeResolver;\n\t          this._schemaRegistry = _schemaRegistry;\n\t          this._reflector = _reflector;\n\t          this._directiveCache = new Map();\n\t          this._pipeCache = new Map();\n\t          this._ngModuleCache = new Map();\n\t          this._ngModuleOfTypes = new Map();\n\t          this._anonymousTypes = new Map();\n\t          this._anonymousTypeIndex = 0;\n\t      }\n\t      CompileMetadataResolver.prototype.sanitizeTokenName = function (token) {\n\t          var identifier = stringify(token);\n\t          if (identifier.indexOf('(') >= 0) {\n\t              // case: anonymous functions!\n\t              var found = this._anonymousTypes.get(token);\n\t              if (!found) {\n\t                  this._anonymousTypes.set(token, this._anonymousTypeIndex++);\n\t                  found = this._anonymousTypes.get(token);\n\t              }\n\t              identifier = \"anonymous_token_\" + found + \"_\";\n\t          }\n\t          return sanitizeIdentifier(identifier);\n\t      };\n\t      CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n\t          this._directiveCache.delete(type);\n\t          this._pipeCache.delete(type);\n\t          this._ngModuleOfTypes.delete(type);\n\t          // Clear all of the NgModule as they contain transitive information!\n\t          this._ngModuleCache.clear();\n\t      };\n\t      CompileMetadataResolver.prototype.clearCache = function () {\n\t          this._directiveCache.clear();\n\t          this._pipeCache.clear();\n\t          this._ngModuleCache.clear();\n\t          this._ngModuleOfTypes.clear();\n\t      };\n\t      CompileMetadataResolver.prototype.getAnimationEntryMetadata = function (entry) {\n\t          var _this = this;\n\t          var defs = entry.definitions.map(function (def) { return _this.getAnimationStateMetadata(def); });\n\t          return new CompileAnimationEntryMetadata(entry.name, defs);\n\t      };\n\t      CompileMetadataResolver.prototype.getAnimationStateMetadata = function (value) {\n\t          if (value instanceof _angular_core.AnimationStateDeclarationMetadata) {\n\t              var styles = this.getAnimationStyleMetadata(value.styles);\n\t              return new CompileAnimationStateDeclarationMetadata(value.stateNameExpr, styles);\n\t          }\n\t          if (value instanceof _angular_core.AnimationStateTransitionMetadata) {\n\t              return new CompileAnimationStateTransitionMetadata(value.stateChangeExpr, this.getAnimationMetadata(value.steps));\n\t          }\n\t          return null;\n\t      };\n\t      CompileMetadataResolver.prototype.getAnimationStyleMetadata = function (value) {\n\t          return new CompileAnimationStyleMetadata(value.offset, value.styles);\n\t      };\n\t      CompileMetadataResolver.prototype.getAnimationMetadata = function (value) {\n\t          var _this = this;\n\t          if (value instanceof _angular_core.AnimationStyleMetadata) {\n\t              return this.getAnimationStyleMetadata(value);\n\t          }\n\t          if (value instanceof _angular_core.AnimationKeyframesSequenceMetadata) {\n\t              return new CompileAnimationKeyframesSequenceMetadata(value.steps.map(function (entry) { return _this.getAnimationStyleMetadata(entry); }));\n\t          }\n\t          if (value instanceof _angular_core.AnimationAnimateMetadata) {\n\t              var animateData = this\n\t                  .getAnimationMetadata(value.styles);\n\t              return new CompileAnimationAnimateMetadata(value.timings, animateData);\n\t          }\n\t          if (value instanceof _angular_core.AnimationWithStepsMetadata) {\n\t              var steps = value.steps.map(function (step) { return _this.getAnimationMetadata(step); });\n\t              if (value instanceof _angular_core.AnimationGroupMetadata) {\n\t                  return new CompileAnimationGroupMetadata(steps);\n\t              }\n\t              return new CompileAnimationSequenceMetadata(steps);\n\t          }\n\t          return null;\n\t      };\n\t      CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType, throwIfNotFound) {\n\t          var _this = this;\n\t          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n\t          directiveType = _angular_core.resolveForwardRef(directiveType);\n\t          var meta = this._directiveCache.get(directiveType);\n\t          if (!meta) {\n\t              var dirMeta = this._directiveResolver.resolve(directiveType, throwIfNotFound);\n\t              if (!dirMeta) {\n\t                  return null;\n\t              }\n\t              var templateMeta = null;\n\t              var changeDetectionStrategy = null;\n\t              var viewProviders = [];\n\t              var moduleUrl = staticTypeModuleUrl(directiveType);\n\t              var entryComponentMetadata = [];\n\t              var selector = dirMeta.selector;\n\t              if (dirMeta instanceof _angular_core.Component) {\n\t                  // Component\n\t                  assertArrayOfStrings('styles', dirMeta.styles);\n\t                  assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n\t                  assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n\t                  var animations = dirMeta.animations ?\n\t                      dirMeta.animations.map(function (e) { return _this.getAnimationEntryMetadata(e); }) :\n\t                      null;\n\t                  templateMeta = new CompileTemplateMetadata({\n\t                      encapsulation: dirMeta.encapsulation,\n\t                      template: dirMeta.template,\n\t                      templateUrl: dirMeta.templateUrl,\n\t                      styles: dirMeta.styles,\n\t                      styleUrls: dirMeta.styleUrls,\n\t                      animations: animations,\n\t                      interpolation: dirMeta.interpolation\n\t                  });\n\t                  changeDetectionStrategy = dirMeta.changeDetection;\n\t                  if (dirMeta.viewProviders) {\n\t                      viewProviders = this.getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringify(directiveType) + \"\\\"\");\n\t                  }\n\t                  moduleUrl = componentModuleUrl(this._reflector, directiveType, dirMeta);\n\t                  if (dirMeta.entryComponents) {\n\t                      entryComponentMetadata =\n\t                          flattenArray(dirMeta.entryComponents)\n\t                              .map(function (type) { return _this.getTypeMetadata(type, staticTypeModuleUrl(type)); })\n\t                              .concat(entryComponentMetadata);\n\t                  }\n\t                  if (!selector) {\n\t                      selector = this._schemaRegistry.getDefaultComponentElementName();\n\t                  }\n\t              }\n\t              else {\n\t                  // Directive\n\t                  if (!selector) {\n\t                      throw new Error(\"Directive \" + stringify(directiveType) + \" has no selector, please add it!\");\n\t                  }\n\t              }\n\t              var providers = [];\n\t              if (isPresent(dirMeta.providers)) {\n\t                  providers = this.getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringify(directiveType) + \"\\\"\");\n\t              }\n\t              var queries = [];\n\t              var viewQueries = [];\n\t              if (isPresent(dirMeta.queries)) {\n\t                  queries = this.getQueriesMetadata(dirMeta.queries, false, directiveType);\n\t                  viewQueries = this.getQueriesMetadata(dirMeta.queries, true, directiveType);\n\t              }\n\t              meta = CompileDirectiveMetadata.create({\n\t                  selector: selector,\n\t                  exportAs: dirMeta.exportAs,\n\t                  isComponent: !!templateMeta,\n\t                  type: this.getTypeMetadata(directiveType, moduleUrl),\n\t                  template: templateMeta,\n\t                  changeDetection: changeDetectionStrategy,\n\t                  inputs: dirMeta.inputs,\n\t                  outputs: dirMeta.outputs,\n\t                  host: dirMeta.host,\n\t                  providers: providers,\n\t                  viewProviders: viewProviders,\n\t                  queries: queries,\n\t                  viewQueries: viewQueries,\n\t                  entryComponents: entryComponentMetadata\n\t              });\n\t              this._directiveCache.set(directiveType, meta);\n\t          }\n\t          return meta;\n\t      };\n\t      CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n\t          var _this = this;\n\t          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n\t          moduleType = _angular_core.resolveForwardRef(moduleType);\n\t          var compileMeta = this._ngModuleCache.get(moduleType);\n\t          if (!compileMeta) {\n\t              var meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n\t              if (!meta) {\n\t                  return null;\n\t              }\n\t              var declaredDirectives_1 = [];\n\t              var exportedDirectives_1 = [];\n\t              var declaredPipes_1 = [];\n\t              var exportedPipes_1 = [];\n\t              var importedModules_1 = [];\n\t              var exportedModules_1 = [];\n\t              var providers_1 = [];\n\t              var entryComponents_1 = [];\n\t              var bootstrapComponents = [];\n\t              var schemas = [];\n\t              if (meta.imports) {\n\t                  flattenArray(meta.imports).forEach(function (importedType) {\n\t                      var importedModuleType;\n\t                      if (isValidType(importedType)) {\n\t                          importedModuleType = importedType;\n\t                      }\n\t                      else if (importedType && importedType.ngModule) {\n\t                          var moduleWithProviders = importedType;\n\t                          importedModuleType = moduleWithProviders.ngModule;\n\t                          if (moduleWithProviders.providers) {\n\t                              providers_1.push.apply(providers_1, _this.getProvidersMetadata(moduleWithProviders.providers, entryComponents_1, \"provider for the NgModule '\" + stringify(importedModuleType) + \"'\"));\n\t                          }\n\t                      }\n\t                      if (importedModuleType) {\n\t                          var importedMeta = _this.getNgModuleMetadata(importedModuleType, false);\n\t                          if (importedMeta === null) {\n\t                              throw new Error(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringify(importedType) + \"' imported by the module '\" + stringify(moduleType) + \"'\");\n\t                          }\n\t                          importedModules_1.push(importedMeta);\n\t                      }\n\t                      else {\n\t                          throw new Error(\"Unexpected value '\" + stringify(importedType) + \"' imported by the module '\" + stringify(moduleType) + \"'\");\n\t                      }\n\t                  });\n\t              }\n\t              if (meta.exports) {\n\t                  flattenArray(meta.exports).forEach(function (exportedType) {\n\t                      if (!isValidType(exportedType)) {\n\t                          throw new Error(\"Unexpected value '\" + stringify(exportedType) + \"' exported by the module '\" + stringify(moduleType) + \"'\");\n\t                      }\n\t                      var exportedDirMeta;\n\t                      var exportedPipeMeta;\n\t                      var exportedModuleMeta;\n\t                      if (exportedDirMeta = _this.getDirectiveMetadata(exportedType, false)) {\n\t                          exportedDirectives_1.push(exportedDirMeta);\n\t                      }\n\t                      else if (exportedPipeMeta = _this.getPipeMetadata(exportedType, false)) {\n\t                          exportedPipes_1.push(exportedPipeMeta);\n\t                      }\n\t                      else if (exportedModuleMeta = _this.getNgModuleMetadata(exportedType, false)) {\n\t                          exportedModules_1.push(exportedModuleMeta);\n\t                      }\n\t                      else {\n\t                          throw new Error(\"Unexpected \" + _this._getTypeDescriptor(exportedType) + \" '\" + stringify(exportedType) + \"' exported by the module '\" + stringify(moduleType) + \"'\");\n\t                      }\n\t                  });\n\t              }\n\t              // Note: This will be modified later, so we rely on\n\t              // getting a new instance every time!\n\t              var transitiveModule_1 = this._getTransitiveNgModuleMetadata(importedModules_1, exportedModules_1);\n\t              if (meta.declarations) {\n\t                  flattenArray(meta.declarations).forEach(function (declaredType) {\n\t                      if (!isValidType(declaredType)) {\n\t                          throw new Error(\"Unexpected value '\" + stringify(declaredType) + \"' declared by the module '\" + stringify(moduleType) + \"'\");\n\t                      }\n\t                      var declaredDirMeta;\n\t                      var declaredPipeMeta;\n\t                      if (declaredDirMeta = _this.getDirectiveMetadata(declaredType, false)) {\n\t                          _this._addDirectiveToModule(declaredDirMeta, moduleType, transitiveModule_1, declaredDirectives_1, true);\n\t                      }\n\t                      else if (declaredPipeMeta = _this.getPipeMetadata(declaredType, false)) {\n\t                          _this._addPipeToModule(declaredPipeMeta, moduleType, transitiveModule_1, declaredPipes_1, true);\n\t                      }\n\t                      else {\n\t                          throw new Error(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringify(declaredType) + \"' declared by the module '\" + stringify(moduleType) + \"'\");\n\t                      }\n\t                  });\n\t              }\n\t              // The providers of the module have to go last\n\t              // so that they overwrite any other provider we already added.\n\t              if (meta.providers) {\n\t                  providers_1.push.apply(providers_1, this.getProvidersMetadata(meta.providers, entryComponents_1, \"provider for the NgModule '\" + stringify(moduleType) + \"'\"));\n\t              }\n\t              if (meta.entryComponents) {\n\t                  entryComponents_1.push.apply(entryComponents_1, flattenArray(meta.entryComponents)\n\t                      .map(function (type) { return _this.getTypeMetadata(type, staticTypeModuleUrl(type)); }));\n\t              }\n\t              if (meta.bootstrap) {\n\t                  var typeMetadata = flattenArray(meta.bootstrap).map(function (type) {\n\t                      if (!isValidType(type)) {\n\t                          throw new Error(\"Unexpected value '\" + stringify(type) + \"' used in the bootstrap property of module '\" + stringify(moduleType) + \"'\");\n\t                      }\n\t                      return _this.getTypeMetadata(type, staticTypeModuleUrl(type));\n\t                  });\n\t                  bootstrapComponents.push.apply(bootstrapComponents, typeMetadata);\n\t              }\n\t              entryComponents_1.push.apply(entryComponents_1, bootstrapComponents);\n\t              if (meta.schemas) {\n\t                  schemas.push.apply(schemas, flattenArray(meta.schemas));\n\t              }\n\t              (_a = transitiveModule_1.entryComponents).push.apply(_a, entryComponents_1);\n\t              (_b = transitiveModule_1.providers).push.apply(_b, providers_1);\n\t              compileMeta = new CompileNgModuleMetadata({\n\t                  type: this.getTypeMetadata(moduleType, staticTypeModuleUrl(moduleType)),\n\t                  providers: providers_1,\n\t                  entryComponents: entryComponents_1,\n\t                  bootstrapComponents: bootstrapComponents,\n\t                  schemas: schemas,\n\t                  declaredDirectives: declaredDirectives_1,\n\t                  exportedDirectives: exportedDirectives_1,\n\t                  declaredPipes: declaredPipes_1,\n\t                  exportedPipes: exportedPipes_1,\n\t                  importedModules: importedModules_1,\n\t                  exportedModules: exportedModules_1,\n\t                  transitiveModule: transitiveModule_1,\n\t                  id: meta.id,\n\t              });\n\t              transitiveModule_1.modules.push(compileMeta);\n\t              this._verifyModule(compileMeta);\n\t              this._ngModuleCache.set(moduleType, compileMeta);\n\t          }\n\t          return compileMeta;\n\t          var _a, _b;\n\t      };\n\t      CompileMetadataResolver.prototype._verifyModule = function (moduleMeta) {\n\t          moduleMeta.exportedDirectives.forEach(function (dirMeta) {\n\t              if (!moduleMeta.transitiveModule.directivesSet.has(dirMeta.type.reference)) {\n\t                  throw new Error(\"Can't export directive \" + stringify(dirMeta.type.reference) + \" from \" + stringify(moduleMeta.type.reference) + \" as it was neither declared nor imported!\");\n\t              }\n\t          });\n\t          moduleMeta.exportedPipes.forEach(function (pipeMeta) {\n\t              if (!moduleMeta.transitiveModule.pipesSet.has(pipeMeta.type.reference)) {\n\t                  throw new Error(\"Can't export pipe \" + stringify(pipeMeta.type.reference) + \" from \" + stringify(moduleMeta.type.reference) + \" as it was neither declared nor imported!\");\n\t              }\n\t          });\n\t      };\n\t      CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n\t          if (this._directiveResolver.resolve(type, false)) {\n\t              return 'directive';\n\t          }\n\t          if (this._pipeResolver.resolve(type, false)) {\n\t              return 'pipe';\n\t          }\n\t          if (this._ngModuleResolver.resolve(type, false)) {\n\t              return 'module';\n\t          }\n\t          if (type.provide) {\n\t              return 'provider';\n\t          }\n\t          return 'value';\n\t      };\n\t      CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n\t          var oldModule = this._ngModuleOfTypes.get(type);\n\t          if (oldModule && oldModule !== moduleType) {\n\t              throw new Error((\"Type \" + stringify(type) + \" is part of the declarations of 2 modules: \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \"! \") +\n\t                  (\"Please consider moving \" + stringify(type) + \" to a higher module that imports \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \". \") +\n\t                  (\"You can also create a new NgModule that exports and includes \" + stringify(type) + \" then import that NgModule in \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \".\"));\n\t          }\n\t          this._ngModuleOfTypes.set(type, moduleType);\n\t      };\n\t      CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n\t          // collect `providers` / `entryComponents` from all imported and all exported modules\n\t          var transitiveModules = getTransitiveModules(importedModules.concat(exportedModules), true);\n\t          var providers = flattenArray(transitiveModules.map(function (ngModule) { return ngModule.providers; }));\n\t          var entryComponents = flattenArray(transitiveModules.map(function (ngModule) { return ngModule.entryComponents; }));\n\t          var transitiveExportedModules = getTransitiveModules(importedModules, false);\n\t          var directives = flattenArray(transitiveExportedModules.map(function (ngModule) { return ngModule.exportedDirectives; }));\n\t          var pipes = flattenArray(transitiveExportedModules.map(function (ngModule) { return ngModule.exportedPipes; }));\n\t          return new TransitiveCompileNgModuleMetadata(transitiveModules, providers, entryComponents, directives, pipes);\n\t      };\n\t      CompileMetadataResolver.prototype._addDirectiveToModule = function (dirMeta, moduleType, transitiveModule, declaredDirectives, force) {\n\t          if (force === void 0) { force = false; }\n\t          if (force || !transitiveModule.directivesSet.has(dirMeta.type.reference)) {\n\t              transitiveModule.directivesSet.add(dirMeta.type.reference);\n\t              transitiveModule.directives.push(dirMeta);\n\t              declaredDirectives.push(dirMeta);\n\t              this._addTypeToModule(dirMeta.type.reference, moduleType);\n\t              return true;\n\t          }\n\t          return false;\n\t      };\n\t      CompileMetadataResolver.prototype._addPipeToModule = function (pipeMeta, moduleType, transitiveModule, declaredPipes, force) {\n\t          if (force === void 0) { force = false; }\n\t          if (force || !transitiveModule.pipesSet.has(pipeMeta.type.reference)) {\n\t              transitiveModule.pipesSet.add(pipeMeta.type.reference);\n\t              transitiveModule.pipes.push(pipeMeta);\n\t              declaredPipes.push(pipeMeta);\n\t              this._addTypeToModule(pipeMeta.type.reference, moduleType);\n\t              return true;\n\t          }\n\t          return false;\n\t      };\n\t      CompileMetadataResolver.prototype.getTypeMetadata = function (type, moduleUrl, dependencies) {\n\t          if (dependencies === void 0) { dependencies = null; }\n\t          type = _angular_core.resolveForwardRef(type);\n\t          return new CompileTypeMetadata({\n\t              name: this.sanitizeTokenName(type),\n\t              moduleUrl: moduleUrl,\n\t              reference: type,\n\t              diDeps: this.getDependenciesMetadata(type, dependencies),\n\t              lifecycleHooks: LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(hook, type); }),\n\t          });\n\t      };\n\t      CompileMetadataResolver.prototype.getFactoryMetadata = function (factory, moduleUrl, dependencies) {\n\t          if (dependencies === void 0) { dependencies = null; }\n\t          factory = _angular_core.resolveForwardRef(factory);\n\t          return new CompileFactoryMetadata({\n\t              name: this.sanitizeTokenName(factory),\n\t              moduleUrl: moduleUrl,\n\t              reference: factory,\n\t              diDeps: this.getDependenciesMetadata(factory, dependencies)\n\t          });\n\t      };\n\t      CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType, throwIfNotFound) {\n\t          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n\t          pipeType = _angular_core.resolveForwardRef(pipeType);\n\t          var meta = this._pipeCache.get(pipeType);\n\t          if (!meta) {\n\t              var pipeMeta = this._pipeResolver.resolve(pipeType, throwIfNotFound);\n\t              if (!pipeMeta) {\n\t                  return null;\n\t              }\n\t              meta = new CompilePipeMetadata({\n\t                  type: this.getTypeMetadata(pipeType, staticTypeModuleUrl(pipeType)),\n\t                  name: pipeMeta.name,\n\t                  pure: pipeMeta.pure\n\t              });\n\t              this._pipeCache.set(pipeType, meta);\n\t          }\n\t          return meta;\n\t      };\n\t      CompileMetadataResolver.prototype.getDependenciesMetadata = function (typeOrFunc, dependencies) {\n\t          var _this = this;\n\t          var hasUnknownDeps = false;\n\t          var params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n\t          var dependenciesMetadata = params.map(function (param) {\n\t              var isAttribute = false;\n\t              var isHost = false;\n\t              var isSelf = false;\n\t              var isSkipSelf = false;\n\t              var isOptional = false;\n\t              var query = null;\n\t              var viewQuery = null;\n\t              var token = null;\n\t              if (Array.isArray(param)) {\n\t                  param.forEach(function (paramEntry) {\n\t                      if (paramEntry instanceof _angular_core.Host) {\n\t                          isHost = true;\n\t                      }\n\t                      else if (paramEntry instanceof _angular_core.Self) {\n\t                          isSelf = true;\n\t                      }\n\t                      else if (paramEntry instanceof _angular_core.SkipSelf) {\n\t                          isSkipSelf = true;\n\t                      }\n\t                      else if (paramEntry instanceof _angular_core.Optional) {\n\t                          isOptional = true;\n\t                      }\n\t                      else if (paramEntry instanceof _angular_core.Attribute) {\n\t                          isAttribute = true;\n\t                          token = paramEntry.attributeName;\n\t                      }\n\t                      else if (paramEntry instanceof _angular_core.Query) {\n\t                          if (paramEntry.isViewQuery) {\n\t                              viewQuery = paramEntry;\n\t                          }\n\t                          else {\n\t                              query = paramEntry;\n\t                          }\n\t                      }\n\t                      else if (paramEntry instanceof _angular_core.Inject) {\n\t                          token = paramEntry.token;\n\t                      }\n\t                      else if (isValidType(paramEntry) && isBlank(token)) {\n\t                          token = paramEntry;\n\t                      }\n\t                  });\n\t              }\n\t              else {\n\t                  token = param;\n\t              }\n\t              if (isBlank(token)) {\n\t                  hasUnknownDeps = true;\n\t                  return null;\n\t              }\n\t              return new CompileDiDependencyMetadata({\n\t                  isAttribute: isAttribute,\n\t                  isHost: isHost,\n\t                  isSelf: isSelf,\n\t                  isSkipSelf: isSkipSelf,\n\t                  isOptional: isOptional,\n\t                  query: query ? _this.getQueryMetadata(query, null, typeOrFunc) : null,\n\t                  viewQuery: viewQuery ? _this.getQueryMetadata(viewQuery, null, typeOrFunc) : null,\n\t                  token: _this.getTokenMetadata(token)\n\t              });\n\t          });\n\t          if (hasUnknownDeps) {\n\t              var depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringify(dep.token) : '?'; }).join(', ');\n\t              throw new Error(\"Can't resolve all parameters for \" + stringify(typeOrFunc) + \": (\" + depsTokens + \").\");\n\t          }\n\t          return dependenciesMetadata;\n\t      };\n\t      CompileMetadataResolver.prototype.getTokenMetadata = function (token) {\n\t          token = _angular_core.resolveForwardRef(token);\n\t          var compileToken;\n\t          if (typeof token === 'string') {\n\t              compileToken = new CompileTokenMetadata({ value: token });\n\t          }\n\t          else {\n\t              compileToken = new CompileTokenMetadata({\n\t                  identifier: new CompileIdentifierMetadata({\n\t                      reference: token,\n\t                      name: this.sanitizeTokenName(token),\n\t                      moduleUrl: staticTypeModuleUrl(token)\n\t                  })\n\t              });\n\t          }\n\t          return compileToken;\n\t      };\n\t      CompileMetadataResolver.prototype.getProvidersMetadata = function (providers, targetEntryComponents, debugInfo) {\n\t          var _this = this;\n\t          var compileProviders = [];\n\t          providers.forEach(function (provider, providerIdx) {\n\t              provider = _angular_core.resolveForwardRef(provider);\n\t              if (provider && typeof provider == 'object' && provider.hasOwnProperty('provide')) {\n\t                  provider = new ProviderMeta(provider.provide, provider);\n\t              }\n\t              var compileProvider;\n\t              if (Array.isArray(provider)) {\n\t                  compileProvider = _this.getProvidersMetadata(provider, targetEntryComponents, debugInfo);\n\t              }\n\t              else if (provider instanceof ProviderMeta) {\n\t                  var tokenMeta = _this.getTokenMetadata(provider.token);\n\t                  if (tokenMeta.reference ===\n\t                      resolveIdentifierToken(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS).reference) {\n\t                      targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(provider));\n\t                  }\n\t                  else {\n\t                      compileProvider = _this.getProviderMetadata(provider);\n\t                  }\n\t              }\n\t              else if (isValidType(provider)) {\n\t                  compileProvider = _this.getTypeMetadata(provider, staticTypeModuleUrl(provider));\n\t              }\n\t              else {\n\t                  var providersInfo = providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n\t                      if (seenProviderIdx < providerIdx) {\n\t                          soFar.push(\"\" + stringify(seenProvider));\n\t                      }\n\t                      else if (seenProviderIdx == providerIdx) {\n\t                          soFar.push(\"?\" + stringify(seenProvider) + \"?\");\n\t                      }\n\t                      else if (seenProviderIdx == providerIdx + 1) {\n\t                          soFar.push('...');\n\t                      }\n\t                      return soFar;\n\t                  }, [])\n\t                      .join(', ');\n\t                  throw new Error(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\");\n\t              }\n\t              if (compileProvider) {\n\t                  compileProviders.push(compileProvider);\n\t              }\n\t          });\n\t          return compileProviders;\n\t      };\n\t      CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider) {\n\t          var _this = this;\n\t          var components = [];\n\t          var collectedIdentifiers = [];\n\t          if (provider.useFactory || provider.useExisting || provider.useClass) {\n\t              throw new Error(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\");\n\t          }\n\t          if (!provider.multi) {\n\t              throw new Error(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\");\n\t          }\n\t          convertToCompileValue(provider.useValue, collectedIdentifiers);\n\t          collectedIdentifiers.forEach(function (identifier) {\n\t              var dirMeta = _this.getDirectiveMetadata(identifier.reference, false);\n\t              if (dirMeta) {\n\t                  components.push(dirMeta.type);\n\t              }\n\t          });\n\t          return components;\n\t      };\n\t      CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n\t          var compileDeps;\n\t          var compileTypeMetadata = null;\n\t          var compileFactoryMetadata = null;\n\t          if (provider.useClass) {\n\t              compileTypeMetadata = this.getTypeMetadata(provider.useClass, staticTypeModuleUrl(provider.useClass), provider.dependencies);\n\t              compileDeps = compileTypeMetadata.diDeps;\n\t          }\n\t          else if (provider.useFactory) {\n\t              compileFactoryMetadata = this.getFactoryMetadata(provider.useFactory, staticTypeModuleUrl(provider.useFactory), provider.dependencies);\n\t              compileDeps = compileFactoryMetadata.diDeps;\n\t          }\n\t          return new CompileProviderMetadata({\n\t              token: this.getTokenMetadata(provider.token),\n\t              useClass: compileTypeMetadata,\n\t              useValue: convertToCompileValue(provider.useValue, []),\n\t              useFactory: compileFactoryMetadata,\n\t              useExisting: provider.useExisting ? this.getTokenMetadata(provider.useExisting) : null,\n\t              deps: compileDeps,\n\t              multi: provider.multi\n\t          });\n\t      };\n\t      CompileMetadataResolver.prototype.getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n\t          var _this = this;\n\t          var res = [];\n\t          Object.keys(queries).forEach(function (propertyName) {\n\t              var query = queries[propertyName];\n\t              if (query.isViewQuery === isViewQuery) {\n\t                  res.push(_this.getQueryMetadata(query, propertyName, directiveType));\n\t              }\n\t          });\n\t          return res;\n\t      };\n\t      CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n\t      CompileMetadataResolver.prototype.getQueryMetadata = function (q, propertyName, typeOrFunc) {\n\t          var _this = this;\n\t          var selectors;\n\t          if (typeof q.selector === 'string') {\n\t              selectors = this._queryVarBindings(q.selector).map(function (varName) { return _this.getTokenMetadata(varName); });\n\t          }\n\t          else {\n\t              if (!q.selector) {\n\t                  throw new Error(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringify(typeOrFunc) + \"\\\" since the query selector wasn't defined.\");\n\t              }\n\t              selectors = [this.getTokenMetadata(q.selector)];\n\t          }\n\t          return new CompileQueryMetadata({\n\t              selectors: selectors,\n\t              first: q.first,\n\t              descendants: q.descendants, propertyName: propertyName,\n\t              read: q.read ? this.getTokenMetadata(q.read) : null\n\t          });\n\t      };\n\t      CompileMetadataResolver.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      CompileMetadataResolver.ctorParameters = [\n\t          { type: NgModuleResolver, },\n\t          { type: DirectiveResolver, },\n\t          { type: PipeResolver, },\n\t          { type: ElementSchemaRegistry, },\n\t          { type: ReflectorReader, },\n\t      ];\n\t      return CompileMetadataResolver;\n\t  }());\n\t  function getTransitiveModules(modules, includeImports, targetModules, visitedModules) {\n\t      if (targetModules === void 0) { targetModules = []; }\n\t      if (visitedModules === void 0) { visitedModules = new Set(); }\n\t      modules.forEach(function (ngModule) {\n\t          if (!visitedModules.has(ngModule.type.reference)) {\n\t              visitedModules.add(ngModule.type.reference);\n\t              var nestedModules = includeImports ?\n\t                  ngModule.importedModules.concat(ngModule.exportedModules) :\n\t                  ngModule.exportedModules;\n\t              getTransitiveModules(nestedModules, includeImports, targetModules, visitedModules);\n\t              // Add after recursing so imported/exported modules are before the module itself.\n\t              // This is important for overwriting providers of imported modules!\n\t              targetModules.push(ngModule);\n\t          }\n\t      });\n\t      return targetModules;\n\t  }\n\t  function flattenArray(tree, out) {\n\t      if (out === void 0) { out = []; }\n\t      if (tree) {\n\t          for (var i = 0; i < tree.length; i++) {\n\t              var item = _angular_core.resolveForwardRef(tree[i]);\n\t              if (Array.isArray(item)) {\n\t                  flattenArray(item, out);\n\t              }\n\t              else {\n\t                  out.push(item);\n\t              }\n\t          }\n\t      }\n\t      return out;\n\t  }\n\t  function isValidType(value) {\n\t      return isStaticSymbol(value) || (value instanceof _angular_core.Type);\n\t  }\n\t  function staticTypeModuleUrl(value) {\n\t      return isStaticSymbol(value) ? value.filePath : null;\n\t  }\n\t  function componentModuleUrl(reflector, type, cmpMetadata) {\n\t      if (isStaticSymbol(type)) {\n\t          return staticTypeModuleUrl(type);\n\t      }\n\t      var moduleId = cmpMetadata.moduleId;\n\t      if (typeof moduleId === 'string') {\n\t          var scheme = getUrlScheme(moduleId);\n\t          return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n\t      }\n\t      else if (moduleId !== null && moduleId !== void 0) {\n\t          throw new Error((\"moduleId should be a string in \\\"\" + stringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\") +\n\t              \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n\t      }\n\t      return reflector.importUri(type);\n\t  }\n\t  function convertToCompileValue(value, targetIdentifiers) {\n\t      return visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n\t  }\n\t  var _CompileValueConverter = (function (_super) {\n\t      __extends$17(_CompileValueConverter, _super);\n\t      function _CompileValueConverter() {\n\t          _super.apply(this, arguments);\n\t      }\n\t      _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n\t          var identifier;\n\t          if (isStaticSymbol(value)) {\n\t              identifier = new CompileIdentifierMetadata({ name: value.name, moduleUrl: value.filePath, reference: value });\n\t          }\n\t          else {\n\t              identifier = new CompileIdentifierMetadata({ reference: value });\n\t          }\n\t          targetIdentifiers.push(identifier);\n\t          return identifier;\n\t      };\n\t      return _CompileValueConverter;\n\t  }(ValueTransformer));\n\t\n\t  var ComponentFactoryDependency$1 = (function () {\n\t      function ComponentFactoryDependency(comp, placeholder) {\n\t          this.comp = comp;\n\t          this.placeholder = placeholder;\n\t      }\n\t      return ComponentFactoryDependency;\n\t  }());\n\t  var NgModuleCompileResult = (function () {\n\t      function NgModuleCompileResult(statements, ngModuleFactoryVar, dependencies) {\n\t          this.statements = statements;\n\t          this.ngModuleFactoryVar = ngModuleFactoryVar;\n\t          this.dependencies = dependencies;\n\t      }\n\t      return NgModuleCompileResult;\n\t  }());\n\t  var NgModuleCompiler = (function () {\n\t      function NgModuleCompiler() {\n\t      }\n\t      NgModuleCompiler.prototype.compile = function (ngModuleMeta, extraProviders) {\n\t          var sourceFileName = isPresent(ngModuleMeta.type.moduleUrl) ?\n\t              \"in NgModule \" + ngModuleMeta.type.name + \" in \" + ngModuleMeta.type.moduleUrl :\n\t              \"in NgModule \" + ngModuleMeta.type.name;\n\t          var sourceFile = new ParseSourceFile('', sourceFileName);\n\t          var sourceSpan = new ParseSourceSpan(new ParseLocation(sourceFile, null, null, null), new ParseLocation(sourceFile, null, null, null));\n\t          var deps = [];\n\t          var bootstrapComponentFactories = [];\n\t          var entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents.map(function (entryComponent) {\n\t              var id = new CompileIdentifierMetadata({ name: entryComponent.name });\n\t              if (ngModuleMeta.bootstrapComponents.indexOf(entryComponent) > -1) {\n\t                  bootstrapComponentFactories.push(id);\n\t              }\n\t              deps.push(new ComponentFactoryDependency$1(entryComponent, id));\n\t              return id;\n\t          });\n\t          var builder = new _InjectorBuilder(ngModuleMeta, entryComponentFactories, bootstrapComponentFactories, sourceSpan);\n\t          var providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n\t          providerParser.parse().forEach(function (provider) { return builder.addProvider(provider); });\n\t          var injectorClass = builder.build();\n\t          var ngModuleFactoryVar = ngModuleMeta.type.name + \"NgFactory\";\n\t          var ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n\t              .set(importExpr(resolveIdentifier(Identifiers.NgModuleFactory))\n\t              .instantiate([variable(injectorClass.name), importExpr(ngModuleMeta.type)], importType(resolveIdentifier(Identifiers.NgModuleFactory), [importType(ngModuleMeta.type)], [TypeModifier.Const])))\n\t              .toDeclStmt(null, [StmtModifier.Final]);\n\t          var stmts = [injectorClass, ngModuleFactoryStmt];\n\t          if (ngModuleMeta.id) {\n\t              var registerFactoryStmt = importExpr(resolveIdentifier(Identifiers.RegisterModuleFactoryFn))\n\t                  .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n\t                  .toStmt();\n\t              stmts.push(registerFactoryStmt);\n\t          }\n\t          return new NgModuleCompileResult(stmts, ngModuleFactoryVar, deps);\n\t      };\n\t      NgModuleCompiler.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      NgModuleCompiler.ctorParameters = [];\n\t      return NgModuleCompiler;\n\t  }());\n\t  var _InjectorBuilder = (function () {\n\t      function _InjectorBuilder(_ngModuleMeta, _entryComponentFactories, _bootstrapComponentFactories, _sourceSpan) {\n\t          this._ngModuleMeta = _ngModuleMeta;\n\t          this._entryComponentFactories = _entryComponentFactories;\n\t          this._bootstrapComponentFactories = _bootstrapComponentFactories;\n\t          this._sourceSpan = _sourceSpan;\n\t          this.fields = [];\n\t          this.getters = [];\n\t          this.methods = [];\n\t          this.ctorStmts = [];\n\t          this._tokens = [];\n\t          this._instances = new Map();\n\t          this._createStmts = [];\n\t          this._destroyStmts = [];\n\t      }\n\t      _InjectorBuilder.prototype.addProvider = function (resolvedProvider) {\n\t          var _this = this;\n\t          var providerValueExpressions = resolvedProvider.providers.map(function (provider) { return _this._getProviderValue(provider); });\n\t          var propName = \"_\" + resolvedProvider.token.name + \"_\" + this._instances.size;\n\t          var instance = this._createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager);\n\t          if (resolvedProvider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n\t              this._destroyStmts.push(instance.callMethod('ngOnDestroy', []).toStmt());\n\t          }\n\t          this._tokens.push(resolvedProvider.token);\n\t          this._instances.set(resolvedProvider.token.reference, instance);\n\t      };\n\t      _InjectorBuilder.prototype.build = function () {\n\t          var _this = this;\n\t          var getMethodStmts = this._tokens.map(function (token) {\n\t              var providerExpr = _this._instances.get(token.reference);\n\t              return new IfStmt(InjectMethodVars$1.token.identical(createDiTokenExpression(token)), [new ReturnStatement(providerExpr)]);\n\t          });\n\t          var methods = [\n\t              new ClassMethod('createInternal', [], this._createStmts.concat(new ReturnStatement(this._instances.get(this._ngModuleMeta.type.reference))), importType(this._ngModuleMeta.type)),\n\t              new ClassMethod('getInternal', [\n\t                  new FnParam(InjectMethodVars$1.token.name, DYNAMIC_TYPE),\n\t                  new FnParam(InjectMethodVars$1.notFoundResult.name, DYNAMIC_TYPE)\n\t              ], getMethodStmts.concat([new ReturnStatement(InjectMethodVars$1.notFoundResult)]), DYNAMIC_TYPE),\n\t              new ClassMethod('destroyInternal', [], this._destroyStmts),\n\t          ];\n\t          var parentArgs = [\n\t              variable(InjectorProps.parent.name),\n\t              literalArr(this._entryComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); })),\n\t              literalArr(this._bootstrapComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); }))\n\t          ];\n\t          var injClassName = this._ngModuleMeta.type.name + \"Injector\";\n\t          return createClassStmt({\n\t              name: injClassName,\n\t              ctorParams: [new FnParam(InjectorProps.parent.name, importType(resolveIdentifier(Identifiers.Injector)))],\n\t              parent: importExpr(resolveIdentifier(Identifiers.NgModuleInjector), [importType(this._ngModuleMeta.type)]),\n\t              parentArgs: parentArgs,\n\t              builders: [{ methods: methods }, this]\n\t          });\n\t      };\n\t      _InjectorBuilder.prototype._getProviderValue = function (provider) {\n\t          var _this = this;\n\t          var result;\n\t          if (isPresent(provider.useExisting)) {\n\t              result = this._getDependency(new CompileDiDependencyMetadata({ token: provider.useExisting }));\n\t          }\n\t          else if (isPresent(provider.useFactory)) {\n\t              var deps = provider.deps || provider.useFactory.diDeps;\n\t              var depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n\t              result = importExpr(provider.useFactory).callFn(depsExpr);\n\t          }\n\t          else if (isPresent(provider.useClass)) {\n\t              var deps = provider.deps || provider.useClass.diDeps;\n\t              var depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n\t              result =\n\t                  importExpr(provider.useClass).instantiate(depsExpr, importType(provider.useClass));\n\t          }\n\t          else {\n\t              result = convertValueToOutputAst(provider.useValue);\n\t          }\n\t          return result;\n\t      };\n\t      _InjectorBuilder.prototype._createProviderProperty = function (propName, provider, providerValueExpressions, isMulti, isEager) {\n\t          var resolvedProviderValueExpr;\n\t          var type;\n\t          if (isMulti) {\n\t              resolvedProviderValueExpr = literalArr(providerValueExpressions);\n\t              type = new ArrayType(DYNAMIC_TYPE);\n\t          }\n\t          else {\n\t              resolvedProviderValueExpr = providerValueExpressions[0];\n\t              type = providerValueExpressions[0].type;\n\t          }\n\t          if (!type) {\n\t              type = DYNAMIC_TYPE;\n\t          }\n\t          if (isEager) {\n\t              this.fields.push(new ClassField(propName, type));\n\t              this._createStmts.push(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n\t          }\n\t          else {\n\t              var internalField = \"_\" + propName;\n\t              this.fields.push(new ClassField(internalField, type));\n\t              // Note: Equals is important for JS so that it also checks the undefined case!\n\t              var getterStmts = [\n\t                  new IfStmt(THIS_EXPR.prop(internalField).isBlank(), [THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]),\n\t                  new ReturnStatement(THIS_EXPR.prop(internalField))\n\t              ];\n\t              this.getters.push(new ClassGetter(propName, getterStmts, type));\n\t          }\n\t          return THIS_EXPR.prop(propName);\n\t      };\n\t      _InjectorBuilder.prototype._getDependency = function (dep) {\n\t          var result = null;\n\t          if (dep.isValue) {\n\t              result = literal(dep.value);\n\t          }\n\t          if (!dep.isSkipSelf) {\n\t              if (dep.token &&\n\t                  (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference ||\n\t                      dep.token.reference ===\n\t                          resolveIdentifierToken(Identifiers.ComponentFactoryResolver).reference)) {\n\t                  result = THIS_EXPR;\n\t              }\n\t              if (!result) {\n\t                  result = this._instances.get(dep.token.reference);\n\t              }\n\t          }\n\t          if (!result) {\n\t              var args = [createDiTokenExpression(dep.token)];\n\t              if (dep.isOptional) {\n\t                  args.push(NULL_EXPR);\n\t              }\n\t              result = InjectorProps.parent.callMethod('get', args);\n\t          }\n\t          return result;\n\t      };\n\t      return _InjectorBuilder;\n\t  }());\n\t  var InjectorProps = (function () {\n\t      function InjectorProps() {\n\t      }\n\t      InjectorProps.parent = THIS_EXPR.prop('parent');\n\t      return InjectorProps;\n\t  }());\n\t  var InjectMethodVars$1 = (function () {\n\t      function InjectMethodVars() {\n\t      }\n\t      InjectMethodVars.token = variable('token');\n\t      InjectMethodVars.notFoundResult = variable('notFoundResult');\n\t      return InjectMethodVars;\n\t  }());\n\t\n\t  var _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\n\t  var _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\n\t  var CATCH_ERROR_VAR$2 = variable('error');\n\t  var CATCH_STACK_VAR$2 = variable('stack');\n\t  var _EmittedLine = (function () {\n\t      function _EmittedLine(indent) {\n\t          this.indent = indent;\n\t          this.parts = [];\n\t      }\n\t      return _EmittedLine;\n\t  }());\n\t  var EmitterVisitorContext = (function () {\n\t      function EmitterVisitorContext(_exportedVars, _indent) {\n\t          this._exportedVars = _exportedVars;\n\t          this._indent = _indent;\n\t          this._classes = [];\n\t          this._lines = [new _EmittedLine(_indent)];\n\t      }\n\t      EmitterVisitorContext.createRoot = function (exportedVars) {\n\t          return new EmitterVisitorContext(exportedVars, 0);\n\t      };\n\t      Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n\t          get: function () { return this._lines[this._lines.length - 1]; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      EmitterVisitorContext.prototype.isExportedVar = function (varName) { return this._exportedVars.indexOf(varName) !== -1; };\n\t      EmitterVisitorContext.prototype.println = function (lastPart) {\n\t          if (lastPart === void 0) { lastPart = ''; }\n\t          this.print(lastPart, true);\n\t      };\n\t      EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n\t      EmitterVisitorContext.prototype.print = function (part, newLine) {\n\t          if (newLine === void 0) { newLine = false; }\n\t          if (part.length > 0) {\n\t              this._currentLine.parts.push(part);\n\t          }\n\t          if (newLine) {\n\t              this._lines.push(new _EmittedLine(this._indent));\n\t          }\n\t      };\n\t      EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n\t          if (this.lineIsEmpty()) {\n\t              this._lines.pop();\n\t          }\n\t      };\n\t      EmitterVisitorContext.prototype.incIndent = function () {\n\t          this._indent++;\n\t          this._currentLine.indent = this._indent;\n\t      };\n\t      EmitterVisitorContext.prototype.decIndent = function () {\n\t          this._indent--;\n\t          this._currentLine.indent = this._indent;\n\t      };\n\t      EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n\t      EmitterVisitorContext.prototype.popClass = function () { return this._classes.pop(); };\n\t      Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n\t          get: function () {\n\t              return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      EmitterVisitorContext.prototype.toSource = function () {\n\t          var lines = this._lines;\n\t          if (lines[lines.length - 1].parts.length === 0) {\n\t              lines = lines.slice(0, lines.length - 1);\n\t          }\n\t          return lines\n\t              .map(function (line) {\n\t              if (line.parts.length > 0) {\n\t                  return _createIndent(line.indent) + line.parts.join('');\n\t              }\n\t              else {\n\t                  return '';\n\t              }\n\t          })\n\t              .join('\\n');\n\t      };\n\t      return EmitterVisitorContext;\n\t  }());\n\t  var AbstractEmitterVisitor = (function () {\n\t      function AbstractEmitterVisitor(_escapeDollarInStrings) {\n\t          this._escapeDollarInStrings = _escapeDollarInStrings;\n\t      }\n\t      AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n\t          stmt.expr.visitExpression(this, ctx);\n\t          ctx.println(';');\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n\t          ctx.print(\"return \");\n\t          stmt.value.visitExpression(this, ctx);\n\t          ctx.println(';');\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n\t          ctx.print(\"if (\");\n\t          stmt.condition.visitExpression(this, ctx);\n\t          ctx.print(\") {\");\n\t          var hasElseCase = isPresent(stmt.falseCase) && stmt.falseCase.length > 0;\n\t          if (stmt.trueCase.length <= 1 && !hasElseCase) {\n\t              ctx.print(\" \");\n\t              this.visitAllStatements(stmt.trueCase, ctx);\n\t              ctx.removeEmptyLastLine();\n\t              ctx.print(\" \");\n\t          }\n\t          else {\n\t              ctx.println();\n\t              ctx.incIndent();\n\t              this.visitAllStatements(stmt.trueCase, ctx);\n\t              ctx.decIndent();\n\t              if (hasElseCase) {\n\t                  ctx.println(\"} else {\");\n\t                  ctx.incIndent();\n\t                  this.visitAllStatements(stmt.falseCase, ctx);\n\t                  ctx.decIndent();\n\t              }\n\t          }\n\t          ctx.println(\"}\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n\t          ctx.print(\"throw \");\n\t          stmt.error.visitExpression(this, ctx);\n\t          ctx.println(\";\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n\t          var lines = stmt.comment.split('\\n');\n\t          lines.forEach(function (line) { ctx.println(\"// \" + line); });\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n\t          var lineWasEmpty = ctx.lineIsEmpty();\n\t          if (!lineWasEmpty) {\n\t              ctx.print('(');\n\t          }\n\t          ctx.print(expr.name + \" = \");\n\t          expr.value.visitExpression(this, ctx);\n\t          if (!lineWasEmpty) {\n\t              ctx.print(')');\n\t          }\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n\t          var lineWasEmpty = ctx.lineIsEmpty();\n\t          if (!lineWasEmpty) {\n\t              ctx.print('(');\n\t          }\n\t          expr.receiver.visitExpression(this, ctx);\n\t          ctx.print(\"[\");\n\t          expr.index.visitExpression(this, ctx);\n\t          ctx.print(\"] = \");\n\t          expr.value.visitExpression(this, ctx);\n\t          if (!lineWasEmpty) {\n\t              ctx.print(')');\n\t          }\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n\t          var lineWasEmpty = ctx.lineIsEmpty();\n\t          if (!lineWasEmpty) {\n\t              ctx.print('(');\n\t          }\n\t          expr.receiver.visitExpression(this, ctx);\n\t          ctx.print(\".\" + expr.name + \" = \");\n\t          expr.value.visitExpression(this, ctx);\n\t          if (!lineWasEmpty) {\n\t              ctx.print(')');\n\t          }\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n\t          expr.receiver.visitExpression(this, ctx);\n\t          var name = expr.name;\n\t          if (isPresent(expr.builtin)) {\n\t              name = this.getBuiltinMethodName(expr.builtin);\n\t              if (isBlank(name)) {\n\t                  // some builtins just mean to skip the call.\n\t                  return null;\n\t              }\n\t          }\n\t          ctx.print(\".\" + name + \"(\");\n\t          this.visitAllExpressions(expr.args, ctx, \",\");\n\t          ctx.print(\")\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n\t          expr.fn.visitExpression(this, ctx);\n\t          ctx.print(\"(\");\n\t          this.visitAllExpressions(expr.args, ctx, ',');\n\t          ctx.print(\")\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n\t          var varName = ast.name;\n\t          if (isPresent(ast.builtin)) {\n\t              switch (ast.builtin) {\n\t                  case BuiltinVar.Super:\n\t                      varName = 'super';\n\t                      break;\n\t                  case BuiltinVar.This:\n\t                      varName = 'this';\n\t                      break;\n\t                  case BuiltinVar.CatchError:\n\t                      varName = CATCH_ERROR_VAR$2.name;\n\t                      break;\n\t                  case BuiltinVar.CatchStack:\n\t                      varName = CATCH_STACK_VAR$2.name;\n\t                      break;\n\t                  default:\n\t                      throw new Error(\"Unknown builtin variable \" + ast.builtin);\n\t              }\n\t          }\n\t          ctx.print(varName);\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n\t          ctx.print(\"new \");\n\t          ast.classExpr.visitExpression(this, ctx);\n\t          ctx.print(\"(\");\n\t          this.visitAllExpressions(ast.args, ctx, ',');\n\t          ctx.print(\")\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx, absentValue) {\n\t          if (absentValue === void 0) { absentValue = 'null'; }\n\t          var value = ast.value;\n\t          if (typeof value === 'string') {\n\t              ctx.print(escapeIdentifier(value, this._escapeDollarInStrings));\n\t          }\n\t          else if (isBlank(value)) {\n\t              ctx.print(absentValue);\n\t          }\n\t          else {\n\t              ctx.print(\"\" + value);\n\t          }\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n\t          ctx.print(\"(\");\n\t          ast.condition.visitExpression(this, ctx);\n\t          ctx.print('? ');\n\t          ast.trueCase.visitExpression(this, ctx);\n\t          ctx.print(': ');\n\t          ast.falseCase.visitExpression(this, ctx);\n\t          ctx.print(\")\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n\t          ctx.print('!');\n\t          ast.condition.visitExpression(this, ctx);\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n\t          var opStr;\n\t          switch (ast.operator) {\n\t              case BinaryOperator.Equals:\n\t                  opStr = '==';\n\t                  break;\n\t              case BinaryOperator.Identical:\n\t                  opStr = '===';\n\t                  break;\n\t              case BinaryOperator.NotEquals:\n\t                  opStr = '!=';\n\t                  break;\n\t              case BinaryOperator.NotIdentical:\n\t                  opStr = '!==';\n\t                  break;\n\t              case BinaryOperator.And:\n\t                  opStr = '&&';\n\t                  break;\n\t              case BinaryOperator.Or:\n\t                  opStr = '||';\n\t                  break;\n\t              case BinaryOperator.Plus:\n\t                  opStr = '+';\n\t                  break;\n\t              case BinaryOperator.Minus:\n\t                  opStr = '-';\n\t                  break;\n\t              case BinaryOperator.Divide:\n\t                  opStr = '/';\n\t                  break;\n\t              case BinaryOperator.Multiply:\n\t                  opStr = '*';\n\t                  break;\n\t              case BinaryOperator.Modulo:\n\t                  opStr = '%';\n\t                  break;\n\t              case BinaryOperator.Lower:\n\t                  opStr = '<';\n\t                  break;\n\t              case BinaryOperator.LowerEquals:\n\t                  opStr = '<=';\n\t                  break;\n\t              case BinaryOperator.Bigger:\n\t                  opStr = '>';\n\t                  break;\n\t              case BinaryOperator.BiggerEquals:\n\t                  opStr = '>=';\n\t                  break;\n\t              default:\n\t                  throw new Error(\"Unknown operator \" + ast.operator);\n\t          }\n\t          ctx.print(\"(\");\n\t          ast.lhs.visitExpression(this, ctx);\n\t          ctx.print(\" \" + opStr + \" \");\n\t          ast.rhs.visitExpression(this, ctx);\n\t          ctx.print(\")\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n\t          ast.receiver.visitExpression(this, ctx);\n\t          ctx.print(\".\");\n\t          ctx.print(ast.name);\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n\t          ast.receiver.visitExpression(this, ctx);\n\t          ctx.print(\"[\");\n\t          ast.index.visitExpression(this, ctx);\n\t          ctx.print(\"]\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n\t          var useNewLine = ast.entries.length > 1;\n\t          ctx.print(\"[\", useNewLine);\n\t          ctx.incIndent();\n\t          this.visitAllExpressions(ast.entries, ctx, ',', useNewLine);\n\t          ctx.decIndent();\n\t          ctx.print(\"]\", useNewLine);\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n\t          var _this = this;\n\t          var useNewLine = ast.entries.length > 1;\n\t          ctx.print(\"{\", useNewLine);\n\t          ctx.incIndent();\n\t          this.visitAllObjects(function (entry) {\n\t              ctx.print(escapeIdentifier(entry[0], _this._escapeDollarInStrings, false) + \": \");\n\t              entry[1].visitExpression(_this, ctx);\n\t          }, ast.entries, ctx, ',', useNewLine);\n\t          ctx.decIndent();\n\t          ctx.print(\"}\", useNewLine);\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator, newLine) {\n\t          var _this = this;\n\t          if (newLine === void 0) { newLine = false; }\n\t          this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator, newLine);\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator, newLine) {\n\t          if (newLine === void 0) { newLine = false; }\n\t          for (var i = 0; i < expressions.length; i++) {\n\t              if (i > 0) {\n\t                  ctx.print(separator, newLine);\n\t              }\n\t              handler(expressions[i]);\n\t          }\n\t          if (newLine) {\n\t              ctx.println();\n\t          }\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n\t          var _this = this;\n\t          statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n\t      };\n\t      return AbstractEmitterVisitor;\n\t  }());\n\t  function escapeIdentifier(input, escapeDollar, alwaysQuote) {\n\t      if (alwaysQuote === void 0) { alwaysQuote = true; }\n\t      if (isBlank(input)) {\n\t          return null;\n\t      }\n\t      var body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n\t          var match = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              match[_i - 0] = arguments[_i];\n\t          }\n\t          if (match[0] == '$') {\n\t              return escapeDollar ? '\\\\$' : '$';\n\t          }\n\t          else if (match[0] == '\\n') {\n\t              return '\\\\n';\n\t          }\n\t          else if (match[0] == '\\r') {\n\t              return '\\\\r';\n\t          }\n\t          else {\n\t              return \"\\\\\" + match[0];\n\t          }\n\t      });\n\t      var requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n\t      return requiresQuotes ? \"'\" + body + \"'\" : body;\n\t  }\n\t  function _createIndent(count) {\n\t      var res = '';\n\t      for (var i = 0; i < count; i++) {\n\t          res += '  ';\n\t      }\n\t      return res;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$18 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var _debugModuleUrl = 'asset://debug/lib';\n\t  function debugOutputAstAsTypeScript(ast) {\n\t      var converter = new _TsEmitterVisitor(_debugModuleUrl);\n\t      var ctx = EmitterVisitorContext.createRoot([]);\n\t      var asts = Array.isArray(ast) ? ast : [ast];\n\t      asts.forEach(function (ast) {\n\t          if (ast instanceof Statement) {\n\t              ast.visitStatement(converter, ctx);\n\t          }\n\t          else if (ast instanceof Expression) {\n\t              ast.visitExpression(converter, ctx);\n\t          }\n\t          else if (ast instanceof Type$1) {\n\t              ast.visitType(converter, ctx);\n\t          }\n\t          else {\n\t              throw new Error(\"Don't know how to print debug info for \" + ast);\n\t          }\n\t      });\n\t      return ctx.toSource();\n\t  }\n\t  var TypeScriptEmitter = (function () {\n\t      function TypeScriptEmitter(_importGenerator) {\n\t          this._importGenerator = _importGenerator;\n\t      }\n\t      TypeScriptEmitter.prototype.emitStatements = function (moduleUrl, stmts, exportedVars) {\n\t          var _this = this;\n\t          var converter = new _TsEmitterVisitor(moduleUrl);\n\t          var ctx = EmitterVisitorContext.createRoot(exportedVars);\n\t          converter.visitAllStatements(stmts, ctx);\n\t          var srcParts = [];\n\t          converter.importsWithPrefixes.forEach(function (prefix, importedModuleUrl) {\n\t              // Note: can't write the real word for import as it screws up system.js auto detection...\n\t              srcParts.push(\"imp\" +\n\t                  (\"ort * as \" + prefix + \" from '\" + _this._importGenerator.getImportPath(moduleUrl, importedModuleUrl) + \"';\"));\n\t          });\n\t          srcParts.push(ctx.toSource());\n\t          return srcParts.join('\\n');\n\t      };\n\t      return TypeScriptEmitter;\n\t  }());\n\t  var _TsEmitterVisitor = (function (_super) {\n\t      __extends$18(_TsEmitterVisitor, _super);\n\t      function _TsEmitterVisitor(_moduleUrl) {\n\t          _super.call(this, false);\n\t          this._moduleUrl = _moduleUrl;\n\t          this.importsWithPrefixes = new Map();\n\t      }\n\t      _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n\t          if (defaultType === void 0) { defaultType = 'any'; }\n\t          if (isPresent(t)) {\n\t              t.visitType(this, ctx);\n\t          }\n\t          else {\n\t              ctx.print(defaultType);\n\t          }\n\t      };\n\t      _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n\t          _super.prototype.visitLiteralExpr.call(this, ast, ctx, '(null as any)');\n\t      };\n\t      // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n\t      // In SNC mode, [] have the type never[], so we cast here to any[].\n\t      // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n\t      // start with [].concat. see https://github.com/angular/angular/pull/11846\n\t      _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n\t          if (ast.entries.length === 0) {\n\t              ctx.print('(');\n\t          }\n\t          var result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n\t          if (ast.entries.length === 0) {\n\t              ctx.print(' as any[])');\n\t          }\n\t          return result;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n\t          this._visitIdentifier(ast.value, ast.typeParams, ctx);\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n\t          if (ctx.isExportedVar(stmt.name)) {\n\t              ctx.print(\"export \");\n\t          }\n\t          if (stmt.hasModifier(StmtModifier.Final)) {\n\t              ctx.print(\"const\");\n\t          }\n\t          else {\n\t              ctx.print(\"var\");\n\t          }\n\t          ctx.print(\" \" + stmt.name + \":\");\n\t          this.visitType(stmt.type, ctx);\n\t          ctx.print(\" = \");\n\t          stmt.value.visitExpression(this, ctx);\n\t          ctx.println(\";\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n\t          ctx.print(\"(<\");\n\t          ast.type.visitType(this, ctx);\n\t          ctx.print(\">\");\n\t          ast.value.visitExpression(this, ctx);\n\t          ctx.print(\")\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n\t          var _this = this;\n\t          ctx.pushClass(stmt);\n\t          if (ctx.isExportedVar(stmt.name)) {\n\t              ctx.print(\"export \");\n\t          }\n\t          ctx.print(\"class \" + stmt.name);\n\t          if (isPresent(stmt.parent)) {\n\t              ctx.print(\" extends \");\n\t              stmt.parent.visitExpression(this, ctx);\n\t          }\n\t          ctx.println(\" {\");\n\t          ctx.incIndent();\n\t          stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n\t          if (isPresent(stmt.constructorMethod)) {\n\t              this._visitClassConstructor(stmt, ctx);\n\t          }\n\t          stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n\t          stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t          ctx.popClass();\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n\t          if (field.hasModifier(StmtModifier.Private)) {\n\t              // comment out as a workaround for #10967\n\t              ctx.print(\"/*private*/ \");\n\t          }\n\t          ctx.print(field.name);\n\t          ctx.print(':');\n\t          this.visitType(field.type, ctx);\n\t          ctx.println(\";\");\n\t      };\n\t      _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n\t          if (getter.hasModifier(StmtModifier.Private)) {\n\t              ctx.print(\"private \");\n\t          }\n\t          ctx.print(\"get \" + getter.name + \"()\");\n\t          ctx.print(':');\n\t          this.visitType(getter.type, ctx);\n\t          ctx.println(\" {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(getter.body, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t      };\n\t      _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n\t          ctx.print(\"constructor(\");\n\t          this._visitParams(stmt.constructorMethod.params, ctx);\n\t          ctx.println(\") {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(stmt.constructorMethod.body, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t      };\n\t      _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n\t          if (method.hasModifier(StmtModifier.Private)) {\n\t              ctx.print(\"private \");\n\t          }\n\t          ctx.print(method.name + \"(\");\n\t          this._visitParams(method.params, ctx);\n\t          ctx.print(\"):\");\n\t          this.visitType(method.type, ctx, 'void');\n\t          ctx.println(\" {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(method.body, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t      };\n\t      _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n\t          ctx.print(\"(\");\n\t          this._visitParams(ast.params, ctx);\n\t          ctx.print(\"):\");\n\t          this.visitType(ast.type, ctx, 'void');\n\t          ctx.println(\" => {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(ast.statements, ctx);\n\t          ctx.decIndent();\n\t          ctx.print(\"}\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n\t          if (ctx.isExportedVar(stmt.name)) {\n\t              ctx.print(\"export \");\n\t          }\n\t          ctx.print(\"function \" + stmt.name + \"(\");\n\t          this._visitParams(stmt.params, ctx);\n\t          ctx.print(\"):\");\n\t          this.visitType(stmt.type, ctx, 'void');\n\t          ctx.println(\" {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(stmt.statements, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n\t          ctx.println(\"try {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(stmt.bodyStmts, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"} catch (\" + CATCH_ERROR_VAR$2.name + \") {\");\n\t          ctx.incIndent();\n\t          var catchStmts = [CATCH_STACK_VAR$2.set(CATCH_ERROR_VAR$2.prop('stack')).toDeclStmt(null, [\n\t                  StmtModifier.Final\n\t              ])].concat(stmt.catchStmts);\n\t          this.visitAllStatements(catchStmts, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n\t          var typeStr;\n\t          switch (type.name) {\n\t              case BuiltinTypeName.Bool:\n\t                  typeStr = 'boolean';\n\t                  break;\n\t              case BuiltinTypeName.Dynamic:\n\t                  typeStr = 'any';\n\t                  break;\n\t              case BuiltinTypeName.Function:\n\t                  typeStr = 'Function';\n\t                  break;\n\t              case BuiltinTypeName.Number:\n\t                  typeStr = 'number';\n\t                  break;\n\t              case BuiltinTypeName.Int:\n\t                  typeStr = 'number';\n\t                  break;\n\t              case BuiltinTypeName.String:\n\t                  typeStr = 'string';\n\t                  break;\n\t              default:\n\t                  throw new Error(\"Unsupported builtin type \" + type.name);\n\t          }\n\t          ctx.print(typeStr);\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitExternalType = function (ast, ctx) {\n\t          this._visitIdentifier(ast.value, ast.typeParams, ctx);\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n\t          this.visitType(type.of, ctx);\n\t          ctx.print(\"[]\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n\t          ctx.print(\"{[key: string]:\");\n\t          this.visitType(type.valueType, ctx);\n\t          ctx.print(\"}\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n\t          var name;\n\t          switch (method) {\n\t              case BuiltinMethod.ConcatArray:\n\t                  name = 'concat';\n\t                  break;\n\t              case BuiltinMethod.SubscribeObservable:\n\t                  name = 'subscribe';\n\t                  break;\n\t              case BuiltinMethod.Bind:\n\t                  name = 'bind';\n\t                  break;\n\t              default:\n\t                  throw new Error(\"Unknown builtin method: \" + method);\n\t          }\n\t          return name;\n\t      };\n\t      _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n\t          var _this = this;\n\t          this.visitAllObjects(function (param) {\n\t              ctx.print(param.name);\n\t              ctx.print(':');\n\t              _this.visitType(param.type, ctx);\n\t          }, params, ctx, ',');\n\t      };\n\t      _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n\t          var _this = this;\n\t          if (isBlank(value.name)) {\n\t              throw new Error(\"Internal error: unknown identifier \" + value);\n\t          }\n\t          if (isPresent(value.moduleUrl) && value.moduleUrl != this._moduleUrl) {\n\t              var prefix = this.importsWithPrefixes.get(value.moduleUrl);\n\t              if (isBlank(prefix)) {\n\t                  prefix = \"import\" + this.importsWithPrefixes.size;\n\t                  this.importsWithPrefixes.set(value.moduleUrl, prefix);\n\t              }\n\t              ctx.print(prefix + \".\");\n\t          }\n\t          if (value.reference && value.reference.members) {\n\t              ctx.print(value.reference.name);\n\t              ctx.print('.');\n\t              ctx.print(value.reference.members.join('.'));\n\t          }\n\t          else {\n\t              ctx.print(value.name);\n\t          }\n\t          if (isPresent(typeParams) && typeParams.length > 0) {\n\t              ctx.print(\"<\");\n\t              this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, typeParams, ctx, ',');\n\t              ctx.print(\">\");\n\t          }\n\t      };\n\t      return _TsEmitterVisitor;\n\t  }(AbstractEmitterVisitor));\n\t\n\t  function interpretStatements(statements, resultVar) {\n\t      var stmtsWithReturn = statements.concat([new ReturnStatement(variable(resultVar))]);\n\t      var ctx = new _ExecutionContext(null, null, null, new Map());\n\t      var visitor = new StatementInterpreter();\n\t      var result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n\t      return isPresent(result) ? result.value : null;\n\t  }\n\t  function _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n\t      var childCtx = ctx.createChildWihtLocalVars();\n\t      for (var i = 0; i < varNames.length; i++) {\n\t          childCtx.vars.set(varNames[i], varValues[i]);\n\t      }\n\t      var result = visitor.visitAllStatements(statements, childCtx);\n\t      return isPresent(result) ? result.value : null;\n\t  }\n\t  var _ExecutionContext = (function () {\n\t      function _ExecutionContext(parent, instance, className, vars) {\n\t          this.parent = parent;\n\t          this.instance = instance;\n\t          this.className = className;\n\t          this.vars = vars;\n\t      }\n\t      _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n\t          return new _ExecutionContext(this, this.instance, this.className, new Map());\n\t      };\n\t      return _ExecutionContext;\n\t  }());\n\t  var ReturnValue = (function () {\n\t      function ReturnValue(value) {\n\t          this.value = value;\n\t      }\n\t      return ReturnValue;\n\t  }());\n\t  function createDynamicClass(_classStmt, _ctx, _visitor) {\n\t      var propertyDescriptors = {};\n\t      _classStmt.getters.forEach(function (getter) {\n\t          // Note: use `function` instead of arrow function to capture `this`\n\t          propertyDescriptors[getter.name] = {\n\t              configurable: false,\n\t              get: function () {\n\t                  var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n\t                  return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n\t              }\n\t          };\n\t      });\n\t      _classStmt.methods.forEach(function (method) {\n\t          var paramNames = method.params.map(function (param) { return param.name; });\n\t          // Note: use `function` instead of arrow function to capture `this`\n\t          propertyDescriptors[method.name] = {\n\t              writable: false,\n\t              configurable: false,\n\t              value: function () {\n\t                  var args = [];\n\t                  for (var _i = 0; _i < arguments.length; _i++) {\n\t                      args[_i - 0] = arguments[_i];\n\t                  }\n\t                  var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n\t                  return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n\t              }\n\t          };\n\t      });\n\t      var ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n\t      // Note: use `function` instead of arrow function to capture `this`\n\t      var ctor = function () {\n\t          var _this = this;\n\t          var args = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              args[_i - 0] = arguments[_i];\n\t          }\n\t          var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n\t          _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n\t          _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n\t      };\n\t      var superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n\t      ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n\t      return ctor;\n\t  }\n\t  var StatementInterpreter = (function () {\n\t      function StatementInterpreter() {\n\t      }\n\t      StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n\t      StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n\t          ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n\t          return null;\n\t      };\n\t      StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n\t          var value = expr.value.visitExpression(this, ctx);\n\t          var currCtx = ctx;\n\t          while (currCtx != null) {\n\t              if (currCtx.vars.has(expr.name)) {\n\t                  currCtx.vars.set(expr.name, value);\n\t                  return value;\n\t              }\n\t              currCtx = currCtx.parent;\n\t          }\n\t          throw new Error(\"Not declared variable \" + expr.name);\n\t      };\n\t      StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n\t          var varName = ast.name;\n\t          if (isPresent(ast.builtin)) {\n\t              switch (ast.builtin) {\n\t                  case BuiltinVar.Super:\n\t                      return ctx.instance.__proto__;\n\t                  case BuiltinVar.This:\n\t                      return ctx.instance;\n\t                  case BuiltinVar.CatchError:\n\t                      varName = CATCH_ERROR_VAR$1;\n\t                      break;\n\t                  case BuiltinVar.CatchStack:\n\t                      varName = CATCH_STACK_VAR$1;\n\t                      break;\n\t                  default:\n\t                      throw new Error(\"Unknown builtin variable \" + ast.builtin);\n\t              }\n\t          }\n\t          var currCtx = ctx;\n\t          while (currCtx != null) {\n\t              if (currCtx.vars.has(varName)) {\n\t                  return currCtx.vars.get(varName);\n\t              }\n\t              currCtx = currCtx.parent;\n\t          }\n\t          throw new Error(\"Not declared variable \" + varName);\n\t      };\n\t      StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n\t          var receiver = expr.receiver.visitExpression(this, ctx);\n\t          var index = expr.index.visitExpression(this, ctx);\n\t          var value = expr.value.visitExpression(this, ctx);\n\t          receiver[index] = value;\n\t          return value;\n\t      };\n\t      StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n\t          var receiver = expr.receiver.visitExpression(this, ctx);\n\t          var value = expr.value.visitExpression(this, ctx);\n\t          receiver[expr.name] = value;\n\t          return value;\n\t      };\n\t      StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n\t          var receiver = expr.receiver.visitExpression(this, ctx);\n\t          var args = this.visitAllExpressions(expr.args, ctx);\n\t          var result;\n\t          if (isPresent(expr.builtin)) {\n\t              switch (expr.builtin) {\n\t                  case BuiltinMethod.ConcatArray:\n\t                      result = receiver.concat(args[0]);\n\t                      break;\n\t                  case BuiltinMethod.SubscribeObservable:\n\t                      result = receiver.subscribe({ next: args[0] });\n\t                      break;\n\t                  case BuiltinMethod.Bind:\n\t                      result = receiver.bind(args[0]);\n\t                      break;\n\t                  default:\n\t                      throw new Error(\"Unknown builtin method \" + expr.builtin);\n\t              }\n\t          }\n\t          else {\n\t              result = receiver[expr.name].apply(receiver, args);\n\t          }\n\t          return result;\n\t      };\n\t      StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n\t          var args = this.visitAllExpressions(stmt.args, ctx);\n\t          var fnExpr = stmt.fn;\n\t          if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n\t              ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n\t              return null;\n\t          }\n\t          else {\n\t              var fn = stmt.fn.visitExpression(this, ctx);\n\t              return fn.apply(null, args);\n\t          }\n\t      };\n\t      StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n\t          return new ReturnValue(stmt.value.visitExpression(this, ctx));\n\t      };\n\t      StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n\t          var clazz = createDynamicClass(stmt, ctx, this);\n\t          ctx.vars.set(stmt.name, clazz);\n\t          return null;\n\t      };\n\t      StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n\t          return stmt.expr.visitExpression(this, ctx);\n\t      };\n\t      StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n\t          var condition = stmt.condition.visitExpression(this, ctx);\n\t          if (condition) {\n\t              return this.visitAllStatements(stmt.trueCase, ctx);\n\t          }\n\t          else if (isPresent(stmt.falseCase)) {\n\t              return this.visitAllStatements(stmt.falseCase, ctx);\n\t          }\n\t          return null;\n\t      };\n\t      StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n\t          try {\n\t              return this.visitAllStatements(stmt.bodyStmts, ctx);\n\t          }\n\t          catch (e) {\n\t              var childCtx = ctx.createChildWihtLocalVars();\n\t              childCtx.vars.set(CATCH_ERROR_VAR$1, e);\n\t              childCtx.vars.set(CATCH_STACK_VAR$1, e.stack);\n\t              return this.visitAllStatements(stmt.catchStmts, childCtx);\n\t          }\n\t      };\n\t      StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n\t          throw stmt.error.visitExpression(this, ctx);\n\t      };\n\t      StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n\t      StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n\t          var args = this.visitAllExpressions(ast.args, ctx);\n\t          var clazz = ast.classExpr.visitExpression(this, ctx);\n\t          return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n\t      };\n\t      StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n\t      StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n\t          return ast.value.reference;\n\t      };\n\t      StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n\t          if (ast.condition.visitExpression(this, ctx)) {\n\t              return ast.trueCase.visitExpression(this, ctx);\n\t          }\n\t          else if (isPresent(ast.falseCase)) {\n\t              return ast.falseCase.visitExpression(this, ctx);\n\t          }\n\t          return null;\n\t      };\n\t      StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n\t          return !ast.condition.visitExpression(this, ctx);\n\t      };\n\t      StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n\t          return ast.value.visitExpression(this, ctx);\n\t      };\n\t      StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n\t          var paramNames = ast.params.map(function (param) { return param.name; });\n\t          return _declareFn(paramNames, ast.statements, ctx, this);\n\t      };\n\t      StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n\t          var paramNames = stmt.params.map(function (param) { return param.name; });\n\t          ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n\t          return null;\n\t      };\n\t      StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n\t          var _this = this;\n\t          var lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n\t          var rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n\t          switch (ast.operator) {\n\t              case BinaryOperator.Equals:\n\t                  return lhs() == rhs();\n\t              case BinaryOperator.Identical:\n\t                  return lhs() === rhs();\n\t              case BinaryOperator.NotEquals:\n\t                  return lhs() != rhs();\n\t              case BinaryOperator.NotIdentical:\n\t                  return lhs() !== rhs();\n\t              case BinaryOperator.And:\n\t                  return lhs() && rhs();\n\t              case BinaryOperator.Or:\n\t                  return lhs() || rhs();\n\t              case BinaryOperator.Plus:\n\t                  return lhs() + rhs();\n\t              case BinaryOperator.Minus:\n\t                  return lhs() - rhs();\n\t              case BinaryOperator.Divide:\n\t                  return lhs() / rhs();\n\t              case BinaryOperator.Multiply:\n\t                  return lhs() * rhs();\n\t              case BinaryOperator.Modulo:\n\t                  return lhs() % rhs();\n\t              case BinaryOperator.Lower:\n\t                  return lhs() < rhs();\n\t              case BinaryOperator.LowerEquals:\n\t                  return lhs() <= rhs();\n\t              case BinaryOperator.Bigger:\n\t                  return lhs() > rhs();\n\t              case BinaryOperator.BiggerEquals:\n\t                  return lhs() >= rhs();\n\t              default:\n\t                  throw new Error(\"Unknown operator \" + ast.operator);\n\t          }\n\t      };\n\t      StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n\t          var result;\n\t          var receiver = ast.receiver.visitExpression(this, ctx);\n\t          result = receiver[ast.name];\n\t          return result;\n\t      };\n\t      StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n\t          var receiver = ast.receiver.visitExpression(this, ctx);\n\t          var prop = ast.index.visitExpression(this, ctx);\n\t          return receiver[prop];\n\t      };\n\t      StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n\t          return this.visitAllExpressions(ast.entries, ctx);\n\t      };\n\t      StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n\t          var _this = this;\n\t          var result = {};\n\t          ast.entries.forEach(function (entry) { return result[entry[0]] =\n\t              entry[1].visitExpression(_this, ctx); });\n\t          return result;\n\t      };\n\t      StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n\t          var _this = this;\n\t          return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n\t      };\n\t      StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n\t          for (var i = 0; i < statements.length; i++) {\n\t              var stmt = statements[i];\n\t              var val = stmt.visitStatement(this, ctx);\n\t              if (val instanceof ReturnValue) {\n\t                  return val;\n\t              }\n\t          }\n\t          return null;\n\t      };\n\t      return StatementInterpreter;\n\t  }());\n\t  function _declareFn(varNames, statements, ctx, visitor) {\n\t      return function () {\n\t          var args = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              args[_i - 0] = arguments[_i];\n\t          }\n\t          return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n\t      };\n\t  }\n\t  var CATCH_ERROR_VAR$1 = 'error';\n\t  var CATCH_STACK_VAR$1 = 'stack';\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$20 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var AbstractJsEmitterVisitor = (function (_super) {\n\t      __extends$20(AbstractJsEmitterVisitor, _super);\n\t      function AbstractJsEmitterVisitor() {\n\t          _super.call(this, false);\n\t      }\n\t      AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n\t          var _this = this;\n\t          ctx.pushClass(stmt);\n\t          this._visitClassConstructor(stmt, ctx);\n\t          if (isPresent(stmt.parent)) {\n\t              ctx.print(stmt.name + \".prototype = Object.create(\");\n\t              stmt.parent.visitExpression(this, ctx);\n\t              ctx.println(\".prototype);\");\n\t          }\n\t          stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n\t          stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n\t          ctx.popClass();\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n\t          ctx.print(\"function \" + stmt.name + \"(\");\n\t          if (isPresent(stmt.constructorMethod)) {\n\t              this._visitParams(stmt.constructorMethod.params, ctx);\n\t          }\n\t          ctx.println(\") {\");\n\t          ctx.incIndent();\n\t          if (isPresent(stmt.constructorMethod)) {\n\t              if (stmt.constructorMethod.body.length > 0) {\n\t                  ctx.println(\"var self = this;\");\n\t                  this.visitAllStatements(stmt.constructorMethod.body, ctx);\n\t              }\n\t          }\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t      };\n\t      AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n\t          ctx.println(\"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n\t          ctx.incIndent();\n\t          if (getter.body.length > 0) {\n\t              ctx.println(\"var self = this;\");\n\t              this.visitAllStatements(getter.body, ctx);\n\t          }\n\t          ctx.decIndent();\n\t          ctx.println(\"}});\");\n\t      };\n\t      AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n\t          ctx.print(stmt.name + \".prototype.\" + method.name + \" = function(\");\n\t          this._visitParams(method.params, ctx);\n\t          ctx.println(\") {\");\n\t          ctx.incIndent();\n\t          if (method.body.length > 0) {\n\t              ctx.println(\"var self = this;\");\n\t              this.visitAllStatements(method.body, ctx);\n\t          }\n\t          ctx.decIndent();\n\t          ctx.println(\"};\");\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n\t          if (ast.builtin === BuiltinVar.This) {\n\t              ctx.print('self');\n\t          }\n\t          else if (ast.builtin === BuiltinVar.Super) {\n\t              throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n\t          }\n\t          else {\n\t              _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n\t          }\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n\t          ctx.print(\"var \" + stmt.name + \" = \");\n\t          stmt.value.visitExpression(this, ctx);\n\t          ctx.println(\";\");\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n\t          ast.value.visitExpression(this, ctx);\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n\t          var fnExpr = expr.fn;\n\t          if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n\t              ctx.currentClass.parent.visitExpression(this, ctx);\n\t              ctx.print(\".call(this\");\n\t              if (expr.args.length > 0) {\n\t                  ctx.print(\", \");\n\t                  this.visitAllExpressions(expr.args, ctx, ',');\n\t              }\n\t              ctx.print(\")\");\n\t          }\n\t          else {\n\t              _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n\t          }\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n\t          ctx.print(\"function(\");\n\t          this._visitParams(ast.params, ctx);\n\t          ctx.println(\") {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(ast.statements, ctx);\n\t          ctx.decIndent();\n\t          ctx.print(\"}\");\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n\t          ctx.print(\"function \" + stmt.name + \"(\");\n\t          this._visitParams(stmt.params, ctx);\n\t          ctx.println(\") {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(stmt.statements, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n\t          ctx.println(\"try {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(stmt.bodyStmts, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"} catch (\" + CATCH_ERROR_VAR$2.name + \") {\");\n\t          ctx.incIndent();\n\t          var catchStmts = [CATCH_STACK_VAR$2.set(CATCH_ERROR_VAR$2.prop('stack')).toDeclStmt(null, [\n\t                  StmtModifier.Final\n\t              ])].concat(stmt.catchStmts);\n\t          this.visitAllStatements(catchStmts, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n\t          this.visitAllObjects(function (param) { return ctx.print(param.name); }, params, ctx, ',');\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n\t          var name;\n\t          switch (method) {\n\t              case BuiltinMethod.ConcatArray:\n\t                  name = 'concat';\n\t                  break;\n\t              case BuiltinMethod.SubscribeObservable:\n\t                  name = 'subscribe';\n\t                  break;\n\t              case BuiltinMethod.Bind:\n\t                  name = 'bind';\n\t                  break;\n\t              default:\n\t                  throw new Error(\"Unknown builtin method: \" + method);\n\t          }\n\t          return name;\n\t      };\n\t      return AbstractJsEmitterVisitor;\n\t  }(AbstractEmitterVisitor));\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$19 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  function evalExpression(sourceUrl, expr, declarations, vars) {\n\t      var fnBody = declarations + \"\\nreturn \" + expr + \"\\n//# sourceURL=\" + sourceUrl;\n\t      var fnArgNames = [];\n\t      var fnArgValues = [];\n\t      for (var argName in vars) {\n\t          fnArgNames.push(argName);\n\t          fnArgValues.push(vars[argName]);\n\t      }\n\t      return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n\t  }\n\t  function jitStatements(sourceUrl, statements, resultVar) {\n\t      var converter = new JitEmitterVisitor();\n\t      var ctx = EmitterVisitorContext.createRoot([resultVar]);\n\t      converter.visitAllStatements(statements, ctx);\n\t      return evalExpression(sourceUrl, resultVar, ctx.toSource(), converter.getArgs());\n\t  }\n\t  var JitEmitterVisitor = (function (_super) {\n\t      __extends$19(JitEmitterVisitor, _super);\n\t      function JitEmitterVisitor() {\n\t          _super.apply(this, arguments);\n\t          this._evalArgNames = [];\n\t          this._evalArgValues = [];\n\t      }\n\t      JitEmitterVisitor.prototype.getArgs = function () {\n\t          var result = {};\n\t          for (var i = 0; i < this._evalArgNames.length; i++) {\n\t              result[this._evalArgNames[i]] = this._evalArgValues[i];\n\t          }\n\t          return result;\n\t      };\n\t      JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n\t          var value = ast.value.reference;\n\t          var id = this._evalArgValues.indexOf(value);\n\t          if (id === -1) {\n\t              id = this._evalArgValues.length;\n\t              this._evalArgValues.push(value);\n\t              var name = isPresent(ast.value.name) ? sanitizeIdentifier(ast.value.name) : 'val';\n\t              this._evalArgNames.push(sanitizeIdentifier(\"jit_\" + name + id));\n\t          }\n\t          ctx.print(this._evalArgNames[id]);\n\t          return null;\n\t      };\n\t      return JitEmitterVisitor;\n\t  }(AbstractJsEmitterVisitor));\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  /**\n\t   * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n\t   *\n\t   * Please make sure to keep to edits in sync with the source file.\n\t   *\n\t   * Source:\n\t   * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n\t   *\n\t   * The original file level comment is reproduced below\n\t   */\n\t  /*\n\t    This is a limited shim for ShadowDOM css styling.\n\t    https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\t\n\t    The intention here is to support only the styling features which can be\n\t    relatively simply implemented. The goal is to allow users to avoid the\n\t    most obvious pitfalls and do so without compromising performance significantly.\n\t    For ShadowDOM styling that's not covered here, a set of best practices\n\t    can be provided that should allow users to accomplish more complex styling.\n\t\n\t    The following is a list of specific ShadowDOM styling features and a brief\n\t    discussion of the approach used to shim.\n\t\n\t    Shimmed features:\n\t\n\t    * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n\t    element using the :host rule. To shim this feature, the :host styles are\n\t    reformatted and prefixed with a given scope name and promoted to a\n\t    document level stylesheet.\n\t    For example, given a scope name of .foo, a rule like this:\n\t\n\t      :host {\n\t          background: red;\n\t        }\n\t      }\n\t\n\t    becomes:\n\t\n\t      .foo {\n\t        background: red;\n\t      }\n\t\n\t    * encapsulation: Styles defined within ShadowDOM, apply only to\n\t    dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n\t    this feature.\n\t\n\t    By default, rules are prefixed with the host element tag name\n\t    as a descendant selector. This ensures styling does not leak out of the 'top'\n\t    of the element's ShadowDOM. For example,\n\t\n\t    div {\n\t        font-weight: bold;\n\t      }\n\t\n\t    becomes:\n\t\n\t    x-foo div {\n\t        font-weight: bold;\n\t      }\n\t\n\t    becomes:\n\t\n\t\n\t    Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n\t    selectors are scoped by adding an attribute selector suffix to each\n\t    simple selector that contains the host element tag name. Each element\n\t    in the element's ShadowDOM template is also given the scope attribute.\n\t    Thus, these rules match only elements that have the scope attribute.\n\t    For example, given a scope name of x-foo, a rule like this:\n\t\n\t      div {\n\t        font-weight: bold;\n\t      }\n\t\n\t    becomes:\n\t\n\t      div[x-foo] {\n\t        font-weight: bold;\n\t      }\n\t\n\t    Note that elements that are dynamically added to a scope must have the scope\n\t    selector added to them manually.\n\t\n\t    * upper/lower bound encapsulation: Styles which are defined outside a\n\t    shadowRoot should not cross the ShadowDOM boundary and should not apply\n\t    inside a shadowRoot.\n\t\n\t    This styling behavior is not emulated. Some possible ways to do this that\n\t    were rejected due to complexity and/or performance concerns include: (1) reset\n\t    every possible property for every possible selector for a given scope name;\n\t    (2) re-implement css in javascript.\n\t\n\t    As an alternative, users should make sure to use selectors\n\t    specific to the scope in which they are working.\n\t\n\t    * ::distributed: This behavior is not emulated. It's often not necessary\n\t    to style the contents of a specific insertion point and instead, descendants\n\t    of the host element can be styled selectively. Users can also create an\n\t    extra node around an insertion point and style that node's contents\n\t    via descendent selectors. For example, with a shadowRoot like this:\n\t\n\t      <style>\n\t        ::content(div) {\n\t          background: red;\n\t        }\n\t      </style>\n\t      <content></content>\n\t\n\t    could become:\n\t\n\t      <style>\n\t        / *@polyfill .content-container div * /\n\t        ::content(div) {\n\t          background: red;\n\t        }\n\t      </style>\n\t      <div class=\"content-container\">\n\t        <content></content>\n\t      </div>\n\t\n\t    Note the use of @polyfill in the comment above a ShadowDOM specific style\n\t    declaration. This is a directive to the styling shim to use the selector\n\t    in comments in lieu of the next selector when running under polyfill.\n\t  */\n\t  var ShadowCss = (function () {\n\t      function ShadowCss() {\n\t          this.strictStyling = true;\n\t      }\n\t      /*\n\t      * Shim some cssText with the given selector. Returns cssText that can\n\t      * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n\t      *\n\t      * When strictStyling is true:\n\t      * - selector is the attribute added to all elements inside the host,\n\t      * - hostSelector is the attribute added to the host itself.\n\t      */\n\t      ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n\t          if (hostSelector === void 0) { hostSelector = ''; }\n\t          var sourceMappingUrl = extractSourceMappingUrl(cssText);\n\t          cssText = stripComments(cssText);\n\t          cssText = this._insertDirectives(cssText);\n\t          return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n\t      };\n\t      ShadowCss.prototype._insertDirectives = function (cssText) {\n\t          cssText = this._insertPolyfillDirectivesInCssText(cssText);\n\t          return this._insertPolyfillRulesInCssText(cssText);\n\t      };\n\t      /*\n\t       * Process styles to convert native ShadowDOM rules that will trip\n\t       * up the css parser; we rely on decorating the stylesheet with inert rules.\n\t       *\n\t       * For example, we convert this rule:\n\t       *\n\t       * polyfill-next-selector { content: ':host menu-item'; }\n\t       * ::content menu-item {\n\t       *\n\t       * to this:\n\t       *\n\t       * scopeName menu-item {\n\t       *\n\t      **/\n\t      ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n\t          // Difference with webcomponents.js: does not handle comments\n\t          return cssText.replace(_cssContentNextSelectorRe, function () {\n\t              var m = [];\n\t              for (var _i = 0; _i < arguments.length; _i++) {\n\t                  m[_i - 0] = arguments[_i];\n\t              }\n\t              return m[2] + '{';\n\t          });\n\t      };\n\t      /*\n\t       * Process styles to add rules which will only apply under the polyfill\n\t       *\n\t       * For example, we convert this rule:\n\t       *\n\t       * polyfill-rule {\n\t       *   content: ':host menu-item';\n\t       * ...\n\t       * }\n\t       *\n\t       * to this:\n\t       *\n\t       * scopeName menu-item {...}\n\t       *\n\t      **/\n\t      ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n\t          // Difference with webcomponents.js: does not handle comments\n\t          return cssText.replace(_cssContentRuleRe, function () {\n\t              var m = [];\n\t              for (var _i = 0; _i < arguments.length; _i++) {\n\t                  m[_i - 0] = arguments[_i];\n\t              }\n\t              var rule = m[0].replace(m[1], '').replace(m[2], '');\n\t              return m[4] + rule;\n\t          });\n\t      };\n\t      /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\n\t       *\n\t       *  .foo {... }\n\t       *\n\t       *  and converts this to\n\t       *\n\t       *  scopeName .foo { ... }\n\t      */\n\t      ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n\t          var unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n\t          // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n\t          cssText = this._insertPolyfillHostInCssText(cssText);\n\t          cssText = this._convertColonHost(cssText);\n\t          cssText = this._convertColonHostContext(cssText);\n\t          cssText = this._convertShadowDOMSelectors(cssText);\n\t          if (scopeSelector) {\n\t              cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n\t          }\n\t          cssText = cssText + '\\n' + unscopedRules;\n\t          return cssText.trim();\n\t      };\n\t      /*\n\t       * Process styles to add rules which will only apply under the polyfill\n\t       * and do not process via CSSOM. (CSSOM is destructive to rules on rare\n\t       * occasions, e.g. -webkit-calc on Safari.)\n\t       * For example, we convert this rule:\n\t       *\n\t       * @polyfill-unscoped-rule {\n\t       *   content: 'menu-item';\n\t       * ... }\n\t       *\n\t       * to this:\n\t       *\n\t       * menu-item {...}\n\t       *\n\t      **/\n\t      ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n\t          // Difference with webcomponents.js: does not handle comments\n\t          var r = '';\n\t          var m;\n\t          _cssContentUnscopedRuleRe.lastIndex = 0;\n\t          while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n\t              var rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n\t              r += rule + '\\n\\n';\n\t          }\n\t          return r;\n\t      };\n\t      /*\n\t       * convert a rule like :host(.foo) > .bar { }\n\t       *\n\t       * to\n\t       *\n\t       * .foo<scopeName> > .bar\n\t      */\n\t      ShadowCss.prototype._convertColonHost = function (cssText) {\n\t          return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n\t      };\n\t      /*\n\t       * convert a rule like :host-context(.foo) > .bar { }\n\t       *\n\t       * to\n\t       *\n\t       * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n\t       *\n\t       * and\n\t       *\n\t       * :host-context(.foo:host) .bar { ... }\n\t       *\n\t       * to\n\t       *\n\t       * .foo<scopeName> .bar { ... }\n\t      */\n\t      ShadowCss.prototype._convertColonHostContext = function (cssText) {\n\t          return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n\t      };\n\t      ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n\t          // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n\t          return cssText.replace(regExp, function () {\n\t              var m = [];\n\t              for (var _i = 0; _i < arguments.length; _i++) {\n\t                  m[_i - 0] = arguments[_i];\n\t              }\n\t              if (m[2]) {\n\t                  var parts = m[2].split(',');\n\t                  var r = [];\n\t                  for (var i = 0; i < parts.length; i++) {\n\t                      var p = parts[i].trim();\n\t                      if (!p)\n\t                          break;\n\t                      r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n\t                  }\n\t                  return r.join(',');\n\t              }\n\t              else {\n\t                  return _polyfillHostNoCombinator + m[3];\n\t              }\n\t          });\n\t      };\n\t      ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n\t          if (part.indexOf(_polyfillHost) > -1) {\n\t              return this._colonHostPartReplacer(host, part, suffix);\n\t          }\n\t          else {\n\t              return host + part + suffix + ', ' + part + ' ' + host + suffix;\n\t          }\n\t      };\n\t      ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n\t          return host + part.replace(_polyfillHost, '') + suffix;\n\t      };\n\t      /*\n\t       * Convert combinators like ::shadow and pseudo-elements like ::content\n\t       * by replacing with space.\n\t      */\n\t      ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n\t          return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n\t      };\n\t      // change a selector like 'div' to 'name div'\n\t      ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n\t          var _this = this;\n\t          return processRules(cssText, function (rule) {\n\t              var selector = rule.selector;\n\t              var content = rule.content;\n\t              if (rule.selector[0] != '@') {\n\t                  selector =\n\t                      _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n\t              }\n\t              else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n\t                  rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n\t                  content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n\t              }\n\t              return new CssRule(selector, content);\n\t          });\n\t      };\n\t      ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n\t          var _this = this;\n\t          return selector.split(',')\n\t              .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n\t              .map(function (deepParts) {\n\t              var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n\t              var applyScope = function (shallowPart) {\n\t                  if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n\t                      return strict ?\n\t                          _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n\t                          _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n\t                  }\n\t                  else {\n\t                      return shallowPart;\n\t                  }\n\t              };\n\t              return [applyScope(shallowPart)].concat(otherParts).join(' ');\n\t          })\n\t              .join(', ');\n\t      };\n\t      ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n\t          var re = this._makeScopeMatcher(scopeSelector);\n\t          return !re.test(selector);\n\t      };\n\t      ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n\t          var lre = /\\[/g;\n\t          var rre = /\\]/g;\n\t          scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n\t          return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n\t      };\n\t      ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n\t          // Difference from webcomponents.js: scopeSelector could not be an array\n\t          return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n\t      };\n\t      // scope via name and [is=name]\n\t      ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n\t          // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n\t          _polyfillHostRe.lastIndex = 0;\n\t          if (_polyfillHostRe.test(selector)) {\n\t              var replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n\t              return selector\n\t                  .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) { return selector[0] === ':' ? replaceBy_1 + selector : selector + replaceBy_1; })\n\t                  .replace(_polyfillHostRe, replaceBy_1 + ' ');\n\t          }\n\t          return scopeSelector + ' ' + selector;\n\t      };\n\t      // return a selector with [name] suffix on each simple selector\n\t      // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\n\t      ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n\t          var _this = this;\n\t          var isRe = /\\[is=([^\\]]*)\\]/g;\n\t          scopeSelector = scopeSelector.replace(isRe, function (_) {\n\t              var parts = [];\n\t              for (var _i = 1; _i < arguments.length; _i++) {\n\t                  parts[_i - 1] = arguments[_i];\n\t              }\n\t              return parts[0];\n\t          });\n\t          var attrName = '[' + scopeSelector + ']';\n\t          var _scopeSelectorPart = function (p) {\n\t              var scopedP = p.trim();\n\t              if (!scopedP) {\n\t                  return '';\n\t              }\n\t              if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n\t                  scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n\t              }\n\t              else {\n\t                  // remove :host since it should be unnecessary\n\t                  var t = p.replace(_polyfillHostRe, '');\n\t                  if (t.length > 0) {\n\t                      var matches = t.match(/([^:]*)(:*)(.*)/);\n\t                      if (matches !== null) {\n\t                          scopedP = matches[1] + attrName + matches[2] + matches[3];\n\t                      }\n\t                  }\n\t              }\n\t              return scopedP;\n\t          };\n\t          var attrSelectorIndex = 0;\n\t          var attrSelectors = [];\n\t          // replace attribute selectors with placeholders to avoid issue with white space being treated\n\t          // as separator\n\t          selector = selector.replace(/\\[[^\\]]*\\]/g, function (attrSelector) {\n\t              var replaceBy = \"__attr_sel_\" + attrSelectorIndex + \"__\";\n\t              attrSelectors.push(attrSelector);\n\t              attrSelectorIndex++;\n\t              return replaceBy;\n\t          });\n\t          var scopedSelector = '';\n\t          var startIndex = 0;\n\t          var res;\n\t          var sep = /( |>|\\+|~(?!=))\\s*/g;\n\t          var scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n\t          while ((res = sep.exec(selector)) !== null) {\n\t              var separator = res[1];\n\t              var part = selector.slice(startIndex, res.index).trim();\n\t              // if a selector appears before :host-context it should not be shimmed as it\n\t              // matches on ancestor elements and not on elements in the host's shadow\n\t              var scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n\t              scopedSelector += scopedPart + \" \" + separator + \" \";\n\t              startIndex = sep.lastIndex;\n\t          }\n\t          scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n\t          // replace the placeholders with their original values\n\t          return scopedSelector.replace(/__attr_sel_(\\d+)__/g, function (ph, index) { return attrSelectors[+index]; });\n\t      };\n\t      ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n\t          return selector.replace(_colonHostContextRe, _polyfillHostContext)\n\t              .replace(_colonHostRe, _polyfillHost);\n\t      };\n\t      return ShadowCss;\n\t  }());\n\t  var _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\n\t  var _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n\t  var _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n\t  var _polyfillHost = '-shadowcsshost';\n\t  // note: :host-context pre-processed to -shadowcsshostcontext.\n\t  var _polyfillHostContext = '-shadowcsscontext';\n\t  var _parenSuffix = ')(?:\\\\((' +\n\t      '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n\t      ')\\\\))?([^,{]*)';\n\t  var _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\n\t  var _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\n\t  var _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\n\t  var _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\n\t  var _shadowDOMSelectorsRe = [\n\t      /::shadow/g,\n\t      /::content/g,\n\t      // Deprecated selectors\n\t      /\\/shadow-deep\\//g,\n\t      /\\/shadow\\//g,\n\t  ];\n\t  var _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\n\t  var _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\n\t  var _polyfillHostRe = /-shadowcsshost/gim;\n\t  var _colonHostRe = /:host/gim;\n\t  var _colonHostContextRe = /:host-context/gim;\n\t  var _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n\t  function stripComments(input) {\n\t      return input.replace(_commentRe, '');\n\t  }\n\t  // all comments except inline source mapping\n\t  var _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n\t  function extractSourceMappingUrl(input) {\n\t      var matcher = input.match(_sourceMappingUrlRe);\n\t      return matcher ? matcher[0] : '';\n\t  }\n\t  var _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\n\t  var _curlyRe = /([{}])/g;\n\t  var OPEN_CURLY = '{';\n\t  var CLOSE_CURLY = '}';\n\t  var BLOCK_PLACEHOLDER = '%BLOCK%';\n\t  var CssRule = (function () {\n\t      function CssRule(selector, content) {\n\t          this.selector = selector;\n\t          this.content = content;\n\t      }\n\t      return CssRule;\n\t  }());\n\t  function processRules(input, ruleCallback) {\n\t      var inputWithEscapedBlocks = escapeBlocks(input);\n\t      var nextBlockIndex = 0;\n\t      return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n\t          var m = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              m[_i - 0] = arguments[_i];\n\t          }\n\t          var selector = m[2];\n\t          var content = '';\n\t          var suffix = m[4];\n\t          var contentPrefix = '';\n\t          if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n\t              content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n\t              suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n\t              contentPrefix = '{';\n\t          }\n\t          var rule = ruleCallback(new CssRule(selector, content));\n\t          return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n\t      });\n\t  }\n\t  var StringWithEscapedBlocks = (function () {\n\t      function StringWithEscapedBlocks(escapedString, blocks) {\n\t          this.escapedString = escapedString;\n\t          this.blocks = blocks;\n\t      }\n\t      return StringWithEscapedBlocks;\n\t  }());\n\t  function escapeBlocks(input) {\n\t      var inputParts = input.split(_curlyRe);\n\t      var resultParts = [];\n\t      var escapedBlocks = [];\n\t      var bracketCount = 0;\n\t      var currentBlockParts = [];\n\t      for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n\t          var part = inputParts[partIndex];\n\t          if (part == CLOSE_CURLY) {\n\t              bracketCount--;\n\t          }\n\t          if (bracketCount > 0) {\n\t              currentBlockParts.push(part);\n\t          }\n\t          else {\n\t              if (currentBlockParts.length > 0) {\n\t                  escapedBlocks.push(currentBlockParts.join(''));\n\t                  resultParts.push(BLOCK_PLACEHOLDER);\n\t                  currentBlockParts = [];\n\t              }\n\t              resultParts.push(part);\n\t          }\n\t          if (part == OPEN_CURLY) {\n\t              bracketCount++;\n\t          }\n\t      }\n\t      if (currentBlockParts.length > 0) {\n\t          escapedBlocks.push(currentBlockParts.join(''));\n\t          resultParts.push(BLOCK_PLACEHOLDER);\n\t      }\n\t      return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n\t  }\n\t\n\t  var COMPONENT_VARIABLE = '%COMP%';\n\t  var HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n\t  var CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n\t  var StylesCompileDependency = (function () {\n\t      function StylesCompileDependency(moduleUrl, isShimmed, valuePlaceholder) {\n\t          this.moduleUrl = moduleUrl;\n\t          this.isShimmed = isShimmed;\n\t          this.valuePlaceholder = valuePlaceholder;\n\t      }\n\t      return StylesCompileDependency;\n\t  }());\n\t  var StylesCompileResult = (function () {\n\t      function StylesCompileResult(componentStylesheet, externalStylesheets) {\n\t          this.componentStylesheet = componentStylesheet;\n\t          this.externalStylesheets = externalStylesheets;\n\t      }\n\t      return StylesCompileResult;\n\t  }());\n\t  var CompiledStylesheet = (function () {\n\t      function CompiledStylesheet(statements, stylesVar, dependencies, isShimmed, meta) {\n\t          this.statements = statements;\n\t          this.stylesVar = stylesVar;\n\t          this.dependencies = dependencies;\n\t          this.isShimmed = isShimmed;\n\t          this.meta = meta;\n\t      }\n\t      return CompiledStylesheet;\n\t  }());\n\t  var StyleCompiler = (function () {\n\t      function StyleCompiler(_urlResolver) {\n\t          this._urlResolver = _urlResolver;\n\t          this._shadowCss = new ShadowCss();\n\t      }\n\t      StyleCompiler.prototype.compileComponent = function (comp) {\n\t          var _this = this;\n\t          var externalStylesheets = [];\n\t          var componentStylesheet = this._compileStyles(comp, new CompileStylesheetMetadata({\n\t              styles: comp.template.styles,\n\t              styleUrls: comp.template.styleUrls,\n\t              moduleUrl: comp.type.moduleUrl\n\t          }), true);\n\t          comp.template.externalStylesheets.forEach(function (stylesheetMeta) {\n\t              var compiledStylesheet = _this._compileStyles(comp, stylesheetMeta, false);\n\t              externalStylesheets.push(compiledStylesheet);\n\t          });\n\t          return new StylesCompileResult(componentStylesheet, externalStylesheets);\n\t      };\n\t      StyleCompiler.prototype._compileStyles = function (comp, stylesheet, isComponentStylesheet) {\n\t          var _this = this;\n\t          var shim = comp.template.encapsulation === _angular_core.ViewEncapsulation.Emulated;\n\t          var styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n\t          var dependencies = [];\n\t          for (var i = 0; i < stylesheet.styleUrls.length; i++) {\n\t              var identifier = new CompileIdentifierMetadata({ name: getStylesVarName(null) });\n\t              dependencies.push(new StylesCompileDependency(stylesheet.styleUrls[i], shim, identifier));\n\t              styleExpressions.push(new ExternalExpr(identifier));\n\t          }\n\t          // styles variable contains plain strings and arrays of other styles arrays (recursive),\n\t          // so we set its type to dynamic.\n\t          var stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n\t          var stmt = variable(stylesVar)\n\t              .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n\t              .toDeclStmt(null, [StmtModifier.Final]);\n\t          return new CompiledStylesheet([stmt], stylesVar, dependencies, shim, stylesheet);\n\t      };\n\t      StyleCompiler.prototype._shimIfNeeded = function (style, shim) {\n\t          return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n\t      };\n\t      StyleCompiler.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      StyleCompiler.ctorParameters = [\n\t          { type: UrlResolver, },\n\t      ];\n\t      return StyleCompiler;\n\t  }());\n\t  function getStylesVarName(component) {\n\t      var result = \"styles\";\n\t      if (component) {\n\t          result += \"_\" + component.type.name;\n\t      }\n\t      return result;\n\t  }\n\t\n\t  /**\n\t   * An internal module of the Angular compiler that begins with component types,\n\t   * extracts templates, and eventually produces a compiled version of the component\n\t   * ready for linking into an application.\n\t   *\n\t   * @security  When compiling templates at runtime, you must ensure that the entire template comes\n\t   * from a trusted source. Attacker-controlled data introduced by a template could expose your\n\t   * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n\t   */\n\t  var RuntimeCompiler = (function () {\n\t      function RuntimeCompiler(_injector, _metadataResolver, _templateNormalizer, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _directiveWrapperCompiler, _compilerConfig) {\n\t          this._injector = _injector;\n\t          this._metadataResolver = _metadataResolver;\n\t          this._templateNormalizer = _templateNormalizer;\n\t          this._templateParser = _templateParser;\n\t          this._styleCompiler = _styleCompiler;\n\t          this._viewCompiler = _viewCompiler;\n\t          this._ngModuleCompiler = _ngModuleCompiler;\n\t          this._directiveWrapperCompiler = _directiveWrapperCompiler;\n\t          this._compilerConfig = _compilerConfig;\n\t          this._compiledTemplateCache = new Map();\n\t          this._compiledHostTemplateCache = new Map();\n\t          this._compiledDirectiveWrapperCache = new Map();\n\t          this._compiledNgModuleCache = new Map();\n\t          this._animationParser = new AnimationParser();\n\t          this._animationCompiler = new AnimationCompiler();\n\t      }\n\t      Object.defineProperty(RuntimeCompiler.prototype, \"injector\", {\n\t          get: function () { return this._injector; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      RuntimeCompiler.prototype.compileModuleSync = function (moduleType) {\n\t          return this._compileModuleAndComponents(moduleType, true).syncResult;\n\t      };\n\t      RuntimeCompiler.prototype.compileModuleAsync = function (moduleType) {\n\t          return this._compileModuleAndComponents(moduleType, false).asyncResult;\n\t      };\n\t      RuntimeCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n\t          return this._compileModuleAndAllComponents(moduleType, true).syncResult;\n\t      };\n\t      RuntimeCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n\t          return this._compileModuleAndAllComponents(moduleType, false).asyncResult;\n\t      };\n\t      RuntimeCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n\t          var componentPromise = this._compileComponents(moduleType, isSync);\n\t          var ngModuleFactory = this._compileModule(moduleType);\n\t          return new SyncAsyncResult(ngModuleFactory, componentPromise.then(function () { return ngModuleFactory; }));\n\t      };\n\t      RuntimeCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n\t          var _this = this;\n\t          var componentPromise = this._compileComponents(moduleType, isSync);\n\t          var ngModuleFactory = this._compileModule(moduleType);\n\t          var moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n\t          var componentFactories = [];\n\t          var templates = new Set();\n\t          moduleMeta.transitiveModule.modules.forEach(function (localModuleMeta) {\n\t              localModuleMeta.declaredDirectives.forEach(function (dirMeta) {\n\t                  if (dirMeta.isComponent) {\n\t                      var template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n\t                      templates.add(template);\n\t                      componentFactories.push(template.proxyComponentFactory);\n\t                  }\n\t              });\n\t          });\n\t          var syncResult = new _angular_core.ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n\t          // Note: host components themselves can always be compiled synchronously as they have an\n\t          // inline template. However, we still need to wait for the components that they\n\t          // reference to be loaded / compiled.\n\t          var compile = function () {\n\t              templates.forEach(function (template) { _this._compileTemplate(template); });\n\t              return syncResult;\n\t          };\n\t          var asyncResult = isSync ? Promise.resolve(compile()) : componentPromise.then(compile);\n\t          return new SyncAsyncResult(syncResult, asyncResult);\n\t      };\n\t      RuntimeCompiler.prototype._compileModule = function (moduleType) {\n\t          var _this = this;\n\t          var ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n\t          if (!ngModuleFactory) {\n\t              var moduleMeta_1 = this._metadataResolver.getNgModuleMetadata(moduleType);\n\t              // Always provide a bound Compiler\n\t              var extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n\t              var compileResult = this._ngModuleCompiler.compile(moduleMeta_1, extraProviders);\n\t              compileResult.dependencies.forEach(function (dep) {\n\t                  dep.placeholder.reference =\n\t                      _this._assertComponentKnown(dep.comp.reference, true).proxyComponentFactory;\n\t                  dep.placeholder.name = \"compFactory_\" + dep.comp.name;\n\t              });\n\t              if (!this._compilerConfig.useJit) {\n\t                  ngModuleFactory =\n\t                      interpretStatements(compileResult.statements, compileResult.ngModuleFactoryVar);\n\t              }\n\t              else {\n\t                  ngModuleFactory = jitStatements(\"/\" + moduleMeta_1.type.name + \"/module.ngfactory.js\", compileResult.statements, compileResult.ngModuleFactoryVar);\n\t              }\n\t              this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n\t          }\n\t          return ngModuleFactory;\n\t      };\n\t      /**\n\t       * @internal\n\t       */\n\t      RuntimeCompiler.prototype._compileComponents = function (mainModule, isSync) {\n\t          var _this = this;\n\t          var templates = new Set();\n\t          var loadingPromises = [];\n\t          var ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n\t          var moduleByDirective = new Map();\n\t          ngModule.transitiveModule.modules.forEach(function (localModuleMeta) {\n\t              localModuleMeta.declaredDirectives.forEach(function (dirMeta) {\n\t                  moduleByDirective.set(dirMeta.type.reference, localModuleMeta);\n\t                  _this._compileDirectiveWrapper(dirMeta, localModuleMeta);\n\t                  if (dirMeta.isComponent) {\n\t                      templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n\t                  }\n\t              });\n\t          });\n\t          ngModule.transitiveModule.modules.forEach(function (localModuleMeta) {\n\t              localModuleMeta.declaredDirectives.forEach(function (dirMeta) {\n\t                  if (dirMeta.isComponent) {\n\t                      dirMeta.entryComponents.forEach(function (entryComponentType) {\n\t                          var moduleMeta = moduleByDirective.get(entryComponentType.reference);\n\t                          templates.add(_this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n\t                      });\n\t                  }\n\t              });\n\t              localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n\t                  var moduleMeta = moduleByDirective.get(entryComponentType.reference);\n\t                  templates.add(_this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n\t              });\n\t          });\n\t          templates.forEach(function (template) {\n\t              if (template.loading) {\n\t                  if (isSync) {\n\t                      throw new ComponentStillLoadingError(template.compType.reference);\n\t                  }\n\t                  else {\n\t                      loadingPromises.push(template.loading);\n\t                  }\n\t              }\n\t          });\n\t          var compile = function () { templates.forEach(function (template) { _this._compileTemplate(template); }); };\n\t          if (isSync) {\n\t              compile();\n\t              return Promise.resolve(null);\n\t          }\n\t          else {\n\t              return Promise.all(loadingPromises).then(compile);\n\t          }\n\t      };\n\t      RuntimeCompiler.prototype.clearCacheFor = function (type) {\n\t          this._compiledNgModuleCache.delete(type);\n\t          this._metadataResolver.clearCacheFor(type);\n\t          this._compiledHostTemplateCache.delete(type);\n\t          var compiledTemplate = this._compiledTemplateCache.get(type);\n\t          if (compiledTemplate) {\n\t              this._templateNormalizer.clearCacheFor(compiledTemplate.normalizedCompMeta);\n\t              this._compiledTemplateCache.delete(type);\n\t          }\n\t      };\n\t      RuntimeCompiler.prototype.clearCache = function () {\n\t          this._metadataResolver.clearCache();\n\t          this._compiledTemplateCache.clear();\n\t          this._compiledHostTemplateCache.clear();\n\t          this._templateNormalizer.clearCache();\n\t          this._compiledNgModuleCache.clear();\n\t      };\n\t      RuntimeCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n\t          if (!ngModule) {\n\t              throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n\t          }\n\t          var compiledTemplate = this._compiledHostTemplateCache.get(compType);\n\t          if (!compiledTemplate) {\n\t              var compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n\t              assertComponent(compMeta);\n\t              var hostMeta = createHostComponentMeta(compMeta);\n\t              compiledTemplate = new CompiledTemplate(true, compMeta.selector, compMeta.type, ngModule, [compMeta], this._templateNormalizer.normalizeDirective(hostMeta));\n\t              this._compiledHostTemplateCache.set(compType, compiledTemplate);\n\t          }\n\t          return compiledTemplate;\n\t      };\n\t      RuntimeCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n\t          var compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n\t          if (!compiledTemplate) {\n\t              assertComponent(compMeta);\n\t              compiledTemplate = new CompiledTemplate(false, compMeta.selector, compMeta.type, ngModule, ngModule.transitiveModule.directives, this._templateNormalizer.normalizeDirective(compMeta));\n\t              this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n\t          }\n\t          return compiledTemplate;\n\t      };\n\t      RuntimeCompiler.prototype._assertComponentKnown = function (compType, isHost) {\n\t          var compiledTemplate = isHost ? this._compiledHostTemplateCache.get(compType) :\n\t              this._compiledTemplateCache.get(compType);\n\t          if (!compiledTemplate) {\n\t              throw new Error(\"Illegal state: Compiled view for component \" + stringify(compType) + \" does not exist!\");\n\t          }\n\t          return compiledTemplate;\n\t      };\n\t      RuntimeCompiler.prototype._assertComponentLoaded = function (compType, isHost) {\n\t          var compiledTemplate = this._assertComponentKnown(compType, isHost);\n\t          if (compiledTemplate.loading) {\n\t              throw new Error(\"Illegal state: CompiledTemplate for \" + stringify(compType) + \" (isHost: \" + isHost + \") is still loading!\");\n\t          }\n\t          return compiledTemplate;\n\t      };\n\t      RuntimeCompiler.prototype._assertDirectiveWrapper = function (dirType) {\n\t          var dirWrapper = this._compiledDirectiveWrapperCache.get(dirType);\n\t          if (!dirWrapper) {\n\t              throw new Error(\"Illegal state: Directive wrapper for \" + stringify(dirType) + \" has not been compiled!\");\n\t          }\n\t          return dirWrapper;\n\t      };\n\t      RuntimeCompiler.prototype._compileDirectiveWrapper = function (dirMeta, moduleMeta) {\n\t          var compileResult = this._directiveWrapperCompiler.compile(dirMeta);\n\t          var statements = compileResult.statements;\n\t          var directiveWrapperClass;\n\t          if (!this._compilerConfig.useJit) {\n\t              directiveWrapperClass = interpretStatements(statements, compileResult.dirWrapperClassVar);\n\t          }\n\t          else {\n\t              directiveWrapperClass = jitStatements(\"/\" + moduleMeta.type.name + \"/\" + dirMeta.type.name + \"/wrapper.ngfactory.js\", statements, compileResult.dirWrapperClassVar);\n\t          }\n\t          this._compiledDirectiveWrapperCache.set(dirMeta.type.reference, directiveWrapperClass);\n\t      };\n\t      RuntimeCompiler.prototype._compileTemplate = function (template) {\n\t          var _this = this;\n\t          if (template.isCompiled) {\n\t              return;\n\t          }\n\t          var compMeta = template.normalizedCompMeta;\n\t          var externalStylesheetsByModuleUrl = new Map();\n\t          var stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n\t          stylesCompileResult.externalStylesheets.forEach(function (r) { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n\t          this._resolveStylesCompileResult(stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n\t          var viewCompMetas = template.viewComponentTypes.map(function (compType) { return _this._assertComponentLoaded(compType, false).normalizedCompMeta; });\n\t          var parsedAnimations = this._animationParser.parseComponent(compMeta);\n\t          var parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template, template.viewDirectives.concat(viewCompMetas), template.viewPipes, template.schemas, compMeta.type.name);\n\t          var compiledAnimations = this._animationCompiler.compile(compMeta.type.name, parsedAnimations);\n\t          var compileResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, variable(stylesCompileResult.componentStylesheet.stylesVar), template.viewPipes, compiledAnimations);\n\t          compileResult.dependencies.forEach(function (dep) {\n\t              var depTemplate;\n\t              if (dep instanceof ViewFactoryDependency) {\n\t                  var vfd = dep;\n\t                  depTemplate = _this._assertComponentLoaded(vfd.comp.reference, false);\n\t                  vfd.placeholder.reference = depTemplate.proxyViewFactory;\n\t                  vfd.placeholder.name = \"viewFactory_\" + vfd.comp.name;\n\t              }\n\t              else if (dep instanceof ComponentFactoryDependency) {\n\t                  var cfd = dep;\n\t                  depTemplate = _this._assertComponentLoaded(cfd.comp.reference, true);\n\t                  cfd.placeholder.reference = depTemplate.proxyComponentFactory;\n\t                  cfd.placeholder.name = \"compFactory_\" + cfd.comp.name;\n\t              }\n\t              else if (dep instanceof DirectiveWrapperDependency) {\n\t                  var dwd = dep;\n\t                  dwd.placeholder.reference = _this._assertDirectiveWrapper(dwd.dir.reference);\n\t              }\n\t          });\n\t          var statements = stylesCompileResult.componentStylesheet.statements.concat(compileResult.statements);\n\t          compiledAnimations.forEach(function (entry) { entry.statements.forEach(function (statement) { statements.push(statement); }); });\n\t          var factory;\n\t          if (!this._compilerConfig.useJit) {\n\t              factory = interpretStatements(statements, compileResult.viewFactoryVar);\n\t          }\n\t          else {\n\t              factory = jitStatements(\"/\" + template.ngModule.type.name + \"/\" + template.compType.name + \"/\" + (template.isHost ? 'host' : 'component') + \".ngfactory.js\", statements, compileResult.viewFactoryVar);\n\t          }\n\t          template.compiled(factory);\n\t      };\n\t      RuntimeCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n\t          var _this = this;\n\t          result.dependencies.forEach(function (dep, i) {\n\t              var nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n\t              var nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n\t              dep.valuePlaceholder.reference = nestedStylesArr;\n\t              dep.valuePlaceholder.name = \"importedStyles\" + i;\n\t          });\n\t      };\n\t      RuntimeCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n\t          this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n\t          if (!this._compilerConfig.useJit) {\n\t              return interpretStatements(result.statements, result.stylesVar);\n\t          }\n\t          else {\n\t              return jitStatements(\"/\" + result.meta.moduleUrl + \".css.js\", result.statements, result.stylesVar);\n\t          }\n\t      };\n\t      RuntimeCompiler.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      RuntimeCompiler.ctorParameters = [\n\t          { type: _angular_core.Injector, },\n\t          { type: CompileMetadataResolver, },\n\t          { type: DirectiveNormalizer, },\n\t          { type: TemplateParser, },\n\t          { type: StyleCompiler, },\n\t          { type: ViewCompiler, },\n\t          { type: NgModuleCompiler, },\n\t          { type: DirectiveWrapperCompiler, },\n\t          { type: CompilerConfig, },\n\t      ];\n\t      return RuntimeCompiler;\n\t  }());\n\t  var CompiledTemplate = (function () {\n\t      function CompiledTemplate(isHost, selector, compType, ngModule, viewDirectiveAndComponents, _normalizeResult) {\n\t          var _this = this;\n\t          this.isHost = isHost;\n\t          this.compType = compType;\n\t          this.ngModule = ngModule;\n\t          this._viewFactory = null;\n\t          this.loading = null;\n\t          this._normalizedCompMeta = null;\n\t          this.isCompiled = false;\n\t          this.isCompiledWithDeps = false;\n\t          this.viewComponentTypes = [];\n\t          this.viewDirectives = [];\n\t          this.viewPipes = ngModule.transitiveModule.pipes;\n\t          this.schemas = ngModule.schemas;\n\t          viewDirectiveAndComponents.forEach(function (dirMeta) {\n\t              if (dirMeta.isComponent) {\n\t                  _this.viewComponentTypes.push(dirMeta.type.reference);\n\t              }\n\t              else {\n\t                  _this.viewDirectives.push(dirMeta);\n\t              }\n\t          });\n\t          this.proxyViewFactory = function () {\n\t              var args = [];\n\t              for (var _i = 0; _i < arguments.length; _i++) {\n\t                  args[_i - 0] = arguments[_i];\n\t              }\n\t              if (!_this._viewFactory) {\n\t                  throw new Error(\"Illegal state: CompiledTemplate for \" + stringify(_this.compType) + \" is not compiled yet!\");\n\t              }\n\t              return _this._viewFactory.apply(null, args);\n\t          };\n\t          this.proxyComponentFactory = isHost ?\n\t              new _angular_core.ComponentFactory(selector, this.proxyViewFactory, compType.reference) :\n\t              null;\n\t          if (_normalizeResult.syncResult) {\n\t              this._normalizedCompMeta = _normalizeResult.syncResult;\n\t          }\n\t          else {\n\t              this.loading = _normalizeResult.asyncResult.then(function (normalizedCompMeta) {\n\t                  _this._normalizedCompMeta = normalizedCompMeta;\n\t                  _this.loading = null;\n\t              });\n\t          }\n\t      }\n\t      Object.defineProperty(CompiledTemplate.prototype, \"normalizedCompMeta\", {\n\t          get: function () {\n\t              if (this.loading) {\n\t                  throw new Error(\"Template is still loading for \" + this.compType.name + \"!\");\n\t              }\n\t              return this._normalizedCompMeta;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      CompiledTemplate.prototype.compiled = function (viewFactory) {\n\t          this._viewFactory = viewFactory;\n\t          this.isCompiled = true;\n\t      };\n\t      CompiledTemplate.prototype.depsCompiled = function () { this.isCompiledWithDeps = true; };\n\t      return CompiledTemplate;\n\t  }());\n\t  function assertComponent(meta) {\n\t      if (!meta.isComponent) {\n\t          throw new Error(\"Could not compile '\" + meta.type.name + \"' because it is not a component.\");\n\t      }\n\t  }\n\t  /**\n\t   * Implements `Compiler` by delegating to the RuntimeCompiler using a known module.\n\t   */\n\t  var ModuleBoundCompiler = (function () {\n\t      function ModuleBoundCompiler(_delegate, _ngModule) {\n\t          this._delegate = _delegate;\n\t          this._ngModule = _ngModule;\n\t      }\n\t      Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n\t          get: function () { return this._delegate.injector; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n\t          return this._delegate.compileModuleSync(moduleType);\n\t      };\n\t      ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n\t          return this._delegate.compileModuleAsync(moduleType);\n\t      };\n\t      ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n\t          return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n\t      };\n\t      ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n\t          return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n\t      };\n\t      /**\n\t       * Clears all caches\n\t       */\n\t      ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n\t      /**\n\t       * Clears the cache for the given component/ngModule.\n\t       */\n\t      ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n\t      return ModuleBoundCompiler;\n\t  }());\n\t\n\t  // =================================================================================================\n\t  // =================================================================================================\n\t  // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n\t  // =================================================================================================\n\t  // =================================================================================================\n\t  //\n\t  //        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n\t  //                               Reach out to mprobst for details.\n\t  //\n\t  // =================================================================================================\n\t  /** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\n\t  var SECURITY_SCHEMA = {};\n\t  function registerContext(ctx, specs) {\n\t      for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n\t          var spec = specs_1[_i];\n\t          SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n\t      }\n\t  }\n\t  // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n\t  registerContext(_angular_core.SecurityContext.HTML, [\n\t      'iframe|srcdoc',\n\t      '*|innerHTML',\n\t      '*|outerHTML',\n\t  ]);\n\t  registerContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n\t  // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n\t  registerContext(_angular_core.SecurityContext.URL, [\n\t      '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n\t      'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n\t      'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n\t      'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n\t  ]);\n\t  registerContext(_angular_core.SecurityContext.RESOURCE_URL, [\n\t      'applet|code',\n\t      'applet|codebase',\n\t      'base|href',\n\t      'embed|src',\n\t      'frame|src',\n\t      'head|profile',\n\t      'html|manifest',\n\t      'iframe|src',\n\t      'link|href',\n\t      'media|src',\n\t      'object|codebase',\n\t      'object|data',\n\t      'script|src',\n\t  ]);\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$21 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var BOOLEAN = 'boolean';\n\t  var NUMBER = 'number';\n\t  var STRING = 'string';\n\t  var OBJECT = 'object';\n\t  /**\n\t   * This array represents the DOM schema. It encodes inheritance, properties, and events.\n\t   *\n\t   * ## Overview\n\t   *\n\t   * Each line represents one kind of element. The `element_inheritance` and properties are joined\n\t   * using `element_inheritance|properties` syntax.\n\t   *\n\t   * ## Element Inheritance\n\t   *\n\t   * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n\t   * Here the individual elements are separated by `,` (commas). Every element in the list\n\t   * has identical properties.\n\t   *\n\t   * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n\t   * specified then `\"\"` (blank) element is assumed.\n\t   *\n\t   * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n\t   * elements.\n\t   *\n\t   * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n\t   *\n\t   * ## Properties\n\t   *\n\t   * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n\t   * by a special character designating its type:\n\t   *\n\t   * - (no prefix): property is a string.\n\t   * - `*`: property represents an event.\n\t   * - `!`: property is a boolean.\n\t   * - `#`: property is a number.\n\t   * - `%`: property is an object.\n\t   *\n\t   * ## Query\n\t   *\n\t   * The class creates an internal squas representation which allows to easily answer the query of\n\t   * if a given property exist on a given element.\n\t   *\n\t   * NOTE: We don't yet support querying for types or events.\n\t   * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n\t   *       see dom_element_schema_registry_spec.ts\n\t   */\n\t  // =================================================================================================\n\t  // =================================================================================================\n\t  // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n\t  // =================================================================================================\n\t  // =================================================================================================\n\t  //\n\t  //                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n\t  //\n\t  // Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n\t  // dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n\t  //\n\t  // =================================================================================================\n\t  var SCHEMA = [\n\t      '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop',\n\t      '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n\t      'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n\t      'media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',\n\t      ':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n\t      ':svg:graphics^:svg:|',\n\t      ':svg:animation^:svg:|*begin,*end,*repeat',\n\t      ':svg:geometry^:svg:|',\n\t      ':svg:componentTransferFunction^:svg:|',\n\t      ':svg:gradient^:svg:|',\n\t      ':svg:textContent^:svg:graphics|',\n\t      ':svg:textPositioning^:svg:textContent|',\n\t      'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n\t      'area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username',\n\t      'audio^media|',\n\t      'br^[HTMLElement]|clear',\n\t      'base^[HTMLElement]|href,target',\n\t      'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n\t      'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n\t      'canvas^[HTMLElement]|#height,#width',\n\t      'content^[HTMLElement]|select',\n\t      'dl^[HTMLElement]|!compact',\n\t      'datalist^[HTMLElement]|',\n\t      'details^[HTMLElement]|!open',\n\t      'dialog^[HTMLElement]|!open,returnValue',\n\t      'dir^[HTMLElement]|!compact',\n\t      'div^[HTMLElement]|align',\n\t      'embed^[HTMLElement]|align,height,name,src,type,width',\n\t      'fieldset^[HTMLElement]|!disabled,name',\n\t      'font^[HTMLElement]|color,face,size',\n\t      'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n\t      'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n\t      'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n\t      'hr^[HTMLElement]|align,color,!noShade,size,width',\n\t      'head^[HTMLElement]|',\n\t      'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n\t      'html^[HTMLElement]|version',\n\t      'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n\t      'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n\t      'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n\t      'keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name',\n\t      'li^[HTMLElement]|type,#value',\n\t      'label^[HTMLElement]|htmlFor',\n\t      'legend^[HTMLElement]|align',\n\t      'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type',\n\t      'map^[HTMLElement]|name',\n\t      'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n\t      'menu^[HTMLElement]|!compact',\n\t      'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n\t      'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n\t      'ins,del^[HTMLElement]|cite,dateTime',\n\t      'ol^[HTMLElement]|!compact,!reversed,#start,type',\n\t      'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n\t      'optgroup^[HTMLElement]|!disabled,label',\n\t      'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n\t      'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n\t      'p^[HTMLElement]|align',\n\t      'param^[HTMLElement]|name,type,value,valueType',\n\t      'picture^[HTMLElement]|',\n\t      'pre^[HTMLElement]|#width',\n\t      'progress^[HTMLElement]|#max,#value',\n\t      'q,blockquote,cite^[HTMLElement]|',\n\t      'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n\t      'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n\t      'shadow^[HTMLElement]|',\n\t      'source^[HTMLElement]|media,sizes,src,srcset,type',\n\t      'span^[HTMLElement]|',\n\t      'style^[HTMLElement]|!disabled,media,type',\n\t      'caption^[HTMLElement]|align',\n\t      'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n\t      'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n\t      'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n\t      'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n\t      'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n\t      'template^[HTMLElement]|',\n\t      'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n\t      'title^[HTMLElement]|text',\n\t      'track^[HTMLElement]|!default,kind,label,src,srclang',\n\t      'ul^[HTMLElement]|!compact,type',\n\t      'unknown^[HTMLElement]|',\n\t      'video^media|#height,poster,#width',\n\t      ':svg:a^:svg:graphics|',\n\t      ':svg:animate^:svg:animation|',\n\t      ':svg:animateMotion^:svg:animation|',\n\t      ':svg:animateTransform^:svg:animation|',\n\t      ':svg:circle^:svg:geometry|',\n\t      ':svg:clipPath^:svg:graphics|',\n\t      ':svg:cursor^:svg:|',\n\t      ':svg:defs^:svg:graphics|',\n\t      ':svg:desc^:svg:|',\n\t      ':svg:discard^:svg:|',\n\t      ':svg:ellipse^:svg:geometry|',\n\t      ':svg:feBlend^:svg:|',\n\t      ':svg:feColorMatrix^:svg:|',\n\t      ':svg:feComponentTransfer^:svg:|',\n\t      ':svg:feComposite^:svg:|',\n\t      ':svg:feConvolveMatrix^:svg:|',\n\t      ':svg:feDiffuseLighting^:svg:|',\n\t      ':svg:feDisplacementMap^:svg:|',\n\t      ':svg:feDistantLight^:svg:|',\n\t      ':svg:feDropShadow^:svg:|',\n\t      ':svg:feFlood^:svg:|',\n\t      ':svg:feFuncA^:svg:componentTransferFunction|',\n\t      ':svg:feFuncB^:svg:componentTransferFunction|',\n\t      ':svg:feFuncG^:svg:componentTransferFunction|',\n\t      ':svg:feFuncR^:svg:componentTransferFunction|',\n\t      ':svg:feGaussianBlur^:svg:|',\n\t      ':svg:feImage^:svg:|',\n\t      ':svg:feMerge^:svg:|',\n\t      ':svg:feMergeNode^:svg:|',\n\t      ':svg:feMorphology^:svg:|',\n\t      ':svg:feOffset^:svg:|',\n\t      ':svg:fePointLight^:svg:|',\n\t      ':svg:feSpecularLighting^:svg:|',\n\t      ':svg:feSpotLight^:svg:|',\n\t      ':svg:feTile^:svg:|',\n\t      ':svg:feTurbulence^:svg:|',\n\t      ':svg:filter^:svg:|',\n\t      ':svg:foreignObject^:svg:graphics|',\n\t      ':svg:g^:svg:graphics|',\n\t      ':svg:image^:svg:graphics|',\n\t      ':svg:line^:svg:geometry|',\n\t      ':svg:linearGradient^:svg:gradient|',\n\t      ':svg:mpath^:svg:|',\n\t      ':svg:marker^:svg:|',\n\t      ':svg:mask^:svg:|',\n\t      ':svg:metadata^:svg:|',\n\t      ':svg:path^:svg:geometry|',\n\t      ':svg:pattern^:svg:|',\n\t      ':svg:polygon^:svg:geometry|',\n\t      ':svg:polyline^:svg:geometry|',\n\t      ':svg:radialGradient^:svg:gradient|',\n\t      ':svg:rect^:svg:geometry|',\n\t      ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n\t      ':svg:script^:svg:|type',\n\t      ':svg:set^:svg:animation|',\n\t      ':svg:stop^:svg:|',\n\t      ':svg:style^:svg:|!disabled,media,title,type',\n\t      ':svg:switch^:svg:graphics|',\n\t      ':svg:symbol^:svg:|',\n\t      ':svg:tspan^:svg:textPositioning|',\n\t      ':svg:text^:svg:textPositioning|',\n\t      ':svg:textPath^:svg:textContent|',\n\t      ':svg:title^:svg:|',\n\t      ':svg:use^:svg:graphics|',\n\t      ':svg:view^:svg:|#zoomAndPan',\n\t      'data^[HTMLElement]|value',\n\t      'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n\t      'summary^[HTMLElement]|',\n\t      'time^[HTMLElement]|dateTime',\n\t  ];\n\t  var _ATTR_TO_PROP = {\n\t      'class': 'className',\n\t      'formaction': 'formAction',\n\t      'innerHtml': 'innerHTML',\n\t      'readonly': 'readOnly',\n\t      'tabindex': 'tabIndex',\n\t  };\n\t  var DomElementSchemaRegistry = (function (_super) {\n\t      __extends$21(DomElementSchemaRegistry, _super);\n\t      function DomElementSchemaRegistry() {\n\t          var _this = this;\n\t          _super.call(this);\n\t          this._schema = {};\n\t          SCHEMA.forEach(function (encodedType) {\n\t              var type = {};\n\t              var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n\t              var properties = strProperties.split(',');\n\t              var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n\t              typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n\t              var superType = superName && _this._schema[superName.toLowerCase()];\n\t              if (superType) {\n\t                  Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n\t              }\n\t              properties.forEach(function (property) {\n\t                  if (property.length > 0) {\n\t                      switch (property[0]) {\n\t                          case '*':\n\t                              // We don't yet support events.\n\t                              // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n\t                              // will\n\t                              // almost certainly introduce bad XSS vulnerabilities.\n\t                              // type[property.substring(1)] = EVENT;\n\t                              break;\n\t                          case '!':\n\t                              type[property.substring(1)] = BOOLEAN;\n\t                              break;\n\t                          case '#':\n\t                              type[property.substring(1)] = NUMBER;\n\t                              break;\n\t                          case '%':\n\t                              type[property.substring(1)] = OBJECT;\n\t                              break;\n\t                          default:\n\t                              type[property] = STRING;\n\t                      }\n\t                  }\n\t              });\n\t          });\n\t      }\n\t      DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n\t          if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n\t              return true;\n\t          }\n\t          if (tagName.indexOf('-') > -1) {\n\t              if (tagName === 'ng-container' || tagName === 'ng-content') {\n\t                  return false;\n\t              }\n\t              if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n\t                  // Can't tell now as we don't know which properties a custom element will get\n\t                  // once it is instantiated\n\t                  return true;\n\t              }\n\t          }\n\t          var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n\t          return !!elementProperties[propName];\n\t      };\n\t      DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n\t          if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n\t              return true;\n\t          }\n\t          if (tagName.indexOf('-') > -1) {\n\t              if (tagName === 'ng-container' || tagName === 'ng-content') {\n\t                  return true;\n\t              }\n\t              if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n\t                  // Allow any custom elements\n\t                  return true;\n\t              }\n\t          }\n\t          return !!this._schema[tagName.toLowerCase()];\n\t      };\n\t      /**\n\t       * securityContext returns the security context for the given property on the given DOM tag.\n\t       *\n\t       * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n\t       * possible to bind a value into a changing attribute or tag name.\n\t       *\n\t       * The filtering is white list based. All attributes in the schema above are assumed to have the\n\t       * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n\t       * attack vectors are assigned their appropriate context.\n\t       */\n\t      DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n\t          if (isAttribute) {\n\t              // NB: For security purposes, use the mapped property name, not the attribute name.\n\t              propName = this.getMappedPropName(propName);\n\t          }\n\t          // Make sure comparisons are case insensitive, so that case differences between attribute and\n\t          // property names do not have a security impact.\n\t          tagName = tagName.toLowerCase();\n\t          propName = propName.toLowerCase();\n\t          var ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n\t          if (ctx) {\n\t              return ctx;\n\t          }\n\t          ctx = SECURITY_SCHEMA['*|' + propName];\n\t          return ctx ? ctx : _angular_core.SecurityContext.NONE;\n\t      };\n\t      DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n\t      DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n\t      DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n\t          if (name.toLowerCase().startsWith('on')) {\n\t              var msg = (\"Binding to event property '\" + name + \"' is disallowed for security reasons, \") +\n\t                  (\"please use (\" + name.slice(2) + \")=...\") +\n\t                  (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n\t                  \" current module.\";\n\t              return { error: true, msg: msg };\n\t          }\n\t          else {\n\t              return { error: false };\n\t          }\n\t      };\n\t      DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n\t          if (name.toLowerCase().startsWith('on')) {\n\t              var msg = (\"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \") +\n\t                  (\"please use (\" + name.slice(2) + \")=...\");\n\t              return { error: true, msg: msg };\n\t          }\n\t          else {\n\t              return { error: false };\n\t          }\n\t      };\n\t      DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n\t      DomElementSchemaRegistry.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      DomElementSchemaRegistry.ctorParameters = [];\n\t      return DomElementSchemaRegistry;\n\t  }(ElementSchemaRegistry));\n\t\n\t  var _NO_RESOURCE_LOADER = {\n\t      get: function (url) {\n\t          throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n\t      }\n\t  };\n\t  /**\n\t   * A set of providers that provide `RuntimeCompiler` and its dependencies to use for\n\t   * template compilation.\n\t   */\n\t  var COMPILER_PROVIDERS = [\n\t      { provide: Reflector, useValue: reflector },\n\t      { provide: ReflectorReader, useExisting: Reflector },\n\t      { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n\t      Console,\n\t      Lexer,\n\t      Parser,\n\t      HtmlParser,\n\t      {\n\t          provide: I18NHtmlParser,\n\t          useFactory: function (parser, translations, format) {\n\t              return new I18NHtmlParser(parser, translations, format);\n\t          },\n\t          deps: [\n\t              HtmlParser,\n\t              [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n\t              [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n\t          ]\n\t      },\n\t      TemplateParser,\n\t      DirectiveNormalizer,\n\t      CompileMetadataResolver,\n\t      DEFAULT_PACKAGE_URL_PROVIDER,\n\t      StyleCompiler,\n\t      ViewCompiler,\n\t      NgModuleCompiler,\n\t      DirectiveWrapperCompiler,\n\t      { provide: CompilerConfig, useValue: new CompilerConfig() },\n\t      RuntimeCompiler,\n\t      { provide: _angular_core.Compiler, useExisting: RuntimeCompiler },\n\t      DomElementSchemaRegistry,\n\t      { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n\t      UrlResolver,\n\t      DirectiveResolver,\n\t      PipeResolver,\n\t      NgModuleResolver\n\t  ];\n\t  var RuntimeCompilerFactory = (function () {\n\t      function RuntimeCompilerFactory(defaultOptions) {\n\t          this._defaultOptions = [{\n\t                  useDebug: _angular_core.isDevMode(),\n\t                  useJit: true,\n\t                  defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated\n\t              }].concat(defaultOptions);\n\t      }\n\t      RuntimeCompilerFactory.prototype.createCompiler = function (options) {\n\t          if (options === void 0) { options = []; }\n\t          var mergedOptions = _mergeOptions(this._defaultOptions.concat(options));\n\t          var injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n\t              COMPILER_PROVIDERS, {\n\t                  provide: CompilerConfig,\n\t                  useFactory: function () {\n\t                      return new CompilerConfig({\n\t                          // let explicit values from the compiler options overwrite options\n\t                          // from the app providers. E.g. important for the testing platform.\n\t                          genDebugInfo: mergedOptions.useDebug,\n\t                          // let explicit values from the compiler options overwrite options\n\t                          // from the app providers\n\t                          useJit: mergedOptions.useJit,\n\t                          // let explicit values from the compiler options overwrite options\n\t                          // from the app providers\n\t                          defaultEncapsulation: mergedOptions.defaultEncapsulation,\n\t                          logBindingUpdate: mergedOptions.useDebug\n\t                      });\n\t                  },\n\t                  deps: []\n\t              },\n\t              mergedOptions.providers\n\t          ]);\n\t          return injector.get(_angular_core.Compiler);\n\t      };\n\t      RuntimeCompilerFactory.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      RuntimeCompilerFactory.ctorParameters = [\n\t          { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n\t      ];\n\t      return RuntimeCompilerFactory;\n\t  }());\n\t  function _initReflector() {\n\t      reflector.reflectionCapabilities = new ReflectionCapabilities();\n\t  }\n\t  /**\n\t   * A platform that included corePlatform and the compiler.\n\t   *\n\t   * @experimental\n\t   */\n\t  var platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n\t      { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n\t      { provide: _angular_core.CompilerFactory, useClass: RuntimeCompilerFactory },\n\t      { provide: _angular_core.PLATFORM_INITIALIZER, useValue: _initReflector, multi: true },\n\t  ]);\n\t  function _mergeOptions(optionsArr) {\n\t      return {\n\t          useDebug: _lastDefined(optionsArr.map(function (options) { return options.useDebug; })),\n\t          useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n\t          defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n\t          providers: _mergeArrays(optionsArr.map(function (options) { return options.providers; }))\n\t      };\n\t  }\n\t  function _lastDefined(args) {\n\t      for (var i = args.length - 1; i >= 0; i--) {\n\t          if (args[i] !== undefined) {\n\t              return args[i];\n\t          }\n\t      }\n\t      return undefined;\n\t  }\n\t  function _mergeArrays(parts) {\n\t      var result = [];\n\t      parts.forEach(function (part) { return part && result.push.apply(result, part); });\n\t      return result;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  // asset:<package-name>/<realm>/<path-to-module>\n\t  var _ASSET_URL_RE = /asset:([^\\/]+)\\/([^\\/]+)\\/(.+)/;\n\t  /**\n\t   * Interface that defines how import statements should be generated.\n\t   */\n\t  var ImportGenerator = (function () {\n\t      function ImportGenerator() {\n\t      }\n\t      ImportGenerator.parseAssetUrl = function (url) { return AssetUrl.parse(url); };\n\t      return ImportGenerator;\n\t  }());\n\t  var AssetUrl = (function () {\n\t      function AssetUrl(packageName, firstLevelDir, modulePath) {\n\t          this.packageName = packageName;\n\t          this.firstLevelDir = firstLevelDir;\n\t          this.modulePath = modulePath;\n\t      }\n\t      AssetUrl.parse = function (url, allowNonMatching) {\n\t          if (allowNonMatching === void 0) { allowNonMatching = true; }\n\t          var match = url.match(_ASSET_URL_RE);\n\t          if (match !== null) {\n\t              return new AssetUrl(match[1], match[2], match[3]);\n\t          }\n\t          if (allowNonMatching) {\n\t              return null;\n\t          }\n\t          throw new Error(\"Url \" + url + \" is not a valid asset: url\");\n\t      };\n\t      return AssetUrl;\n\t  }());\n\t\n\t  exports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\n\t  exports.CompilerConfig = CompilerConfig;\n\t  exports.RenderTypes = RenderTypes;\n\t  exports.RuntimeCompiler = RuntimeCompiler;\n\t  exports.DirectiveResolver = DirectiveResolver;\n\t  exports.PipeResolver = PipeResolver;\n\t  exports.NgModuleResolver = NgModuleResolver;\n\t  exports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\n\t  exports.InterpolationConfig = InterpolationConfig;\n\t  exports.NgModuleCompiler = NgModuleCompiler;\n\t  exports.DirectiveWrapperCompiler = DirectiveWrapperCompiler;\n\t  exports.ViewCompiler = ViewCompiler;\n\t  exports.TextAst = TextAst;\n\t  exports.BoundTextAst = BoundTextAst;\n\t  exports.AttrAst = AttrAst;\n\t  exports.BoundElementPropertyAst = BoundElementPropertyAst;\n\t  exports.BoundEventAst = BoundEventAst;\n\t  exports.ReferenceAst = ReferenceAst;\n\t  exports.VariableAst = VariableAst;\n\t  exports.ElementAst = ElementAst;\n\t  exports.EmbeddedTemplateAst = EmbeddedTemplateAst;\n\t  exports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\n\t  exports.DirectiveAst = DirectiveAst;\n\t  exports.ProviderAst = ProviderAst;\n\t  exports.NgContentAst = NgContentAst;\n\t  exports.templateVisitAll = templateVisitAll;\n\t  exports.CompileMetadataWithIdentifier = CompileMetadataWithIdentifier;\n\t  exports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\n\t  exports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\n\t  exports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\n\t  exports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\n\t  exports.CompileAnimationMetadata = CompileAnimationMetadata;\n\t  exports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\n\t  exports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\n\t  exports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\n\t  exports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\n\t  exports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\n\t  exports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\n\t  exports.CompileIdentifierMetadata = CompileIdentifierMetadata;\n\t  exports.CompileDiDependencyMetadata = CompileDiDependencyMetadata;\n\t  exports.CompileProviderMetadata = CompileProviderMetadata;\n\t  exports.CompileFactoryMetadata = CompileFactoryMetadata;\n\t  exports.CompileTokenMetadata = CompileTokenMetadata;\n\t  exports.CompileTypeMetadata = CompileTypeMetadata;\n\t  exports.CompileQueryMetadata = CompileQueryMetadata;\n\t  exports.CompileStylesheetMetadata = CompileStylesheetMetadata;\n\t  exports.CompileTemplateMetadata = CompileTemplateMetadata;\n\t  exports.CompileDirectiveMetadata = CompileDirectiveMetadata;\n\t  exports.createHostComponentMeta = createHostComponentMeta;\n\t  exports.CompilePipeMetadata = CompilePipeMetadata;\n\t  exports.CompileNgModuleMetadata = CompileNgModuleMetadata;\n\t  exports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\n\t  exports.removeIdentifierDuplicates = removeIdentifierDuplicates;\n\t  exports.isStaticSymbol = isStaticSymbol;\n\t  exports.ProviderMeta = ProviderMeta;\n\t  exports.SourceModule = SourceModule;\n\t  exports.analyzeNgModules = analyzeNgModules;\n\t  exports.OfflineCompiler = OfflineCompiler;\n\t  exports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\n\t  exports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\n\t  exports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\n\t  exports.UrlResolver = UrlResolver;\n\t  exports.getUrlScheme = getUrlScheme;\n\t  exports.ResourceLoader = ResourceLoader;\n\t  exports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\n\t  exports.RuntimeCompilerFactory = RuntimeCompilerFactory;\n\t  exports.platformCoreDynamic = platformCoreDynamic;\n\t  exports.ElementSchemaRegistry = ElementSchemaRegistry;\n\t  exports.I18NHtmlParser = I18NHtmlParser;\n\t  exports.MessageBundle = MessageBundle;\n\t  exports.Xliff = Xliff;\n\t  exports.Xmb = Xmb;\n\t  exports.Xtb = Xtb;\n\t  exports.DirectiveNormalizer = DirectiveNormalizer;\n\t  exports.Lexer = Lexer;\n\t  exports.Token = Token;\n\t  exports.EOF = EOF;\n\t  exports.isIdentifier = isIdentifier;\n\t  exports.isQuote = isQuote;\n\t  exports.SplitInterpolation = SplitInterpolation;\n\t  exports.TemplateBindingParseResult = TemplateBindingParseResult;\n\t  exports.Parser = Parser;\n\t  exports._ParseAST = _ParseAST;\n\t  exports.CompileMetadataResolver = CompileMetadataResolver;\n\t  exports.HtmlParser = HtmlParser;\n\t  exports.ParseTreeResult = ParseTreeResult;\n\t  exports.TreeError = TreeError;\n\t  exports.ImportGenerator = ImportGenerator;\n\t  exports.AssetUrl = AssetUrl;\n\t  exports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\n\t  exports.TypeScriptEmitter = TypeScriptEmitter;\n\t  exports.ParseLocation = ParseLocation;\n\t  exports.ParseSourceFile = ParseSourceFile;\n\t  exports.ParseSourceSpan = ParseSourceSpan;\n\t  exports.ParseError = ParseError;\n\t  exports.DomElementSchemaRegistry = DomElementSchemaRegistry;\n\t  exports.CssSelector = CssSelector;\n\t  exports.SelectorMatcher = SelectorMatcher;\n\t  exports.SelectorListContext = SelectorListContext;\n\t  exports.SelectorContext = SelectorContext;\n\t  exports.StylesCompileDependency = StylesCompileDependency;\n\t  exports.StylesCompileResult = StylesCompileResult;\n\t  exports.CompiledStylesheet = CompiledStylesheet;\n\t  exports.StyleCompiler = StyleCompiler;\n\t  exports.TemplateParseError = TemplateParseError;\n\t  exports.TemplateParseResult = TemplateParseResult;\n\t  exports.TemplateParser = TemplateParser;\n\t  exports.splitClasses = splitClasses;\n\t\n\t}));\n\n\n/***/ },\n\n/***/ 12:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @license Angular v2.1.2\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(13), __webpack_require__(1)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', 'rxjs/Subject', 'rxjs/Observable'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}),global.Rx,global.Rx));\n\t}(this, function (exports,rxjs_Subject,rxjs_Observable) { 'use strict';\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var globalScope;\n\t    if (typeof window === 'undefined') {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = self;\n\t        }\n\t        else {\n\t            globalScope = global;\n\t        }\n\t    }\n\t    else {\n\t        globalScope = window;\n\t    }\n\t    function scheduleMicroTask(fn) {\n\t        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var global$1 = globalScope;\n\t    function getTypeNameForDebugging(type) {\n\t        return type['name'] || typeof type;\n\t    }\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    global$1.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    function stringify(token) {\n\t        if (typeof token === 'string') {\n\t            return token;\n\t        }\n\t        if (token === undefined || token === null) {\n\t            return '' + token;\n\t        }\n\t        if (token.overriddenName) {\n\t            return token.overriddenName;\n\t        }\n\t        if (token.name) {\n\t            return token.name;\n\t        }\n\t        var res = token.toString();\n\t        var newLineIndex = res.indexOf('\\n');\n\t        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t    }\n\t    // JS has NaN !== NaN\n\t    function looseIdentical(a, b) {\n\t        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n\t    }\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    function print(obj) {\n\t        console.log(obj);\n\t    }\n\t    function warn(obj) {\n\t        console.warn(obj);\n\t    }\n\t    var _symbolIterator = null;\n\t    function getSymbolIterator() {\n\t        if (!_symbolIterator) {\n\t            if (globalScope.Symbol && Symbol.iterator) {\n\t                _symbolIterator = Symbol.iterator;\n\t            }\n\t            else {\n\t                // es6-shim specific logic\n\t                var keys = Object.getOwnPropertyNames(Map.prototype);\n\t                for (var i = 0; i < keys.length; ++i) {\n\t                    var key = keys[i];\n\t                    if (key !== 'entries' && key !== 'size' &&\n\t                        Map.prototype[key] === Map.prototype['entries']) {\n\t                        _symbolIterator = key;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return _symbolIterator;\n\t    }\n\t    function isPrimitive(obj) {\n\t        return !isJsObject(obj);\n\t    }\n\t\n\t    var _nextClassId = 0;\n\t    var Reflect = global$1.Reflect;\n\t    function extractAnnotation(annotation) {\n\t        if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n\t            // it is a decorator, extract annotation\n\t            annotation = annotation.annotation;\n\t        }\n\t        return annotation;\n\t    }\n\t    function applyParams(fnOrArray, key) {\n\t        if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n\t            fnOrArray === Number || fnOrArray === Array) {\n\t            throw new Error(\"Can not use native \" + stringify(fnOrArray) + \" as constructor\");\n\t        }\n\t        if (typeof fnOrArray === 'function') {\n\t            return fnOrArray;\n\t        }\n\t        if (Array.isArray(fnOrArray)) {\n\t            var annotations = fnOrArray;\n\t            var annoLength = annotations.length - 1;\n\t            var fn = fnOrArray[annoLength];\n\t            if (typeof fn !== 'function') {\n\t                throw new Error(\"Last position of Class method array must be Function in key \" + key + \" was '\" + stringify(fn) + \"'\");\n\t            }\n\t            if (annoLength != fn.length) {\n\t                throw new Error(\"Number of annotations (\" + annoLength + \") does not match number of arguments (\" + fn.length + \") in the function: \" + stringify(fn));\n\t            }\n\t            var paramsAnnotations = [];\n\t            for (var i = 0, ii = annotations.length - 1; i < ii; i++) {\n\t                var paramAnnotations = [];\n\t                paramsAnnotations.push(paramAnnotations);\n\t                var annotation = annotations[i];\n\t                if (Array.isArray(annotation)) {\n\t                    for (var j = 0; j < annotation.length; j++) {\n\t                        paramAnnotations.push(extractAnnotation(annotation[j]));\n\t                    }\n\t                }\n\t                else if (typeof annotation === 'function') {\n\t                    paramAnnotations.push(extractAnnotation(annotation));\n\t                }\n\t                else {\n\t                    paramAnnotations.push(annotation);\n\t                }\n\t            }\n\t            Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n\t            return fn;\n\t        }\n\t        throw new Error(\"Only Function or Array is supported in Class definition for key '\" + key + \"' is '\" + stringify(fnOrArray) + \"'\");\n\t    }\n\t    /**\n\t     * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n\t     *\n\t     * ## Basic Example\n\t     *\n\t     * ```\n\t     * var Greeter = ng.Class({\n\t     *   constructor: function(name) {\n\t     *     this.name = name;\n\t     *   },\n\t     *\n\t     *   greet: function() {\n\t     *     alert('Hello ' + this.name + '!');\n\t     *   }\n\t     * });\n\t     * ```\n\t     *\n\t     * is equivalent to ES6:\n\t     *\n\t     * ```\n\t     * class Greeter {\n\t     *   constructor(name) {\n\t     *     this.name = name;\n\t     *   }\n\t     *\n\t     *   greet() {\n\t     *     alert('Hello ' + this.name + '!');\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * or equivalent to ES5:\n\t     *\n\t     * ```\n\t     * var Greeter = function (name) {\n\t     *   this.name = name;\n\t     * }\n\t     *\n\t     * Greeter.prototype.greet = function () {\n\t     *   alert('Hello ' + this.name + '!');\n\t     * }\n\t     * ```\n\t     *\n\t     * ### Example with parameter annotations\n\t     *\n\t     * ```\n\t     * var MyService = ng.Class({\n\t     *   constructor: [String, [new Optional(), Service], function(name, myService) {\n\t     *     ...\n\t     *   }]\n\t     * });\n\t     * ```\n\t     *\n\t     * is equivalent to ES6:\n\t     *\n\t     * ```\n\t     * class MyService {\n\t     *   constructor(name: string, @Optional() myService: Service) {\n\t     *     ...\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * ### Example with inheritance\n\t     *\n\t     * ```\n\t     * var Shape = ng.Class({\n\t     *   constructor: (color) {\n\t     *     this.color = color;\n\t     *   }\n\t     * });\n\t     *\n\t     * var Square = ng.Class({\n\t     *   extends: Shape,\n\t     *   constructor: function(color, size) {\n\t     *     Shape.call(this, color);\n\t     *     this.size = size;\n\t     *   }\n\t     * });\n\t     * ```\n\t     * @stable\n\t     */\n\t    function Class(clsDef) {\n\t        var constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\t        var proto = constructor.prototype;\n\t        if (clsDef.hasOwnProperty('extends')) {\n\t            if (typeof clsDef.extends === 'function') {\n\t                constructor.prototype = proto =\n\t                    Object.create(clsDef.extends.prototype);\n\t            }\n\t            else {\n\t                throw new Error(\"Class definition 'extends' property must be a constructor function was: \" + stringify(clsDef.extends));\n\t            }\n\t        }\n\t        for (var key in clsDef) {\n\t            if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n\t                proto[key] = applyParams(clsDef[key], key);\n\t            }\n\t        }\n\t        if (this && this.annotations instanceof Array) {\n\t            Reflect.defineMetadata('annotations', this.annotations, constructor);\n\t        }\n\t        var constructorName = constructor['name'];\n\t        if (!constructorName || constructorName === 'constructor') {\n\t            constructor['overriddenName'] = \"class\" + _nextClassId++;\n\t        }\n\t        return constructor;\n\t    }\n\t    function makeDecorator(name, props, parentClass, chainFn) {\n\t        if (chainFn === void 0) { chainFn = null; }\n\t        var metaCtor = makeMetadataCtor([props]);\n\t        function DecoratorFactory(objOrType) {\n\t            if (!(Reflect && Reflect.getMetadata)) {\n\t                throw 'reflect-metadata shim is required when using class decorators';\n\t            }\n\t            if (this instanceof DecoratorFactory) {\n\t                metaCtor.call(this, objOrType);\n\t                return this;\n\t            }\n\t            var annotationInstance = new DecoratorFactory(objOrType);\n\t            var chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n\t            chainAnnotation.push(annotationInstance);\n\t            var TypeDecorator = function TypeDecorator(cls) {\n\t                var annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n\t                annotations.push(annotationInstance);\n\t                Reflect.defineMetadata('annotations', annotations, cls);\n\t                return cls;\n\t            };\n\t            TypeDecorator.annotations = chainAnnotation;\n\t            TypeDecorator.Class = Class;\n\t            if (chainFn)\n\t                chainFn(TypeDecorator);\n\t            return TypeDecorator;\n\t        }\n\t        if (parentClass) {\n\t            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        DecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        DecoratorFactory.annotationCls = DecoratorFactory;\n\t        return DecoratorFactory;\n\t    }\n\t    function makeMetadataCtor(props) {\n\t        return function ctor() {\n\t            var _this = this;\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            props.forEach(function (prop, i) {\n\t                var argVal = args[i];\n\t                if (Array.isArray(prop)) {\n\t                    // plain parameter\n\t                    _this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n\t                }\n\t                else {\n\t                    for (var propName in prop) {\n\t                        _this[propName] =\n\t                            argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n\t                    }\n\t                }\n\t            });\n\t        };\n\t    }\n\t    function makeParamDecorator(name, props, parentClass) {\n\t        var metaCtor = makeMetadataCtor(props);\n\t        function ParamDecoratorFactory() {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            if (this instanceof ParamDecoratorFactory) {\n\t                metaCtor.apply(this, args);\n\t                return this;\n\t            }\n\t            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n\t            ParamDecorator.annotation = annotationInstance;\n\t            return ParamDecorator;\n\t            function ParamDecorator(cls, unusedKey, index) {\n\t                var parameters = Reflect.getMetadata('parameters', cls) || [];\n\t                // there might be gaps if some in between parameters do not have annotations.\n\t                // we pad with nulls.\n\t                while (parameters.length <= index) {\n\t                    parameters.push(null);\n\t                }\n\t                parameters[index] = parameters[index] || [];\n\t                parameters[index].push(annotationInstance);\n\t                Reflect.defineMetadata('parameters', parameters, cls);\n\t                return cls;\n\t            }\n\t            var _a;\n\t        }\n\t        if (parentClass) {\n\t            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        ParamDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n\t        return ParamDecoratorFactory;\n\t    }\n\t    function makePropDecorator(name, props, parentClass) {\n\t        var metaCtor = makeMetadataCtor(props);\n\t        function PropDecoratorFactory() {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            if (this instanceof PropDecoratorFactory) {\n\t                metaCtor.apply(this, args);\n\t                return this;\n\t            }\n\t            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n\t            return function PropDecorator(target, name) {\n\t                var meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n\t                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n\t                meta[name].unshift(decoratorInstance);\n\t                Reflect.defineMetadata('propMetadata', meta, target.constructor);\n\t            };\n\t            var _a;\n\t        }\n\t        if (parentClass) {\n\t            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        PropDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n\t        return PropDecoratorFactory;\n\t    }\n\t\n\t    /**\n\t     * Inject decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Inject = makeParamDecorator('Inject', [['token', undefined]]);\n\t    /**\n\t     * Optional decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Optional = makeParamDecorator('Optional', []);\n\t    /**\n\t     * Injectable decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Injectable = makeParamDecorator('Injectable', []);\n\t    /**\n\t     * Self decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Self = makeParamDecorator('Self', []);\n\t    /**\n\t     * SkipSelf decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var SkipSelf = makeParamDecorator('SkipSelf', []);\n\t    /**\n\t     * Host decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Host = makeParamDecorator('Host', []);\n\t\n\t    /**\n\t     * Creates a token that can be used in a DI Provider.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n\t     *\n\t     * ```typescript\n\t     * var t = new OpaqueToken(\"value\");\n\t     *\n\t     * var injector = Injector.resolveAndCreate([\n\t     *   {provide: t, useValue: \"bindingValue\"}\n\t     * ]);\n\t     *\n\t     * expect(injector.get(t)).toEqual(\"bindingValue\");\n\t     * ```\n\t     *\n\t     * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n\t     * caused by multiple providers using the same string as two different tokens.\n\t     *\n\t     * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n\t     * error messages.\n\t     * @stable\n\t     */\n\t    // so that metadata is gathered for this class\n\t    var OpaqueToken = (function () {\n\t        function OpaqueToken(_desc) {\n\t            this._desc = _desc;\n\t        }\n\t        OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n\t        OpaqueToken.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        OpaqueToken.ctorParameters = [\n\t            null,\n\t        ];\n\t        return OpaqueToken;\n\t    }());\n\t\n\t    /**\n\t     * This token can be used to create a virtual provider that will populate the\n\t     * `entryComponents` fields of components and ng modules based on its `useValue`.\n\t     * All components that are referenced in the `useValue` value (either directly\n\t     * or in a nested array or map) will be added to the `entryComponents` property.\n\t     *\n\t     * ### Example\n\t     * The following example shows how the router can populate the `entryComponents`\n\t     * field of an NgModule based on the router configuration which refers\n\t     * to components.\n\t     *\n\t     * ```typescript\n\t     * // helper function inside the router\n\t     * function provideRoutes(routes) {\n\t     *   return [\n\t     *     {provide: ROUTES, useValue: routes},\n\t     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n\t     *   ];\n\t     * }\n\t     *\n\t     * // user code\n\t     * let routes = [\n\t     *   {path: '/root', component: RootComp},\n\t     *   {path: '/teams', component: TeamsComp}\n\t     * ];\n\t     *\n\t     * @NgModule({\n\t     *   providers: [provideRoutes(routes)]\n\t     * })\n\t     * class ModuleWithRoutes {}\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var ANALYZE_FOR_ENTRY_COMPONENTS = new OpaqueToken('AnalyzeForEntryComponents');\n\t    /**\n\t     * Attribute decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Attribute = makeParamDecorator('Attribute', [['attributeName', undefined]]);\n\t    /**\n\t     * Base class for query metadata.\n\t     *\n\t     * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n\t     * more information.\n\t     *\n\t     * @stable\n\t     */\n\t    var Query = (function () {\n\t        function Query() {\n\t        }\n\t        return Query;\n\t    }());\n\t    /**\n\t     * ContentChildren decorator and metadata.\n\t     *\n\t     *  @stable\n\t     *  @Annotation\n\t     */\n\t    var ContentChildren = makePropDecorator('ContentChildren', [\n\t        ['selector', undefined], {\n\t            first: false,\n\t            isViewQuery: false,\n\t            descendants: false,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t    /**\n\t     * @whatItDoes Configures a content query.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n\t     *\n\t     * @description\n\t     *\n\t     * You can use ContentChild to get the first element or the directive matching the selector from the\n\t     * content DOM. If the content DOM changes, and a new child matches the selector,\n\t     * the property will be updated.\n\t     *\n\t     * Content queries are set before the `ngAfterContentInit` callback is called.\n\t     *\n\t     * **Metadata Properties**:\n\t     *\n\t     * * **selector** - the directive type or the name used for querying.\n\t     * * **read** - read a different token from the queried element.\n\t     *\n\t     * Let's look at an example:\n\t     *\n\t     * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n\t     *\n\t     * **npm package**: `@angular/core`\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var ContentChild = makePropDecorator('ContentChild', [\n\t        ['selector', undefined], {\n\t            first: true,\n\t            isViewQuery: false,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t    /**\n\t     * @whatItDoes Configures a view query.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n\t     *\n\t     * @description\n\t     *\n\t     * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n\t     * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n\t     * and the changes observable of the query list will emit a new value.\n\t     *\n\t     * View queries are set before the `ngAfterViewInit` callback is called.\n\t     *\n\t     * **Metadata Properties**:\n\t     *\n\t     * * **selector** - the directive type or the name used for querying.\n\t     * * **read** - read a different token from the queried elements.\n\t     *\n\t     * Let's look at an example:\n\t     *\n\t     * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n\t     *\n\t     * **npm package**: `@angular/core`\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var ViewChildren = makePropDecorator('ViewChildren', [\n\t        ['selector', undefined], {\n\t            first: false,\n\t            isViewQuery: true,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t    /**\n\t     * ViewChild decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var ViewChild = makePropDecorator('ViewChild', [\n\t        ['selector', undefined], {\n\t            first: true,\n\t            isViewQuery: true,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t\n\t    /**\n\t     * Describes within the change detector which strategy will be used the next time change\n\t     * detection is triggered.\n\t     * @stable\n\t     */\n\t    exports.ChangeDetectionStrategy;\n\t    (function (ChangeDetectionStrategy) {\n\t        /**\n\t         * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n\t         */\n\t        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n\t        /**\n\t         * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n\t         */\n\t        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n\t    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n\t    /**\n\t     * Describes the status of the detector.\n\t     */\n\t    var ChangeDetectorStatus;\n\t    (function (ChangeDetectorStatus) {\n\t        /**\n\t         * `CheckedOnce` means that after calling detectChanges the mode of the change detector\n\t         * will become `Checked`.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n\t        /**\n\t         * `Checked` means that the change detector should be skipped until its mode changes to\n\t         * `CheckOnce`.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n\t        /**\n\t         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n\t         * will remain `CheckAlways`.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n\t        /**\n\t         * `Detached` means that the change detector sub tree is not a part of the main tree and\n\t         * should be skipped.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n\t        /**\n\t         * `Errored` means that the change detector encountered an error checking a binding\n\t         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n\t         * detectors in this state will no longer detect changes.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n\t        /**\n\t         * `Destroyed` means that the change detector is destroyed.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n\t    })(ChangeDetectorStatus || (ChangeDetectorStatus = {}));\n\t    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n\t        return isBlank(changeDetectionStrategy) ||\n\t            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n\t    }\n\t\n\t    /**\n\t     * Directive decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Directive = makeDecorator('Directive', {\n\t        selector: undefined,\n\t        inputs: undefined,\n\t        outputs: undefined,\n\t        host: undefined,\n\t        providers: undefined,\n\t        exportAs: undefined,\n\t        queries: undefined\n\t    });\n\t    /**\n\t     * Component decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Component = makeDecorator('Component', {\n\t        selector: undefined,\n\t        inputs: undefined,\n\t        outputs: undefined,\n\t        host: undefined,\n\t        exportAs: undefined,\n\t        moduleId: undefined,\n\t        providers: undefined,\n\t        viewProviders: undefined,\n\t        changeDetection: exports.ChangeDetectionStrategy.Default,\n\t        queries: undefined,\n\t        templateUrl: undefined,\n\t        template: undefined,\n\t        styleUrls: undefined,\n\t        styles: undefined,\n\t        animations: undefined,\n\t        encapsulation: undefined,\n\t        interpolation: undefined,\n\t        entryComponents: undefined\n\t    }, Directive);\n\t    /**\n\t     * Pipe decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Pipe = makeDecorator('Pipe', {\n\t        name: undefined,\n\t        pure: true,\n\t    });\n\t    /**\n\t     * Input decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Input = makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n\t    /**\n\t     * Output decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Output = makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n\t    /**\n\t     * HostBinding decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var HostBinding = makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n\t    /**\n\t     * HostBinding decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var HostListener = makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @stable\n\t     */\n\t    var LifecycleHooks;\n\t    (function (LifecycleHooks) {\n\t        LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\n\t        LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\n\t        LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\n\t        LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\n\t        LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\n\t        LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\n\t        LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\n\t        LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\n\t    })(LifecycleHooks || (LifecycleHooks = {}));\n\t    var LIFECYCLE_HOOKS_VALUES = [\n\t        LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n\t        LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n\t        LifecycleHooks.AfterViewChecked\n\t    ];\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n\t     *\n\t     * @description\n\t     * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n\t     * and content children are checked if at least one of them has changed.\n\t     * The `changes` parameter contains the changed properties.\n\t     *\n\t     * See {@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var OnChanges = (function () {\n\t        function OnChanges() {\n\t        }\n\t        return OnChanges;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n\t     * initialized.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n\t     *\n\t     * @description\n\t     * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n\t     * first time, and before any of its children have been checked. It is invoked only once when the\n\t     * directive is instantiated.\n\t     *\n\t     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var OnInit = (function () {\n\t        function OnInit() {\n\t        }\n\t        return OnInit;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n\t     *\n\t     * @description\n\t     * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n\t     * algorithm. The default change detection algorithm looks for differences by comparing\n\t     * bound-property values by reference across change detection runs.\n\t     *\n\t     * Note that a directive typically should not use both `DoCheck` and {@link OnChanges} to respond to\n\t     * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n\t     * detector detects changes.\n\t     *\n\t     * See {@link KeyValueDiffers} and {@link IterableDiffers} for implementing custom dirty checking\n\t     * for collections.\n\t     *\n\t     * See {@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var DoCheck = (function () {\n\t        function DoCheck() {\n\t        }\n\t        return DoCheck;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called when a directive or pipe is destroyed.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n\t     *\n\t     * @description\n\t     * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n\t     * instance is destroyed.\n\t     *\n\t     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var OnDestroy = (function () {\n\t        function OnDestroy() {\n\t        }\n\t        return OnDestroy;\n\t    }());\n\t    /**\n\t     *\n\t     * @whatItDoes Lifecycle hook that is called after a directive's content has been fully\n\t     * initialized.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n\t     *\n\t     * @description\n\t     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AfterContentInit = (function () {\n\t        function AfterContentInit() {\n\t        }\n\t        return AfterContentInit;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called after every check of a directive's content.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n\t     *\n\t     * @description\n\t     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AfterContentChecked = (function () {\n\t        function AfterContentChecked() {\n\t        }\n\t        return AfterContentChecked;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called after a component's view has been fully\n\t     * initialized.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n\t     *\n\t     * @description\n\t     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AfterViewInit = (function () {\n\t        function AfterViewInit() {\n\t        }\n\t        return AfterViewInit;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called after every check of a component's view.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n\t     *\n\t     * @description\n\t     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AfterViewChecked = (function () {\n\t        function AfterViewChecked() {\n\t        }\n\t        return AfterViewChecked;\n\t    }());\n\t\n\t    /**\n\t     * Defines a schema that will allow:\n\t     * - any non-Angular elements with a `-` in their name,\n\t     * - any properties on elements with a `-` in their name which is the common rule for custom\n\t     * elements.\n\t     *\n\t     * @stable\n\t     */\n\t    var CUSTOM_ELEMENTS_SCHEMA = {\n\t        name: 'custom-elements'\n\t    };\n\t    /**\n\t     * Defines a schema that will allow any property on any element.\n\t     *\n\t     * @experimental\n\t     */\n\t    var NO_ERRORS_SCHEMA = {\n\t        name: 'no-errors-schema'\n\t    };\n\t    /**\n\t     * NgModule decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var NgModule = makeDecorator('NgModule', {\n\t        providers: undefined,\n\t        declarations: undefined,\n\t        imports: undefined,\n\t        exports: undefined,\n\t        entryComponents: undefined,\n\t        bootstrap: undefined,\n\t        schemas: undefined,\n\t        id: undefined,\n\t    });\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Defines template and style encapsulation options available for Component's {@link Component}.\n\t     *\n\t     * See {@link ViewMetadata#encapsulation}.\n\t     * @stable\n\t     */\n\t    exports.ViewEncapsulation;\n\t    (function (ViewEncapsulation) {\n\t        /**\n\t         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n\t         * Element and pre-processing the style rules provided via\n\t         * {@link ViewMetadata#styles} or {@link ViewMetadata#stylesUrls}, and adding the new Host Element\n\t         * attribute to all selectors.\n\t         *\n\t         * This is the default option.\n\t         */\n\t        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n\t        /**\n\t         * Use the native encapsulation mechanism of the renderer.\n\t         *\n\t         * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n\t         * creating a ShadowRoot for Component's Host Element.\n\t         */\n\t        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n\t        /**\n\t         * Don't provide any template or style encapsulation.\n\t         */\n\t        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n\t    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\t    /**\n\t     * Metadata properties available for configuring Views.\n\t     *\n\t     * For details on the `@Component` annotation, see {@link Component}.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * @Component({\n\t     *   selector: 'greet',\n\t     *   template: 'Hello {{name}}!',\n\t     * })\n\t     * class Greet {\n\t     *   name: string;\n\t     *\n\t     *   constructor() {\n\t     *     this.name = 'World';\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @deprecated Use Component instead.\n\t     *\n\t     * {@link Component}\n\t     */\n\t    var ViewMetadata = (function () {\n\t        function ViewMetadata(_a) {\n\t            var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n\t            this.templateUrl = templateUrl;\n\t            this.template = template;\n\t            this.styleUrls = styleUrls;\n\t            this.styles = styles;\n\t            this.encapsulation = encapsulation;\n\t            this.animations = animations;\n\t            this.interpolation = interpolation;\n\t        }\n\t        return ViewMetadata;\n\t    }());\n\t\n\t    /**\n\t     * Allows to refer to references which are not yet defined.\n\t     *\n\t     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n\t     * DI is declared,\n\t     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n\t     * yet defined.\n\t     *\n\t     * ### Example\n\t     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n\t     * @experimental\n\t     */\n\t    function forwardRef(forwardRefFn) {\n\t        forwardRefFn.__forward_ref__ = forwardRef;\n\t        forwardRefFn.toString = function () { return stringify(this()); };\n\t        return forwardRefFn;\n\t    }\n\t    /**\n\t     * Lazily retrieves the reference value from a forwardRef.\n\t     *\n\t     * Acts as the identity function when given a non-forward-ref value.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n\t     *\n\t     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n\t     *\n\t     * See: {@link forwardRef}\n\t     * @experimental\n\t     */\n\t    function resolveForwardRef(type) {\n\t        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n\t            type.__forward_ref__ === forwardRef) {\n\t            return type();\n\t        }\n\t        else {\n\t            return type;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    function unimplemented() {\n\t        throw new Error('unimplemented');\n\t    }\n\t    /**\n\t     * @stable\n\t     */\n\t    var BaseError = (function (_super) {\n\t        __extends(BaseError, _super);\n\t        function BaseError(message) {\n\t            // Errors don't use current this, instead they create a new instance.\n\t            // We have to do forward all of our api to the nativeInstance.\n\t            var nativeError = _super.call(this, message);\n\t            this._nativeError = nativeError;\n\t        }\n\t        Object.defineProperty(BaseError.prototype, \"message\", {\n\t            get: function () { return this._nativeError.message; },\n\t            set: function (message) { this._nativeError.message = message; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"name\", {\n\t            get: function () { return this._nativeError.name; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"stack\", {\n\t            get: function () { return this._nativeError.stack; },\n\t            set: function (value) { this._nativeError.stack = value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n\t        return BaseError;\n\t    }(Error));\n\t    /**\n\t     * @stable\n\t     */\n\t    var WrappedError = (function (_super) {\n\t        __extends(WrappedError, _super);\n\t        function WrappedError(message, error) {\n\t            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n\t            this.originalError = error;\n\t        }\n\t        Object.defineProperty(WrappedError.prototype, \"stack\", {\n\t            get: function () {\n\t                return (this.originalError instanceof Error ? this.originalError : this._nativeError)\n\t                    .stack;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return WrappedError;\n\t    }(BaseError));\n\t\n\t    var _THROW_IF_NOT_FOUND = new Object();\n\t    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\t    var _NullInjector = (function () {\n\t        function _NullInjector() {\n\t        }\n\t        _NullInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n\t            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n\t                throw new Error(\"No provider for \" + stringify(token) + \"!\");\n\t            }\n\t            return notFoundValue;\n\t        };\n\t        return _NullInjector;\n\t    }());\n\t    /**\n\t     * @whatItDoes Injector interface\n\t     * @howToUse\n\t     * ```\n\t     * const injector: Injector = ...;\n\t     * injector.get(...);\n\t     * ```\n\t     *\n\t     * @description\n\t     * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example core/di/ts/injector_spec.ts region='Injector'}\n\t     *\n\t     * `Injector` returns itself when given `Injector` as a token:\n\t     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n\t     *\n\t     * @stable\n\t     */\n\t    var Injector = (function () {\n\t        function Injector() {\n\t        }\n\t        /**\n\t         * Retrieves an instance from the injector based on the provided token.\n\t         * If not found:\n\t         * - Throws {@link NoProviderError} if no `notFoundValue` that is not equal to\n\t         * Injector.THROW_IF_NOT_FOUND is given\n\t         * - Returns the `notFoundValue` otherwise\n\t         */\n\t        Injector.prototype.get = function (token, notFoundValue) { return unimplemented(); };\n\t        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\t        Injector.NULL = new _NullInjector();\n\t        return Injector;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    function findFirstClosedCycle(keys) {\n\t        var res = [];\n\t        for (var i = 0; i < keys.length; ++i) {\n\t            if (res.indexOf(keys[i]) > -1) {\n\t                res.push(keys[i]);\n\t                return res;\n\t            }\n\t            res.push(keys[i]);\n\t        }\n\t        return res;\n\t    }\n\t    function constructResolvingPath(keys) {\n\t        if (keys.length > 1) {\n\t            var reversed = findFirstClosedCycle(keys.slice().reverse());\n\t            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n\t            return ' (' + tokenStrs.join(' -> ') + ')';\n\t        }\n\t        return '';\n\t    }\n\t    /**\n\t     * Base class for all errors arising from misconfigured providers.\n\t     * @stable\n\t     */\n\t    var AbstractProviderError = (function (_super) {\n\t        __extends$1(AbstractProviderError, _super);\n\t        function AbstractProviderError(injector, key, constructResolvingMessage) {\n\t            _super.call(this, 'DI Error');\n\t            this.keys = [key];\n\t            this.injectors = [injector];\n\t            this.constructResolvingMessage = constructResolvingMessage;\n\t            this.message = this.constructResolvingMessage(this.keys);\n\t        }\n\t        AbstractProviderError.prototype.addKey = function (injector, key) {\n\t            this.injectors.push(injector);\n\t            this.keys.push(key);\n\t            this.message = this.constructResolvingMessage(this.keys);\n\t        };\n\t        return AbstractProviderError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n\t     * {@link Injector} does not have a {@link Provider} for the given key.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor(b:B) {}\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n\t     * ```\n\t     * @stable\n\t     */\n\t    var NoProviderError = (function (_super) {\n\t        __extends$1(NoProviderError, _super);\n\t        function NoProviderError(injector, key) {\n\t            _super.call(this, injector, key, function (keys) {\n\t                var first = stringify(keys[0].token);\n\t                return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n\t            });\n\t        }\n\t        return NoProviderError;\n\t    }(AbstractProviderError));\n\t    /**\n\t     * Thrown when dependencies form a cycle.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n\t     *\n\t     * ```typescript\n\t     * var injector = Injector.resolveAndCreate([\n\t     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n\t     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n\t     * ]);\n\t     *\n\t     * expect(() => injector.get(\"one\")).toThrowError();\n\t     * ```\n\t     *\n\t     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n\t     * @stable\n\t     */\n\t    var CyclicDependencyError = (function (_super) {\n\t        __extends$1(CyclicDependencyError, _super);\n\t        function CyclicDependencyError(injector, key) {\n\t            _super.call(this, injector, key, function (keys) {\n\t                return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n\t            });\n\t        }\n\t        return CyclicDependencyError;\n\t    }(AbstractProviderError));\n\t    /**\n\t     * Thrown when a constructing type returns with an Error.\n\t     *\n\t     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n\t     * this object to be instantiated.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor() {\n\t     *     throw new Error('message');\n\t     *   }\n\t     * }\n\t     *\n\t     * var injector = Injector.resolveAndCreate([A]);\n\t\n\t     * try {\n\t     *   injector.get(A);\n\t     * } catch (e) {\n\t     *   expect(e instanceof InstantiationError).toBe(true);\n\t     *   expect(e.originalException.message).toEqual(\"message\");\n\t     *   expect(e.originalStack).toBeDefined();\n\t     * }\n\t     * ```\n\t     * @stable\n\t     */\n\t    var InstantiationError = (function (_super) {\n\t        __extends$1(InstantiationError, _super);\n\t        function InstantiationError(injector, originalException, originalStack, key) {\n\t            _super.call(this, 'DI Error', originalException);\n\t            this.keys = [key];\n\t            this.injectors = [injector];\n\t        }\n\t        InstantiationError.prototype.addKey = function (injector, key) {\n\t            this.injectors.push(injector);\n\t            this.keys.push(key);\n\t        };\n\t        Object.defineProperty(InstantiationError.prototype, \"message\", {\n\t            get: function () {\n\t                var first = stringify(this.keys[0].token);\n\t                return this.originalError.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(this.keys) + \".\";\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(InstantiationError.prototype, \"causeKey\", {\n\t            get: function () { return this.keys[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return InstantiationError;\n\t    }(WrappedError));\n\t    /**\n\t     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n\t     * creation.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n\t     *\n\t     * ```typescript\n\t     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n\t     * ```\n\t     * @stable\n\t     */\n\t    var InvalidProviderError = (function (_super) {\n\t        __extends$1(InvalidProviderError, _super);\n\t        function InvalidProviderError(provider) {\n\t            _super.call(this, \"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n\t        }\n\t        return InvalidProviderError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when the class has no annotation information.\n\t     *\n\t     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n\t     * need to be injected into the constructor.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor(b) {}\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n\t     * ```\n\t     *\n\t     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n\t     *\n\t     * ```typescript\n\t     * class B {}\n\t     *\n\t     * class A {\n\t     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n\t     * ```\n\t     * @stable\n\t     */\n\t    var NoAnnotationError = (function (_super) {\n\t        __extends$1(NoAnnotationError, _super);\n\t        function NoAnnotationError(typeOrFunc, params) {\n\t            _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));\n\t        }\n\t        NoAnnotationError._genMessage = function (typeOrFunc, params) {\n\t            var signature = [];\n\t            for (var i = 0, ii = params.length; i < ii; i++) {\n\t                var parameter = params[i];\n\t                if (!parameter || parameter.length == 0) {\n\t                    signature.push('?');\n\t                }\n\t                else {\n\t                    signature.push(parameter.map(stringify).join(' '));\n\t                }\n\t            }\n\t            return 'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n\t                signature.join(', ') + '). ' +\n\t                'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n\t                stringify(typeOrFunc) + '\\' is decorated with Injectable.';\n\t        };\n\t        return NoAnnotationError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when getting an object by index.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {}\n\t     *\n\t     * var injector = Injector.resolveAndCreate([A]);\n\t     *\n\t     * expect(() => injector.getAt(100)).toThrowError();\n\t     * ```\n\t     * @stable\n\t     */\n\t    var OutOfBoundsError = (function (_super) {\n\t        __extends$1(OutOfBoundsError, _super);\n\t        function OutOfBoundsError(index) {\n\t            _super.call(this, \"Index \" + index + \" is out-of-bounds.\");\n\t        }\n\t        return OutOfBoundsError;\n\t    }(BaseError));\n\t    // TODO: add a working example after alpha38 is released\n\t    /**\n\t     * Thrown when a multi provider and a regular provider are bound to the same token.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * expect(() => Injector.resolveAndCreate([\n\t     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n\t     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n\t     * ])).toThrowError();\n\t     * ```\n\t     */\n\t    var MixingMultiProvidersWithRegularProvidersError = (function (_super) {\n\t        __extends$1(MixingMultiProvidersWithRegularProvidersError, _super);\n\t        function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n\t            _super.call(this, 'Cannot mix multi providers and regular providers, got: ' + provider1.toString() + ' ' +\n\t                provider2.toString());\n\t        }\n\t        return MixingMultiProvidersWithRegularProvidersError;\n\t    }(BaseError));\n\t\n\t    /**\n\t     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n\t     *\n\t     * Keys have:\n\t     * - a system-wide unique `id`.\n\t     * - a `token`.\n\t     *\n\t     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n\t     * the\n\t     * injector to store created objects in a more efficient way.\n\t     *\n\t     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n\t     * resolving\n\t     * providers.\n\t     * @experimental\n\t     */\n\t    var ReflectiveKey = (function () {\n\t        /**\n\t         * Private\n\t         */\n\t        function ReflectiveKey(token, id) {\n\t            this.token = token;\n\t            this.id = id;\n\t            if (!token) {\n\t                throw new Error('Token must be defined!');\n\t            }\n\t        }\n\t        Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n\t            /**\n\t             * Returns a stringified token.\n\t             */\n\t            get: function () { return stringify(this.token); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Retrieves a `Key` for a token.\n\t         */\n\t        ReflectiveKey.get = function (token) {\n\t            return _globalKeyRegistry.get(resolveForwardRef(token));\n\t        };\n\t        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n\t            /**\n\t             * @returns the number of keys registered in the system.\n\t             */\n\t            get: function () { return _globalKeyRegistry.numberOfKeys; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ReflectiveKey;\n\t    }());\n\t    /**\n\t     * @internal\n\t     */\n\t    var KeyRegistry = (function () {\n\t        function KeyRegistry() {\n\t            this._allKeys = new Map();\n\t        }\n\t        KeyRegistry.prototype.get = function (token) {\n\t            if (token instanceof ReflectiveKey)\n\t                return token;\n\t            if (this._allKeys.has(token)) {\n\t                return this._allKeys.get(token);\n\t            }\n\t            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n\t            this._allKeys.set(token, newKey);\n\t            return newKey;\n\t        };\n\t        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n\t            get: function () { return this._allKeys.size; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return KeyRegistry;\n\t    }());\n\t    var _globalKeyRegistry = new KeyRegistry();\n\t\n\t    // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n\t    // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n\t    var _arrayFromMap = (function () {\n\t        try {\n\t            if ((new Map()).values().next) {\n\t                return function createArrayFromMap(m, getValues) {\n\t                    return getValues ? Array.from(m.values()) : Array.from(m.keys());\n\t                };\n\t            }\n\t        }\n\t        catch (e) {\n\t        }\n\t        return function createArrayFromMapWithForeach(m, getValues) {\n\t            var res = new Array(m.size), i = 0;\n\t            m.forEach(function (v, k) {\n\t                res[i] = getValues ? v : k;\n\t                i++;\n\t            });\n\t            return res;\n\t        };\n\t    })();\n\t    var MapWrapper = (function () {\n\t        function MapWrapper() {\n\t        }\n\t        MapWrapper.createFromStringMap = function (stringMap) {\n\t            var result = new Map();\n\t            for (var prop in stringMap) {\n\t                result.set(prop, stringMap[prop]);\n\t            }\n\t            return result;\n\t        };\n\t        MapWrapper.keys = function (m) { return _arrayFromMap(m, false); };\n\t        MapWrapper.values = function (m) { return _arrayFromMap(m, true); };\n\t        return MapWrapper;\n\t    }());\n\t    /**\n\t     * Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var k1 = Object.keys(m1);\n\t            var k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var i = 0; i < k1.length; i++) {\n\t                var key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t    var ListWrapper = (function () {\n\t        function ListWrapper() {\n\t        }\n\t        ListWrapper.removeAll = function (list, items) {\n\t            for (var i = 0; i < items.length; ++i) {\n\t                var index = list.indexOf(items[i]);\n\t                list.splice(index, 1);\n\t            }\n\t        };\n\t        ListWrapper.remove = function (list, el) {\n\t            var index = list.indexOf(el);\n\t            if (index > -1) {\n\t                list.splice(index, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        ListWrapper.equals = function (a, b) {\n\t            if (a.length != b.length)\n\t                return false;\n\t            for (var i = 0; i < a.length; ++i) {\n\t                if (a[i] !== b[i])\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t        ListWrapper.maximum = function (list, predicate) {\n\t            if (list.length == 0) {\n\t                return null;\n\t            }\n\t            var solution = null;\n\t            var maxValue = -Infinity;\n\t            for (var index = 0; index < list.length; index++) {\n\t                var candidate = list[index];\n\t                if (candidate == null) {\n\t                    continue;\n\t                }\n\t                var candidateValue = predicate(candidate);\n\t                if (candidateValue > maxValue) {\n\t                    solution = candidate;\n\t                    maxValue = candidateValue;\n\t                }\n\t            }\n\t            return solution;\n\t        };\n\t        ListWrapper.flatten = function (list) {\n\t            var target = [];\n\t            _flattenArray(list, target);\n\t            return target;\n\t        };\n\t        return ListWrapper;\n\t    }());\n\t    function _flattenArray(source, target) {\n\t        if (isPresent(source)) {\n\t            for (var i = 0; i < source.length; i++) {\n\t                var item = source[i];\n\t                if (Array.isArray(item)) {\n\t                    _flattenArray(item, target);\n\t                }\n\t                else {\n\t                    target.push(item);\n\t                }\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t    function isListLikeIterable(obj) {\n\t        if (!isJsObject(obj))\n\t            return false;\n\t        return Array.isArray(obj) ||\n\t            (!(obj instanceof Map) &&\n\t                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n\t    }\n\t    function areIterablesEqual(a, b, comparator) {\n\t        var iterator1 = a[getSymbolIterator()]();\n\t        var iterator2 = b[getSymbolIterator()]();\n\t        while (true) {\n\t            var item1 = iterator1.next();\n\t            var item2 = iterator2.next();\n\t            if (item1.done && item2.done)\n\t                return true;\n\t            if (item1.done || item2.done)\n\t                return false;\n\t            if (!comparator(item1.value, item2.value))\n\t                return false;\n\t        }\n\t    }\n\t    function iterateListLike(obj, fn) {\n\t        if (Array.isArray(obj)) {\n\t            for (var i = 0; i < obj.length; i++) {\n\t                fn(obj[i]);\n\t            }\n\t        }\n\t        else {\n\t            var iterator = obj[getSymbolIterator()]();\n\t            var item = void 0;\n\t            while (!((item = iterator.next()).done)) {\n\t                fn(item.value);\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @whatItDoes Represents a type that a Component or other object is instances of.\n\t     *\n\t     * @description\n\t     *\n\t     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n\t     * the `MyCustomComponent` constructor function.\n\t     *\n\t     * @stable\n\t     */\n\t    var Type = Function;\n\t\n\t    var ReflectionCapabilities = (function () {\n\t        function ReflectionCapabilities(reflect) {\n\t            this._reflect = reflect || global$1.Reflect;\n\t        }\n\t        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n\t        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            return new (t.bind.apply(t, [void 0].concat(args)))();\n\t        }; };\n\t        /** @internal */\n\t        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n\t            var result;\n\t            if (typeof paramTypes === 'undefined') {\n\t                result = new Array(paramAnnotations.length);\n\t            }\n\t            else {\n\t                result = new Array(paramTypes.length);\n\t            }\n\t            for (var i = 0; i < result.length; i++) {\n\t                // TS outputs Object for parameters without types, while Traceur omits\n\t                // the annotations. For now we preserve the Traceur behavior to aid\n\t                // migration, but this can be revisited.\n\t                if (typeof paramTypes === 'undefined') {\n\t                    result[i] = [];\n\t                }\n\t                else if (paramTypes[i] != Object) {\n\t                    result[i] = [paramTypes[i]];\n\t                }\n\t                else {\n\t                    result[i] = [];\n\t                }\n\t                if (paramAnnotations && isPresent(paramAnnotations[i])) {\n\t                    result[i] = result[i].concat(paramAnnotations[i]);\n\t                }\n\t            }\n\t            return result;\n\t        };\n\t        ReflectionCapabilities.prototype.parameters = function (type) {\n\t            // Prefer the direct API.\n\t            if (type.parameters) {\n\t                return type.parameters;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (type.ctorParameters) {\n\t                var ctorParameters = type.ctorParameters;\n\t                var paramTypes = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n\t                var paramAnnotations = ctorParameters.map(function (ctorParam) {\n\t                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n\t                });\n\t                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n\t                var paramAnnotations = this._reflect.getMetadata('parameters', type);\n\t                var paramTypes = this._reflect.getMetadata('design:paramtypes', type);\n\t                if (paramTypes || paramAnnotations) {\n\t                    return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n\t                }\n\t            }\n\t            // The array has to be filled with `undefined` because holes would be skipped by `some`\n\t            return new Array(type.length).fill(undefined);\n\t        };\n\t        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n\t            // Prefer the direct API.\n\t            if (typeOrFunc.annotations) {\n\t                var annotations = typeOrFunc.annotations;\n\t                if (typeof annotations === 'function' && annotations.annotations) {\n\t                    annotations = annotations.annotations;\n\t                }\n\t                return annotations;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (typeOrFunc.decorators) {\n\t                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (this._reflect && this._reflect.getMetadata) {\n\t                var annotations = this._reflect.getMetadata('annotations', typeOrFunc);\n\t                if (annotations)\n\t                    return annotations;\n\t            }\n\t            return [];\n\t        };\n\t        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n\t            // Prefer the direct API.\n\t            if (typeOrFunc.propMetadata) {\n\t                var propMetadata = typeOrFunc.propMetadata;\n\t                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n\t                    propMetadata = propMetadata.propMetadata;\n\t                }\n\t                return propMetadata;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (typeOrFunc.propDecorators) {\n\t                var propDecorators_1 = typeOrFunc.propDecorators;\n\t                var propMetadata_1 = {};\n\t                Object.keys(propDecorators_1).forEach(function (prop) {\n\t                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n\t                });\n\t                return propMetadata_1;\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (this._reflect && this._reflect.getMetadata) {\n\t                var propMetadata = this._reflect.getMetadata('propMetadata', typeOrFunc);\n\t                if (propMetadata)\n\t                    return propMetadata;\n\t            }\n\t            return {};\n\t        };\n\t        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n\t            return type instanceof Type && lcProperty in type.prototype;\n\t        };\n\t        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n\t        ReflectionCapabilities.prototype.setter = function (name) {\n\t            return new Function('o', 'v', 'return o.' + name + ' = v;');\n\t        };\n\t        ReflectionCapabilities.prototype.method = function (name) {\n\t            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n\t            return new Function('o', 'args', functionBody);\n\t        };\n\t        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n\t        ReflectionCapabilities.prototype.importUri = function (type) {\n\t            // StaticSymbol\n\t            if (typeof type === 'object' && type['filePath']) {\n\t                return type['filePath'];\n\t            }\n\t            // Runtime type\n\t            return \"./\" + stringify(type);\n\t        };\n\t        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { return runtime; };\n\t        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n\t        return ReflectionCapabilities;\n\t    }());\n\t    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n\t        if (!decoratorInvocations) {\n\t            return [];\n\t        }\n\t        return decoratorInvocations.map(function (decoratorInvocation) {\n\t            var decoratorType = decoratorInvocation.type;\n\t            var annotationCls = decoratorType.annotationCls;\n\t            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n\t            return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n\t        });\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Provides read-only access to reflection data about symbols. Used internally by Angular\n\t     * to power dependency injection and compilation.\n\t     */\n\t    var ReflectorReader = (function () {\n\t        function ReflectorReader() {\n\t        }\n\t        return ReflectorReader;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Provides access to reflection data about symbols. Used internally by Angular\n\t     * to power dependency injection and compilation.\n\t     */\n\t    var Reflector = (function (_super) {\n\t        __extends$2(Reflector, _super);\n\t        function Reflector(reflectionCapabilities) {\n\t            _super.call(this);\n\t            this.reflectionCapabilities = reflectionCapabilities;\n\t        }\n\t        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n\t        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n\t        Reflector.prototype.parameters = function (typeOrFunc) {\n\t            return this.reflectionCapabilities.parameters(typeOrFunc);\n\t        };\n\t        Reflector.prototype.annotations = function (typeOrFunc) {\n\t            return this.reflectionCapabilities.annotations(typeOrFunc);\n\t        };\n\t        Reflector.prototype.propMetadata = function (typeOrFunc) {\n\t            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n\t        };\n\t        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n\t            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n\t        };\n\t        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n\t        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n\t        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n\t        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n\t        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, runtime) {\n\t            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, runtime);\n\t        };\n\t        Reflector.prototype.resolveEnum = function (identifier, name) {\n\t            return this.reflectionCapabilities.resolveEnum(identifier, name);\n\t        };\n\t        return Reflector;\n\t    }(ReflectorReader));\n\t\n\t    /**\n\t     * The {@link Reflector} used internally in Angular to access metadata\n\t     * about symbols.\n\t     */\n\t    var reflector = new Reflector(new ReflectionCapabilities());\n\t\n\t    /**\n\t     * `Dependency` is used by the framework to extend DI.\n\t     * This is internal to Angular and should not be used directly.\n\t     */\n\t    var ReflectiveDependency = (function () {\n\t        function ReflectiveDependency(key, optional, lowerBoundVisibility, upperBoundVisibility, properties) {\n\t            this.key = key;\n\t            this.optional = optional;\n\t            this.lowerBoundVisibility = lowerBoundVisibility;\n\t            this.upperBoundVisibility = upperBoundVisibility;\n\t            this.properties = properties;\n\t        }\n\t        ReflectiveDependency.fromKey = function (key) {\n\t            return new ReflectiveDependency(key, false, null, null, []);\n\t        };\n\t        return ReflectiveDependency;\n\t    }());\n\t    var _EMPTY_LIST = [];\n\t    var ResolvedReflectiveProvider_ = (function () {\n\t        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n\t            this.key = key;\n\t            this.resolvedFactories = resolvedFactories;\n\t            this.multiProvider = multiProvider;\n\t        }\n\t        Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n\t            get: function () { return this.resolvedFactories[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ResolvedReflectiveProvider_;\n\t    }());\n\t    /**\n\t     * An internal resolved representation of a factory function created by resolving {@link\n\t     * Provider}.\n\t     * @experimental\n\t     */\n\t    var ResolvedReflectiveFactory = (function () {\n\t        function ResolvedReflectiveFactory(\n\t            /**\n\t             * Factory function which can return an instance of an object represented by a key.\n\t             */\n\t            factory,\n\t            /**\n\t             * Arguments (dependencies) to the `factory` function.\n\t             */\n\t            dependencies) {\n\t            this.factory = factory;\n\t            this.dependencies = dependencies;\n\t        }\n\t        return ResolvedReflectiveFactory;\n\t    }());\n\t    /**\n\t     * Resolve a single provider.\n\t     */\n\t    function resolveReflectiveFactory(provider) {\n\t        var factoryFn;\n\t        var resolvedDeps;\n\t        if (isPresent(provider.useClass)) {\n\t            var useClass = resolveForwardRef(provider.useClass);\n\t            factoryFn = reflector.factory(useClass);\n\t            resolvedDeps = _dependenciesFor(useClass);\n\t        }\n\t        else if (isPresent(provider.useExisting)) {\n\t            factoryFn = function (aliasInstance) { return aliasInstance; };\n\t            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n\t        }\n\t        else if (isPresent(provider.useFactory)) {\n\t            factoryFn = provider.useFactory;\n\t            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n\t        }\n\t        else {\n\t            factoryFn = function () { return provider.useValue; };\n\t            resolvedDeps = _EMPTY_LIST;\n\t        }\n\t        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n\t    }\n\t    /**\n\t     * Converts the {@link Provider} into {@link ResolvedProvider}.\n\t     *\n\t     * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n\t     * convenience provider syntax.\n\t     */\n\t    function resolveReflectiveProvider(provider) {\n\t        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n\t    }\n\t    /**\n\t     * Resolve a list of Providers.\n\t     */\n\t    function resolveReflectiveProviders(providers) {\n\t        var normalized = _normalizeProviders(providers, []);\n\t        var resolved = normalized.map(resolveReflectiveProvider);\n\t        return MapWrapper.values(mergeResolvedReflectiveProviders(resolved, new Map()));\n\t    }\n\t    /**\n\t     * Merges a list of ResolvedProviders into a list where\n\t     * each key is contained exactly once and multi providers\n\t     * have been merged.\n\t     */\n\t    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n\t        for (var i = 0; i < providers.length; i++) {\n\t            var provider = providers[i];\n\t            var existing = normalizedProvidersMap.get(provider.key.id);\n\t            if (isPresent(existing)) {\n\t                if (provider.multiProvider !== existing.multiProvider) {\n\t                    throw new MixingMultiProvidersWithRegularProvidersError(existing, provider);\n\t                }\n\t                if (provider.multiProvider) {\n\t                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n\t                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n\t                    }\n\t                }\n\t                else {\n\t                    normalizedProvidersMap.set(provider.key.id, provider);\n\t                }\n\t            }\n\t            else {\n\t                var resolvedProvider;\n\t                if (provider.multiProvider) {\n\t                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n\t                }\n\t                else {\n\t                    resolvedProvider = provider;\n\t                }\n\t                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n\t            }\n\t        }\n\t        return normalizedProvidersMap;\n\t    }\n\t    function _normalizeProviders(providers, res) {\n\t        providers.forEach(function (b) {\n\t            if (b instanceof Type) {\n\t                res.push({ provide: b, useClass: b });\n\t            }\n\t            else if (b && typeof b == 'object' && b.provide !== undefined) {\n\t                res.push(b);\n\t            }\n\t            else if (b instanceof Array) {\n\t                _normalizeProviders(b, res);\n\t            }\n\t            else {\n\t                throw new InvalidProviderError(b);\n\t            }\n\t        });\n\t        return res;\n\t    }\n\t    function constructDependencies(typeOrFunc, dependencies) {\n\t        if (!dependencies) {\n\t            return _dependenciesFor(typeOrFunc);\n\t        }\n\t        else {\n\t            var params = dependencies.map(function (t) { return [t]; });\n\t            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params); });\n\t        }\n\t    }\n\t    function _dependenciesFor(typeOrFunc) {\n\t        var params = reflector.parameters(typeOrFunc);\n\t        if (!params)\n\t            return [];\n\t        if (params.some(isBlank)) {\n\t            throw new NoAnnotationError(typeOrFunc, params);\n\t        }\n\t        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n\t    }\n\t    function _extractToken(typeOrFunc /** TODO #9100 */, metadata /** TODO #9100 */ /*any[] | any*/, params) {\n\t        var depProps = [];\n\t        var token = null;\n\t        var optional = false;\n\t        if (!Array.isArray(metadata)) {\n\t            if (metadata instanceof Inject) {\n\t                return _createDependency(metadata.token, optional, null, null, depProps);\n\t            }\n\t            else {\n\t                return _createDependency(metadata, optional, null, null, depProps);\n\t            }\n\t        }\n\t        var lowerBoundVisibility = null;\n\t        var upperBoundVisibility = null;\n\t        for (var i = 0; i < metadata.length; ++i) {\n\t            var paramMetadata = metadata[i];\n\t            if (paramMetadata instanceof Type) {\n\t                token = paramMetadata;\n\t            }\n\t            else if (paramMetadata instanceof Inject) {\n\t                token = paramMetadata.token;\n\t            }\n\t            else if (paramMetadata instanceof Optional) {\n\t                optional = true;\n\t            }\n\t            else if (paramMetadata instanceof Self) {\n\t                upperBoundVisibility = paramMetadata;\n\t            }\n\t            else if (paramMetadata instanceof Host) {\n\t                upperBoundVisibility = paramMetadata;\n\t            }\n\t            else if (paramMetadata instanceof SkipSelf) {\n\t                lowerBoundVisibility = paramMetadata;\n\t            }\n\t        }\n\t        token = resolveForwardRef(token);\n\t        if (isPresent(token)) {\n\t            return _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n\t        }\n\t        else {\n\t            throw new NoAnnotationError(typeOrFunc, params);\n\t        }\n\t    }\n\t    function _createDependency(token /** TODO #9100 */, optional /** TODO #9100 */, lowerBoundVisibility /** TODO #9100 */, upperBoundVisibility /** TODO #9100 */, depProps /** TODO #9100 */) {\n\t        return new ReflectiveDependency(ReflectiveKey.get(token), optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n\t    }\n\t\n\t    // Threshold for the dynamic version\n\t    var _MAX_CONSTRUCTION_COUNTER = 10;\n\t    var UNDEFINED = new Object();\n\t    var ReflectiveProtoInjectorInlineStrategy = (function () {\n\t        function ReflectiveProtoInjectorInlineStrategy(protoEI, providers) {\n\t            this.provider0 = null;\n\t            this.provider1 = null;\n\t            this.provider2 = null;\n\t            this.provider3 = null;\n\t            this.provider4 = null;\n\t            this.provider5 = null;\n\t            this.provider6 = null;\n\t            this.provider7 = null;\n\t            this.provider8 = null;\n\t            this.provider9 = null;\n\t            this.keyId0 = null;\n\t            this.keyId1 = null;\n\t            this.keyId2 = null;\n\t            this.keyId3 = null;\n\t            this.keyId4 = null;\n\t            this.keyId5 = null;\n\t            this.keyId6 = null;\n\t            this.keyId7 = null;\n\t            this.keyId8 = null;\n\t            this.keyId9 = null;\n\t            var length = providers.length;\n\t            if (length > 0) {\n\t                this.provider0 = providers[0];\n\t                this.keyId0 = providers[0].key.id;\n\t            }\n\t            if (length > 1) {\n\t                this.provider1 = providers[1];\n\t                this.keyId1 = providers[1].key.id;\n\t            }\n\t            if (length > 2) {\n\t                this.provider2 = providers[2];\n\t                this.keyId2 = providers[2].key.id;\n\t            }\n\t            if (length > 3) {\n\t                this.provider3 = providers[3];\n\t                this.keyId3 = providers[3].key.id;\n\t            }\n\t            if (length > 4) {\n\t                this.provider4 = providers[4];\n\t                this.keyId4 = providers[4].key.id;\n\t            }\n\t            if (length > 5) {\n\t                this.provider5 = providers[5];\n\t                this.keyId5 = providers[5].key.id;\n\t            }\n\t            if (length > 6) {\n\t                this.provider6 = providers[6];\n\t                this.keyId6 = providers[6].key.id;\n\t            }\n\t            if (length > 7) {\n\t                this.provider7 = providers[7];\n\t                this.keyId7 = providers[7].key.id;\n\t            }\n\t            if (length > 8) {\n\t                this.provider8 = providers[8];\n\t                this.keyId8 = providers[8].key.id;\n\t            }\n\t            if (length > 9) {\n\t                this.provider9 = providers[9];\n\t                this.keyId9 = providers[9].key.id;\n\t            }\n\t        }\n\t        ReflectiveProtoInjectorInlineStrategy.prototype.getProviderAtIndex = function (index) {\n\t            if (index == 0)\n\t                return this.provider0;\n\t            if (index == 1)\n\t                return this.provider1;\n\t            if (index == 2)\n\t                return this.provider2;\n\t            if (index == 3)\n\t                return this.provider3;\n\t            if (index == 4)\n\t                return this.provider4;\n\t            if (index == 5)\n\t                return this.provider5;\n\t            if (index == 6)\n\t                return this.provider6;\n\t            if (index == 7)\n\t                return this.provider7;\n\t            if (index == 8)\n\t                return this.provider8;\n\t            if (index == 9)\n\t                return this.provider9;\n\t            throw new OutOfBoundsError(index);\n\t        };\n\t        ReflectiveProtoInjectorInlineStrategy.prototype.createInjectorStrategy = function (injector) {\n\t            return new ReflectiveInjectorInlineStrategy(injector, this);\n\t        };\n\t        return ReflectiveProtoInjectorInlineStrategy;\n\t    }());\n\t    var ReflectiveProtoInjectorDynamicStrategy = (function () {\n\t        function ReflectiveProtoInjectorDynamicStrategy(protoInj, providers) {\n\t            this.providers = providers;\n\t            var len = providers.length;\n\t            this.keyIds = new Array(len);\n\t            for (var i = 0; i < len; i++) {\n\t                this.keyIds[i] = providers[i].key.id;\n\t            }\n\t        }\n\t        ReflectiveProtoInjectorDynamicStrategy.prototype.getProviderAtIndex = function (index) {\n\t            if (index < 0 || index >= this.providers.length) {\n\t                throw new OutOfBoundsError(index);\n\t            }\n\t            return this.providers[index];\n\t        };\n\t        ReflectiveProtoInjectorDynamicStrategy.prototype.createInjectorStrategy = function (ei) {\n\t            return new ReflectiveInjectorDynamicStrategy(this, ei);\n\t        };\n\t        return ReflectiveProtoInjectorDynamicStrategy;\n\t    }());\n\t    var ReflectiveProtoInjector = (function () {\n\t        function ReflectiveProtoInjector(providers) {\n\t            this.numberOfProviders = providers.length;\n\t            this._strategy = providers.length > _MAX_CONSTRUCTION_COUNTER ?\n\t                new ReflectiveProtoInjectorDynamicStrategy(this, providers) :\n\t                new ReflectiveProtoInjectorInlineStrategy(this, providers);\n\t        }\n\t        ReflectiveProtoInjector.fromResolvedProviders = function (providers) {\n\t            return new ReflectiveProtoInjector(providers);\n\t        };\n\t        ReflectiveProtoInjector.prototype.getProviderAtIndex = function (index) {\n\t            return this._strategy.getProviderAtIndex(index);\n\t        };\n\t        return ReflectiveProtoInjector;\n\t    }());\n\t    var ReflectiveInjectorInlineStrategy = (function () {\n\t        function ReflectiveInjectorInlineStrategy(injector, protoStrategy) {\n\t            this.injector = injector;\n\t            this.protoStrategy = protoStrategy;\n\t            this.obj0 = UNDEFINED;\n\t            this.obj1 = UNDEFINED;\n\t            this.obj2 = UNDEFINED;\n\t            this.obj3 = UNDEFINED;\n\t            this.obj4 = UNDEFINED;\n\t            this.obj5 = UNDEFINED;\n\t            this.obj6 = UNDEFINED;\n\t            this.obj7 = UNDEFINED;\n\t            this.obj8 = UNDEFINED;\n\t            this.obj9 = UNDEFINED;\n\t        }\n\t        ReflectiveInjectorInlineStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n\t        ReflectiveInjectorInlineStrategy.prototype.instantiateProvider = function (provider) {\n\t            return this.injector._new(provider);\n\t        };\n\t        ReflectiveInjectorInlineStrategy.prototype.getObjByKeyId = function (keyId) {\n\t            var p = this.protoStrategy;\n\t            var inj = this.injector;\n\t            if (p.keyId0 === keyId) {\n\t                if (this.obj0 === UNDEFINED) {\n\t                    this.obj0 = inj._new(p.provider0);\n\t                }\n\t                return this.obj0;\n\t            }\n\t            if (p.keyId1 === keyId) {\n\t                if (this.obj1 === UNDEFINED) {\n\t                    this.obj1 = inj._new(p.provider1);\n\t                }\n\t                return this.obj1;\n\t            }\n\t            if (p.keyId2 === keyId) {\n\t                if (this.obj2 === UNDEFINED) {\n\t                    this.obj2 = inj._new(p.provider2);\n\t                }\n\t                return this.obj2;\n\t            }\n\t            if (p.keyId3 === keyId) {\n\t                if (this.obj3 === UNDEFINED) {\n\t                    this.obj3 = inj._new(p.provider3);\n\t                }\n\t                return this.obj3;\n\t            }\n\t            if (p.keyId4 === keyId) {\n\t                if (this.obj4 === UNDEFINED) {\n\t                    this.obj4 = inj._new(p.provider4);\n\t                }\n\t                return this.obj4;\n\t            }\n\t            if (p.keyId5 === keyId) {\n\t                if (this.obj5 === UNDEFINED) {\n\t                    this.obj5 = inj._new(p.provider5);\n\t                }\n\t                return this.obj5;\n\t            }\n\t            if (p.keyId6 === keyId) {\n\t                if (this.obj6 === UNDEFINED) {\n\t                    this.obj6 = inj._new(p.provider6);\n\t                }\n\t                return this.obj6;\n\t            }\n\t            if (p.keyId7 === keyId) {\n\t                if (this.obj7 === UNDEFINED) {\n\t                    this.obj7 = inj._new(p.provider7);\n\t                }\n\t                return this.obj7;\n\t            }\n\t            if (p.keyId8 === keyId) {\n\t                if (this.obj8 === UNDEFINED) {\n\t                    this.obj8 = inj._new(p.provider8);\n\t                }\n\t                return this.obj8;\n\t            }\n\t            if (p.keyId9 === keyId) {\n\t                if (this.obj9 === UNDEFINED) {\n\t                    this.obj9 = inj._new(p.provider9);\n\t                }\n\t                return this.obj9;\n\t            }\n\t            return UNDEFINED;\n\t        };\n\t        ReflectiveInjectorInlineStrategy.prototype.getObjAtIndex = function (index) {\n\t            if (index == 0)\n\t                return this.obj0;\n\t            if (index == 1)\n\t                return this.obj1;\n\t            if (index == 2)\n\t                return this.obj2;\n\t            if (index == 3)\n\t                return this.obj3;\n\t            if (index == 4)\n\t                return this.obj4;\n\t            if (index == 5)\n\t                return this.obj5;\n\t            if (index == 6)\n\t                return this.obj6;\n\t            if (index == 7)\n\t                return this.obj7;\n\t            if (index == 8)\n\t                return this.obj8;\n\t            if (index == 9)\n\t                return this.obj9;\n\t            throw new OutOfBoundsError(index);\n\t        };\n\t        ReflectiveInjectorInlineStrategy.prototype.getMaxNumberOfObjects = function () { return _MAX_CONSTRUCTION_COUNTER; };\n\t        return ReflectiveInjectorInlineStrategy;\n\t    }());\n\t    var ReflectiveInjectorDynamicStrategy = (function () {\n\t        function ReflectiveInjectorDynamicStrategy(protoStrategy, injector) {\n\t            this.protoStrategy = protoStrategy;\n\t            this.injector = injector;\n\t            this.objs = new Array(protoStrategy.providers.length).fill(UNDEFINED);\n\t        }\n\t        ReflectiveInjectorDynamicStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n\t        ReflectiveInjectorDynamicStrategy.prototype.instantiateProvider = function (provider) {\n\t            return this.injector._new(provider);\n\t        };\n\t        ReflectiveInjectorDynamicStrategy.prototype.getObjByKeyId = function (keyId) {\n\t            var p = this.protoStrategy;\n\t            for (var i = 0; i < p.keyIds.length; i++) {\n\t                if (p.keyIds[i] === keyId) {\n\t                    if (this.objs[i] === UNDEFINED) {\n\t                        this.objs[i] = this.injector._new(p.providers[i]);\n\t                    }\n\t                    return this.objs[i];\n\t                }\n\t            }\n\t            return UNDEFINED;\n\t        };\n\t        ReflectiveInjectorDynamicStrategy.prototype.getObjAtIndex = function (index) {\n\t            if (index < 0 || index >= this.objs.length) {\n\t                throw new OutOfBoundsError(index);\n\t            }\n\t            return this.objs[index];\n\t        };\n\t        ReflectiveInjectorDynamicStrategy.prototype.getMaxNumberOfObjects = function () { return this.objs.length; };\n\t        return ReflectiveInjectorDynamicStrategy;\n\t    }());\n\t    /**\n\t     * A ReflectiveDependency injection container used for instantiating objects and resolving\n\t     * dependencies.\n\t     *\n\t     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n\t     * constructor dependencies.\n\t     *\n\t     * In typical use, application code asks for the dependencies in the constructor and they are\n\t     * resolved by the `Injector`.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n\t     *\n\t     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n\t     *\n\t     * ```typescript\n\t     * @Injectable()\n\t     * class Engine {\n\t     * }\n\t     *\n\t     * @Injectable()\n\t     * class Car {\n\t     *   constructor(public engine:Engine) {}\n\t     * }\n\t     *\n\t     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n\t     * var car = injector.get(Car);\n\t     * expect(car instanceof Car).toBe(true);\n\t     * expect(car.engine instanceof Engine).toBe(true);\n\t     * ```\n\t     *\n\t     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n\t     * resolve all of the object's dependencies automatically.\n\t     *\n\t     * @stable\n\t     */\n\t    var ReflectiveInjector = (function () {\n\t        function ReflectiveInjector() {\n\t        }\n\t        /**\n\t         * Turns an array of provider definitions into an array of resolved providers.\n\t         *\n\t         * A resolution is a process of flattening multiple nested arrays and converting individual\n\t         * providers into an array of {@link ResolvedReflectiveProvider}s.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n\t         *\n\t         * expect(providers.length).toEqual(2);\n\t         *\n\t         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n\t         * expect(providers[0].key.displayName).toBe(\"Car\");\n\t         * expect(providers[0].dependencies.length).toEqual(1);\n\t         * expect(providers[0].factory).toBeDefined();\n\t         *\n\t         * expect(providers[1].key.displayName).toBe(\"Engine\");\n\t         * });\n\t         * ```\n\t         *\n\t         * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n\t         */\n\t        ReflectiveInjector.resolve = function (providers) {\n\t            return resolveReflectiveProviders(providers);\n\t        };\n\t        /**\n\t         * Resolves an array of providers and creates an injector from those providers.\n\t         *\n\t         * The passed-in providers can be an array of `Type`, {@link Provider},\n\t         * or a recursive array of more providers.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n\t         * expect(injector.get(Car) instanceof Car).toBe(true);\n\t         * ```\n\t         *\n\t         * This function is slower than the corresponding `fromResolvedProviders`\n\t         * because it needs to resolve the passed-in providers first.\n\t         * See {@link Injector#resolve} and {@link Injector#fromResolvedProviders}.\n\t         */\n\t        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n\t            if (parent === void 0) { parent = null; }\n\t            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n\t            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n\t        };\n\t        /**\n\t         * Creates an injector from previously resolved providers.\n\t         *\n\t         * This API is the recommended way to construct injectors in performance-sensitive parts.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n\t         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n\t         * expect(injector.get(Car) instanceof Car).toBe(true);\n\t         * ```\n\t         * @experimental\n\t         */\n\t        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n\t            if (parent === void 0) { parent = null; }\n\t            return new ReflectiveInjector_(ReflectiveProtoInjector.fromResolvedProviders(providers), parent);\n\t        };\n\t        Object.defineProperty(ReflectiveInjector.prototype, \"parent\", {\n\t            /**\n\t             * Parent of this injector.\n\t             *\n\t             * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t             * -->\n\t             *\n\t             * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n\t             *\n\t             * ```typescript\n\t             * var parent = ReflectiveInjector.resolveAndCreate([]);\n\t             * var child = parent.resolveAndCreateChild([]);\n\t             * expect(child.parent).toBe(parent);\n\t             * ```\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Resolves an array of providers and creates a child injector from those providers.\n\t         *\n\t         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t         * -->\n\t         *\n\t         * The passed-in providers can be an array of `Type`, {@link Provider},\n\t         * or a recursive array of more providers.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n\t         *\n\t         * ```typescript\n\t         * class ParentProvider {}\n\t         * class ChildProvider {}\n\t         *\n\t         * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n\t         * var child = parent.resolveAndCreateChild([ChildProvider]);\n\t         *\n\t         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n\t         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n\t         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n\t         * ```\n\t         *\n\t         * This function is slower than the corresponding `createChildFromResolved`\n\t         * because it needs to resolve the passed-in providers first.\n\t         * See {@link Injector#resolve} and {@link Injector#createChildFromResolved}.\n\t         */\n\t        ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { return unimplemented(); };\n\t        /**\n\t         * Creates a child injector from previously resolved providers.\n\t         *\n\t         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t         * -->\n\t         *\n\t         * This API is the recommended way to construct injectors in performance-sensitive parts.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n\t         *\n\t         * ```typescript\n\t         * class ParentProvider {}\n\t         * class ChildProvider {}\n\t         *\n\t         * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n\t         * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n\t         *\n\t         * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n\t         * var child = parent.createChildFromResolved(childProviders);\n\t         *\n\t         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n\t         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n\t         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n\t         * ```\n\t         */\n\t        ReflectiveInjector.prototype.createChildFromResolved = function (providers) {\n\t            return unimplemented();\n\t        };\n\t        /**\n\t         * Resolves a provider and instantiates an object in the context of the injector.\n\t         *\n\t         * The created object does not get cached by the injector.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n\t         *\n\t         * var car = injector.resolveAndInstantiate(Car);\n\t         * expect(car.engine).toBe(injector.get(Engine));\n\t         * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n\t         * ```\n\t         */\n\t        ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { return unimplemented(); };\n\t        /**\n\t         * Instantiates an object using a resolved provider in the context of the injector.\n\t         *\n\t         * The created object does not get cached by the injector.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n\t         * var carProvider = ReflectiveInjector.resolve([Car])[0];\n\t         * var car = injector.instantiateResolved(carProvider);\n\t         * expect(car.engine).toBe(injector.get(Engine));\n\t         * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n\t         * ```\n\t         */\n\t        ReflectiveInjector.prototype.instantiateResolved = function (provider) { return unimplemented(); };\n\t        return ReflectiveInjector;\n\t    }());\n\t    var ReflectiveInjector_ = (function () {\n\t        /**\n\t         * Private\n\t         */\n\t        function ReflectiveInjector_(_proto /* ProtoInjector */, _parent) {\n\t            if (_parent === void 0) { _parent = null; }\n\t            /** @internal */\n\t            this._constructionCounter = 0;\n\t            this._proto = _proto;\n\t            this._parent = _parent;\n\t            this._strategy = _proto._strategy.createInjectorStrategy(this);\n\t        }\n\t        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            return this._getByKey(ReflectiveKey.get(token), null, null, notFoundValue);\n\t        };\n\t        ReflectiveInjector_.prototype.getAt = function (index) { return this._strategy.getObjAtIndex(index); };\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n\t            get: function () { return this._parent; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"internalStrategy\", {\n\t            /**\n\t             * @internal\n\t             * Internal. Do not use.\n\t             * We return `any` not to export the InjectorStrategy type.\n\t             */\n\t            get: function () { return this._strategy; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n\t            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n\t            return this.createChildFromResolved(ResolvedReflectiveProviders);\n\t        };\n\t        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n\t            var proto = new ReflectiveProtoInjector(providers);\n\t            var inj = new ReflectiveInjector_(proto);\n\t            inj._parent = this;\n\t            return inj;\n\t        };\n\t        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n\t            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n\t        };\n\t        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n\t            return this._instantiateProvider(provider);\n\t        };\n\t        /** @internal */\n\t        ReflectiveInjector_.prototype._new = function (provider) {\n\t            if (this._constructionCounter++ > this._strategy.getMaxNumberOfObjects()) {\n\t                throw new CyclicDependencyError(this, provider.key);\n\t            }\n\t            return this._instantiateProvider(provider);\n\t        };\n\t        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n\t            if (provider.multiProvider) {\n\t                var res = new Array(provider.resolvedFactories.length);\n\t                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n\t                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n\t                }\n\t                return res;\n\t            }\n\t            else {\n\t                return this._instantiate(provider, provider.resolvedFactories[0]);\n\t            }\n\t        };\n\t        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n\t            var factory = ResolvedReflectiveFactory.factory;\n\t            var deps = ResolvedReflectiveFactory.dependencies;\n\t            var length = deps.length;\n\t            var d0;\n\t            var d1;\n\t            var d2;\n\t            var d3;\n\t            var d4;\n\t            var d5;\n\t            var d6;\n\t            var d7;\n\t            var d8;\n\t            var d9;\n\t            var d10;\n\t            var d11;\n\t            var d12;\n\t            var d13;\n\t            var d14;\n\t            var d15;\n\t            var d16;\n\t            var d17;\n\t            var d18;\n\t            var d19;\n\t            try {\n\t                d0 = length > 0 ? this._getByReflectiveDependency(provider, deps[0]) : null;\n\t                d1 = length > 1 ? this._getByReflectiveDependency(provider, deps[1]) : null;\n\t                d2 = length > 2 ? this._getByReflectiveDependency(provider, deps[2]) : null;\n\t                d3 = length > 3 ? this._getByReflectiveDependency(provider, deps[3]) : null;\n\t                d4 = length > 4 ? this._getByReflectiveDependency(provider, deps[4]) : null;\n\t                d5 = length > 5 ? this._getByReflectiveDependency(provider, deps[5]) : null;\n\t                d6 = length > 6 ? this._getByReflectiveDependency(provider, deps[6]) : null;\n\t                d7 = length > 7 ? this._getByReflectiveDependency(provider, deps[7]) : null;\n\t                d8 = length > 8 ? this._getByReflectiveDependency(provider, deps[8]) : null;\n\t                d9 = length > 9 ? this._getByReflectiveDependency(provider, deps[9]) : null;\n\t                d10 = length > 10 ? this._getByReflectiveDependency(provider, deps[10]) : null;\n\t                d11 = length > 11 ? this._getByReflectiveDependency(provider, deps[11]) : null;\n\t                d12 = length > 12 ? this._getByReflectiveDependency(provider, deps[12]) : null;\n\t                d13 = length > 13 ? this._getByReflectiveDependency(provider, deps[13]) : null;\n\t                d14 = length > 14 ? this._getByReflectiveDependency(provider, deps[14]) : null;\n\t                d15 = length > 15 ? this._getByReflectiveDependency(provider, deps[15]) : null;\n\t                d16 = length > 16 ? this._getByReflectiveDependency(provider, deps[16]) : null;\n\t                d17 = length > 17 ? this._getByReflectiveDependency(provider, deps[17]) : null;\n\t                d18 = length > 18 ? this._getByReflectiveDependency(provider, deps[18]) : null;\n\t                d19 = length > 19 ? this._getByReflectiveDependency(provider, deps[19]) : null;\n\t            }\n\t            catch (e) {\n\t                if (e instanceof AbstractProviderError || e instanceof InstantiationError) {\n\t                    e.addKey(this, provider.key);\n\t                }\n\t                throw e;\n\t            }\n\t            var obj;\n\t            try {\n\t                switch (length) {\n\t                    case 0:\n\t                        obj = factory();\n\t                        break;\n\t                    case 1:\n\t                        obj = factory(d0);\n\t                        break;\n\t                    case 2:\n\t                        obj = factory(d0, d1);\n\t                        break;\n\t                    case 3:\n\t                        obj = factory(d0, d1, d2);\n\t                        break;\n\t                    case 4:\n\t                        obj = factory(d0, d1, d2, d3);\n\t                        break;\n\t                    case 5:\n\t                        obj = factory(d0, d1, d2, d3, d4);\n\t                        break;\n\t                    case 6:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5);\n\t                        break;\n\t                    case 7:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6);\n\t                        break;\n\t                    case 8:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7);\n\t                        break;\n\t                    case 9:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8);\n\t                        break;\n\t                    case 10:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9);\n\t                        break;\n\t                    case 11:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10);\n\t                        break;\n\t                    case 12:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11);\n\t                        break;\n\t                    case 13:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12);\n\t                        break;\n\t                    case 14:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13);\n\t                        break;\n\t                    case 15:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14);\n\t                        break;\n\t                    case 16:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15);\n\t                        break;\n\t                    case 17:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16);\n\t                        break;\n\t                    case 18:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17);\n\t                        break;\n\t                    case 19:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18);\n\t                        break;\n\t                    case 20:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19);\n\t                        break;\n\t                    default:\n\t                        throw new Error(\"Cannot instantiate '\" + provider.key.displayName + \"' because it has more than 20 dependencies\");\n\t                }\n\t            }\n\t            catch (e) {\n\t                throw new InstantiationError(this, e, e.stack, provider.key);\n\t            }\n\t            return obj;\n\t        };\n\t        ReflectiveInjector_.prototype._getByReflectiveDependency = function (provider, dep) {\n\t            return this._getByKey(dep.key, dep.lowerBoundVisibility, dep.upperBoundVisibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n\t        };\n\t        ReflectiveInjector_.prototype._getByKey = function (key, lowerBoundVisibility, upperBoundVisibility, notFoundValue) {\n\t            if (key === INJECTOR_KEY) {\n\t                return this;\n\t            }\n\t            if (upperBoundVisibility instanceof Self) {\n\t                return this._getByKeySelf(key, notFoundValue);\n\t            }\n\t            else {\n\t                return this._getByKeyDefault(key, notFoundValue, lowerBoundVisibility);\n\t            }\n\t        };\n\t        /** @internal */\n\t        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n\t            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n\t                return notFoundValue;\n\t            }\n\t            else {\n\t                throw new NoProviderError(this, key);\n\t            }\n\t        };\n\t        /** @internal */\n\t        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n\t            var obj = this._strategy.getObjByKeyId(key.id);\n\t            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n\t        };\n\t        /** @internal */\n\t        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, lowerBoundVisibility) {\n\t            var inj;\n\t            if (lowerBoundVisibility instanceof SkipSelf) {\n\t                inj = this._parent;\n\t            }\n\t            else {\n\t                inj = this;\n\t            }\n\t            while (inj instanceof ReflectiveInjector_) {\n\t                var inj_ = inj;\n\t                var obj = inj_._strategy.getObjByKeyId(key.id);\n\t                if (obj !== UNDEFINED)\n\t                    return obj;\n\t                inj = inj_._parent;\n\t            }\n\t            if (inj !== null) {\n\t                return inj.get(key.token, notFoundValue);\n\t            }\n\t            else {\n\t                return this._throwOrNull(key, notFoundValue);\n\t            }\n\t        };\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n\t            get: function () {\n\t                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n\t                    .join(', ');\n\t                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n\t        return ReflectiveInjector_;\n\t    }());\n\t    var INJECTOR_KEY = ReflectiveKey.get(Injector);\n\t    function _mapProviders(injector, fn) {\n\t        var res = new Array(injector._proto.numberOfProviders);\n\t        for (var i = 0; i < injector._proto.numberOfProviders; ++i) {\n\t            res[i] = fn(injector._proto.getProviderAtIndex(i));\n\t        }\n\t        return res;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @whatItDoes Provides a hook for centralized exception handling.\n\t     *\n\t     * @description\n\t     *\n\t     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n\t     * intercept error handling, write a custom exception handler that replaces this default as\n\t     * appropriate for your app.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * class MyErrorHandler implements ErrorHandler {\n\t     *   handleError(error) {\n\t     *     // do something with the exception\n\t     *   }\n\t     * }\n\t     *\n\t     * @NgModule({\n\t     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n\t     * })\n\t     * class MyModule {}\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var ErrorHandler = (function () {\n\t        function ErrorHandler(rethrowError) {\n\t            if (rethrowError === void 0) { rethrowError = true; }\n\t            /**\n\t             * @internal\n\t             */\n\t            this._console = console;\n\t            this.rethrowError = rethrowError;\n\t        }\n\t        ErrorHandler.prototype.handleError = function (error) {\n\t            var originalError = this._findOriginalError(error);\n\t            var originalStack = this._findOriginalStack(error);\n\t            var context = this._findContext(error);\n\t            this._console.error(\"EXCEPTION: \" + this._extractMessage(error));\n\t            if (originalError) {\n\t                this._console.error(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalError));\n\t            }\n\t            if (originalStack) {\n\t                this._console.error('ORIGINAL STACKTRACE:');\n\t                this._console.error(originalStack);\n\t            }\n\t            if (context) {\n\t                this._console.error('ERROR CONTEXT:');\n\t                this._console.error(context);\n\t            }\n\t            // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n\t            // when an error happens. If we do not rethrow, bootstrap will always succeed.\n\t            if (this.rethrowError)\n\t                throw error;\n\t        };\n\t        /** @internal */\n\t        ErrorHandler.prototype._extractMessage = function (error) {\n\t            return error instanceof Error ? error.message : error.toString();\n\t        };\n\t        /** @internal */\n\t        ErrorHandler.prototype._findContext = function (error) {\n\t            if (error) {\n\t                return error.context ? error.context :\n\t                    this._findContext(error.originalError);\n\t            }\n\t            return null;\n\t        };\n\t        /** @internal */\n\t        ErrorHandler.prototype._findOriginalError = function (error) {\n\t            var e = error.originalError;\n\t            while (e && e.originalError) {\n\t                e = e.originalError;\n\t            }\n\t            return e;\n\t        };\n\t        /** @internal */\n\t        ErrorHandler.prototype._findOriginalStack = function (error) {\n\t            if (!(error instanceof Error))\n\t                return null;\n\t            var e = error;\n\t            var stack = e.stack;\n\t            while (e instanceof Error && e.originalError) {\n\t                e = e.originalError;\n\t                if (e instanceof Error && e.stack) {\n\t                    stack = e.stack;\n\t                }\n\t            }\n\t            return stack;\n\t        };\n\t        return ErrorHandler;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    function isPromise(obj) {\n\t        // allow any Promise/A+ compliant thenable.\n\t        // It's up to the caller to ensure that obj.then conforms to the spec\n\t        return !!obj && typeof obj.then === 'function';\n\t    }\n\t\n\t    /**\n\t     * A function that will be executed when an application is initialized.\n\t     * @experimental\n\t     */\n\t    var APP_INITIALIZER = new OpaqueToken('Application Initializer');\n\t    /**\n\t     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n\t     *\n\t     * @experimental\n\t     */\n\t    var ApplicationInitStatus = (function () {\n\t        function ApplicationInitStatus(appInits) {\n\t            var _this = this;\n\t            this._done = false;\n\t            var asyncInitPromises = [];\n\t            if (appInits) {\n\t                for (var i = 0; i < appInits.length; i++) {\n\t                    var initResult = appInits[i]();\n\t                    if (isPromise(initResult)) {\n\t                        asyncInitPromises.push(initResult);\n\t                    }\n\t                }\n\t            }\n\t            this._donePromise = Promise.all(asyncInitPromises).then(function () { _this._done = true; });\n\t            if (asyncInitPromises.length === 0) {\n\t                this._done = true;\n\t            }\n\t        }\n\t        Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n\t            get: function () { return this._done; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n\t            get: function () { return this._donePromise; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ApplicationInitStatus.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationInitStatus.ctorParameters = [\n\t            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n\t        ];\n\t        return ApplicationInitStatus;\n\t    }());\n\t\n\t    /**\n\t     * A DI Token representing a unique string id assigned to the application by Angular and used\n\t     * primarily for prefixing application attributes and CSS styles when\n\t     * {@link ViewEncapsulation#Emulated} is being used.\n\t     *\n\t     * If you need to avoid randomly generated value to be used as an application id, you can provide\n\t     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n\t     * using this token.\n\t     * @experimental\n\t     */\n\t    var APP_ID = new OpaqueToken('AppId');\n\t    function _appIdRandomProviderFactory() {\n\t        return \"\" + _randomChar() + _randomChar() + _randomChar();\n\t    }\n\t    /**\n\t     * Providers that will generate a random APP_ID_TOKEN.\n\t     * @experimental\n\t     */\n\t    var APP_ID_RANDOM_PROVIDER = {\n\t        provide: APP_ID,\n\t        useFactory: _appIdRandomProviderFactory,\n\t        deps: [],\n\t    };\n\t    function _randomChar() {\n\t        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n\t    }\n\t    /**\n\t     * A function that will be executed when a platform is initialized.\n\t     * @experimental\n\t     */\n\t    var PLATFORM_INITIALIZER = new OpaqueToken('Platform Initializer');\n\t    /**\n\t     * All callbacks provided via this token will be called for every component that is bootstrapped.\n\t     * Signature of the callback:\n\t     *\n\t     * `(componentRef: ComponentRef) => void`.\n\t     *\n\t     * @experimental\n\t     */\n\t    var APP_BOOTSTRAP_LISTENER = new OpaqueToken('appBootstrapListener');\n\t    /**\n\t     * A token which indicates the root directory of the application\n\t     * @experimental\n\t     */\n\t    var PACKAGE_ROOT_URL = new OpaqueToken('Application Packages Root URL');\n\t\n\t    var Console = (function () {\n\t        function Console() {\n\t        }\n\t        Console.prototype.log = function (message) { print(message); };\n\t        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n\t        Console.prototype.warn = function (message) { warn(message); };\n\t        Console.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Console.ctorParameters = [];\n\t        return Console;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Indicates that a component is still being loaded in a synchronous compile.\n\t     *\n\t     * @stable\n\t     */\n\t    var ComponentStillLoadingError = (function (_super) {\n\t        __extends$4(ComponentStillLoadingError, _super);\n\t        function ComponentStillLoadingError(compType) {\n\t            _super.call(this, \"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n\t            this.compType = compType;\n\t        }\n\t        return ComponentStillLoadingError;\n\t    }(BaseError));\n\t    /**\n\t     * Combination of NgModuleFactory and ComponentFactorys.\n\t     *\n\t     * @experimental\n\t     */\n\t    var ModuleWithComponentFactories = (function () {\n\t        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n\t            this.ngModuleFactory = ngModuleFactory;\n\t            this.componentFactories = componentFactories;\n\t        }\n\t        return ModuleWithComponentFactories;\n\t    }());\n\t    function _throwError() {\n\t        throw new Error(\"Runtime compiler is not loaded\");\n\t    }\n\t    /**\n\t     * Low-level service for running the angular compiler during runtime\n\t     * to create {@link ComponentFactory}s, which\n\t     * can later be used to create and render a Component instance.\n\t     *\n\t     * Each `@NgModule` provides an own `Compiler` to its injector,\n\t     * that will use the directives/pipes of the ng module for compilation\n\t     * of components.\n\t     * @stable\n\t     */\n\t    var Compiler = (function () {\n\t        function Compiler() {\n\t        }\n\t        /**\n\t         * Compiles the given NgModule and all of its components. All templates of the components listed\n\t         * in `entryComponents`\n\t         * have to be inlined. Otherwise throws a {@link ComponentStillLoadingError}.\n\t         */\n\t        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n\t        /**\n\t         * Compiles the given NgModule and all of its components\n\t         */\n\t        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n\t        /**\n\t         * Same as {@link compileModuleSync} but also creates ComponentFactories for all components.\n\t         */\n\t        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n\t            throw _throwError();\n\t        };\n\t        /**\n\t         * Same as {@link compileModuleAsync} but also creates ComponentFactories for all components.\n\t         */\n\t        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n\t            throw _throwError();\n\t        };\n\t        /**\n\t         * Clears all caches.\n\t         */\n\t        Compiler.prototype.clearCache = function () { };\n\t        /**\n\t         * Clears the cache for the given component/ngModule.\n\t         */\n\t        Compiler.prototype.clearCacheFor = function (type) { };\n\t        return Compiler;\n\t    }());\n\t    /**\n\t     * Token to provide CompilerOptions in the platform injector.\n\t     *\n\t     * @experimental\n\t     */\n\t    var COMPILER_OPTIONS = new OpaqueToken('compilerOptions');\n\t    /**\n\t     * A factory for creating a Compiler\n\t     *\n\t     * @experimental\n\t     */\n\t    var CompilerFactory = (function () {\n\t        function CompilerFactory() {\n\t        }\n\t        return CompilerFactory;\n\t    }());\n\t\n\t    var DefaultIterableDifferFactory = (function () {\n\t        function DefaultIterableDifferFactory() {\n\t        }\n\t        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n\t        DefaultIterableDifferFactory.prototype.create = function (cdRef, trackByFn) {\n\t            return new DefaultIterableDiffer(trackByFn);\n\t        };\n\t        return DefaultIterableDifferFactory;\n\t    }());\n\t    var trackByIdentity = function (index, item) { return item; };\n\t    /**\n\t     * @stable\n\t     */\n\t    var DefaultIterableDiffer = (function () {\n\t        function DefaultIterableDiffer(_trackByFn) {\n\t            this._trackByFn = _trackByFn;\n\t            this._length = null;\n\t            this._collection = null;\n\t            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n\t            this._linkedRecords = null;\n\t            // Keeps track of the removed records at any point in time during `_check()` calls.\n\t            this._unlinkedRecords = null;\n\t            this._previousItHead = null;\n\t            this._itHead = null;\n\t            this._itTail = null;\n\t            this._additionsHead = null;\n\t            this._additionsTail = null;\n\t            this._movesHead = null;\n\t            this._movesTail = null;\n\t            this._removalsHead = null;\n\t            this._removalsTail = null;\n\t            // Keeps track of records where custom track by is the same, but item identity has changed\n\t            this._identityChangesHead = null;\n\t            this._identityChangesTail = null;\n\t            this._trackByFn = this._trackByFn || trackByIdentity;\n\t        }\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n\t            get: function () { return this._collection; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n\t            get: function () { return this._length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n\t            var record;\n\t            for (record = this._itHead; record !== null; record = record._next) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n\t            var nextIt = this._itHead;\n\t            var nextRemove = this._removalsHead;\n\t            var addRemoveOffset = 0;\n\t            var moveOffsets = null;\n\t            while (nextIt || nextRemove) {\n\t                // Figure out which is the next record to process\n\t                // Order: remove, add, move\n\t                var record = !nextRemove ||\n\t                    nextIt &&\n\t                        nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n\t                    nextIt :\n\t                    nextRemove;\n\t                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n\t                var currentIndex = record.currentIndex;\n\t                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n\t                if (record === nextRemove) {\n\t                    addRemoveOffset--;\n\t                    nextRemove = nextRemove._nextRemoved;\n\t                }\n\t                else {\n\t                    nextIt = nextIt._next;\n\t                    if (record.previousIndex == null) {\n\t                        addRemoveOffset++;\n\t                    }\n\t                    else {\n\t                        // INVARIANT:  currentIndex < previousIndex\n\t                        if (!moveOffsets)\n\t                            moveOffsets = [];\n\t                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n\t                        var localCurrentIndex = currentIndex - addRemoveOffset;\n\t                        if (localMovePreviousIndex != localCurrentIndex) {\n\t                            for (var i = 0; i < localMovePreviousIndex; i++) {\n\t                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n\t                                var index = offset + i;\n\t                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n\t                                    moveOffsets[i] = offset + 1;\n\t                                }\n\t                            }\n\t                            var previousIndex = record.previousIndex;\n\t                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n\t                        }\n\t                    }\n\t                }\n\t                if (adjPreviousIndex !== currentIndex) {\n\t                    fn(record, adjPreviousIndex, currentIndex);\n\t                }\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n\t            var record;\n\t            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n\t            var record;\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n\t            var record;\n\t            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n\t            var record;\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n\t            var record;\n\t            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.diff = function (collection) {\n\t            if (isBlank(collection))\n\t                collection = [];\n\t            if (!isListLikeIterable(collection)) {\n\t                throw new Error(\"Error trying to diff '\" + collection + \"'\");\n\t            }\n\t            if (this.check(collection)) {\n\t                return this;\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.onDestroy = function () { };\n\t        // todo(vicb): optim for UnmodifiableListView (frozen arrays)\n\t        DefaultIterableDiffer.prototype.check = function (collection) {\n\t            var _this = this;\n\t            this._reset();\n\t            var record = this._itHead;\n\t            var mayBeDirty = false;\n\t            var index;\n\t            var item;\n\t            var itemTrackBy;\n\t            if (Array.isArray(collection)) {\n\t                var list = collection;\n\t                this._length = collection.length;\n\t                for (var index_1 = 0; index_1 < this._length; index_1++) {\n\t                    item = list[index_1];\n\t                    itemTrackBy = this._trackByFn(index_1, item);\n\t                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n\t                        record = this._mismatch(record, item, itemTrackBy, index_1);\n\t                        mayBeDirty = true;\n\t                    }\n\t                    else {\n\t                        if (mayBeDirty) {\n\t                            // TODO(misko): can we limit this to duplicates only?\n\t                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n\t                        }\n\t                        if (!looseIdentical(record.item, item))\n\t                            this._addIdentityChange(record, item);\n\t                    }\n\t                    record = record._next;\n\t                }\n\t            }\n\t            else {\n\t                index = 0;\n\t                iterateListLike(collection, function (item /** TODO #9100 */) {\n\t                    itemTrackBy = _this._trackByFn(index, item);\n\t                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n\t                        record = _this._mismatch(record, item, itemTrackBy, index);\n\t                        mayBeDirty = true;\n\t                    }\n\t                    else {\n\t                        if (mayBeDirty) {\n\t                            // TODO(misko): can we limit this to duplicates only?\n\t                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n\t                        }\n\t                        if (!looseIdentical(record.item, item))\n\t                            _this._addIdentityChange(record, item);\n\t                    }\n\t                    record = record._next;\n\t                    index++;\n\t                });\n\t                this._length = index;\n\t            }\n\t            this._truncate(record);\n\t            this._collection = collection;\n\t            return this.isDirty;\n\t        };\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n\t            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n\t             * changes.\n\t             */\n\t            get: function () {\n\t                return this._additionsHead !== null || this._movesHead !== null ||\n\t                    this._removalsHead !== null || this._identityChangesHead !== null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Reset the state of the change objects to show no changes. This means set previousKey to\n\t         * currentKey, and clear all of the queues (additions, moves, removals).\n\t         * Set the previousIndexes of moved and added items to their currentIndexes\n\t         * Reset the list of additions, moves and removals\n\t         *\n\t         * @internal\n\t         */\n\t        DefaultIterableDiffer.prototype._reset = function () {\n\t            if (this.isDirty) {\n\t                var record;\n\t                var nextRecord;\n\t                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n\t                    record._nextPrevious = record._next;\n\t                }\n\t                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                    record.previousIndex = record.currentIndex;\n\t                }\n\t                this._additionsHead = this._additionsTail = null;\n\t                for (record = this._movesHead; record !== null; record = nextRecord) {\n\t                    record.previousIndex = record.currentIndex;\n\t                    nextRecord = record._nextMoved;\n\t                }\n\t                this._movesHead = this._movesTail = null;\n\t                this._removalsHead = this._removalsTail = null;\n\t                this._identityChangesHead = this._identityChangesTail = null;\n\t            }\n\t        };\n\t        /**\n\t         * This is the core function which handles differences between collections.\n\t         *\n\t         * - `record` is the record which we saw at this position last time. If null then it is a new\n\t         *   item.\n\t         * - `item` is the current item in the collection\n\t         * - `index` is the position of the item in the collection\n\t         *\n\t         * @internal\n\t         */\n\t        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n\t            // The previous record after which we will append the current one.\n\t            var previousRecord;\n\t            if (record === null) {\n\t                previousRecord = this._itTail;\n\t            }\n\t            else {\n\t                previousRecord = record._prev;\n\t                // Remove the record from the collection since we know it does not match the item.\n\t                this._remove(record);\n\t            }\n\t            // Attempt to see if we have seen the item before.\n\t            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n\t            if (record !== null) {\n\t                // We have seen this before, we need to move it forward in the collection.\n\t                // But first we need to check if identity changed, so we can update in view if necessary\n\t                if (!looseIdentical(record.item, item))\n\t                    this._addIdentityChange(record, item);\n\t                this._moveAfter(record, previousRecord, index);\n\t            }\n\t            else {\n\t                // Never seen it, check evicted list.\n\t                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n\t                if (record !== null) {\n\t                    // It is an item which we have evicted earlier: reinsert it back into the list.\n\t                    // But first we need to check if identity changed, so we can update in view if necessary\n\t                    if (!looseIdentical(record.item, item))\n\t                        this._addIdentityChange(record, item);\n\t                    this._reinsertAfter(record, previousRecord, index);\n\t                }\n\t                else {\n\t                    // It is a new item: add it.\n\t                    record =\n\t                        this._addAfter(new CollectionChangeRecord(item, itemTrackBy), previousRecord, index);\n\t                }\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n\t         *\n\t         * Use case: `[a, a]` => `[b, a, a]`\n\t         *\n\t         * If we did not have this check then the insertion of `b` would:\n\t         *   1) evict first `a`\n\t         *   2) insert `b` at `0` index.\n\t         *   3) leave `a` at index `1` as is. <-- this is wrong!\n\t         *   3) reinsert `a` at index 2. <-- this is wrong!\n\t         *\n\t         * The correct behavior is:\n\t         *   1) evict first `a`\n\t         *   2) insert `b` at `0` index.\n\t         *   3) reinsert `a` at index 1.\n\t         *   3) move `a` at from `1` to `2`.\n\t         *\n\t         *\n\t         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n\t         * have already been removed:\n\t         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n\t         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n\t         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n\t         * at the end.\n\t         *\n\t         * @internal\n\t         */\n\t        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n\t            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n\t            if (reinsertRecord !== null) {\n\t                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n\t            }\n\t            else if (record.currentIndex != index) {\n\t                record.currentIndex = index;\n\t                this._addToMoves(record, index);\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * Get rid of any excess {@link CollectionChangeRecord}s from the previous collection\n\t         *\n\t         * - `record` The first excess {@link CollectionChangeRecord}.\n\t         *\n\t         * @internal\n\t         */\n\t        DefaultIterableDiffer.prototype._truncate = function (record) {\n\t            // Anything after that needs to be removed;\n\t            while (record !== null) {\n\t                var nextRecord = record._next;\n\t                this._addToRemovals(this._unlink(record));\n\t                record = nextRecord;\n\t            }\n\t            if (this._unlinkedRecords !== null) {\n\t                this._unlinkedRecords.clear();\n\t            }\n\t            if (this._additionsTail !== null) {\n\t                this._additionsTail._nextAdded = null;\n\t            }\n\t            if (this._movesTail !== null) {\n\t                this._movesTail._nextMoved = null;\n\t            }\n\t            if (this._itTail !== null) {\n\t                this._itTail._next = null;\n\t            }\n\t            if (this._removalsTail !== null) {\n\t                this._removalsTail._nextRemoved = null;\n\t            }\n\t            if (this._identityChangesTail !== null) {\n\t                this._identityChangesTail._nextIdentityChange = null;\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n\t            if (this._unlinkedRecords !== null) {\n\t                this._unlinkedRecords.remove(record);\n\t            }\n\t            var prev = record._prevRemoved;\n\t            var next = record._nextRemoved;\n\t            if (prev === null) {\n\t                this._removalsHead = next;\n\t            }\n\t            else {\n\t                prev._nextRemoved = next;\n\t            }\n\t            if (next === null) {\n\t                this._removalsTail = prev;\n\t            }\n\t            else {\n\t                next._prevRemoved = prev;\n\t            }\n\t            this._insertAfter(record, prevRecord, index);\n\t            this._addToMoves(record, index);\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n\t            this._unlink(record);\n\t            this._insertAfter(record, prevRecord, index);\n\t            this._addToMoves(record, index);\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n\t            this._insertAfter(record, prevRecord, index);\n\t            if (this._additionsTail === null) {\n\t                // todo(vicb)\n\t                // assert(this._additionsHead === null);\n\t                this._additionsTail = this._additionsHead = record;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_additionsTail._nextAdded === null);\n\t                // assert(record._nextAdded === null);\n\t                this._additionsTail = this._additionsTail._nextAdded = record;\n\t            }\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n\t            // todo(vicb)\n\t            // assert(record != prevRecord);\n\t            // assert(record._next === null);\n\t            // assert(record._prev === null);\n\t            var next = prevRecord === null ? this._itHead : prevRecord._next;\n\t            // todo(vicb)\n\t            // assert(next != record);\n\t            // assert(prevRecord != record);\n\t            record._next = next;\n\t            record._prev = prevRecord;\n\t            if (next === null) {\n\t                this._itTail = record;\n\t            }\n\t            else {\n\t                next._prev = record;\n\t            }\n\t            if (prevRecord === null) {\n\t                this._itHead = record;\n\t            }\n\t            else {\n\t                prevRecord._next = record;\n\t            }\n\t            if (this._linkedRecords === null) {\n\t                this._linkedRecords = new _DuplicateMap();\n\t            }\n\t            this._linkedRecords.put(record);\n\t            record.currentIndex = index;\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._remove = function (record) {\n\t            return this._addToRemovals(this._unlink(record));\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._unlink = function (record) {\n\t            if (this._linkedRecords !== null) {\n\t                this._linkedRecords.remove(record);\n\t            }\n\t            var prev = record._prev;\n\t            var next = record._next;\n\t            // todo(vicb)\n\t            // assert((record._prev = null) === null);\n\t            // assert((record._next = null) === null);\n\t            if (prev === null) {\n\t                this._itHead = next;\n\t            }\n\t            else {\n\t                prev._next = next;\n\t            }\n\t            if (next === null) {\n\t                this._itTail = prev;\n\t            }\n\t            else {\n\t                next._prev = prev;\n\t            }\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n\t            // todo(vicb)\n\t            // assert(record._nextMoved === null);\n\t            if (record.previousIndex === toIndex) {\n\t                return record;\n\t            }\n\t            if (this._movesTail === null) {\n\t                // todo(vicb)\n\t                // assert(_movesHead === null);\n\t                this._movesTail = this._movesHead = record;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_movesTail._nextMoved === null);\n\t                this._movesTail = this._movesTail._nextMoved = record;\n\t            }\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n\t            if (this._unlinkedRecords === null) {\n\t                this._unlinkedRecords = new _DuplicateMap();\n\t            }\n\t            this._unlinkedRecords.put(record);\n\t            record.currentIndex = null;\n\t            record._nextRemoved = null;\n\t            if (this._removalsTail === null) {\n\t                // todo(vicb)\n\t                // assert(_removalsHead === null);\n\t                this._removalsTail = this._removalsHead = record;\n\t                record._prevRemoved = null;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_removalsTail._nextRemoved === null);\n\t                // assert(record._nextRemoved === null);\n\t                record._prevRemoved = this._removalsTail;\n\t                this._removalsTail = this._removalsTail._nextRemoved = record;\n\t            }\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n\t            record.item = item;\n\t            if (this._identityChangesTail === null) {\n\t                this._identityChangesTail = this._identityChangesHead = record;\n\t            }\n\t            else {\n\t                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n\t            }\n\t            return record;\n\t        };\n\t        DefaultIterableDiffer.prototype.toString = function () {\n\t            var list = [];\n\t            this.forEachItem(function (record /** TODO #9100 */) { return list.push(record); });\n\t            var previous = [];\n\t            this.forEachPreviousItem(function (record /** TODO #9100 */) { return previous.push(record); });\n\t            var additions = [];\n\t            this.forEachAddedItem(function (record /** TODO #9100 */) { return additions.push(record); });\n\t            var moves = [];\n\t            this.forEachMovedItem(function (record /** TODO #9100 */) { return moves.push(record); });\n\t            var removals = [];\n\t            this.forEachRemovedItem(function (record /** TODO #9100 */) { return removals.push(record); });\n\t            var identityChanges = [];\n\t            this.forEachIdentityChange(function (record /** TODO #9100 */) { return identityChanges.push(record); });\n\t            return 'collection: ' + list.join(', ') + '\\n' +\n\t                'previous: ' + previous.join(', ') + '\\n' +\n\t                'additions: ' + additions.join(', ') + '\\n' +\n\t                'moves: ' + moves.join(', ') + '\\n' +\n\t                'removals: ' + removals.join(', ') + '\\n' +\n\t                'identityChanges: ' + identityChanges.join(', ') + '\\n';\n\t        };\n\t        return DefaultIterableDiffer;\n\t    }());\n\t    /**\n\t     * @stable\n\t     */\n\t    var CollectionChangeRecord = (function () {\n\t        function CollectionChangeRecord(item, trackById) {\n\t            this.item = item;\n\t            this.trackById = trackById;\n\t            this.currentIndex = null;\n\t            this.previousIndex = null;\n\t            /** @internal */\n\t            this._nextPrevious = null;\n\t            /** @internal */\n\t            this._prev = null;\n\t            /** @internal */\n\t            this._next = null;\n\t            /** @internal */\n\t            this._prevDup = null;\n\t            /** @internal */\n\t            this._nextDup = null;\n\t            /** @internal */\n\t            this._prevRemoved = null;\n\t            /** @internal */\n\t            this._nextRemoved = null;\n\t            /** @internal */\n\t            this._nextAdded = null;\n\t            /** @internal */\n\t            this._nextMoved = null;\n\t            /** @internal */\n\t            this._nextIdentityChange = null;\n\t        }\n\t        CollectionChangeRecord.prototype.toString = function () {\n\t            return this.previousIndex === this.currentIndex ? stringify(this.item) :\n\t                stringify(this.item) + '[' +\n\t                    stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n\t        };\n\t        return CollectionChangeRecord;\n\t    }());\n\t    // A linked list of CollectionChangeRecords with the same CollectionChangeRecord.item\n\t    var _DuplicateItemRecordList = (function () {\n\t        function _DuplicateItemRecordList() {\n\t            /** @internal */\n\t            this._head = null;\n\t            /** @internal */\n\t            this._tail = null;\n\t        }\n\t        /**\n\t         * Append the record to the list of duplicates.\n\t         *\n\t         * Note: by design all records in the list of duplicates hold the same value in record.item.\n\t         */\n\t        _DuplicateItemRecordList.prototype.add = function (record) {\n\t            if (this._head === null) {\n\t                this._head = this._tail = record;\n\t                record._nextDup = null;\n\t                record._prevDup = null;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(record.item ==  _head.item ||\n\t                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n\t                this._tail._nextDup = record;\n\t                record._prevDup = this._tail;\n\t                record._nextDup = null;\n\t                this._tail = record;\n\t            }\n\t        };\n\t        // Returns a CollectionChangeRecord having CollectionChangeRecord.trackById == trackById and\n\t        // CollectionChangeRecord.currentIndex >= afterIndex\n\t        _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {\n\t            var record;\n\t            for (record = this._head; record !== null; record = record._nextDup) {\n\t                if ((afterIndex === null || afterIndex < record.currentIndex) &&\n\t                    looseIdentical(record.trackById, trackById)) {\n\t                    return record;\n\t                }\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * Remove one {@link CollectionChangeRecord} from the list of duplicates.\n\t         *\n\t         * Returns whether the list of duplicates is empty.\n\t         */\n\t        _DuplicateItemRecordList.prototype.remove = function (record) {\n\t            // todo(vicb)\n\t            // assert(() {\n\t            //  // verify that the record being removed is in the list.\n\t            //  for (CollectionChangeRecord cursor = _head; cursor != null; cursor = cursor._nextDup) {\n\t            //    if (identical(cursor, record)) return true;\n\t            //  }\n\t            //  return false;\n\t            //});\n\t            var prev = record._prevDup;\n\t            var next = record._nextDup;\n\t            if (prev === null) {\n\t                this._head = next;\n\t            }\n\t            else {\n\t                prev._nextDup = next;\n\t            }\n\t            if (next === null) {\n\t                this._tail = prev;\n\t            }\n\t            else {\n\t                next._prevDup = prev;\n\t            }\n\t            return this._head === null;\n\t        };\n\t        return _DuplicateItemRecordList;\n\t    }());\n\t    var _DuplicateMap = (function () {\n\t        function _DuplicateMap() {\n\t            this.map = new Map();\n\t        }\n\t        _DuplicateMap.prototype.put = function (record) {\n\t            var key = record.trackById;\n\t            var duplicates = this.map.get(key);\n\t            if (!duplicates) {\n\t                duplicates = new _DuplicateItemRecordList();\n\t                this.map.set(key, duplicates);\n\t            }\n\t            duplicates.add(record);\n\t        };\n\t        /**\n\t         * Retrieve the `value` using key. Because the CollectionChangeRecord value may be one which we\n\t         * have already iterated over, we use the afterIndex to pretend it is not there.\n\t         *\n\t         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n\t         * have any more `a`s needs to return the last `a` not the first or second.\n\t         */\n\t        _DuplicateMap.prototype.get = function (trackById, afterIndex) {\n\t            if (afterIndex === void 0) { afterIndex = null; }\n\t            var key = trackById;\n\t            var recordList = this.map.get(key);\n\t            return recordList ? recordList.get(trackById, afterIndex) : null;\n\t        };\n\t        /**\n\t         * Removes a {@link CollectionChangeRecord} from the list of duplicates.\n\t         *\n\t         * The list of duplicates also is removed from the map if it gets empty.\n\t         */\n\t        _DuplicateMap.prototype.remove = function (record) {\n\t            var key = record.trackById;\n\t            var recordList = this.map.get(key);\n\t            // Remove the list of duplicates when it gets empty\n\t            if (recordList.remove(record)) {\n\t                this.map.delete(key);\n\t            }\n\t            return record;\n\t        };\n\t        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n\t            get: function () { return this.map.size === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n\t        _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n\t        return _DuplicateMap;\n\t    }());\n\t    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n\t        var previousIndex = item.previousIndex;\n\t        if (previousIndex === null)\n\t            return previousIndex;\n\t        var moveOffset = 0;\n\t        if (moveOffsets && previousIndex < moveOffsets.length) {\n\t            moveOffset = moveOffsets[previousIndex];\n\t        }\n\t        return previousIndex + addRemoveOffset + moveOffset;\n\t    }\n\t\n\t    var DefaultKeyValueDifferFactory = (function () {\n\t        function DefaultKeyValueDifferFactory() {\n\t        }\n\t        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n\t        DefaultKeyValueDifferFactory.prototype.create = function (cdRef) { return new DefaultKeyValueDiffer(); };\n\t        return DefaultKeyValueDifferFactory;\n\t    }());\n\t    var DefaultKeyValueDiffer = (function () {\n\t        function DefaultKeyValueDiffer() {\n\t            this._records = new Map();\n\t            this._mapHead = null;\n\t            this._previousMapHead = null;\n\t            this._changesHead = null;\n\t            this._changesTail = null;\n\t            this._additionsHead = null;\n\t            this._additionsTail = null;\n\t            this._removalsHead = null;\n\t            this._removalsTail = null;\n\t        }\n\t        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n\t            get: function () {\n\t                return this._additionsHead !== null || this._changesHead !== null ||\n\t                    this._removalsHead !== null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n\t            var record;\n\t            for (record = this._mapHead; record !== null; record = record._next) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n\t            var record;\n\t            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n\t            var record;\n\t            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n\t            var record;\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n\t            var record;\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.diff = function (map) {\n\t            if (!map) {\n\t                map = new Map();\n\t            }\n\t            else if (!(map instanceof Map || isJsObject(map))) {\n\t                throw new Error(\"Error trying to diff '\" + map + \"'\");\n\t            }\n\t            return this.check(map) ? this : null;\n\t        };\n\t        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n\t        DefaultKeyValueDiffer.prototype.check = function (map) {\n\t            var _this = this;\n\t            this._reset();\n\t            var records = this._records;\n\t            var oldSeqRecord = this._mapHead;\n\t            var lastOldSeqRecord = null;\n\t            var lastNewSeqRecord = null;\n\t            var seqChanged = false;\n\t            this._forEach(map, function (value, key) {\n\t                var newSeqRecord;\n\t                if (oldSeqRecord && key === oldSeqRecord.key) {\n\t                    newSeqRecord = oldSeqRecord;\n\t                    _this._maybeAddToChanges(newSeqRecord, value);\n\t                }\n\t                else {\n\t                    seqChanged = true;\n\t                    if (oldSeqRecord !== null) {\n\t                        _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n\t                        _this._addToRemovals(oldSeqRecord);\n\t                    }\n\t                    if (records.has(key)) {\n\t                        newSeqRecord = records.get(key);\n\t                        _this._maybeAddToChanges(newSeqRecord, value);\n\t                    }\n\t                    else {\n\t                        newSeqRecord = new KeyValueChangeRecord(key);\n\t                        records.set(key, newSeqRecord);\n\t                        newSeqRecord.currentValue = value;\n\t                        _this._addToAdditions(newSeqRecord);\n\t                    }\n\t                }\n\t                if (seqChanged) {\n\t                    if (_this._isInRemovals(newSeqRecord)) {\n\t                        _this._removeFromRemovals(newSeqRecord);\n\t                    }\n\t                    if (lastNewSeqRecord == null) {\n\t                        _this._mapHead = newSeqRecord;\n\t                    }\n\t                    else {\n\t                        lastNewSeqRecord._next = newSeqRecord;\n\t                    }\n\t                }\n\t                lastOldSeqRecord = oldSeqRecord;\n\t                lastNewSeqRecord = newSeqRecord;\n\t                oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n\t            });\n\t            this._truncate(lastOldSeqRecord, oldSeqRecord);\n\t            return this.isDirty;\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._reset = function () {\n\t            if (this.isDirty) {\n\t                var record = void 0;\n\t                // Record the state of the mapping\n\t                for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n\t                    record._nextPrevious = record._next;\n\t                }\n\t                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                    record.previousValue = record.currentValue;\n\t                }\n\t                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n\t                    record.previousValue = record.currentValue;\n\t                }\n\t                this._changesHead = this._changesTail = null;\n\t                this._additionsHead = this._additionsTail = null;\n\t                this._removalsHead = this._removalsTail = null;\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {\n\t            while (record !== null) {\n\t                if (lastRecord === null) {\n\t                    this._mapHead = null;\n\t                }\n\t                else {\n\t                    lastRecord._next = null;\n\t                }\n\t                var nextRecord = record._next;\n\t                this._addToRemovals(record);\n\t                lastRecord = record;\n\t                record = nextRecord;\n\t            }\n\t            for (var rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n\t                rec.previousValue = rec.currentValue;\n\t                rec.currentValue = null;\n\t                this._records.delete(rec.key);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n\t            if (!looseIdentical(newValue, record.currentValue)) {\n\t                record.previousValue = record.currentValue;\n\t                record.currentValue = newValue;\n\t                this._addToChanges(record);\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {\n\t            return record === this._removalsHead || record._nextRemoved !== null ||\n\t                record._prevRemoved !== null;\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {\n\t            if (this._removalsHead === null) {\n\t                this._removalsHead = this._removalsTail = record;\n\t            }\n\t            else {\n\t                this._removalsTail._nextRemoved = record;\n\t                record._prevRemoved = this._removalsTail;\n\t                this._removalsTail = record;\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {\n\t            var next = record._next;\n\t            if (prev === null) {\n\t                this._mapHead = next;\n\t            }\n\t            else {\n\t                prev._next = next;\n\t            }\n\t            record._next = null;\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {\n\t            var prev = record._prevRemoved;\n\t            var next = record._nextRemoved;\n\t            if (prev === null) {\n\t                this._removalsHead = next;\n\t            }\n\t            else {\n\t                prev._nextRemoved = next;\n\t            }\n\t            if (next === null) {\n\t                this._removalsTail = prev;\n\t            }\n\t            else {\n\t                next._prevRemoved = prev;\n\t            }\n\t            record._prevRemoved = record._nextRemoved = null;\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n\t            if (this._additionsHead === null) {\n\t                this._additionsHead = this._additionsTail = record;\n\t            }\n\t            else {\n\t                this._additionsTail._nextAdded = record;\n\t                this._additionsTail = record;\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n\t            if (this._changesHead === null) {\n\t                this._changesHead = this._changesTail = record;\n\t            }\n\t            else {\n\t                this._changesTail._nextChanged = record;\n\t                this._changesTail = record;\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.toString = function () {\n\t            var items = [];\n\t            var previous = [];\n\t            var changes = [];\n\t            var additions = [];\n\t            var removals = [];\n\t            var record;\n\t            for (record = this._mapHead; record !== null; record = record._next) {\n\t                items.push(stringify(record));\n\t            }\n\t            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n\t                previous.push(stringify(record));\n\t            }\n\t            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                changes.push(stringify(record));\n\t            }\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                additions.push(stringify(record));\n\t            }\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                removals.push(stringify(record));\n\t            }\n\t            return 'map: ' + items.join(', ') + '\\n' +\n\t                'previous: ' + previous.join(', ') + '\\n' +\n\t                'additions: ' + additions.join(', ') + '\\n' +\n\t                'changes: ' + changes.join(', ') + '\\n' +\n\t                'removals: ' + removals.join(', ') + '\\n';\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n\t            if (obj instanceof Map) {\n\t                obj.forEach(fn);\n\t            }\n\t            else {\n\t                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n\t            }\n\t        };\n\t        return DefaultKeyValueDiffer;\n\t    }());\n\t    /**\n\t     * @stable\n\t     */\n\t    var KeyValueChangeRecord = (function () {\n\t        function KeyValueChangeRecord(key) {\n\t            this.key = key;\n\t            this.previousValue = null;\n\t            this.currentValue = null;\n\t            /** @internal */\n\t            this._nextPrevious = null;\n\t            /** @internal */\n\t            this._next = null;\n\t            /** @internal */\n\t            this._nextAdded = null;\n\t            /** @internal */\n\t            this._nextRemoved = null;\n\t            /** @internal */\n\t            this._prevRemoved = null;\n\t            /** @internal */\n\t            this._nextChanged = null;\n\t        }\n\t        KeyValueChangeRecord.prototype.toString = function () {\n\t            return looseIdentical(this.previousValue, this.currentValue) ?\n\t                stringify(this.key) :\n\t                (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n\t                    stringify(this.currentValue) + ']');\n\t        };\n\t        return KeyValueChangeRecord;\n\t    }());\n\t\n\t    /**\n\t     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n\t     * @stable\n\t     */\n\t    var IterableDiffers = (function () {\n\t        function IterableDiffers(factories) {\n\t            this.factories = factories;\n\t        }\n\t        IterableDiffers.create = function (factories, parent) {\n\t            if (isPresent(parent)) {\n\t                var copied = parent.factories.slice();\n\t                factories = factories.concat(copied);\n\t                return new IterableDiffers(factories);\n\t            }\n\t            else {\n\t                return new IterableDiffers(factories);\n\t            }\n\t        };\n\t        /**\n\t         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n\t         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n\t         * {@link IterableDiffers} instance.\n\t         *\n\t         * The following example shows how to extend an existing list of factories,\n\t               * which will only be applied to the injector for this component and its children.\n\t               * This step is all that's required to make a new {@link IterableDiffer} available.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * @Component({\n\t         *   viewProviders: [\n\t         *     IterableDiffers.extend([new ImmutableListDiffer()])\n\t         *   ]\n\t         * })\n\t         * ```\n\t         */\n\t        IterableDiffers.extend = function (factories) {\n\t            return {\n\t                provide: IterableDiffers,\n\t                useFactory: function (parent) {\n\t                    if (!parent) {\n\t                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n\t                        // to\n\t                        // bootstrap(), which would override default pipes instead of extending them.\n\t                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n\t                    }\n\t                    return IterableDiffers.create(factories, parent);\n\t                },\n\t                // Dependency technically isn't optional, but we can provide a better error message this way.\n\t                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n\t            };\n\t        };\n\t        IterableDiffers.prototype.find = function (iterable) {\n\t            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n\t            if (isPresent(factory)) {\n\t                return factory;\n\t            }\n\t            else {\n\t                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n\t            }\n\t        };\n\t        return IterableDiffers;\n\t    }());\n\t\n\t    /**\n\t     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n\t     * @stable\n\t     */\n\t    var KeyValueDiffers = (function () {\n\t        function KeyValueDiffers(factories) {\n\t            this.factories = factories;\n\t        }\n\t        KeyValueDiffers.create = function (factories, parent) {\n\t            if (isPresent(parent)) {\n\t                var copied = parent.factories.slice();\n\t                factories = factories.concat(copied);\n\t                return new KeyValueDiffers(factories);\n\t            }\n\t            else {\n\t                return new KeyValueDiffers(factories);\n\t            }\n\t        };\n\t        /**\n\t         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n\t         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n\t         * {@link KeyValueDiffers} instance.\n\t         *\n\t         * The following example shows how to extend an existing list of factories,\n\t               * which will only be applied to the injector for this component and its children.\n\t               * This step is all that's required to make a new {@link KeyValueDiffer} available.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * @Component({\n\t         *   viewProviders: [\n\t         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n\t         *   ]\n\t         * })\n\t         * ```\n\t         */\n\t        KeyValueDiffers.extend = function (factories) {\n\t            return {\n\t                provide: KeyValueDiffers,\n\t                useFactory: function (parent) {\n\t                    if (!parent) {\n\t                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n\t                        // to\n\t                        // bootstrap(), which would override default pipes instead of extending them.\n\t                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n\t                    }\n\t                    return KeyValueDiffers.create(factories, parent);\n\t                },\n\t                // Dependency technically isn't optional, but we can provide a better error message this way.\n\t                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n\t            };\n\t        };\n\t        KeyValueDiffers.prototype.find = function (kv) {\n\t            var factory = this.factories.find(function (f) { return f.supports(kv); });\n\t            if (isPresent(factory)) {\n\t                return factory;\n\t            }\n\t            else {\n\t                throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n\t            }\n\t        };\n\t        return KeyValueDiffers;\n\t    }());\n\t\n\t    var UNINITIALIZED = {\n\t        toString: function () { return 'CD_INIT_VALUE'; }\n\t    };\n\t    function devModeEqual(a, b) {\n\t        if (isListLikeIterable(a) && isListLikeIterable(b)) {\n\t            return areIterablesEqual(a, b, devModeEqual);\n\t        }\n\t        else if (!isListLikeIterable(a) && !isPrimitive(a) && !isListLikeIterable(b) && !isPrimitive(b)) {\n\t            return true;\n\t        }\n\t        else {\n\t            return looseIdentical(a, b);\n\t        }\n\t    }\n\t    /**\n\t     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n\t     * reference\n\t     * has not changed.\n\t     *\n\t     * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```\n\t     * if (this._latestValue === this._latestReturnedValue) {\n\t     *    return this._latestReturnedValue;\n\t     *  } else {\n\t     *    this._latestReturnedValue = this._latestValue;\n\t     *    return WrappedValue.wrap(this._latestValue); // this will force update\n\t     *  }\n\t     * ```\n\t     * @stable\n\t     */\n\t    var WrappedValue = (function () {\n\t        function WrappedValue(wrapped) {\n\t            this.wrapped = wrapped;\n\t        }\n\t        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n\t        return WrappedValue;\n\t    }());\n\t    /**\n\t     * Helper class for unwrapping WrappedValue s\n\t     */\n\t    var ValueUnwrapper = (function () {\n\t        function ValueUnwrapper() {\n\t            this.hasWrappedValue = false;\n\t        }\n\t        ValueUnwrapper.prototype.unwrap = function (value) {\n\t            if (value instanceof WrappedValue) {\n\t                this.hasWrappedValue = true;\n\t                return value.wrapped;\n\t            }\n\t            return value;\n\t        };\n\t        ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n\t        return ValueUnwrapper;\n\t    }());\n\t    /**\n\t     * Represents a basic change from a previous to a new value.\n\t     * @stable\n\t     */\n\t    var SimpleChange = (function () {\n\t        function SimpleChange(previousValue, currentValue) {\n\t            this.previousValue = previousValue;\n\t            this.currentValue = currentValue;\n\t        }\n\t        /**\n\t         * Check whether the new value is the first value assigned.\n\t         */\n\t        SimpleChange.prototype.isFirstChange = function () { return this.previousValue === UNINITIALIZED; };\n\t        return SimpleChange;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @stable\n\t     */\n\t    var ChangeDetectorRef = (function () {\n\t        function ChangeDetectorRef() {\n\t        }\n\t        return ChangeDetectorRef;\n\t    }());\n\t\n\t    /**\n\t     * Structural diffing for `Object`s and `Map`s.\n\t     */\n\t    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n\t    /**\n\t     * Structural diffing for `Iterable` types such as `Array`s.\n\t     */\n\t    var iterableDiff = [new DefaultIterableDifferFactory()];\n\t    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\t    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\t\n\t    /**\n\t     * @experimental\n\t     */\n\t    // TODO (matsko): add typing for the animation function\n\t    var RenderComponentType = (function () {\n\t        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n\t            this.id = id;\n\t            this.templateUrl = templateUrl;\n\t            this.slotCount = slotCount;\n\t            this.encapsulation = encapsulation;\n\t            this.styles = styles;\n\t            this.animations = animations;\n\t        }\n\t        return RenderComponentType;\n\t    }());\n\t    var RenderDebugInfo = (function () {\n\t        function RenderDebugInfo() {\n\t        }\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"injector\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"component\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"providerTokens\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"references\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"context\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"source\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return RenderDebugInfo;\n\t    }());\n\t    /**\n\t     * @experimental\n\t     */\n\t    var Renderer = (function () {\n\t        function Renderer() {\n\t        }\n\t        return Renderer;\n\t    }());\n\t    /**\n\t     * Injectable service that provides a low-level interface for modifying the UI.\n\t     *\n\t     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n\t     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n\t     * not statically known, use {@link #setElementProperty} or {@link #setElementAttribute}\n\t     * respectively.\n\t     *\n\t     * If you are implementing a custom renderer, you must implement this interface.\n\t     *\n\t     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n\t     * @experimental\n\t     */\n\t    var RootRenderer = (function () {\n\t        function RootRenderer() {\n\t        }\n\t        return RootRenderer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n\t     * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n\t     * handled.\n\t     *\n\t     * See DomSanitizer for more details on security in Angular applications.\n\t     *\n\t     * @stable\n\t     */\n\t    exports.SecurityContext;\n\t    (function (SecurityContext) {\n\t        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n\t        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n\t        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n\t        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n\t        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n\t        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n\t    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\t    /**\n\t     * Sanitizer is used by the views to sanitize potentially dangerous values.\n\t     *\n\t     * @stable\n\t     */\n\t    var Sanitizer = (function () {\n\t        function Sanitizer() {\n\t        }\n\t        return Sanitizer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * A wrapper around a native element inside of a View.\n\t     *\n\t     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n\t     * element.\n\t     *\n\t     * @security Permitting direct access to the DOM can make your application more vulnerable to\n\t     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n\t     * [Security Guide](http://g.co/ng/security).\n\t     *\n\t     * @stable\n\t     */\n\t    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n\t    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n\t    // and could do better codegen in the future.\n\t    var ElementRef = (function () {\n\t        function ElementRef(nativeElement) {\n\t            this.nativeElement = nativeElement;\n\t        }\n\t        return ElementRef;\n\t    }());\n\t\n\t    var trace;\n\t    var events;\n\t    function detectWTF() {\n\t        var wtf = global$1['wtf'];\n\t        if (wtf) {\n\t            trace = wtf['trace'];\n\t            if (trace) {\n\t                events = trace['events'];\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    }\n\t    function createScope(signature, flags) {\n\t        if (flags === void 0) { flags = null; }\n\t        return events.createScope(signature, flags);\n\t    }\n\t    function leave(scope, returnValue) {\n\t        trace.leaveScope(scope, returnValue);\n\t        return returnValue;\n\t    }\n\t    function startTimeRange(rangeType, action) {\n\t        return trace.beginTimeRange(rangeType, action);\n\t    }\n\t    function endTimeRange(range) {\n\t        trace.endTimeRange(range);\n\t    }\n\t\n\t    /**\n\t     * True if WTF is enabled.\n\t     */\n\t    var wtfEnabled = detectWTF();\n\t    function noopScope(arg0, arg1) {\n\t        return null;\n\t    }\n\t    /**\n\t     * Create trace scope.\n\t     *\n\t     * Scopes must be strictly nested and are analogous to stack frames, but\n\t     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n\t     * nesting. You may want to use\n\t     * [Event\n\t     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n\t     * as they are defined in WTF.\n\t     *\n\t     * Used to mark scope entry. The return value is used to leave the scope.\n\t     *\n\t     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n\t     *\n\t     *     someMethod() {\n\t     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n\t     *        // DO SOME WORK HERE\n\t     *        return wtfLeave(s, 123); // Return value 123\n\t     *     }\n\t     *\n\t     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n\t     * negatively impact the performance of your application. For this reason we recommend that\n\t     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n\t     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n\t     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n\t     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n\t     * an exception is expected during normal execution while profiling.\n\t     *\n\t     * @experimental\n\t     */\n\t    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n\t    /**\n\t     * Used to mark end of Scope.\n\t     *\n\t     * - `scope` to end.\n\t     * - `returnValue` (optional) to be passed to the WTF.\n\t     *\n\t     * Returns the `returnValue for easy chaining.\n\t     * @experimental\n\t     */\n\t    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n\t    /**\n\t     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n\t     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n\t     * enabled.\n\t     *\n\t     *     someMethod() {\n\t     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n\t     *        var future = new Future.delay(5).then((_) {\n\t     *          wtfEndTimeRange(s);\n\t     *        });\n\t     *     }\n\t     * @experimental\n\t     */\n\t    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n\t    /**\n\t     * Ends a async time range operation.\n\t     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n\t     * enabled.\n\t     * @experimental\n\t     */\n\t    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\t\n\t    /**\n\t     * Represents a container where one or more Views can be attached.\n\t     *\n\t     * The container can contain two kinds of Views. Host Views, created by instantiating a\n\t     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n\t     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n\t     *\n\t     * The location of the View Container within the containing View is specified by the Anchor\n\t     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n\t     * have a single View Container.\n\t     *\n\t     * Root elements of Views attached to this container become siblings of the Anchor Element in\n\t     * the Rendered View.\n\t     *\n\t     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n\t     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n\t     * @stable\n\t     */\n\t    var ViewContainerRef = (function () {\n\t        function ViewContainerRef() {\n\t        }\n\t        Object.defineProperty(ViewContainerRef.prototype, \"element\", {\n\t            /**\n\t             * Anchor element that specifies the location of this container in the containing View.\n\t             * <!-- TODO: rename to anchorElement -->\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef.prototype, \"injector\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef.prototype, \"parentInjector\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n\t            /**\n\t             * Returns the number of Views currently attached to this container.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        return ViewContainerRef;\n\t    }());\n\t    var ViewContainerRef_ = (function () {\n\t        function ViewContainerRef_(_element) {\n\t            this._element = _element;\n\t            /** @internal */\n\t            this._createComponentInContainerScope = wtfCreateScope('ViewContainerRef#createComponent()');\n\t            /** @internal */\n\t            this._insertScope = wtfCreateScope('ViewContainerRef#insert()');\n\t            /** @internal */\n\t            this._removeScope = wtfCreateScope('ViewContainerRef#remove()');\n\t            /** @internal */\n\t            this._detachScope = wtfCreateScope('ViewContainerRef#detach()');\n\t        }\n\t        ViewContainerRef_.prototype.get = function (index) { return this._element.nestedViews[index].ref; };\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n\t            get: function () {\n\t                var views = this._element.nestedViews;\n\t                return isPresent(views) ? views.length : 0;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n\t            get: function () { return this._element.elementRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n\t            get: function () { return this._element.injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n\t            get: function () { return this._element.parentInjector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        // TODO(rado): profile and decide whether bounds checks should be added\n\t        // to the methods below.\n\t        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n\t            if (context === void 0) { context = null; }\n\t            if (index === void 0) { index = -1; }\n\t            var viewRef = templateRef.createEmbeddedView(context);\n\t            this.insert(viewRef, index);\n\t            return viewRef;\n\t        };\n\t        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) {\n\t            if (index === void 0) { index = -1; }\n\t            if (injector === void 0) { injector = null; }\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            var s = this._createComponentInContainerScope();\n\t            var contextInjector = injector || this._element.parentInjector;\n\t            var componentRef = componentFactory.create(contextInjector, projectableNodes);\n\t            this.insert(componentRef.hostView, index);\n\t            return wtfLeave(s, componentRef);\n\t        };\n\t        // TODO(i): refactor insert+remove into move\n\t        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n\t            if (index === void 0) { index = -1; }\n\t            var s = this._insertScope();\n\t            if (index == -1)\n\t                index = this.length;\n\t            var viewRef_ = viewRef;\n\t            this._element.attachView(viewRef_.internalView, index);\n\t            return wtfLeave(s, viewRef_);\n\t        };\n\t        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n\t            var s = this._insertScope();\n\t            if (currentIndex == -1)\n\t                return;\n\t            var viewRef_ = viewRef;\n\t            this._element.moveView(viewRef_.internalView, currentIndex);\n\t            return wtfLeave(s, viewRef_);\n\t        };\n\t        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n\t            return this._element.nestedViews.indexOf(viewRef.internalView);\n\t        };\n\t        // TODO(i): rename to destroy\n\t        ViewContainerRef_.prototype.remove = function (index) {\n\t            if (index === void 0) { index = -1; }\n\t            var s = this._removeScope();\n\t            if (index == -1)\n\t                index = this.length - 1;\n\t            var view = this._element.detachView(index);\n\t            view.destroy();\n\t            // view is intentionally not returned to the client.\n\t            wtfLeave(s);\n\t        };\n\t        // TODO(i): refactor insert+remove into move\n\t        ViewContainerRef_.prototype.detach = function (index) {\n\t            if (index === void 0) { index = -1; }\n\t            var s = this._detachScope();\n\t            if (index == -1)\n\t                index = this.length - 1;\n\t            var view = this._element.detachView(index);\n\t            return wtfLeave(s, view.ref);\n\t        };\n\t        ViewContainerRef_.prototype.clear = function () {\n\t            for (var i = this.length - 1; i >= 0; i--) {\n\t                this.remove(i);\n\t            }\n\t        };\n\t        return ViewContainerRef_;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var ViewType;\n\t    (function (ViewType) {\n\t        // A view that contains the host element with bound component directive.\n\t        // Contains a COMPONENT view\n\t        ViewType[ViewType[\"HOST\"] = 0] = \"HOST\";\n\t        // The view of the component\n\t        // Can contain 0 to n EMBEDDED views\n\t        ViewType[ViewType[\"COMPONENT\"] = 1] = \"COMPONENT\";\n\t        // A view that is embedded into another View via a <template> element\n\t        // inside of a COMPONENT view\n\t        ViewType[ViewType[\"EMBEDDED\"] = 2] = \"EMBEDDED\";\n\t    })(ViewType || (ViewType = {}));\n\t\n\t    /**\n\t     * An AppElement is created for elements that have a ViewContainerRef,\n\t     * a nested component or a <template> element to keep data around\n\t     * that is needed for later instantiations.\n\t     */\n\t    var AppElement = (function () {\n\t        function AppElement(index, parentIndex, parentView, nativeElement) {\n\t            this.index = index;\n\t            this.parentIndex = parentIndex;\n\t            this.parentView = parentView;\n\t            this.nativeElement = nativeElement;\n\t            this.nestedViews = null;\n\t            this.componentView = null;\n\t        }\n\t        Object.defineProperty(AppElement.prototype, \"elementRef\", {\n\t            get: function () { return new ElementRef(this.nativeElement); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppElement.prototype, \"vcRef\", {\n\t            get: function () { return new ViewContainerRef_(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        AppElement.prototype.initComponent = function (component, componentConstructorViewQueries, view) {\n\t            this.component = component;\n\t            this.componentConstructorViewQueries = componentConstructorViewQueries;\n\t            this.componentView = view;\n\t        };\n\t        Object.defineProperty(AppElement.prototype, \"parentInjector\", {\n\t            get: function () { return this.parentView.injector(this.parentIndex); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppElement.prototype, \"injector\", {\n\t            get: function () { return this.parentView.injector(this.index); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        AppElement.prototype.mapNestedViews = function (nestedViewClass, callback) {\n\t            var result = [];\n\t            if (isPresent(this.nestedViews)) {\n\t                this.nestedViews.forEach(function (nestedView) {\n\t                    if (nestedView.clazz === nestedViewClass) {\n\t                        result.push(callback(nestedView));\n\t                    }\n\t                });\n\t            }\n\t            return result;\n\t        };\n\t        AppElement.prototype.moveView = function (view, currentIndex) {\n\t            var previousIndex = this.nestedViews.indexOf(view);\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            var nestedViews = this.nestedViews;\n\t            if (nestedViews == null) {\n\t                nestedViews = [];\n\t                this.nestedViews = nestedViews;\n\t            }\n\t            nestedViews.splice(previousIndex, 1);\n\t            nestedViews.splice(currentIndex, 0, view);\n\t            var refRenderNode;\n\t            if (currentIndex > 0) {\n\t                var prevView = nestedViews[currentIndex - 1];\n\t                refRenderNode = prevView.lastRootNode;\n\t            }\n\t            else {\n\t                refRenderNode = this.nativeElement;\n\t            }\n\t            if (isPresent(refRenderNode)) {\n\t                view.renderer.attachViewAfter(refRenderNode, view.flatRootNodes);\n\t            }\n\t            view.markContentChildAsMoved(this);\n\t        };\n\t        AppElement.prototype.attachView = function (view, viewIndex) {\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            var nestedViews = this.nestedViews;\n\t            if (nestedViews == null) {\n\t                nestedViews = [];\n\t                this.nestedViews = nestedViews;\n\t            }\n\t            nestedViews.splice(viewIndex, 0, view);\n\t            var refRenderNode;\n\t            if (viewIndex > 0) {\n\t                var prevView = nestedViews[viewIndex - 1];\n\t                refRenderNode = prevView.lastRootNode;\n\t            }\n\t            else {\n\t                refRenderNode = this.nativeElement;\n\t            }\n\t            if (isPresent(refRenderNode)) {\n\t                view.renderer.attachViewAfter(refRenderNode, view.flatRootNodes);\n\t            }\n\t            view.addToContentChildren(this);\n\t        };\n\t        AppElement.prototype.detachView = function (viewIndex) {\n\t            var view = this.nestedViews.splice(viewIndex, 1)[0];\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            view.detach();\n\t            view.removeFromContentChildren(this);\n\t            return view;\n\t        };\n\t        return AppElement;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * An error thrown if application changes model breaking the top-down data flow.\n\t     *\n\t     * This exception is only thrown in dev mode.\n\t     *\n\t     * <!-- TODO: Add a link once the dev mode option is configurable -->\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * @Component({\n\t     *   selector: 'parent',\n\t     *   template: '<child [prop]=\"parentProp\"></child>',\n\t     * })\n\t     * class Parent {\n\t     *   parentProp = 'init';\n\t     * }\n\t     *\n\t     * @Directive({selector: 'child', inputs: ['prop']})\n\t     * class Child {\n\t     *   constructor(public parent: Parent) {}\n\t     *\n\t     *   set prop(v) {\n\t     *     // this updates the parent property, which is disallowed during change detection\n\t     *     // this will result in ExpressionChangedAfterItHasBeenCheckedError\n\t     *     this.parent.parentProp = 'updated';\n\t     *   }\n\t     * }\n\t     * ```\n\t     * @stable\n\t     */\n\t    var ExpressionChangedAfterItHasBeenCheckedError = (function (_super) {\n\t        __extends$6(ExpressionChangedAfterItHasBeenCheckedError, _super);\n\t        function ExpressionChangedAfterItHasBeenCheckedError(oldValue, currValue) {\n\t            var msg = \"Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n\t            if (oldValue === UNINITIALIZED) {\n\t                msg +=\n\t                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n\t                        \" Has it been created in a change detection hook ?\";\n\t            }\n\t            _super.call(this, msg);\n\t        }\n\t        return ExpressionChangedAfterItHasBeenCheckedError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when an exception was raised during view creation, change detection or destruction.\n\t     *\n\t     * This error wraps the original exception to attach additional contextual information that can\n\t     * be useful for debugging.\n\t     * @stable\n\t     */\n\t    var ViewWrappedError = (function (_super) {\n\t        __extends$6(ViewWrappedError, _super);\n\t        function ViewWrappedError(originalError, context) {\n\t            _super.call(this, \"Error in \" + context.source, originalError);\n\t            this.context = context;\n\t        }\n\t        return ViewWrappedError;\n\t    }(WrappedError));\n\t    /**\n\t     * Thrown when a destroyed view is used.\n\t     *\n\t     * This error indicates a bug in the framework.\n\t     *\n\t     * This is an internal Angular error.\n\t     * @stable\n\t     */\n\t    var ViewDestroyedError = (function (_super) {\n\t        __extends$6(ViewDestroyedError, _super);\n\t        function ViewDestroyedError(details) {\n\t            _super.call(this, \"Attempt to use a destroyed view: \" + details);\n\t        }\n\t        return ViewDestroyedError;\n\t    }(BaseError));\n\t\n\t    var ViewUtils = (function () {\n\t        function ViewUtils(_renderer, _appId, sanitizer) {\n\t            this._renderer = _renderer;\n\t            this._appId = _appId;\n\t            this._nextCompTypeId = 0;\n\t            this.sanitizer = sanitizer;\n\t        }\n\t        /**\n\t         * Used by the generated code\n\t         */\n\t        // TODO (matsko): add typing for the animation function\n\t        ViewUtils.prototype.createRenderComponentType = function (templateUrl, slotCount, encapsulation, styles, animations) {\n\t            return new RenderComponentType(this._appId + \"-\" + this._nextCompTypeId++, templateUrl, slotCount, encapsulation, styles, animations);\n\t        };\n\t        /** @internal */\n\t        ViewUtils.prototype.renderComponent = function (renderComponentType) {\n\t            return this._renderer.renderComponent(renderComponentType);\n\t        };\n\t        ViewUtils.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ViewUtils.ctorParameters = [\n\t            { type: RootRenderer, },\n\t            { type: undefined, decorators: [{ type: Inject, args: [APP_ID,] },] },\n\t            { type: Sanitizer, },\n\t        ];\n\t        return ViewUtils;\n\t    }());\n\t    function flattenNestedViewRenderNodes(nodes) {\n\t        return _flattenNestedViewRenderNodes(nodes, []);\n\t    }\n\t    function _flattenNestedViewRenderNodes(nodes, renderNodes) {\n\t        for (var i = 0; i < nodes.length; i++) {\n\t            var node = nodes[i];\n\t            if (node instanceof AppElement) {\n\t                var appEl = node;\n\t                renderNodes.push(appEl.nativeElement);\n\t                if (isPresent(appEl.nestedViews)) {\n\t                    for (var k = 0; k < appEl.nestedViews.length; k++) {\n\t                        _flattenNestedViewRenderNodes(appEl.nestedViews[k].rootNodesOrAppElements, renderNodes);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                renderNodes.push(node);\n\t            }\n\t        }\n\t        return renderNodes;\n\t    }\n\t    var EMPTY_ARR = [];\n\t    function ensureSlotCount(projectableNodes, expectedSlotCount) {\n\t        var res;\n\t        if (!projectableNodes) {\n\t            res = EMPTY_ARR;\n\t        }\n\t        else if (projectableNodes.length < expectedSlotCount) {\n\t            var givenSlotCount = projectableNodes.length;\n\t            res = new Array(expectedSlotCount);\n\t            for (var i = 0; i < expectedSlotCount; i++) {\n\t                res[i] = (i < givenSlotCount) ? projectableNodes[i] : EMPTY_ARR;\n\t            }\n\t        }\n\t        else {\n\t            res = projectableNodes;\n\t        }\n\t        return res;\n\t    }\n\t    var MAX_INTERPOLATION_VALUES = 9;\n\t    function interpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n\t        switch (valueCount) {\n\t            case 1:\n\t                return c0 + _toStringWithNull(a1) + c1;\n\t            case 2:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n\t            case 3:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3;\n\t            case 4:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4;\n\t            case 5:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n\t            case 6:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n\t            case 7:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7;\n\t            case 8:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n\t            case 9:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n\t            default:\n\t                throw new Error(\"Does not support more than 9 expressions\");\n\t        }\n\t    }\n\t    function _toStringWithNull(v) {\n\t        return v != null ? v.toString() : '';\n\t    }\n\t    function checkBinding(throwOnChange, oldValue, newValue) {\n\t        if (throwOnChange) {\n\t            if (!devModeEqual(oldValue, newValue)) {\n\t                throw new ExpressionChangedAfterItHasBeenCheckedError(oldValue, newValue);\n\t            }\n\t            return false;\n\t        }\n\t        else {\n\t            return !looseIdentical(oldValue, newValue);\n\t        }\n\t    }\n\t    function castByValue(input, value) {\n\t        return input;\n\t    }\n\t    var EMPTY_ARRAY = [];\n\t    var EMPTY_MAP = {};\n\t    function pureProxy1(fn) {\n\t        var result;\n\t        var v0 = UNINITIALIZED;\n\t        return function (p0) {\n\t            if (!looseIdentical(v0, p0)) {\n\t                v0 = p0;\n\t                result = fn(p0);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy2(fn) {\n\t        var result;\n\t        var v0 = UNINITIALIZED;\n\t        var v1 = UNINITIALIZED;\n\t        return function (p0, p1) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                result = fn(p0, p1);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy3(fn) {\n\t        var result;\n\t        var v0 = UNINITIALIZED;\n\t        var v1 = UNINITIALIZED;\n\t        var v2 = UNINITIALIZED;\n\t        return function (p0, p1, p2) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                result = fn(p0, p1, p2);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy4(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3;\n\t        v0 = v1 = v2 = v3 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                result = fn(p0, p1, p2, p3);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy5(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4;\n\t        v0 = v1 = v2 = v3 = v4 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                result = fn(p0, p1, p2, p3, p4);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy6(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                result = fn(p0, p1, p2, p3, p4, p5);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy7(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5, v6;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy8(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5, v6, v7;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy9(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5, v6, v7, v8;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                v8 = p8;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy10(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5, v6, v7, v8, v9;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = v9 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8) ||\n\t                !looseIdentical(v9, p9)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                v8 = p8;\n\t                v9 = p9;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function setBindingDebugInfoForChanges(renderer, el, changes) {\n\t        Object.keys(changes).forEach(function (propName) {\n\t            setBindingDebugInfo(renderer, el, propName, changes[propName].currentValue);\n\t        });\n\t    }\n\t    function setBindingDebugInfo(renderer, el, propName, value) {\n\t        try {\n\t            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), value ? value.toString() : null);\n\t        }\n\t        catch (e) {\n\t            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), '[ERROR] Exception while trying to serialize the value');\n\t        }\n\t    }\n\t    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n\t    function camelCaseToDashCase(input) {\n\t        return input.replace(CAMEL_CASE_REGEXP, function () {\n\t            var m = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                m[_i - 0] = arguments[_i];\n\t            }\n\t            return '-' + m[1].toLowerCase();\n\t        });\n\t    }\n\t    function createRenderElement(renderer, parentElement, name, attrs, debugInfo) {\n\t        var el = renderer.createElement(parentElement, name, debugInfo);\n\t        for (var i = 0; i < attrs.length; i += 2) {\n\t            renderer.setElementAttribute(el, attrs.get(i), attrs.get(i + 1));\n\t        }\n\t        return el;\n\t    }\n\t    function selectOrCreateRenderHostElement(renderer, elementName, attrs, rootSelectorOrNode, debugInfo) {\n\t        var hostElement;\n\t        if (isPresent(rootSelectorOrNode)) {\n\t            hostElement = renderer.selectRootElement(rootSelectorOrNode, debugInfo);\n\t        }\n\t        else {\n\t            hostElement = createRenderElement(renderer, null, elementName, attrs, debugInfo);\n\t        }\n\t        return hostElement;\n\t    }\n\t    var InlineArray0 = (function () {\n\t        function InlineArray0() {\n\t            this.length = 0;\n\t        }\n\t        InlineArray0.prototype.get = function (index) { return undefined; };\n\t        return InlineArray0;\n\t    }());\n\t    var InlineArray2 = (function () {\n\t        function InlineArray2(length, _v0, _v1) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t        }\n\t        InlineArray2.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        return InlineArray2;\n\t    }());\n\t    var InlineArray4 = (function () {\n\t        function InlineArray4(length, _v0, _v1, _v2, _v3) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t            this._v2 = _v2;\n\t            this._v3 = _v3;\n\t        }\n\t        InlineArray4.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                case 2:\n\t                    return this._v2;\n\t                case 3:\n\t                    return this._v3;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        return InlineArray4;\n\t    }());\n\t    var InlineArray8 = (function () {\n\t        function InlineArray8(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t            this._v2 = _v2;\n\t            this._v3 = _v3;\n\t            this._v4 = _v4;\n\t            this._v5 = _v5;\n\t            this._v6 = _v6;\n\t            this._v7 = _v7;\n\t        }\n\t        InlineArray8.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                case 2:\n\t                    return this._v2;\n\t                case 3:\n\t                    return this._v3;\n\t                case 4:\n\t                    return this._v4;\n\t                case 5:\n\t                    return this._v5;\n\t                case 6:\n\t                    return this._v6;\n\t                case 7:\n\t                    return this._v7;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        return InlineArray8;\n\t    }());\n\t    var InlineArray16 = (function () {\n\t        function InlineArray16(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7, _v8, _v9, _v10, _v11, _v12, _v13, _v14, _v15) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t            this._v2 = _v2;\n\t            this._v3 = _v3;\n\t            this._v4 = _v4;\n\t            this._v5 = _v5;\n\t            this._v6 = _v6;\n\t            this._v7 = _v7;\n\t            this._v8 = _v8;\n\t            this._v9 = _v9;\n\t            this._v10 = _v10;\n\t            this._v11 = _v11;\n\t            this._v12 = _v12;\n\t            this._v13 = _v13;\n\t            this._v14 = _v14;\n\t            this._v15 = _v15;\n\t        }\n\t        InlineArray16.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                case 2:\n\t                    return this._v2;\n\t                case 3:\n\t                    return this._v3;\n\t                case 4:\n\t                    return this._v4;\n\t                case 5:\n\t                    return this._v5;\n\t                case 6:\n\t                    return this._v6;\n\t                case 7:\n\t                    return this._v7;\n\t                case 8:\n\t                    return this._v8;\n\t                case 9:\n\t                    return this._v9;\n\t                case 10:\n\t                    return this._v10;\n\t                case 11:\n\t                    return this._v11;\n\t                case 12:\n\t                    return this._v12;\n\t                case 13:\n\t                    return this._v13;\n\t                case 14:\n\t                    return this._v14;\n\t                case 15:\n\t                    return this._v15;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        return InlineArray16;\n\t    }());\n\t    var InlineArrayDynamic = (function () {\n\t        // Note: We still take the length argument so this class can be created\n\t        // in the same ways as the other classes!\n\t        function InlineArrayDynamic(length) {\n\t            var values = [];\n\t            for (var _i = 1; _i < arguments.length; _i++) {\n\t                values[_i - 1] = arguments[_i];\n\t            }\n\t            this.length = length;\n\t            this._values = values;\n\t        }\n\t        InlineArrayDynamic.prototype.get = function (index) { return this._values[index]; };\n\t        return InlineArrayDynamic;\n\t    }());\n\t    var EMPTY_INLINE_ARRAY = new InlineArray0();\n\t\n\t\n\t    var view_utils = Object.freeze({\n\t        ViewUtils: ViewUtils,\n\t        flattenNestedViewRenderNodes: flattenNestedViewRenderNodes,\n\t        ensureSlotCount: ensureSlotCount,\n\t        MAX_INTERPOLATION_VALUES: MAX_INTERPOLATION_VALUES,\n\t        interpolate: interpolate,\n\t        checkBinding: checkBinding,\n\t        castByValue: castByValue,\n\t        EMPTY_ARRAY: EMPTY_ARRAY,\n\t        EMPTY_MAP: EMPTY_MAP,\n\t        pureProxy1: pureProxy1,\n\t        pureProxy2: pureProxy2,\n\t        pureProxy3: pureProxy3,\n\t        pureProxy4: pureProxy4,\n\t        pureProxy5: pureProxy5,\n\t        pureProxy6: pureProxy6,\n\t        pureProxy7: pureProxy7,\n\t        pureProxy8: pureProxy8,\n\t        pureProxy9: pureProxy9,\n\t        pureProxy10: pureProxy10,\n\t        setBindingDebugInfoForChanges: setBindingDebugInfoForChanges,\n\t        setBindingDebugInfo: setBindingDebugInfo,\n\t        createRenderElement: createRenderElement,\n\t        selectOrCreateRenderHostElement: selectOrCreateRenderHostElement,\n\t        InlineArray2: InlineArray2,\n\t        InlineArray4: InlineArray4,\n\t        InlineArray8: InlineArray8,\n\t        InlineArray16: InlineArray16,\n\t        InlineArrayDynamic: InlineArrayDynamic,\n\t        EMPTY_INLINE_ARRAY: EMPTY_INLINE_ARRAY\n\t    });\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an instance of a Component created via a {@link ComponentFactory}.\n\t     *\n\t     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n\t     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n\t     * method.\n\t     * @stable\n\t     */\n\t    var ComponentRef = (function () {\n\t        function ComponentRef() {\n\t        }\n\t        Object.defineProperty(ComponentRef.prototype, \"location\", {\n\t            /**\n\t             * Location of the Host Element of this Component Instance.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n\t            /**\n\t             * The injector on which the component instance exists.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef.prototype, \"instance\", {\n\t            /**\n\t             * The instance of the Component.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef.prototype, \"hostView\", {\n\t            /**\n\t             * The {@link ViewRef} of the Host View of this Component instance.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef.prototype, \"changeDetectorRef\", {\n\t            /**\n\t             * The {@link ChangeDetectorRef} of the Component instance.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef.prototype, \"componentType\", {\n\t            /**\n\t             * The component type.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ComponentRef;\n\t    }());\n\t    var ComponentRef_ = (function (_super) {\n\t        __extends$5(ComponentRef_, _super);\n\t        function ComponentRef_(_hostElement, _componentType) {\n\t            _super.call(this);\n\t            this._hostElement = _hostElement;\n\t            this._componentType = _componentType;\n\t        }\n\t        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n\t            get: function () { return this._hostElement.elementRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n\t            get: function () { return this._hostElement.injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n\t            get: function () { return this._hostElement.component; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n\t            get: function () { return this._hostElement.parentView.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n\t            get: function () { return this._hostElement.parentView.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n\t            get: function () { return this._componentType; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ComponentRef_.prototype.destroy = function () { this._hostElement.parentView.destroy(); };\n\t        ComponentRef_.prototype.onDestroy = function (callback) { this.hostView.onDestroy(callback); };\n\t        return ComponentRef_;\n\t    }(ComponentRef));\n\t    /**\n\t     * @experimental\n\t     */\n\t    var EMPTY_CONTEXT = new Object();\n\t    /**\n\t     * @stable\n\t     */\n\t    var ComponentFactory = (function () {\n\t        function ComponentFactory(selector, _viewFactory, _componentType) {\n\t            this.selector = selector;\n\t            this._viewFactory = _viewFactory;\n\t            this._componentType = _componentType;\n\t        }\n\t        Object.defineProperty(ComponentFactory.prototype, \"componentType\", {\n\t            get: function () { return this._componentType; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Creates a new component.\n\t         */\n\t        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode) {\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            if (rootSelectorOrNode === void 0) { rootSelectorOrNode = null; }\n\t            var vu = injector.get(ViewUtils);\n\t            if (!projectableNodes) {\n\t                projectableNodes = [];\n\t            }\n\t            // Note: Host views don't need a declarationAppElement!\n\t            var hostView = this._viewFactory(vu, injector, null);\n\t            var hostElement = hostView.create(EMPTY_CONTEXT, projectableNodes, rootSelectorOrNode);\n\t            return new ComponentRef_(hostElement, this._componentType);\n\t        };\n\t        return ComponentFactory;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @stable\n\t     */\n\t    var NoComponentFactoryError = (function (_super) {\n\t        __extends$7(NoComponentFactoryError, _super);\n\t        function NoComponentFactoryError(component) {\n\t            _super.call(this, \"No component factory found for \" + stringify(component));\n\t            this.component = component;\n\t        }\n\t        return NoComponentFactoryError;\n\t    }(BaseError));\n\t    var _NullComponentFactoryResolver = (function () {\n\t        function _NullComponentFactoryResolver() {\n\t        }\n\t        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n\t            throw new NoComponentFactoryError(component);\n\t        };\n\t        return _NullComponentFactoryResolver;\n\t    }());\n\t    /**\n\t     * @stable\n\t     */\n\t    var ComponentFactoryResolver = (function () {\n\t        function ComponentFactoryResolver() {\n\t        }\n\t        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n\t        return ComponentFactoryResolver;\n\t    }());\n\t    var CodegenComponentFactoryResolver = (function () {\n\t        function CodegenComponentFactoryResolver(factories, _parent) {\n\t            this._parent = _parent;\n\t            this._factories = new Map();\n\t            for (var i = 0; i < factories.length; i++) {\n\t                var factory = factories[i];\n\t                this._factories.set(factory.componentType, factory);\n\t            }\n\t        }\n\t        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n\t            var result = this._factories.get(component);\n\t            if (!result) {\n\t                result = this._parent.resolveComponentFactory(component);\n\t            }\n\t            return result;\n\t        };\n\t        return CodegenComponentFactoryResolver;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Use by directives and components to emit custom Events.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n\t     * title gets clicked:\n\t     *\n\t     * ```\n\t     * @Component({\n\t     *   selector: 'zippy',\n\t     *   template: `\n\t     *   <div class=\"zippy\">\n\t     *     <div (click)=\"toggle()\">Toggle</div>\n\t     *     <div [hidden]=\"!visible\">\n\t     *       <ng-content></ng-content>\n\t     *     </div>\n\t     *  </div>`})\n\t     * export class Zippy {\n\t     *   visible: boolean = true;\n\t     *   @Output() open: EventEmitter<any> = new EventEmitter();\n\t     *   @Output() close: EventEmitter<any> = new EventEmitter();\n\t     *\n\t     *   toggle() {\n\t     *     this.visible = !this.visible;\n\t     *     if (this.visible) {\n\t     *       this.open.emit(null);\n\t     *     } else {\n\t     *       this.close.emit(null);\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * The events payload can be accessed by the parameter `$event` on the components output event\n\t     * handler:\n\t     *\n\t     * ```\n\t     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n\t     * ```\n\t     *\n\t     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n\t     * https://github.com/jhusain/observable-spec\n\t     *\n\t     * Once a reference implementation of the spec is available, switch to it.\n\t     * @stable\n\t     */\n\t    var EventEmitter = (function (_super) {\n\t        __extends$8(EventEmitter, _super);\n\t        /**\n\t         * Creates an instance of [EventEmitter], which depending on [isAsync],\n\t         * delivers events synchronously or asynchronously.\n\t         */\n\t        function EventEmitter(isAsync) {\n\t            if (isAsync === void 0) { isAsync = false; }\n\t            _super.call(this);\n\t            this.__isAsync = isAsync;\n\t        }\n\t        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n\t        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n\t            var schedulerFn;\n\t            var errorFn = function (err) { return null; };\n\t            var completeFn = function () { return null; };\n\t            if (generatorOrNext && typeof generatorOrNext === 'object') {\n\t                schedulerFn = this.__isAsync ? function (value) {\n\t                    setTimeout(function () { return generatorOrNext.next(value); });\n\t                } : function (value) { generatorOrNext.next(value); };\n\t                if (generatorOrNext.error) {\n\t                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n\t                        function (err) { generatorOrNext.error(err); };\n\t                }\n\t                if (generatorOrNext.complete) {\n\t                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n\t                        function () { generatorOrNext.complete(); };\n\t                }\n\t            }\n\t            else {\n\t                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n\t                    function (value) { generatorOrNext(value); };\n\t                if (error) {\n\t                    errorFn =\n\t                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n\t                }\n\t                if (complete) {\n\t                    completeFn =\n\t                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n\t                }\n\t            }\n\t            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n\t        };\n\t        return EventEmitter;\n\t    }(rxjs_Subject.Subject));\n\t\n\t    /**\n\t     * An injectable service for executing work inside or outside of the Angular zone.\n\t     *\n\t     * The most common use of this service is to optimize performance when starting a work consisting of\n\t     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n\t     * Angular. Such tasks can be kicked off via {@link runOutsideAngular} and if needed, these tasks\n\t     * can reenter the Angular zone via {@link run}.\n\t     *\n\t     * <!-- TODO: add/fix links to:\n\t     *   - docs explaining zones and the use of zones in Angular and change-detection\n\t     *   - link to runOutsideAngular/run (throughout this file!)\n\t     *   -->\n\t     *\n\t     * ### Example\n\t     * ```\n\t     * import {Component, NgZone} from '@angular/core';\n\t     * import {NgIf} from '@angular/common';\n\t     *\n\t     * @Component({\n\t     *   selector: 'ng-zone-demo'.\n\t     *   template: `\n\t     *     <h2>Demo: NgZone</h2>\n\t     *\n\t     *     <p>Progress: {{progress}}%</p>\n\t     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n\t     *\n\t     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n\t     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n\t     *   `,\n\t     * })\n\t     * export class NgZoneDemo {\n\t     *   progress: number = 0;\n\t     *   label: string;\n\t     *\n\t     *   constructor(private _ngZone: NgZone) {}\n\t     *\n\t     *   // Loop inside the Angular zone\n\t     *   // so the UI DOES refresh after each setTimeout cycle\n\t     *   processWithinAngularZone() {\n\t     *     this.label = 'inside';\n\t     *     this.progress = 0;\n\t     *     this._increaseProgress(() => console.log('Inside Done!'));\n\t     *   }\n\t     *\n\t     *   // Loop outside of the Angular zone\n\t     *   // so the UI DOES NOT refresh after each setTimeout cycle\n\t     *   processOutsideOfAngularZone() {\n\t     *     this.label = 'outside';\n\t     *     this.progress = 0;\n\t     *     this._ngZone.runOutsideAngular(() => {\n\t     *       this._increaseProgress(() => {\n\t     *       // reenter the Angular zone and display done\n\t     *       this._ngZone.run(() => {console.log('Outside Done!') });\n\t     *     }}));\n\t     *   }\n\t     *\n\t     *   _increaseProgress(doneCallback: () => void) {\n\t     *     this.progress += 1;\n\t     *     console.log(`Current progress: ${this.progress}%`);\n\t     *\n\t     *     if (this.progress < 100) {\n\t     *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n\t     *     } else {\n\t     *       doneCallback();\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     * @experimental\n\t     */\n\t    var NgZone = (function () {\n\t        function NgZone(_a) {\n\t            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n\t            this._hasPendingMicrotasks = false;\n\t            this._hasPendingMacrotasks = false;\n\t            this._isStable = true;\n\t            this._nesting = 0;\n\t            this._onUnstable = new EventEmitter(false);\n\t            this._onMicrotaskEmpty = new EventEmitter(false);\n\t            this._onStable = new EventEmitter(false);\n\t            this._onErrorEvents = new EventEmitter(false);\n\t            if (typeof Zone == 'undefined') {\n\t                throw new Error('Angular requires Zone.js prolyfill.');\n\t            }\n\t            Zone.assertZonePatched();\n\t            this.outer = this.inner = Zone.current;\n\t            if (Zone['wtfZoneSpec']) {\n\t                this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n\t            }\n\t            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n\t                this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n\t            }\n\t            this.forkInnerZoneWithAngularBehavior();\n\t        }\n\t        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n\t        NgZone.assertInAngularZone = function () {\n\t            if (!NgZone.isInAngularZone()) {\n\t                throw new Error('Expected to be in Angular Zone, but it is not!');\n\t            }\n\t        };\n\t        NgZone.assertNotInAngularZone = function () {\n\t            if (NgZone.isInAngularZone()) {\n\t                throw new Error('Expected to not be in Angular Zone, but it is!');\n\t            }\n\t        };\n\t        /**\n\t         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n\t         * the function.\n\t         *\n\t         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n\t         * outside of the Angular zone (typically started via {@link runOutsideAngular}).\n\t         *\n\t         * Any future tasks or microtasks scheduled from within this function will continue executing from\n\t         * within the Angular zone.\n\t         *\n\t         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n\t         */\n\t        NgZone.prototype.run = function (fn) { return this.inner.run(fn); };\n\t        /**\n\t         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n\t         * rethrown.\n\t         */\n\t        NgZone.prototype.runGuarded = function (fn) { return this.inner.runGuarded(fn); };\n\t        /**\n\t         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n\t         * the function.\n\t         *\n\t         * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n\t         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n\t         *\n\t         * Any future tasks or microtasks scheduled from within this function will continue executing from\n\t         * outside of the Angular zone.\n\t         *\n\t         * Use {@link run} to reenter the Angular zone and do work that updates the application model.\n\t         */\n\t        NgZone.prototype.runOutsideAngular = function (fn) { return this.outer.run(fn); };\n\t        Object.defineProperty(NgZone.prototype, \"onUnstable\", {\n\t            /**\n\t             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n\t             */\n\t            get: function () { return this._onUnstable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onMicrotaskEmpty\", {\n\t            /**\n\t             * Notifies when there is no more microtasks enqueue in the current VM Turn.\n\t             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n\t             * For this reason this event can fire multiple times per VM Turn.\n\t             */\n\t            get: function () { return this._onMicrotaskEmpty; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onStable\", {\n\t            /**\n\t             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n\t             * implies we are about to relinquish VM turn.\n\t             * This event gets called just once.\n\t             */\n\t            get: function () { return this._onStable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onError\", {\n\t            /**\n\t             * Notify that an error has been delivered.\n\t             */\n\t            get: function () { return this._onErrorEvents; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"isStable\", {\n\t            /**\n\t             * Whether there are no outstanding microtasks or macrotasks.\n\t             */\n\t            get: function () { return this._isStable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"hasPendingMicrotasks\", {\n\t            get: function () { return this._hasPendingMicrotasks; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"hasPendingMacrotasks\", {\n\t            get: function () { return this._hasPendingMacrotasks; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgZone.prototype.checkStable = function () {\n\t            var _this = this;\n\t            if (this._nesting == 0 && !this._hasPendingMicrotasks && !this._isStable) {\n\t                try {\n\t                    this._nesting++;\n\t                    this._onMicrotaskEmpty.emit(null);\n\t                }\n\t                finally {\n\t                    this._nesting--;\n\t                    if (!this._hasPendingMicrotasks) {\n\t                        try {\n\t                            this.runOutsideAngular(function () { return _this._onStable.emit(null); });\n\t                        }\n\t                        finally {\n\t                            this._isStable = true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        NgZone.prototype.forkInnerZoneWithAngularBehavior = function () {\n\t            var _this = this;\n\t            this.inner = this.inner.fork({\n\t                name: 'angular',\n\t                properties: { 'isAngularZone': true },\n\t                onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n\t                    try {\n\t                        _this.onEnter();\n\t                        return delegate.invokeTask(target, task, applyThis, applyArgs);\n\t                    }\n\t                    finally {\n\t                        _this.onLeave();\n\t                    }\n\t                },\n\t                onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n\t                    try {\n\t                        _this.onEnter();\n\t                        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n\t                    }\n\t                    finally {\n\t                        _this.onLeave();\n\t                    }\n\t                },\n\t                onHasTask: function (delegate, current, target, hasTaskState) {\n\t                    delegate.hasTask(target, hasTaskState);\n\t                    if (current === target) {\n\t                        // We are only interested in hasTask events which originate from our zone\n\t                        // (A child hasTask event is not interesting to us)\n\t                        if (hasTaskState.change == 'microTask') {\n\t                            _this.setHasMicrotask(hasTaskState.microTask);\n\t                        }\n\t                        else if (hasTaskState.change == 'macroTask') {\n\t                            _this.setHasMacrotask(hasTaskState.macroTask);\n\t                        }\n\t                    }\n\t                },\n\t                onHandleError: function (delegate, current, target, error) {\n\t                    delegate.handleError(target, error);\n\t                    _this.triggerError(error);\n\t                    return false;\n\t                }\n\t            });\n\t        };\n\t        NgZone.prototype.onEnter = function () {\n\t            this._nesting++;\n\t            if (this._isStable) {\n\t                this._isStable = false;\n\t                this._onUnstable.emit(null);\n\t            }\n\t        };\n\t        NgZone.prototype.onLeave = function () {\n\t            this._nesting--;\n\t            this.checkStable();\n\t        };\n\t        NgZone.prototype.setHasMicrotask = function (hasMicrotasks) {\n\t            this._hasPendingMicrotasks = hasMicrotasks;\n\t            this.checkStable();\n\t        };\n\t        NgZone.prototype.setHasMacrotask = function (hasMacrotasks) { this._hasPendingMacrotasks = hasMacrotasks; };\n\t        NgZone.prototype.triggerError = function (error) { this._onErrorEvents.emit(error); };\n\t        return NgZone;\n\t    }());\n\t\n\t    /**\n\t     * The Testability service provides testing hooks that can be accessed from\n\t     * the browser and by services such as Protractor. Each bootstrapped Angular\n\t     * application on the page will have an instance of Testability.\n\t     * @experimental\n\t     */\n\t    var Testability = (function () {\n\t        function Testability(_ngZone) {\n\t            this._ngZone = _ngZone;\n\t            /** @internal */\n\t            this._pendingCount = 0;\n\t            /** @internal */\n\t            this._isZoneStable = true;\n\t            /**\n\t             * Whether any work was done since the last 'whenStable' callback. This is\n\t             * useful to detect if this could have potentially destabilized another\n\t             * component while it is stabilizing.\n\t             * @internal\n\t             */\n\t            this._didWork = false;\n\t            /** @internal */\n\t            this._callbacks = [];\n\t            this._watchAngularEvents();\n\t        }\n\t        /** @internal */\n\t        Testability.prototype._watchAngularEvents = function () {\n\t            var _this = this;\n\t            this._ngZone.onUnstable.subscribe({\n\t                next: function () {\n\t                    _this._didWork = true;\n\t                    _this._isZoneStable = false;\n\t                }\n\t            });\n\t            this._ngZone.runOutsideAngular(function () {\n\t                _this._ngZone.onStable.subscribe({\n\t                    next: function () {\n\t                        NgZone.assertNotInAngularZone();\n\t                        scheduleMicroTask(function () {\n\t                            _this._isZoneStable = true;\n\t                            _this._runCallbacksIfReady();\n\t                        });\n\t                    }\n\t                });\n\t            });\n\t        };\n\t        Testability.prototype.increasePendingRequestCount = function () {\n\t            this._pendingCount += 1;\n\t            this._didWork = true;\n\t            return this._pendingCount;\n\t        };\n\t        Testability.prototype.decreasePendingRequestCount = function () {\n\t            this._pendingCount -= 1;\n\t            if (this._pendingCount < 0) {\n\t                throw new Error('pending async requests below zero');\n\t            }\n\t            this._runCallbacksIfReady();\n\t            return this._pendingCount;\n\t        };\n\t        Testability.prototype.isStable = function () {\n\t            return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n\t        };\n\t        /** @internal */\n\t        Testability.prototype._runCallbacksIfReady = function () {\n\t            var _this = this;\n\t            if (this.isStable()) {\n\t                // Schedules the call backs in a new frame so that it is always async.\n\t                scheduleMicroTask(function () {\n\t                    while (_this._callbacks.length !== 0) {\n\t                        (_this._callbacks.pop())(_this._didWork);\n\t                    }\n\t                    _this._didWork = false;\n\t                });\n\t            }\n\t            else {\n\t                // Not Ready\n\t                this._didWork = true;\n\t            }\n\t        };\n\t        Testability.prototype.whenStable = function (callback) {\n\t            this._callbacks.push(callback);\n\t            this._runCallbacksIfReady();\n\t        };\n\t        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n\t        /** @deprecated use findProviders */\n\t        Testability.prototype.findBindings = function (using, provider, exactMatch) {\n\t            // TODO(juliemr): implement.\n\t            return [];\n\t        };\n\t        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n\t            // TODO(juliemr): implement.\n\t            return [];\n\t        };\n\t        Testability.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Testability.ctorParameters = [\n\t            { type: NgZone, },\n\t        ];\n\t        return Testability;\n\t    }());\n\t    /**\n\t     * A global registry of {@link Testability} instances for specific elements.\n\t     * @experimental\n\t     */\n\t    var TestabilityRegistry = (function () {\n\t        function TestabilityRegistry() {\n\t            /** @internal */\n\t            this._applications = new Map();\n\t            _testabilityGetter.addToWindow(this);\n\t        }\n\t        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n\t            this._applications.set(token, testability);\n\t        };\n\t        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem); };\n\t        TestabilityRegistry.prototype.getAllTestabilities = function () { return MapWrapper.values(this._applications); };\n\t        TestabilityRegistry.prototype.getAllRootElements = function () { return MapWrapper.keys(this._applications); };\n\t        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n\t            if (findInAncestors === void 0) { findInAncestors = true; }\n\t            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n\t        };\n\t        TestabilityRegistry.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        TestabilityRegistry.ctorParameters = [];\n\t        return TestabilityRegistry;\n\t    }());\n\t    var _NoopGetTestability = (function () {\n\t        function _NoopGetTestability() {\n\t        }\n\t        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n\t        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n\t            return null;\n\t        };\n\t        return _NoopGetTestability;\n\t    }());\n\t    /**\n\t     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n\t     * @experimental\n\t     */\n\t    function setTestabilityGetter(getter) {\n\t        _testabilityGetter = getter;\n\t    }\n\t    var _testabilityGetter = new _NoopGetTestability();\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var _devMode = true;\n\t    var _runModeLocked = false;\n\t    var _platform;\n\t    /**\n\t     * Disable Angular's development mode, which turns off assertions and other\n\t     * checks within the framework.\n\t     *\n\t     * One important assertion this disables verifies that a change detection pass\n\t     * does not result in additional changes to any bindings (also known as\n\t     * unidirectional data flow).\n\t     *\n\t     * @stable\n\t     */\n\t    function enableProdMode() {\n\t        if (_runModeLocked) {\n\t            throw new Error('Cannot enable prod mode after platform setup.');\n\t        }\n\t        _devMode = false;\n\t    }\n\t    /**\n\t     * Returns whether Angular is in development mode. After called once,\n\t     * the value is locked and won't change any more.\n\t     *\n\t     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function isDevMode() {\n\t        _runModeLocked = true;\n\t        return _devMode;\n\t    }\n\t    /**\n\t     * Creates a platform.\n\t     * Platforms have to be eagerly created via this function.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function createPlatform(injector) {\n\t        if (_platform && !_platform.destroyed) {\n\t            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n\t        }\n\t        _platform = injector.get(PlatformRef);\n\t        var inits = injector.get(PLATFORM_INITIALIZER, null);\n\t        if (inits)\n\t            inits.forEach(function (init) { return init(); });\n\t        return _platform;\n\t    }\n\t    /**\n\t     * Creates a factory for a platform\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function createPlatformFactory(parentPlaformFactory, name, providers) {\n\t        if (providers === void 0) { providers = []; }\n\t        var marker = new OpaqueToken(\"Platform: \" + name);\n\t        return function (extraProviders) {\n\t            if (extraProviders === void 0) { extraProviders = []; }\n\t            if (!getPlatform()) {\n\t                if (parentPlaformFactory) {\n\t                    parentPlaformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n\t                }\n\t                else {\n\t                    createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n\t                }\n\t            }\n\t            return assertPlatform(marker);\n\t        };\n\t    }\n\t    /**\n\t     * Checks that there currently is a platform\n\t     * which contains the given token as a provider.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function assertPlatform(requiredToken) {\n\t        var platform = getPlatform();\n\t        if (!platform) {\n\t            throw new Error('No platform exists!');\n\t        }\n\t        if (!platform.injector.get(requiredToken, null)) {\n\t            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n\t        }\n\t        return platform;\n\t    }\n\t    /**\n\t     * Destroy the existing platform.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function destroyPlatform() {\n\t        if (_platform && !_platform.destroyed) {\n\t            _platform.destroy();\n\t        }\n\t    }\n\t    /**\n\t     * Returns the current platform.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function getPlatform() {\n\t        return _platform && !_platform.destroyed ? _platform : null;\n\t    }\n\t    /**\n\t     * The Angular platform is the entry point for Angular on a web page. Each page\n\t     * has exactly one platform, and services (such as reflection) which are common\n\t     * to every Angular application running on the page are bound in its scope.\n\t     *\n\t     * A page's platform is initialized implicitly when {@link bootstrap}() is called, or\n\t     * explicitly by calling {@link createPlatform}().\n\t     *\n\t     * @stable\n\t     */\n\t    var PlatformRef = (function () {\n\t        function PlatformRef() {\n\t        }\n\t        /**\n\t         * Creates an instance of an `@NgModule` for the given platform\n\t         * for offline compilation.\n\t         *\n\t         * ## Simple Example\n\t         *\n\t         * ```typescript\n\t         * my_module.ts:\n\t         *\n\t         * @NgModule({\n\t         *   imports: [BrowserModule]\n\t         * })\n\t         * class MyModule {}\n\t         *\n\t         * main.ts:\n\t         * import {MyModuleNgFactory} from './my_module.ngfactory';\n\t         * import {platformBrowser} from '@angular/platform-browser';\n\t         *\n\t         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n\t         * ```\n\t         *\n\t         * @experimental APIs related to application bootstrap are currently under review.\n\t         */\n\t        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) {\n\t            throw unimplemented();\n\t        };\n\t        /**\n\t         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n\t         *\n\t         * ## Simple Example\n\t         *\n\t         * ```typescript\n\t         * @NgModule({\n\t         *   imports: [BrowserModule]\n\t         * })\n\t         * class MyModule {}\n\t         *\n\t         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n\t         * ```\n\t         * @stable\n\t         */\n\t        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            throw unimplemented();\n\t        };\n\t        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n\t            /**\n\t             * Retrieve the platform {@link Injector}, which is the parent injector for\n\t             * every Angular application on the page and provides singleton providers.\n\t             */\n\t            get: function () { throw unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n\t            get: function () { throw unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return PlatformRef;\n\t    }());\n\t    function _callAndReportToErrorHandler(errorHandler, callback) {\n\t        try {\n\t            var result = callback();\n\t            if (isPromise(result)) {\n\t                return result.catch(function (e) {\n\t                    errorHandler.handleError(e);\n\t                    // rethrow as the exception handler might not do it\n\t                    throw e;\n\t                });\n\t            }\n\t            return result;\n\t        }\n\t        catch (e) {\n\t            errorHandler.handleError(e);\n\t            // rethrow as the exception handler might not do it\n\t            throw e;\n\t        }\n\t    }\n\t    var PlatformRef_ = (function (_super) {\n\t        __extends$3(PlatformRef_, _super);\n\t        function PlatformRef_(_injector) {\n\t            _super.call(this);\n\t            this._injector = _injector;\n\t            this._modules = [];\n\t            this._destroyListeners = [];\n\t            this._destroyed = false;\n\t        }\n\t        PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n\t        Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n\t            get: function () { return this._injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n\t            get: function () { return this._destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        PlatformRef_.prototype.destroy = function () {\n\t            if (this._destroyed) {\n\t                throw new Error('The platform has already been destroyed!');\n\t            }\n\t            this._modules.slice().forEach(function (module) { return module.destroy(); });\n\t            this._destroyListeners.forEach(function (listener) { return listener(); });\n\t            this._destroyed = true;\n\t        };\n\t        PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n\t            return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n\t        };\n\t        PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n\t            var _this = this;\n\t            // Note: We need to create the NgZone _before_ we instantiate the module,\n\t            // as instantiating the module creates some providers eagerly.\n\t            // So we create a mini parent injector that just contains the new NgZone and\n\t            // pass that as parent to the NgModuleFactory.\n\t            if (!ngZone)\n\t                ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n\t            // Attention: Don't use ApplicationRef.run here,\n\t            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n\t            return ngZone.run(function () {\n\t                var ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], _this.injector);\n\t                var moduleRef = moduleFactory.create(ngZoneInjector);\n\t                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n\t                if (!exceptionHandler) {\n\t                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n\t                }\n\t                moduleRef.onDestroy(function () { return ListWrapper.remove(_this._modules, moduleRef); });\n\t                ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n\t                return _callAndReportToErrorHandler(exceptionHandler, function () {\n\t                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n\t                    return initStatus.donePromise.then(function () {\n\t                        _this._moduleDoBootstrap(moduleRef);\n\t                        return moduleRef;\n\t                    });\n\t                });\n\t            });\n\t        };\n\t        PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n\t        };\n\t        PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone, componentFactoryCallback) {\n\t            var _this = this;\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            var compilerFactory = this.injector.get(CompilerFactory);\n\t            var compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n\t            // ugly internal api hack: generate host component factories for all declared components and\n\t            // pass the factories into the callback - this is used by UpdateAdapter to get hold of all\n\t            // factories.\n\t            if (componentFactoryCallback) {\n\t                return compiler.compileModuleAndAllComponentsAsync(moduleType)\n\t                    .then(function (_a) {\n\t                    var ngModuleFactory = _a.ngModuleFactory, componentFactories = _a.componentFactories;\n\t                    componentFactoryCallback(componentFactories);\n\t                    return _this._bootstrapModuleFactoryWithZone(ngModuleFactory, ngZone);\n\t                });\n\t            }\n\t            return compiler.compileModuleAsync(moduleType)\n\t                .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n\t        };\n\t        PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n\t            var appRef = moduleRef.injector.get(ApplicationRef);\n\t            if (moduleRef.bootstrapFactories.length > 0) {\n\t                moduleRef.bootstrapFactories.forEach(function (compFactory) { return appRef.bootstrap(compFactory); });\n\t            }\n\t            else if (moduleRef.instance.ngDoBootstrap) {\n\t                moduleRef.instance.ngDoBootstrap(appRef);\n\t            }\n\t            else {\n\t                throw new Error((\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \") +\n\t                    \"Please define one of these.\");\n\t            }\n\t        };\n\t        PlatformRef_.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        PlatformRef_.ctorParameters = [\n\t            { type: Injector, },\n\t        ];\n\t        return PlatformRef_;\n\t    }(PlatformRef));\n\t    /**\n\t     * A reference to an Angular application running on a page.\n\t     *\n\t     * For more about Angular applications, see the documentation for {@link bootstrap}.\n\t     *\n\t     * @stable\n\t     */\n\t    var ApplicationRef = (function () {\n\t        function ApplicationRef() {\n\t        }\n\t        Object.defineProperty(ApplicationRef.prototype, \"componentTypes\", {\n\t            /**\n\t             * Get a list of component types registered to this application.\n\t             * This list is populated even before the component is created.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ApplicationRef.prototype, \"components\", {\n\t            /**\n\t             * Get a list of components registered to this application.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        return ApplicationRef;\n\t    }());\n\t    var ApplicationRef_ = (function (_super) {\n\t        __extends$3(ApplicationRef_, _super);\n\t        function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus, _testabilityRegistry, _testability) {\n\t            var _this = this;\n\t            _super.call(this);\n\t            this._zone = _zone;\n\t            this._console = _console;\n\t            this._injector = _injector;\n\t            this._exceptionHandler = _exceptionHandler;\n\t            this._componentFactoryResolver = _componentFactoryResolver;\n\t            this._initStatus = _initStatus;\n\t            this._testabilityRegistry = _testabilityRegistry;\n\t            this._testability = _testability;\n\t            this._bootstrapListeners = [];\n\t            this._rootComponents = [];\n\t            this._rootComponentTypes = [];\n\t            this._changeDetectorRefs = [];\n\t            this._runningTick = false;\n\t            this._enforceNoNewChanges = false;\n\t            this._enforceNoNewChanges = isDevMode();\n\t            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n\t        }\n\t        ApplicationRef_.prototype.registerChangeDetector = function (changeDetector) {\n\t            this._changeDetectorRefs.push(changeDetector);\n\t        };\n\t        ApplicationRef_.prototype.unregisterChangeDetector = function (changeDetector) {\n\t            ListWrapper.remove(this._changeDetectorRefs, changeDetector);\n\t        };\n\t        ApplicationRef_.prototype.bootstrap = function (componentOrFactory) {\n\t            var _this = this;\n\t            if (!this._initStatus.done) {\n\t                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n\t            }\n\t            var componentFactory;\n\t            if (componentOrFactory instanceof ComponentFactory) {\n\t                componentFactory = componentOrFactory;\n\t            }\n\t            else {\n\t                componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n\t            }\n\t            this._rootComponentTypes.push(componentFactory.componentType);\n\t            var compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n\t            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n\t            var testability = compRef.injector.get(Testability, null);\n\t            if (testability) {\n\t                compRef.injector.get(TestabilityRegistry)\n\t                    .registerApplication(compRef.location.nativeElement, testability);\n\t            }\n\t            this._loadComponent(compRef);\n\t            if (isDevMode()) {\n\t                this._console.log(\"Angular 2 is running in the development mode. Call enableProdMode() to enable the production mode.\");\n\t            }\n\t            return compRef;\n\t        };\n\t        /** @internal */\n\t        ApplicationRef_.prototype._loadComponent = function (componentRef) {\n\t            this._changeDetectorRefs.push(componentRef.changeDetectorRef);\n\t            this.tick();\n\t            this._rootComponents.push(componentRef);\n\t            // Get the listeners lazily to prevent DI cycles.\n\t            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, [])\n\t                .concat(this._bootstrapListeners);\n\t            listeners.forEach(function (listener) { return listener(componentRef); });\n\t        };\n\t        /** @internal */\n\t        ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n\t            if (this._rootComponents.indexOf(componentRef) == -1) {\n\t                return;\n\t            }\n\t            this.unregisterChangeDetector(componentRef.changeDetectorRef);\n\t            ListWrapper.remove(this._rootComponents, componentRef);\n\t        };\n\t        ApplicationRef_.prototype.tick = function () {\n\t            if (this._runningTick) {\n\t                throw new Error('ApplicationRef.tick is called recursively');\n\t            }\n\t            var scope = ApplicationRef_._tickScope();\n\t            try {\n\t                this._runningTick = true;\n\t                this._changeDetectorRefs.forEach(function (detector) { return detector.detectChanges(); });\n\t                if (this._enforceNoNewChanges) {\n\t                    this._changeDetectorRefs.forEach(function (detector) { return detector.checkNoChanges(); });\n\t                }\n\t            }\n\t            finally {\n\t                this._runningTick = false;\n\t                wtfLeave(scope);\n\t            }\n\t        };\n\t        ApplicationRef_.prototype.ngOnDestroy = function () {\n\t            // TODO(alxhub): Dispose of the NgZone.\n\t            this._rootComponents.slice().forEach(function (component) { return component.destroy(); });\n\t        };\n\t        Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n\t            get: function () { return this._rootComponentTypes; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n\t            get: function () { return this._rootComponents; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        ApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\n\t        ApplicationRef_.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationRef_.ctorParameters = [\n\t            { type: NgZone, },\n\t            { type: Console, },\n\t            { type: Injector, },\n\t            { type: ErrorHandler, },\n\t            { type: ComponentFactoryResolver, },\n\t            { type: ApplicationInitStatus, },\n\t            { type: TestabilityRegistry, decorators: [{ type: Optional },] },\n\t            { type: Testability, decorators: [{ type: Optional },] },\n\t        ];\n\t        return ApplicationRef_;\n\t    }(ApplicationRef));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$9 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n\t     *\n\t     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n\t     * NgModule Instance.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgModuleRef = (function () {\n\t        function NgModuleRef() {\n\t        }\n\t        Object.defineProperty(NgModuleRef.prototype, \"injector\", {\n\t            /**\n\t             * The injector that contains all of the providers of the NgModule.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModuleRef.prototype, \"componentFactoryResolver\", {\n\t            /**\n\t             * The ComponentFactoryResolver to get hold of the ComponentFactories\n\t             * declared in the `entryComponents` property of the module.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModuleRef.prototype, \"instance\", {\n\t            /**\n\t             * The NgModule instance.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return NgModuleRef;\n\t    }());\n\t    /**\n\t     * @experimental\n\t     */\n\t    var NgModuleFactory = (function () {\n\t        function NgModuleFactory(_injectorClass, _moduleType) {\n\t            this._injectorClass = _injectorClass;\n\t            this._moduleType = _moduleType;\n\t        }\n\t        Object.defineProperty(NgModuleFactory.prototype, \"moduleType\", {\n\t            get: function () { return this._moduleType; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgModuleFactory.prototype.create = function (parentInjector) {\n\t            if (!parentInjector) {\n\t                parentInjector = Injector.NULL;\n\t            }\n\t            var instance = new this._injectorClass(parentInjector);\n\t            instance.create();\n\t            return instance;\n\t        };\n\t        return NgModuleFactory;\n\t    }());\n\t    var _UNDEFINED = new Object();\n\t    var NgModuleInjector = (function (_super) {\n\t        __extends$9(NgModuleInjector, _super);\n\t        function NgModuleInjector(parent, factories, bootstrapFactories) {\n\t            _super.call(this, factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL));\n\t            this.parent = parent;\n\t            this.bootstrapFactories = bootstrapFactories;\n\t            this._destroyListeners = [];\n\t            this._destroyed = false;\n\t        }\n\t        NgModuleInjector.prototype.create = function () { this.instance = this.createInternal(); };\n\t        NgModuleInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            if (token === Injector || token === ComponentFactoryResolver) {\n\t                return this;\n\t            }\n\t            var result = this.getInternal(token, _UNDEFINED);\n\t            return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n\t        };\n\t        Object.defineProperty(NgModuleInjector.prototype, \"injector\", {\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModuleInjector.prototype, \"componentFactoryResolver\", {\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgModuleInjector.prototype.destroy = function () {\n\t            if (this._destroyed) {\n\t                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n\t            }\n\t            this._destroyed = true;\n\t            this.destroyInternal();\n\t            this._destroyListeners.forEach(function (listener) { return listener(); });\n\t        };\n\t        NgModuleInjector.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n\t        return NgModuleInjector;\n\t    }(CodegenComponentFactoryResolver));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Used to load ng module factories.\n\t     * @stable\n\t     */\n\t    var NgModuleFactoryLoader = (function () {\n\t        function NgModuleFactoryLoader() {\n\t        }\n\t        return NgModuleFactoryLoader;\n\t    }());\n\t    var moduleFactories = new Map();\n\t    /**\n\t     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n\t     * @experimental\n\t     */\n\t    function registerModuleFactory(id, factory) {\n\t        var existing = moduleFactories.get(id);\n\t        if (existing) {\n\t            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n\t        }\n\t        moduleFactories.set(id, factory);\n\t    }\n\t    /**\n\t     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n\t     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n\t     * cannot be found.\n\t     * @experimental\n\t     */\n\t    function getModuleFactory(id) {\n\t        var factory = moduleFactories.get(id);\n\t        if (!factory)\n\t            throw new Error(\"No module with ID \" + id + \" loaded\");\n\t        return factory;\n\t    }\n\t\n\t    /**\n\t     * An unmodifiable list of items that Angular keeps up to date when the state\n\t     * of the application changes.\n\t     *\n\t     * The type of object that {@link Query} and {@link ViewQueryMetadata} provide.\n\t     *\n\t     * Implements an iterable interface, therefore it can be used in both ES6\n\t     * javascript `for (var i of items)` loops as well as in Angular templates with\n\t     * `*ngFor=\"let i of myList\"`.\n\t     *\n\t     * Changes can be observed by subscribing to the changes `Observable`.\n\t     *\n\t     * NOTE: In the future this class will implement an `Observable` interface.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n\t     * ```typescript\n\t     * @Component({...})\n\t     * class Container {\n\t     *   @ViewChildren(Item) items:QueryList<Item>;\n\t     * }\n\t     * ```\n\t     * @stable\n\t     */\n\t    var QueryList = (function () {\n\t        function QueryList() {\n\t            this._dirty = true;\n\t            this._results = [];\n\t            this._emitter = new EventEmitter();\n\t        }\n\t        Object.defineProperty(QueryList.prototype, \"changes\", {\n\t            get: function () { return this._emitter; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"length\", {\n\t            get: function () { return this._results.length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"first\", {\n\t            get: function () { return this._results[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"last\", {\n\t            get: function () { return this._results[this.length - 1]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * See\n\t         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n\t         */\n\t        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n\t        /**\n\t         * See\n\t         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n\t         */\n\t        QueryList.prototype.filter = function (fn) {\n\t            return this._results.filter(fn);\n\t        };\n\t        /**\n\t         * See\n\t         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n\t         */\n\t        QueryList.prototype.reduce = function (fn, init) {\n\t            return this._results.reduce(fn, init);\n\t        };\n\t        /**\n\t         * See\n\t         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n\t         */\n\t        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n\t        /**\n\t         * See\n\t         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n\t         */\n\t        QueryList.prototype.some = function (fn) {\n\t            return this._results.some(fn);\n\t        };\n\t        QueryList.prototype.toArray = function () { return this._results.slice(); };\n\t        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n\t        QueryList.prototype.toString = function () { return this._results.toString(); };\n\t        QueryList.prototype.reset = function (res) {\n\t            this._results = ListWrapper.flatten(res);\n\t            this._dirty = false;\n\t        };\n\t        QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n\t        /** internal */\n\t        QueryList.prototype.setDirty = function () { this._dirty = true; };\n\t        Object.defineProperty(QueryList.prototype, \"dirty\", {\n\t            /** internal */\n\t            get: function () { return this._dirty; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return QueryList;\n\t    }());\n\t\n\t    var _SEPARATOR = '#';\n\t    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n\t    /**\n\t     * Configuration for SystemJsNgModuleLoader.\n\t     * token.\n\t     *\n\t     * @experimental\n\t     */\n\t    var SystemJsNgModuleLoaderConfig = (function () {\n\t        function SystemJsNgModuleLoaderConfig() {\n\t        }\n\t        return SystemJsNgModuleLoaderConfig;\n\t    }());\n\t    var DEFAULT_CONFIG = {\n\t        factoryPathPrefix: '',\n\t        factoryPathSuffix: '.ngfactory',\n\t    };\n\t    /**\n\t     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n\t     * @experimental\n\t     */\n\t    var SystemJsNgModuleLoader = (function () {\n\t        function SystemJsNgModuleLoader(_compiler, config) {\n\t            this._compiler = _compiler;\n\t            this._config = config || DEFAULT_CONFIG;\n\t        }\n\t        SystemJsNgModuleLoader.prototype.load = function (path) {\n\t            var offlineMode = this._compiler instanceof Compiler;\n\t            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n\t        };\n\t        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n\t            var _this = this;\n\t            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n\t            if (exportName === undefined)\n\t                exportName = 'default';\n\t            return System.import(module)\n\t                .then(function (module) { return module[exportName]; })\n\t                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n\t                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n\t        };\n\t        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n\t            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n\t            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n\t            if (exportName === undefined) {\n\t                exportName = 'default';\n\t                factoryClassSuffix = '';\n\t            }\n\t            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n\t                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n\t                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n\t        };\n\t        SystemJsNgModuleLoader.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        SystemJsNgModuleLoader.ctorParameters = [\n\t            { type: Compiler, },\n\t            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n\t        ];\n\t        return SystemJsNgModuleLoader;\n\t    }());\n\t    function checkNotEmpty(value, modulePath, exportName) {\n\t        if (!value) {\n\t            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n\t        }\n\t        return value;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$10 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n\t     *\n\t     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<template>` element (or\n\t     * directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into the\n\t     * constructor of the directive using the `TemplateRef` Token. Alternatively you can query for the\n\t     * `TemplateRef` from a Component or a Directive via {@link Query}.\n\t     *\n\t     * To instantiate Embedded Views based on a Template, use\n\t     * {@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n\t     * View Container.\n\t     * @stable\n\t     */\n\t    var TemplateRef = (function () {\n\t        function TemplateRef() {\n\t        }\n\t        Object.defineProperty(TemplateRef.prototype, \"elementRef\", {\n\t            /**\n\t             * The location in the View where the Embedded View logically belongs to.\n\t             *\n\t             * The data-binding and injection contexts of Embedded Views created from this `TemplateRef`\n\t             * inherit from the contexts of this location.\n\t             *\n\t             * Typically new Embedded Views are attached to the View Container of this location, but in\n\t             * advanced use-cases, the View can be attached to a different container while keeping the\n\t             * data-binding and injection context from the original location.\n\t             *\n\t             */\n\t            // TODO(i): rename to anchor or location\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return TemplateRef;\n\t    }());\n\t    var TemplateRef_ = (function (_super) {\n\t        __extends$10(TemplateRef_, _super);\n\t        function TemplateRef_(_appElement, _viewFactory) {\n\t            _super.call(this);\n\t            this._appElement = _appElement;\n\t            this._viewFactory = _viewFactory;\n\t        }\n\t        TemplateRef_.prototype.createEmbeddedView = function (context) {\n\t            var view = this._viewFactory(this._appElement.parentView.viewUtils, this._appElement.parentInjector, this._appElement);\n\t            view.create(context || {}, null, null);\n\t            return view.ref;\n\t        };\n\t        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n\t            get: function () { return this._appElement.elementRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return TemplateRef_;\n\t    }(TemplateRef));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var _queuedAnimations = [];\n\t    /** @internal */\n\t    function queueAnimationGlobally(player) {\n\t        _queuedAnimations.push(player);\n\t    }\n\t    /** @internal */\n\t    function triggerQueuedAnimations() {\n\t        for (var i = 0; i < _queuedAnimations.length; i++) {\n\t            var player = _queuedAnimations[i];\n\t            player.play();\n\t        }\n\t        _queuedAnimations = [];\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$11 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @stable\n\t     */\n\t    var ViewRef = (function () {\n\t        function ViewRef() {\n\t        }\n\t        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ViewRef;\n\t    }());\n\t    /**\n\t     * Represents an Angular View.\n\t     *\n\t     * <!-- TODO: move the next two paragraphs to the dev guide -->\n\t     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n\t     * Elements which are created and destroyed together.\n\t     *\n\t     * Properties of elements in a View can change, but the structure (number and order) of elements in\n\t     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n\t     * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n\t     * <!-- /TODO -->\n\t     *\n\t     * ### Example\n\t     *\n\t     * Given this template...\n\t     *\n\t     * ```\n\t     * Count: {{items.length}}\n\t     * <ul>\n\t     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n\t     * </ul>\n\t     * ```\n\t     *\n\t     * We have two {@link TemplateRef}s:\n\t     *\n\t     * Outer {@link TemplateRef}:\n\t     * ```\n\t     * Count: {{items.length}}\n\t     * <ul>\n\t     *   <template ngFor let-item [ngForOf]=\"items\"></template>\n\t     * </ul>\n\t     * ```\n\t     *\n\t     * Inner {@link TemplateRef}:\n\t     * ```\n\t     *   <li>{{item}}</li>\n\t     * ```\n\t     *\n\t     * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n\t     *\n\t     * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n\t     *\n\t     * ```\n\t     * <!-- ViewRef: outer-0 -->\n\t     * Count: 2\n\t     * <ul>\n\t     *   <template view-container-ref></template>\n\t     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n\t     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n\t     * </ul>\n\t     * <!-- /ViewRef: outer-0 -->\n\t     * ```\n\t     * @experimental\n\t     */\n\t    var EmbeddedViewRef = (function (_super) {\n\t        __extends$11(EmbeddedViewRef, _super);\n\t        function EmbeddedViewRef() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        Object.defineProperty(EmbeddedViewRef.prototype, \"context\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(EmbeddedViewRef.prototype, \"rootNodes\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        return EmbeddedViewRef;\n\t    }(ViewRef));\n\t    var ViewRef_ = (function () {\n\t        function ViewRef_(_view) {\n\t            this._view = _view;\n\t            this._view = _view;\n\t            this._originalMode = this._view.cdMode;\n\t        }\n\t        Object.defineProperty(ViewRef_.prototype, \"internalView\", {\n\t            get: function () { return this._view; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n\t            get: function () { return this._view.flatRootNodes; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"context\", {\n\t            get: function () { return this._view.context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n\t            get: function () { return this._view.destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ViewRef_.prototype.markForCheck = function () { this._view.markPathToRootAsCheckOnce(); };\n\t        ViewRef_.prototype.detach = function () { this._view.cdMode = ChangeDetectorStatus.Detached; };\n\t        ViewRef_.prototype.detectChanges = function () {\n\t            this._view.detectChanges(false);\n\t            triggerQueuedAnimations();\n\t        };\n\t        ViewRef_.prototype.checkNoChanges = function () { this._view.detectChanges(true); };\n\t        ViewRef_.prototype.reattach = function () {\n\t            this._view.cdMode = this._originalMode;\n\t            this.markForCheck();\n\t        };\n\t        ViewRef_.prototype.onDestroy = function (callback) { this._view.disposables.push(callback); };\n\t        ViewRef_.prototype.destroy = function () { this._view.destroy(); };\n\t        return ViewRef_;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$12 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var EventListener = (function () {\n\t        function EventListener(name, callback) {\n\t            this.name = name;\n\t            this.callback = callback;\n\t        }\n\t        ;\n\t        return EventListener;\n\t    }());\n\t    /**\n\t     * @experimental All debugging apis are currently experimental.\n\t     */\n\t    var DebugNode = (function () {\n\t        function DebugNode(nativeNode, parent, _debugInfo) {\n\t            this._debugInfo = _debugInfo;\n\t            this.nativeNode = nativeNode;\n\t            if (isPresent(parent) && parent instanceof DebugElement) {\n\t                parent.addChild(this);\n\t            }\n\t            else {\n\t                this.parent = null;\n\t            }\n\t            this.listeners = [];\n\t        }\n\t        Object.defineProperty(DebugNode.prototype, \"injector\", {\n\t            get: function () { return isPresent(this._debugInfo) ? this._debugInfo.injector : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n\t            get: function () {\n\t                return isPresent(this._debugInfo) ? this._debugInfo.component : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"context\", {\n\t            get: function () { return isPresent(this._debugInfo) ? this._debugInfo.context : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"references\", {\n\t            get: function () {\n\t                return isPresent(this._debugInfo) ? this._debugInfo.references : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n\t            get: function () {\n\t                return isPresent(this._debugInfo) ? this._debugInfo.providerTokens : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"source\", {\n\t            get: function () { return isPresent(this._debugInfo) ? this._debugInfo.source : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return DebugNode;\n\t    }());\n\t    /**\n\t     * @experimental All debugging apis are currently experimental.\n\t     */\n\t    var DebugElement = (function (_super) {\n\t        __extends$12(DebugElement, _super);\n\t        function DebugElement(nativeNode, parent, _debugInfo) {\n\t            _super.call(this, nativeNode, parent, _debugInfo);\n\t            this.properties = {};\n\t            this.attributes = {};\n\t            this.classes = {};\n\t            this.styles = {};\n\t            this.childNodes = [];\n\t            this.nativeElement = nativeNode;\n\t        }\n\t        DebugElement.prototype.addChild = function (child) {\n\t            if (isPresent(child)) {\n\t                this.childNodes.push(child);\n\t                child.parent = this;\n\t            }\n\t        };\n\t        DebugElement.prototype.removeChild = function (child) {\n\t            var childIndex = this.childNodes.indexOf(child);\n\t            if (childIndex !== -1) {\n\t                child.parent = null;\n\t                this.childNodes.splice(childIndex, 1);\n\t            }\n\t        };\n\t        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n\t            var siblingIndex = this.childNodes.indexOf(child);\n\t            if (siblingIndex !== -1) {\n\t                var previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n\t                var nextChildren = this.childNodes.slice(siblingIndex + 1);\n\t                this.childNodes = previousChildren.concat(newChildren, nextChildren);\n\t                for (var i = 0; i < newChildren.length; ++i) {\n\t                    var newChild = newChildren[i];\n\t                    if (isPresent(newChild.parent)) {\n\t                        newChild.parent.removeChild(newChild);\n\t                    }\n\t                    newChild.parent = this;\n\t                }\n\t            }\n\t        };\n\t        DebugElement.prototype.query = function (predicate) {\n\t            var results = this.queryAll(predicate);\n\t            return results.length > 0 ? results[0] : null;\n\t        };\n\t        DebugElement.prototype.queryAll = function (predicate) {\n\t            var matches = [];\n\t            _queryElementChildren(this, predicate, matches);\n\t            return matches;\n\t        };\n\t        DebugElement.prototype.queryAllNodes = function (predicate) {\n\t            var matches = [];\n\t            _queryNodeChildren(this, predicate, matches);\n\t            return matches;\n\t        };\n\t        Object.defineProperty(DebugElement.prototype, \"children\", {\n\t            get: function () {\n\t                var children = [];\n\t                this.childNodes.forEach(function (node) {\n\t                    if (node instanceof DebugElement) {\n\t                        children.push(node);\n\t                    }\n\t                });\n\t                return children;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n\t            this.listeners.forEach(function (listener) {\n\t                if (listener.name == eventName) {\n\t                    listener.callback(eventObj);\n\t                }\n\t            });\n\t        };\n\t        return DebugElement;\n\t    }(DebugNode));\n\t    /**\n\t     * @experimental\n\t     */\n\t    function asNativeElements(debugEls) {\n\t        return debugEls.map(function (el) { return el.nativeElement; });\n\t    }\n\t    function _queryElementChildren(element, predicate, matches) {\n\t        element.childNodes.forEach(function (node) {\n\t            if (node instanceof DebugElement) {\n\t                if (predicate(node)) {\n\t                    matches.push(node);\n\t                }\n\t                _queryElementChildren(node, predicate, matches);\n\t            }\n\t        });\n\t    }\n\t    function _queryNodeChildren(parentNode, predicate, matches) {\n\t        if (parentNode instanceof DebugElement) {\n\t            parentNode.childNodes.forEach(function (node) {\n\t                if (predicate(node)) {\n\t                    matches.push(node);\n\t                }\n\t                if (node instanceof DebugElement) {\n\t                    _queryNodeChildren(node, predicate, matches);\n\t                }\n\t            });\n\t        }\n\t    }\n\t    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n\t    var _nativeNodeToDebugNode = new Map();\n\t    /**\n\t     * @experimental\n\t     */\n\t    function getDebugNode(nativeNode) {\n\t        return _nativeNodeToDebugNode.get(nativeNode);\n\t    }\n\t    function indexDebugNode(node) {\n\t        _nativeNodeToDebugNode.set(node.nativeNode, node);\n\t    }\n\t    function removeDebugNodeFromIndex(node) {\n\t        _nativeNodeToDebugNode.delete(node.nativeNode);\n\t    }\n\t\n\t    function _reflector() {\n\t        return reflector;\n\t    }\n\t    var _CORE_PLATFORM_PROVIDERS = [\n\t        PlatformRef_,\n\t        { provide: PlatformRef, useExisting: PlatformRef_ },\n\t        { provide: Reflector, useFactory: _reflector, deps: [] },\n\t        { provide: ReflectorReader, useExisting: Reflector },\n\t        TestabilityRegistry,\n\t        Console,\n\t    ];\n\t    /**\n\t     * This platform has to be included in any other platform\n\t     *\n\t     * @experimental\n\t     */\n\t    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\t\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var LOCALE_ID = new OpaqueToken('LocaleId');\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var TRANSLATIONS = new OpaqueToken('Translations');\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var TRANSLATIONS_FORMAT = new OpaqueToken('TranslationsFormat');\n\t\n\t    function _iterableDiffersFactory() {\n\t        return defaultIterableDiffers;\n\t    }\n\t    function _keyValueDiffersFactory() {\n\t        return defaultKeyValueDiffers;\n\t    }\n\t    /**\n\t     * This module includes the providers of @angular/core that are needed\n\t     * to bootstrap components via `ApplicationRef`.\n\t     *\n\t     * @experimental\n\t     */\n\t    var ApplicationModule = (function () {\n\t        function ApplicationModule() {\n\t        }\n\t        ApplicationModule.decorators = [\n\t            { type: NgModule, args: [{\n\t                        providers: [\n\t                            ApplicationRef_,\n\t                            { provide: ApplicationRef, useExisting: ApplicationRef_ },\n\t                            ApplicationInitStatus,\n\t                            Compiler,\n\t                            APP_ID_RANDOM_PROVIDER,\n\t                            ViewUtils,\n\t                            { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n\t                            { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n\t                            { provide: LOCALE_ID, useValue: 'en-US' },\n\t                        ]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationModule.ctorParameters = [];\n\t        return ApplicationModule;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var FILL_STYLE_FLAG = 'true'; // TODO (matsko): change to boolean\n\t    var ANY_STATE = '*';\n\t    var DEFAULT_STATE = '*';\n\t    var EMPTY_STATE = 'void';\n\t\n\t    var AnimationGroupPlayer = (function () {\n\t        function AnimationGroupPlayer(_players) {\n\t            var _this = this;\n\t            this._players = _players;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._finished = false;\n\t            this._started = false;\n\t            this.parentPlayer = null;\n\t            var count = 0;\n\t            var total = this._players.length;\n\t            if (total == 0) {\n\t                scheduleMicroTask(function () { return _this._onFinish(); });\n\t            }\n\t            else {\n\t                this._players.forEach(function (player) {\n\t                    player.parentPlayer = _this;\n\t                    player.onDone(function () {\n\t                        if (++count >= total) {\n\t                            _this._onFinish();\n\t                        }\n\t                    });\n\t                });\n\t            }\n\t        }\n\t        AnimationGroupPlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                if (!isPresent(this.parentPlayer)) {\n\t                    this.destroy();\n\t                }\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n\t        AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n\t        AnimationGroupPlayer.prototype.play = function () {\n\t            if (!isPresent(this.parentPlayer)) {\n\t                this.init();\n\t            }\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._players.forEach(function (player) { return player.play(); });\n\t        };\n\t        AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n\t        AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n\t        AnimationGroupPlayer.prototype.finish = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.finish(); });\n\t        };\n\t        AnimationGroupPlayer.prototype.destroy = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.destroy(); });\n\t        };\n\t        AnimationGroupPlayer.prototype.reset = function () { this._players.forEach(function (player) { return player.reset(); }); };\n\t        AnimationGroupPlayer.prototype.setPosition = function (p /** TODO #9100 */) {\n\t            this._players.forEach(function (player) { player.setPosition(p); });\n\t        };\n\t        AnimationGroupPlayer.prototype.getPosition = function () {\n\t            var min = 0;\n\t            this._players.forEach(function (player) {\n\t                var p = player.getPosition();\n\t                min = Math.min(p, min);\n\t            });\n\t            return min;\n\t        };\n\t        return AnimationGroupPlayer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var AnimationKeyframe = (function () {\n\t        function AnimationKeyframe(offset, styles) {\n\t            this.offset = offset;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationKeyframe;\n\t    }());\n\t\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationPlayer = (function () {\n\t        function AnimationPlayer() {\n\t        }\n\t        Object.defineProperty(AnimationPlayer.prototype, \"parentPlayer\", {\n\t            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            set: function (player) { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationPlayer;\n\t    }());\n\t    var NoOpAnimationPlayer = (function () {\n\t        function NoOpAnimationPlayer() {\n\t            var _this = this;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._started = false;\n\t            this.parentPlayer = null;\n\t            scheduleMicroTask(function () { return _this._onFinish(); });\n\t        }\n\t        /** @internal */\n\t        NoOpAnimationPlayer.prototype._onFinish = function () {\n\t            this._onDoneFns.forEach(function (fn) { return fn(); });\n\t            this._onDoneFns = [];\n\t        };\n\t        NoOpAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        NoOpAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        NoOpAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n\t        NoOpAnimationPlayer.prototype.init = function () { };\n\t        NoOpAnimationPlayer.prototype.play = function () {\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t            }\n\t            this._started = true;\n\t        };\n\t        NoOpAnimationPlayer.prototype.pause = function () { };\n\t        NoOpAnimationPlayer.prototype.restart = function () { };\n\t        NoOpAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n\t        NoOpAnimationPlayer.prototype.destroy = function () { };\n\t        NoOpAnimationPlayer.prototype.reset = function () { };\n\t        NoOpAnimationPlayer.prototype.setPosition = function (p /** TODO #9100 */) { };\n\t        NoOpAnimationPlayer.prototype.getPosition = function () { return 0; };\n\t        return NoOpAnimationPlayer;\n\t    }());\n\t\n\t    var AnimationSequencePlayer = (function () {\n\t        function AnimationSequencePlayer(_players) {\n\t            var _this = this;\n\t            this._players = _players;\n\t            this._currentIndex = 0;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._finished = false;\n\t            this._started = false;\n\t            this.parentPlayer = null;\n\t            this._players.forEach(function (player) { player.parentPlayer = _this; });\n\t            this._onNext(false);\n\t        }\n\t        AnimationSequencePlayer.prototype._onNext = function (start) {\n\t            var _this = this;\n\t            if (this._finished)\n\t                return;\n\t            if (this._players.length == 0) {\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t                scheduleMicroTask(function () { return _this._onFinish(); });\n\t            }\n\t            else if (this._currentIndex >= this._players.length) {\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t                this._onFinish();\n\t            }\n\t            else {\n\t                var player = this._players[this._currentIndex++];\n\t                player.onDone(function () { return _this._onNext(true); });\n\t                this._activePlayer = player;\n\t                if (start) {\n\t                    player.play();\n\t                }\n\t            }\n\t        };\n\t        AnimationSequencePlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                if (!isPresent(this.parentPlayer)) {\n\t                    this.destroy();\n\t                }\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        AnimationSequencePlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n\t        AnimationSequencePlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        AnimationSequencePlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        AnimationSequencePlayer.prototype.hasStarted = function () { return this._started; };\n\t        AnimationSequencePlayer.prototype.play = function () {\n\t            if (!isPresent(this.parentPlayer)) {\n\t                this.init();\n\t            }\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._activePlayer.play();\n\t        };\n\t        AnimationSequencePlayer.prototype.pause = function () { this._activePlayer.pause(); };\n\t        AnimationSequencePlayer.prototype.restart = function () {\n\t            if (this._players.length > 0) {\n\t                this.reset();\n\t                this._players[0].restart();\n\t            }\n\t        };\n\t        AnimationSequencePlayer.prototype.reset = function () { this._players.forEach(function (player) { return player.reset(); }); };\n\t        AnimationSequencePlayer.prototype.finish = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.finish(); });\n\t        };\n\t        AnimationSequencePlayer.prototype.destroy = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.destroy(); });\n\t        };\n\t        AnimationSequencePlayer.prototype.setPosition = function (p /** TODO #9100 */) { this._players[0].setPosition(p); };\n\t        AnimationSequencePlayer.prototype.getPosition = function () { return this._players[0].getPosition(); };\n\t        return AnimationSequencePlayer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$13 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AUTO_STYLE = '*';\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link trigger trigger\n\t     * animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationEntryMetadata = (function () {\n\t        function AnimationEntryMetadata(name, definitions) {\n\t            this.name = name;\n\t            this.definitions = definitions;\n\t        }\n\t        return AnimationEntryMetadata;\n\t    }());\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateMetadata = (function () {\n\t        function AnimationStateMetadata() {\n\t        }\n\t        return AnimationStateMetadata;\n\t    }());\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link state state animation\n\t     * function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateDeclarationMetadata = (function (_super) {\n\t        __extends$13(AnimationStateDeclarationMetadata, _super);\n\t        function AnimationStateDeclarationMetadata(stateNameExpr, styles) {\n\t            _super.call(this);\n\t            this.stateNameExpr = stateNameExpr;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationStateDeclarationMetadata;\n\t    }(AnimationStateMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the\n\t     * {@link transition transition animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateTransitionMetadata = (function (_super) {\n\t        __extends$13(AnimationStateTransitionMetadata, _super);\n\t        function AnimationStateTransitionMetadata(stateChangeExpr, steps) {\n\t            _super.call(this);\n\t            this.stateChangeExpr = stateChangeExpr;\n\t            this.steps = steps;\n\t        }\n\t        return AnimationStateTransitionMetadata;\n\t    }(AnimationStateMetadata));\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationMetadata = (function () {\n\t        function AnimationMetadata() {\n\t        }\n\t        return AnimationMetadata;\n\t    }());\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link keyframes keyframes\n\t     * animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationKeyframesSequenceMetadata = (function (_super) {\n\t        __extends$13(AnimationKeyframesSequenceMetadata, _super);\n\t        function AnimationKeyframesSequenceMetadata(steps) {\n\t            _super.call(this);\n\t            this.steps = steps;\n\t        }\n\t        return AnimationKeyframesSequenceMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link style style animation\n\t     * function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationStyleMetadata = (function (_super) {\n\t        __extends$13(AnimationStyleMetadata, _super);\n\t        function AnimationStyleMetadata(styles, offset) {\n\t            if (offset === void 0) { offset = null; }\n\t            _super.call(this);\n\t            this.styles = styles;\n\t            this.offset = offset;\n\t        }\n\t        return AnimationStyleMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link animate animate\n\t     * animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationAnimateMetadata = (function (_super) {\n\t        __extends$13(AnimationAnimateMetadata, _super);\n\t        function AnimationAnimateMetadata(timings, styles) {\n\t            _super.call(this);\n\t            this.timings = timings;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationAnimateMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationWithStepsMetadata = (function (_super) {\n\t        __extends$13(AnimationWithStepsMetadata, _super);\n\t        function AnimationWithStepsMetadata() {\n\t            _super.call(this);\n\t        }\n\t        Object.defineProperty(AnimationWithStepsMetadata.prototype, \"steps\", {\n\t            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationWithStepsMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link sequence sequence\n\t     * animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationSequenceMetadata = (function (_super) {\n\t        __extends$13(AnimationSequenceMetadata, _super);\n\t        function AnimationSequenceMetadata(_steps) {\n\t            _super.call(this);\n\t            this._steps = _steps;\n\t        }\n\t        Object.defineProperty(AnimationSequenceMetadata.prototype, \"steps\", {\n\t            get: function () { return this._steps; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationSequenceMetadata;\n\t    }(AnimationWithStepsMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link group group animation\n\t     * function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationGroupMetadata = (function (_super) {\n\t        __extends$13(AnimationGroupMetadata, _super);\n\t        function AnimationGroupMetadata(_steps) {\n\t            _super.call(this);\n\t            this._steps = _steps;\n\t        }\n\t        Object.defineProperty(AnimationGroupMetadata.prototype, \"steps\", {\n\t            get: function () { return this._steps; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationGroupMetadata;\n\t    }(AnimationWithStepsMetadata));\n\t    /**\n\t     * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `animate` specifies an animation step that will apply the provided `styles` data for a given\n\t     * amount of\n\t     * time based on the provided `timing` expression value. Calls to `animate` are expected to be\n\t     * used within {@link sequence an animation sequence}, {@link group group}, or {@link transition\n\t     * transition}.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `animate` function accepts two input parameters: `timing` and `styles`:\n\t     *\n\t     * - `timing` is a string based value that can be a combination of a duration with optional\n\t     * delay and easing values. The format for the expression breaks down to `duration delay easing`\n\t     * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n\t     * delay=100, easing=ease-out`.\n\t     * If a numeric value is provided then that will be used as the `duration` value in millisecond\n\t     * form.\n\t     * - `styles` is the style input data which can either be a call to {@link style style} or {@link\n\t     * keyframes keyframes}.\n\t     * If left empty then the styles from the destination state will be collected and used (this is\n\t     * useful when\n\t     * describing an animation step that will complete an animation by {@link\n\t     * transition#the-final-animate-call animating to the final state}).\n\t     *\n\t     * ```typescript\n\t     * // various functions for specifying timing data\n\t     * animate(500, style(...))\n\t     * animate(\"1s\", style(...))\n\t     * animate(\"100ms 0.5s\", style(...))\n\t     * animate(\"5s ease\", style(...))\n\t     * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n\t     *\n\t     * // either style() of keyframes() can be used\n\t     * animate(500, style({ background: \"red\" }))\n\t     * animate(500, keyframes([\n\t     *   style({ background: \"blue\" })),\n\t     *   style({ background: \"red\" }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function animate(timing, styles) {\n\t        if (styles === void 0) { styles = null; }\n\t        var stylesEntry = styles;\n\t        if (!isPresent(stylesEntry)) {\n\t            var EMPTY_STYLE = {};\n\t            stylesEntry = new AnimationStyleMetadata([EMPTY_STYLE], 1);\n\t        }\n\t        return new AnimationAnimateMetadata(timing, stylesEntry);\n\t    }\n\t    /**\n\t     * `group` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `group` specifies a list of animation steps that are all run in parallel. Grouped animations\n\t     * are useful when a series of styles must be animated/closed off\n\t     * at different statrting/ending times.\n\t     *\n\t     * The `group` function can either be used within a {@link sequence sequence} or a {@link transition\n\t     * transition}\n\t     * and it will only continue to the next instruction once all of the inner animation steps\n\t     * have completed.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `steps` data that is passed into the `group` animation function can either consist\n\t     * of {@link style style} or {@link animate animate} function calls. Each call to `style()` or\n\t     * `animate()`\n\t     * within a group will be executed instantly (use {@link keyframes keyframes} or a\n\t     * {@link animate#usage animate() with a delay value} to offset styles to be applied at a later\n\t     * time).\n\t     *\n\t     * ```typescript\n\t     * group([\n\t     *   animate(\"1s\", { background: \"black\" }))\n\t     *   animate(\"2s\", { color: \"white\" }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function group(steps) {\n\t        return new AnimationGroupMetadata(steps);\n\t    }\n\t    /**\n\t     * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used\n\t     * by default when an array is passed as animation data into {@link transition transition}.)\n\t     *\n\t     * The `sequence` function can either be used within a {@link group group} or a {@link transition\n\t     * transition}\n\t     * and it will only continue to the next instruction once each of the inner animation steps\n\t     * have completed.\n\t     *\n\t     * To perform animation styling in parallel with other animation steps then\n\t     * have a look at the {@link group group} animation function.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `steps` data that is passed into the `sequence` animation function can either consist\n\t     * of {@link style style} or {@link animate animate} function calls. A call to `style()` will apply\n\t     * the\n\t     * provided styling data immediately while a call to `animate()` will apply its styling\n\t     * data over a given time depending on its timing data.\n\t     *\n\t     * ```typescript\n\t     * sequence([\n\t     *   style({ opacity: 0 })),\n\t     *   animate(\"1s\", { opacity: 1 }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function sequence(steps) {\n\t        return new AnimationSequenceMetadata(steps);\n\t    }\n\t    /**\n\t     * `style` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `style` declares a key/value object containing CSS properties/styles that can then\n\t     * be used for {@link state animation states}, within an {@link sequence animation sequence}, or as\n\t     * styling data for both {@link animate animate} and {@link keyframes keyframes}.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `style` takes in a key/value string map as data and expects one or more CSS property/value\n\t     * pairs to be defined.\n\t     *\n\t     * ```typescript\n\t     * // string values are used for css properties\n\t     * style({ background: \"red\", color: \"blue\" })\n\t     *\n\t     * // numerical (pixel) values are also supported\n\t     * style({ width: 100, height: 0 })\n\t     * ```\n\t     *\n\t     * #### Auto-styles (using `*`)\n\t     *\n\t     * When an asterix (`*`) character is used as a value then it will be detected from the element\n\t     * being animated\n\t     * and applied as animation data when the animation starts.\n\t     *\n\t     * This feature proves useful for a state depending on layout and/or environment factors; in such\n\t     * cases\n\t     * the styles are calculated just before the animation starts.\n\t     *\n\t     * ```typescript\n\t     * // the steps below will animate from 0 to the\n\t     * // actual height of the element\n\t     * style({ height: 0 }),\n\t     * animate(\"1s\", style({ height: \"*\" }))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function style(tokens) {\n\t        var input;\n\t        var offset = null;\n\t        if (typeof tokens === 'string') {\n\t            input = [tokens];\n\t        }\n\t        else {\n\t            if (Array.isArray(tokens)) {\n\t                input = tokens;\n\t            }\n\t            else {\n\t                input = [tokens];\n\t            }\n\t            input.forEach(function (entry) {\n\t                var entryOffset = entry['offset'];\n\t                if (isPresent(entryOffset)) {\n\t                    offset = offset == null ? parseFloat(entryOffset) : offset;\n\t                }\n\t            });\n\t        }\n\t        return new AnimationStyleMetadata(input, offset);\n\t    }\n\t    /**\n\t     * `state` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `state` declares an animation state within the given trigger. When a state is\n\t     * active within a component then its associated styles will persist on\n\t     * the element that the trigger is attached to (even when the animation ends).\n\t     *\n\t     * To animate between states, have a look at the animation {@link transition transition}\n\t     * DSL function. To register states to an animation trigger please have a look\n\t     * at the {@link trigger trigger} function.\n\t     *\n\t     * #### The `void` state\n\t     *\n\t     * The `void` state value is a reserved word that angular uses to determine when the element is not\n\t     * apart\n\t     * of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n\t     * associated element\n\t     * is void).\n\t     *\n\t     * #### The `*` (default) state\n\t     *\n\t     * The `*` state (when styled) is a fallback state that will be used if\n\t     * the state that is being animated is not declared within the trigger.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `state` will declare an animation state with its associated styles\n\t     * within the given trigger.\n\t     *\n\t     * - `stateNameExpr` can be one or more state names separated by commas.\n\t     * - `styles` refers to the {@link style styling data} that will be persisted on the element once\n\t     * the state\n\t     * has been reached.\n\t     *\n\t     * ```typescript\n\t     * // \"void\" is a reserved name for a state and is used to represent\n\t     * // the state in which an element is detached from from the application.\n\t     * state(\"void\", style({ height: 0 }))\n\t     *\n\t     * // user-defined states\n\t     * state(\"closed\", style({ height: 0 }))\n\t     * state(\"open, visible\", style({ height: \"*\" }))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function state(stateNameExpr, styles) {\n\t        return new AnimationStateDeclarationMetadata(stateNameExpr, styles);\n\t    }\n\t    /**\n\t     * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `keyframes` specifies a collection of {@link style style} entries each optionally characterized\n\t     * by an `offset` value.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `keyframes` animation function is designed to be used alongside the {@link animate animate}\n\t     * animation function. Instead of applying animations from where they are\n\t     * currently to their destination, keyframes can describe how each style entry is applied\n\t     * and at what point within the animation arc (much like CSS Keyframe Animations do).\n\t     *\n\t     * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at\n\t     * what percentage of the animate time the styles will be applied.\n\t     *\n\t     * ```typescript\n\t     * // the provided offset values describe when each backgroundColor value is applied.\n\t     * animate(\"5s\", keyframes([\n\t     *   style({ backgroundColor: \"red\", offset: 0 }),\n\t     *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n\t     *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n\t     *   style({ backgroundColor: \"black\", offset: 1 })\n\t     * ]))\n\t     * ```\n\t     *\n\t     * Alternatively, if there are no `offset` values used within the style entries then the offsets\n\t     * will\n\t     * be calculated automatically.\n\t     *\n\t     * ```typescript\n\t     * animate(\"5s\", keyframes([\n\t     *   style({ backgroundColor: \"red\" }) // offset = 0\n\t     *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n\t     *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n\t     *   style({ backgroundColor: \"black\" }) // offset = 1\n\t     * ]))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function keyframes(steps) {\n\t        return new AnimationKeyframesSequenceMetadata(steps);\n\t    }\n\t    /**\n\t     * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `transition` declares the {@link sequence sequence of animation steps} that will be run when the\n\t     * provided\n\t     * `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 => state2`\n\t     * which consists\n\t     * of two known states (use an asterix (`*`) to refer to a dynamic starting and/or ending state).\n\t     *\n\t     * Animation transitions are placed within an {@link trigger animation trigger}. For an transition\n\t     * to animate to\n\t     * a state value and persist its styles then one or more {@link state animation states} is expected\n\t     * to be defined.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n\t     * what the\n\t     * previous state is and what the current state has become. In other words, if a transition is\n\t     * defined that\n\t     * matches the old/current state criteria then the associated animation will be triggered.\n\t     *\n\t     * ```typescript\n\t     * // all transition/state changes are defined within an animation trigger\n\t     * trigger(\"myAnimationTrigger\", [\n\t     *   // if a state is defined then its styles will be persisted when the\n\t     *   // animation has fully completed itself\n\t     *   state(\"on\", style({ background: \"green\" })),\n\t     *   state(\"off\", style({ background: \"grey\" })),\n\t     *\n\t     *   // a transition animation that will be kicked off when the state value\n\t     *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n\t     *   transition(\"on => off\", animate(500)),\n\t     *\n\t     *   // it is also possible to do run the same animation for both directions\n\t     *   transition(\"on <=> off\", animate(500)),\n\t     *\n\t     *   // or to define multiple states pairs separated by commas\n\t     *   transition(\"on => off, off => void\", animate(500)),\n\t     *\n\t     *   // this is a catch-all state change for when an element is inserted into\n\t     *   // the page and the destination state is unknown\n\t     *   transition(\"void => *\", [\n\t     *     style({ opacity: 0 }),\n\t     *     animate(500)\n\t     *   ]),\n\t     *\n\t     *   // this will capture a state change between any states\n\t     *   transition(\"* => *\", animate(\"1s 0s\")),\n\t     * ])\n\t     * ```\n\t     *\n\t     * The template associated with this component will make use of the `myAnimationTrigger`\n\t     * animation trigger by binding to an element within its template code.\n\t     *\n\t     * ```html\n\t     * <!-- somewhere inside of my-component-tpl.html -->\n\t     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n\t     * ```\n\t     *\n\t     * #### The final `animate` call\n\t     *\n\t     * If the final step within the transition steps is a call to `animate()` that **only**\n\t     * uses a timing value with **no style data** then it will be automatically used as the final\n\t     * animation\n\t     * arc for the element to animate itself to the final state. This involves an automatic mix of\n\t     * adding/removing CSS styles so that the element will be in the exact state it should be for the\n\t     * applied state to be presented correctly.\n\t     *\n\t     * ```\n\t     * // start off by hiding the element, but make sure that it animates properly to whatever state\n\t     * // is currently active for \"myAnimationTrigger\"\n\t     * transition(\"void => *\", [\n\t     *   style({ opacity: 0 }),\n\t     *   animate(500)\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Transition Aliases (`:enter` and `:leave`)\n\t     *\n\t     * Given that enter (insertion) and leave (removal) animations are so common,\n\t     * the `transition` function accepts both `:enter` and `:leave` values which\n\t     * are aliases for the `void => *` and `* => void` state changes.\n\t     *\n\t     * ```\n\t     * transition(\":enter\", [\n\t     *   style({ opacity: 0 }),\n\t     *   animate(500, style({ opacity: 1 }))\n\t     * ])\n\t     * transition(\":leave\", [\n\t     *   animate(500, style({ opacity: 0 }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function transition(stateChangeExpr, steps) {\n\t        var animationData = Array.isArray(steps) ? new AnimationSequenceMetadata(steps) : steps;\n\t        return new AnimationStateTransitionMetadata(stateChangeExpr, animationData);\n\t    }\n\t    /**\n\t     * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `trigger` Creates an animation trigger which will a list of {@link state state} and {@link\n\t     * transition transition}\n\t     * entries that will be evaluated when the expression bound to the trigger changes.\n\t     *\n\t     * Triggers are registered within the component annotation data under the\n\t     * {@link Component#animations-anchor animations section}. An animation trigger can\n\t     * be placed on an element within a template by referencing the name of the\n\t     * trigger followed by the expression value that the trigger is bound to\n\t     * (in the form of `[@triggerName]=\"expression\"`.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `trigger` will create an animation trigger reference based on the provided `name` value.\n\t     * The provided `animation` value is expected to be an array consisting of {@link state state} and\n\t     * {@link transition transition}\n\t     * declarations.\n\t     *\n\t     * ```typescript\n\t     * @Component({\n\t     *   selector: 'my-component',\n\t     *   templateUrl: 'my-component-tpl.html',\n\t     *   animations: [\n\t     *     trigger(\"myAnimationTrigger\", [\n\t     *       state(...),\n\t     *       state(...),\n\t     *       transition(...),\n\t     *       transition(...)\n\t     *     ])\n\t     *   ]\n\t     * })\n\t     * class MyComponent {\n\t     *   myStatusExp = \"something\";\n\t     * }\n\t     * ```\n\t     *\n\t     * The template associated with this component will make use of the `myAnimationTrigger`\n\t     * animation trigger by binding to an element within its template code.\n\t     *\n\t     * ```html\n\t     * <!-- somewhere inside of my-component-tpl.html -->\n\t     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function trigger(name, animation) {\n\t        return new AnimationEntryMetadata(name, animation);\n\t    }\n\t\n\t    function prepareFinalAnimationStyles(previousStyles, newStyles, nullValue) {\n\t        if (nullValue === void 0) { nullValue = null; }\n\t        var finalStyles = {};\n\t        Object.keys(newStyles).forEach(function (prop) {\n\t            var value = newStyles[prop];\n\t            finalStyles[prop] = value == AUTO_STYLE ? nullValue : value.toString();\n\t        });\n\t        Object.keys(previousStyles).forEach(function (prop) {\n\t            if (!isPresent(finalStyles[prop])) {\n\t                finalStyles[prop] = nullValue;\n\t            }\n\t        });\n\t        return finalStyles;\n\t    }\n\t    function balanceAnimationKeyframes(collectedStyles, finalStateStyles, keyframes) {\n\t        var limit = keyframes.length - 1;\n\t        var firstKeyframe = keyframes[0];\n\t        // phase 1: copy all the styles from the first keyframe into the lookup map\n\t        var flatenedFirstKeyframeStyles = flattenStyles(firstKeyframe.styles.styles);\n\t        var extraFirstKeyframeStyles = {};\n\t        var hasExtraFirstStyles = false;\n\t        Object.keys(collectedStyles).forEach(function (prop) {\n\t            var value = collectedStyles[prop];\n\t            // if the style is already defined in the first keyframe then\n\t            // we do not replace it.\n\t            if (!flatenedFirstKeyframeStyles[prop]) {\n\t                flatenedFirstKeyframeStyles[prop] = value;\n\t                extraFirstKeyframeStyles[prop] = value;\n\t                hasExtraFirstStyles = true;\n\t            }\n\t        });\n\t        var keyframeCollectedStyles = StringMapWrapper.merge({}, flatenedFirstKeyframeStyles);\n\t        // phase 2: normalize the final keyframe\n\t        var finalKeyframe = keyframes[limit];\n\t        finalKeyframe.styles.styles.unshift(finalStateStyles);\n\t        var flatenedFinalKeyframeStyles = flattenStyles(finalKeyframe.styles.styles);\n\t        var extraFinalKeyframeStyles = {};\n\t        var hasExtraFinalStyles = false;\n\t        Object.keys(keyframeCollectedStyles).forEach(function (prop) {\n\t            if (!isPresent(flatenedFinalKeyframeStyles[prop])) {\n\t                extraFinalKeyframeStyles[prop] = AUTO_STYLE;\n\t                hasExtraFinalStyles = true;\n\t            }\n\t        });\n\t        if (hasExtraFinalStyles) {\n\t            finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);\n\t        }\n\t        Object.keys(flatenedFinalKeyframeStyles).forEach(function (prop) {\n\t            if (!isPresent(flatenedFirstKeyframeStyles[prop])) {\n\t                extraFirstKeyframeStyles[prop] = AUTO_STYLE;\n\t                hasExtraFirstStyles = true;\n\t            }\n\t        });\n\t        if (hasExtraFirstStyles) {\n\t            firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);\n\t        }\n\t        return keyframes;\n\t    }\n\t    function clearStyles(styles) {\n\t        var finalStyles = {};\n\t        Object.keys(styles).forEach(function (key) { finalStyles[key] = null; });\n\t        return finalStyles;\n\t    }\n\t    function collectAndResolveStyles(collection, styles) {\n\t        return styles.map(function (entry) {\n\t            var stylesObj = {};\n\t            Object.keys(entry).forEach(function (prop) {\n\t                var value = entry[prop];\n\t                if (value == FILL_STYLE_FLAG) {\n\t                    value = collection[prop];\n\t                    if (!isPresent(value)) {\n\t                        value = AUTO_STYLE;\n\t                    }\n\t                }\n\t                collection[prop] = value;\n\t                stylesObj[prop] = value;\n\t            });\n\t            return stylesObj;\n\t        });\n\t    }\n\t    function renderStyles(element, renderer, styles) {\n\t        Object.keys(styles).forEach(function (prop) { renderer.setElementStyle(element, prop, styles[prop]); });\n\t    }\n\t    function flattenStyles(styles) {\n\t        var finalStyles = {};\n\t        styles.forEach(function (entry) {\n\t            Object.keys(entry).forEach(function (prop) { finalStyles[prop] = entry[prop]; });\n\t        });\n\t        return finalStyles;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var AnimationStyles = (function () {\n\t        function AnimationStyles(styles) {\n\t            this.styles = styles;\n\t        }\n\t        return AnimationStyles;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * An instance of this class is returned as an event parameter when an animation\n\t     * callback is captured for an animation either during the start or done phase.\n\t     *\n\t     * ```typescript\n\t     * @Component({\n\t     *   host: {\n\t     *     '[@myAnimationTrigger]': 'someExpression',\n\t     *     '(@myAnimationTrigger.start)': 'captureStartEvent($event)',\n\t     *     '(@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n\t     *   },\n\t     *   animations: [\n\t     *     trigger(\"myAnimationTrigger\", [\n\t     *        // ...\n\t     *     ])\n\t     *   ]\n\t     * })\n\t     * class MyComponent {\n\t     *   someExpression: any = false;\n\t     *   captureStartEvent(event: AnimationTransitionEvent) {\n\t     *     // the toState, fromState and totalTime data is accessible from the event variable\n\t     *   }\n\t     *\n\t     *   captureDoneEvent(event: AnimationTransitionEvent) {\n\t     *     // the toState, fromState and totalTime data is accessible from the event variable\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationTransitionEvent = (function () {\n\t        function AnimationTransitionEvent(_a) {\n\t            var fromState = _a.fromState, toState = _a.toState, totalTime = _a.totalTime, phaseName = _a.phaseName;\n\t            this.fromState = fromState;\n\t            this.toState = toState;\n\t            this.totalTime = totalTime;\n\t            this.phaseName = phaseName;\n\t        }\n\t        return AnimationTransitionEvent;\n\t    }());\n\t\n\t    var AnimationTransition = (function () {\n\t        function AnimationTransition(_player, _fromState, _toState, _totalTime) {\n\t            this._player = _player;\n\t            this._fromState = _fromState;\n\t            this._toState = _toState;\n\t            this._totalTime = _totalTime;\n\t        }\n\t        AnimationTransition.prototype._createEvent = function (phaseName) {\n\t            return new AnimationTransitionEvent({\n\t                fromState: this._fromState,\n\t                toState: this._toState,\n\t                totalTime: this._totalTime,\n\t                phaseName: phaseName\n\t            });\n\t        };\n\t        AnimationTransition.prototype.onStart = function (callback) {\n\t            var event = this._createEvent('start');\n\t            this._player.onStart(function () { return callback(event); });\n\t        };\n\t        AnimationTransition.prototype.onDone = function (callback) {\n\t            var event = this._createEvent('done');\n\t            this._player.onDone(function () { return callback(event); });\n\t        };\n\t        return AnimationTransition;\n\t    }());\n\t\n\t    var DebugDomRootRenderer = (function () {\n\t        function DebugDomRootRenderer(_delegate) {\n\t            this._delegate = _delegate;\n\t        }\n\t        DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\n\t            return new DebugDomRenderer(this._delegate.renderComponent(componentProto));\n\t        };\n\t        return DebugDomRootRenderer;\n\t    }());\n\t    var DebugDomRenderer = (function () {\n\t        function DebugDomRenderer(_delegate) {\n\t            this._delegate = _delegate;\n\t        }\n\t        DebugDomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n\t            var nativeEl = this._delegate.selectRootElement(selectorOrNode, debugInfo);\n\t            var debugEl = new DebugElement(nativeEl, null, debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return nativeEl;\n\t        };\n\t        DebugDomRenderer.prototype.createElement = function (parentElement, name, debugInfo) {\n\t            var nativeEl = this._delegate.createElement(parentElement, name, debugInfo);\n\t            var debugEl = new DebugElement(nativeEl, getDebugNode(parentElement), debugInfo);\n\t            debugEl.name = name;\n\t            indexDebugNode(debugEl);\n\t            return nativeEl;\n\t        };\n\t        DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\n\t        DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n\t            var comment = this._delegate.createTemplateAnchor(parentElement, debugInfo);\n\t            var debugEl = new DebugNode(comment, getDebugNode(parentElement), debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return comment;\n\t        };\n\t        DebugDomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n\t            var text = this._delegate.createText(parentElement, value, debugInfo);\n\t            var debugEl = new DebugNode(text, getDebugNode(parentElement), debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return text;\n\t        };\n\t        DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n\t            var debugParent = getDebugNode(parentElement);\n\t            if (isPresent(debugParent) && debugParent instanceof DebugElement) {\n\t                var debugElement_1 = debugParent;\n\t                nodes.forEach(function (node) { debugElement_1.addChild(getDebugNode(node)); });\n\t            }\n\t            this._delegate.projectNodes(parentElement, nodes);\n\t        };\n\t        DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\n\t            var debugNode = getDebugNode(node);\n\t            if (isPresent(debugNode)) {\n\t                var debugParent = debugNode.parent;\n\t                if (viewRootNodes.length > 0 && isPresent(debugParent)) {\n\t                    var debugViewRootNodes = [];\n\t                    viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes.push(getDebugNode(rootNode)); });\n\t                    debugParent.insertChildrenAfter(debugNode, debugViewRootNodes);\n\t                }\n\t            }\n\t            this._delegate.attachViewAfter(node, viewRootNodes);\n\t        };\n\t        DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\n\t            viewRootNodes.forEach(function (node) {\n\t                var debugNode = getDebugNode(node);\n\t                if (isPresent(debugNode) && isPresent(debugNode.parent)) {\n\t                    debugNode.parent.removeChild(debugNode);\n\t                }\n\t            });\n\t            this._delegate.detachView(viewRootNodes);\n\t        };\n\t        DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n\t            viewAllNodes.forEach(function (node) { removeDebugNodeFromIndex(getDebugNode(node)); });\n\t            this._delegate.destroyView(hostElement, viewAllNodes);\n\t        };\n\t        DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl)) {\n\t                debugEl.listeners.push(new EventListener(name, callback));\n\t            }\n\t            return this._delegate.listen(renderElement, name, callback);\n\t        };\n\t        DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\n\t            return this._delegate.listenGlobal(target, name, callback);\n\t        };\n\t        DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.properties[propertyName] = propertyValue;\n\t            }\n\t            this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\n\t        };\n\t        DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.attributes[attributeName] = attributeValue;\n\t            }\n\t            this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\n\t        };\n\t        DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n\t            this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\n\t        };\n\t        DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.classes[className] = isAdd;\n\t            }\n\t            this._delegate.setElementClass(renderElement, className, isAdd);\n\t        };\n\t        DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.styles[styleName] = styleValue;\n\t            }\n\t            this._delegate.setElementStyle(renderElement, styleName, styleValue);\n\t        };\n\t        DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n\t            this._delegate.invokeElementMethod(renderElement, methodName, args);\n\t        };\n\t        DebugDomRenderer.prototype.setText = function (renderNode, text) { this._delegate.setText(renderNode, text); };\n\t        DebugDomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing) {\n\t            return this._delegate.animate(element, startingStyles, keyframes, duration, delay, easing);\n\t        };\n\t        return DebugDomRenderer;\n\t    }());\n\t\n\t    var StaticNodeDebugInfo = (function () {\n\t        function StaticNodeDebugInfo(providerTokens, componentToken, refTokens) {\n\t            this.providerTokens = providerTokens;\n\t            this.componentToken = componentToken;\n\t            this.refTokens = refTokens;\n\t        }\n\t        return StaticNodeDebugInfo;\n\t    }());\n\t    var DebugContext = (function () {\n\t        function DebugContext(_view, _nodeIndex, _tplRow, _tplCol) {\n\t            this._view = _view;\n\t            this._nodeIndex = _nodeIndex;\n\t            this._tplRow = _tplRow;\n\t            this._tplCol = _tplCol;\n\t        }\n\t        Object.defineProperty(DebugContext.prototype, \"_staticNodeInfo\", {\n\t            get: function () {\n\t                return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"context\", {\n\t            get: function () { return this._view.context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"component\", {\n\t            get: function () {\n\t                var staticNodeInfo = this._staticNodeInfo;\n\t                if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n\t                    return this.injector.get(staticNodeInfo.componentToken);\n\t                }\n\t                return null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"componentRenderElement\", {\n\t            get: function () {\n\t                var componentView = this._view;\n\t                while (isPresent(componentView.declarationAppElement) &&\n\t                    componentView.type !== ViewType.COMPONENT) {\n\t                    componentView = componentView.declarationAppElement.parentView;\n\t                }\n\t                return isPresent(componentView.declarationAppElement) ?\n\t                    componentView.declarationAppElement.nativeElement :\n\t                    null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"injector\", {\n\t            get: function () { return this._view.injector(this._nodeIndex); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"renderNode\", {\n\t            get: function () {\n\t                if (isPresent(this._nodeIndex) && this._view.allNodes) {\n\t                    return this._view.allNodes[this._nodeIndex];\n\t                }\n\t                else {\n\t                    return null;\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"providerTokens\", {\n\t            get: function () {\n\t                var staticNodeInfo = this._staticNodeInfo;\n\t                return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"source\", {\n\t            get: function () {\n\t                return this._view.componentType.templateUrl + \":\" + this._tplRow + \":\" + this._tplCol;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"references\", {\n\t            get: function () {\n\t                var _this = this;\n\t                var varValues = {};\n\t                var staticNodeInfo = this._staticNodeInfo;\n\t                if (isPresent(staticNodeInfo)) {\n\t                    var refs = staticNodeInfo.refTokens;\n\t                    Object.keys(refs).forEach(function (refName) {\n\t                        var refToken = refs[refName];\n\t                        var varValue;\n\t                        if (isBlank(refToken)) {\n\t                            varValue = _this._view.allNodes ? _this._view.allNodes[_this._nodeIndex] : null;\n\t                        }\n\t                        else {\n\t                            varValue = _this._view.injectorGet(refToken, _this._nodeIndex, null);\n\t                        }\n\t                        varValues[refName] = varValue;\n\t                    });\n\t                }\n\t                return varValues;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return DebugContext;\n\t    }());\n\t\n\t    var ViewAnimationMap = (function () {\n\t        function ViewAnimationMap() {\n\t            this._map = new Map();\n\t            this._allPlayers = [];\n\t        }\n\t        ViewAnimationMap.prototype.find = function (element, animationName) {\n\t            var playersByAnimation = this._map.get(element);\n\t            if (isPresent(playersByAnimation)) {\n\t                return playersByAnimation[animationName];\n\t            }\n\t        };\n\t        ViewAnimationMap.prototype.findAllPlayersByElement = function (element) {\n\t            var el = this._map.get(element);\n\t            return el ? Object.keys(el).map(function (k) { return el[k]; }) : [];\n\t        };\n\t        ViewAnimationMap.prototype.set = function (element, animationName, player) {\n\t            var playersByAnimation = this._map.get(element);\n\t            if (!isPresent(playersByAnimation)) {\n\t                playersByAnimation = {};\n\t            }\n\t            var existingEntry = playersByAnimation[animationName];\n\t            if (isPresent(existingEntry)) {\n\t                this.remove(element, animationName);\n\t            }\n\t            playersByAnimation[animationName] = player;\n\t            this._allPlayers.push(player);\n\t            this._map.set(element, playersByAnimation);\n\t        };\n\t        ViewAnimationMap.prototype.getAllPlayers = function () { return this._allPlayers; };\n\t        ViewAnimationMap.prototype.remove = function (element, animationName) {\n\t            var playersByAnimation = this._map.get(element);\n\t            if (playersByAnimation) {\n\t                var player = playersByAnimation[animationName];\n\t                delete playersByAnimation[animationName];\n\t                var index = this._allPlayers.indexOf(player);\n\t                this._allPlayers.splice(index, 1);\n\t                if (Object.keys(playersByAnimation).length === 0) {\n\t                    this._map.delete(element);\n\t                }\n\t            }\n\t        };\n\t        return ViewAnimationMap;\n\t    }());\n\t\n\t    var AnimationViewContext = (function () {\n\t        function AnimationViewContext() {\n\t            this._players = new ViewAnimationMap();\n\t        }\n\t        AnimationViewContext.prototype.onAllActiveAnimationsDone = function (callback) {\n\t            var activeAnimationPlayers = this._players.getAllPlayers();\n\t            // we check for the length to avoid having GroupAnimationPlayer\n\t            // issue an unnecessary microtask when zero players are passed in\n\t            if (activeAnimationPlayers.length) {\n\t                new AnimationGroupPlayer(activeAnimationPlayers).onDone(function () { return callback(); });\n\t            }\n\t            else {\n\t                callback();\n\t            }\n\t        };\n\t        AnimationViewContext.prototype.queueAnimation = function (element, animationName, player) {\n\t            queueAnimationGlobally(player);\n\t            this._players.set(element, animationName, player);\n\t        };\n\t        AnimationViewContext.prototype.cancelActiveAnimation = function (element, animationName, removeAllAnimations) {\n\t            if (removeAllAnimations === void 0) { removeAllAnimations = false; }\n\t            if (removeAllAnimations) {\n\t                this._players.findAllPlayersByElement(element).forEach(function (player) { return player.destroy(); });\n\t            }\n\t            else {\n\t                var player = this._players.find(element, animationName);\n\t                if (player) {\n\t                    player.destroy();\n\t                }\n\t            }\n\t        };\n\t        return AnimationViewContext;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$15 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var _UNDEFINED$1 = new Object();\n\t    var ElementInjector = (function (_super) {\n\t        __extends$15(ElementInjector, _super);\n\t        function ElementInjector(_view, _nodeIndex) {\n\t            _super.call(this);\n\t            this._view = _view;\n\t            this._nodeIndex = _nodeIndex;\n\t        }\n\t        ElementInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            var result = _UNDEFINED$1;\n\t            if (result === _UNDEFINED$1) {\n\t                result = this._view.injectorGet(token, this._nodeIndex, _UNDEFINED$1);\n\t            }\n\t            if (result === _UNDEFINED$1) {\n\t                result = this._view.parentInjector.get(token, notFoundValue);\n\t            }\n\t            return result;\n\t        };\n\t        return ElementInjector;\n\t    }(Injector));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$14 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var _scope_check = wtfCreateScope(\"AppView#check(ascii id)\");\n\t    /**\n\t     * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n\t     *\n\t     */\n\t    var AppView = (function () {\n\t        function AppView(clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode) {\n\t            this.clazz = clazz;\n\t            this.componentType = componentType;\n\t            this.type = type;\n\t            this.viewUtils = viewUtils;\n\t            this.parentInjector = parentInjector;\n\t            this.declarationAppElement = declarationAppElement;\n\t            this.cdMode = cdMode;\n\t            this.contentChildren = [];\n\t            this.viewChildren = [];\n\t            this.viewContainerElement = null;\n\t            this.numberOfChecks = 0;\n\t            this.ref = new ViewRef_(this);\n\t            if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n\t                this.renderer = viewUtils.renderComponent(componentType);\n\t            }\n\t            else {\n\t                this.renderer = declarationAppElement.parentView.renderer;\n\t            }\n\t        }\n\t        Object.defineProperty(AppView.prototype, \"animationContext\", {\n\t            get: function () {\n\t                if (!this._animationContext) {\n\t                    this._animationContext = new AnimationViewContext();\n\t                }\n\t                return this._animationContext;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"destroyed\", {\n\t            get: function () { return this.cdMode === ChangeDetectorStatus.Destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        AppView.prototype.create = function (context, givenProjectableNodes, rootSelectorOrNode) {\n\t            this.context = context;\n\t            var projectableNodes;\n\t            switch (this.type) {\n\t                case ViewType.COMPONENT:\n\t                    projectableNodes = ensureSlotCount(givenProjectableNodes, this.componentType.slotCount);\n\t                    break;\n\t                case ViewType.EMBEDDED:\n\t                    projectableNodes = this.declarationAppElement.parentView.projectableNodes;\n\t                    break;\n\t                case ViewType.HOST:\n\t                    // Note: Don't ensure the slot count for the projectableNodes as we store\n\t                    // them only for the contained component view (which will later check the slot count...)\n\t                    projectableNodes = givenProjectableNodes;\n\t                    break;\n\t            }\n\t            this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n\t            this.projectableNodes = projectableNodes;\n\t            return this.createInternal(rootSelectorOrNode);\n\t        };\n\t        /**\n\t         * Overwritten by implementations.\n\t         * Returns the AppElement for the host element for ViewType.HOST.\n\t         */\n\t        AppView.prototype.createInternal = function (rootSelectorOrNode) { return null; };\n\t        AppView.prototype.init = function (rootNodesOrAppElements, allNodes, disposables, subscriptions) {\n\t            this.rootNodesOrAppElements = rootNodesOrAppElements;\n\t            this.allNodes = allNodes;\n\t            this.disposables = disposables;\n\t            this.subscriptions = subscriptions;\n\t            if (this.type === ViewType.COMPONENT) {\n\t                // Note: the render nodes have been attached to their host element\n\t                // in the ViewFactory already.\n\t                this.declarationAppElement.parentView.viewChildren.push(this);\n\t                this.dirtyParentQueriesInternal();\n\t            }\n\t        };\n\t        AppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n\t            return this.injectorGetInternal(token, nodeIndex, notFoundResult);\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {\n\t            return notFoundResult;\n\t        };\n\t        AppView.prototype.injector = function (nodeIndex) {\n\t            if (isPresent(nodeIndex)) {\n\t                return new ElementInjector(this, nodeIndex);\n\t            }\n\t            else {\n\t                return this.parentInjector;\n\t            }\n\t        };\n\t        AppView.prototype.destroy = function () {\n\t            if (this._hasExternalHostElement) {\n\t                this.renderer.detachView(this.flatRootNodes);\n\t            }\n\t            else if (isPresent(this.viewContainerElement)) {\n\t                this.viewContainerElement.detachView(this.viewContainerElement.nestedViews.indexOf(this));\n\t            }\n\t            this._destroyRecurse();\n\t        };\n\t        AppView.prototype._destroyRecurse = function () {\n\t            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n\t                return;\n\t            }\n\t            var children = this.contentChildren;\n\t            for (var i = 0; i < children.length; i++) {\n\t                children[i]._destroyRecurse();\n\t            }\n\t            children = this.viewChildren;\n\t            for (var i = 0; i < children.length; i++) {\n\t                children[i]._destroyRecurse();\n\t            }\n\t            this.destroyLocal();\n\t            this.cdMode = ChangeDetectorStatus.Destroyed;\n\t        };\n\t        AppView.prototype.destroyLocal = function () {\n\t            var _this = this;\n\t            var hostElement = this.type === ViewType.COMPONENT ? this.declarationAppElement.nativeElement : null;\n\t            for (var i = 0; i < this.disposables.length; i++) {\n\t                this.disposables[i]();\n\t            }\n\t            for (var i = 0; i < this.subscriptions.length; i++) {\n\t                this.subscriptions[i].unsubscribe();\n\t            }\n\t            this.destroyInternal();\n\t            this.dirtyParentQueriesInternal();\n\t            if (this._animationContext) {\n\t                this._animationContext.onAllActiveAnimationsDone(function () { return _this.renderer.destroyView(hostElement, _this.allNodes); });\n\t            }\n\t            else {\n\t                this.renderer.destroyView(hostElement, this.allNodes);\n\t            }\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.destroyInternal = function () { };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.detachInternal = function () { };\n\t        AppView.prototype.detach = function () {\n\t            var _this = this;\n\t            this.detachInternal();\n\t            if (this._animationContext) {\n\t                this._animationContext.onAllActiveAnimationsDone(function () { return _this.renderer.detachView(_this.flatRootNodes); });\n\t            }\n\t            else {\n\t                this.renderer.detachView(this.flatRootNodes);\n\t            }\n\t        };\n\t        Object.defineProperty(AppView.prototype, \"changeDetectorRef\", {\n\t            get: function () { return this.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"parent\", {\n\t            get: function () {\n\t                return isPresent(this.declarationAppElement) ? this.declarationAppElement.parentView : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"flatRootNodes\", {\n\t            get: function () { return flattenNestedViewRenderNodes(this.rootNodesOrAppElements); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"lastRootNode\", {\n\t            get: function () {\n\t                var lastNode = this.rootNodesOrAppElements.length > 0 ?\n\t                    this.rootNodesOrAppElements[this.rootNodesOrAppElements.length - 1] :\n\t                    null;\n\t                return _findLastRenderNode(lastNode);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.dirtyParentQueriesInternal = function () { };\n\t        AppView.prototype.detectChanges = function (throwOnChange) {\n\t            var s = _scope_check(this.clazz);\n\t            if (this.cdMode === ChangeDetectorStatus.Checked ||\n\t                this.cdMode === ChangeDetectorStatus.Errored)\n\t                return;\n\t            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n\t                this.throwDestroyedError('detectChanges');\n\t            }\n\t            this.detectChangesInternal(throwOnChange);\n\t            if (this.cdMode === ChangeDetectorStatus.CheckOnce)\n\t                this.cdMode = ChangeDetectorStatus.Checked;\n\t            this.numberOfChecks++;\n\t            wtfLeave(s);\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.detectChangesInternal = function (throwOnChange) {\n\t            this.detectContentChildrenChanges(throwOnChange);\n\t            this.detectViewChildrenChanges(throwOnChange);\n\t        };\n\t        AppView.prototype.detectContentChildrenChanges = function (throwOnChange) {\n\t            for (var i = 0; i < this.contentChildren.length; ++i) {\n\t                var child = this.contentChildren[i];\n\t                if (child.cdMode === ChangeDetectorStatus.Detached)\n\t                    continue;\n\t                child.detectChanges(throwOnChange);\n\t            }\n\t        };\n\t        AppView.prototype.detectViewChildrenChanges = function (throwOnChange) {\n\t            for (var i = 0; i < this.viewChildren.length; ++i) {\n\t                var child = this.viewChildren[i];\n\t                if (child.cdMode === ChangeDetectorStatus.Detached)\n\t                    continue;\n\t                child.detectChanges(throwOnChange);\n\t            }\n\t        };\n\t        AppView.prototype.markContentChildAsMoved = function (renderAppElement) { this.dirtyParentQueriesInternal(); };\n\t        AppView.prototype.addToContentChildren = function (renderAppElement) {\n\t            renderAppElement.parentView.contentChildren.push(this);\n\t            this.viewContainerElement = renderAppElement;\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        AppView.prototype.removeFromContentChildren = function (renderAppElement) {\n\t            ListWrapper.remove(renderAppElement.parentView.contentChildren, this);\n\t            this.dirtyParentQueriesInternal();\n\t            this.viewContainerElement = null;\n\t        };\n\t        AppView.prototype.markAsCheckOnce = function () { this.cdMode = ChangeDetectorStatus.CheckOnce; };\n\t        AppView.prototype.markPathToRootAsCheckOnce = function () {\n\t            var c = this;\n\t            while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n\t                if (c.cdMode === ChangeDetectorStatus.Checked) {\n\t                    c.cdMode = ChangeDetectorStatus.CheckOnce;\n\t                }\n\t                var parentEl = c.type === ViewType.COMPONENT ? c.declarationAppElement : c.viewContainerElement;\n\t                c = isPresent(parentEl) ? parentEl.parentView : null;\n\t            }\n\t        };\n\t        AppView.prototype.eventHandler = function (cb) { return cb; };\n\t        AppView.prototype.throwDestroyedError = function (details) { throw new ViewDestroyedError(details); };\n\t        return AppView;\n\t    }());\n\t    var DebugAppView = (function (_super) {\n\t        __extends$14(DebugAppView, _super);\n\t        function DebugAppView(clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode, staticNodeDebugInfos) {\n\t            _super.call(this, clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode);\n\t            this.staticNodeDebugInfos = staticNodeDebugInfos;\n\t            this._currentDebugContext = null;\n\t        }\n\t        DebugAppView.prototype.create = function (context, givenProjectableNodes, rootSelectorOrNode) {\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.create.call(this, context, givenProjectableNodes, rootSelectorOrNode);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.detach = function () {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.detach.call(this);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.destroyLocal = function () {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.destroyLocal.call(this);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.detectChanges = function (throwOnChange) {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.detectChanges.call(this, throwOnChange);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype._resetDebug = function () { this._currentDebugContext = null; };\n\t        DebugAppView.prototype.debug = function (nodeIndex, rowNum, colNum) {\n\t            return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n\t        };\n\t        DebugAppView.prototype._rethrowWithContext = function (e) {\n\t            if (!(e instanceof ViewWrappedError)) {\n\t                if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedError)) {\n\t                    this.cdMode = ChangeDetectorStatus.Errored;\n\t                }\n\t                if (isPresent(this._currentDebugContext)) {\n\t                    throw new ViewWrappedError(e, this._currentDebugContext);\n\t                }\n\t            }\n\t        };\n\t        DebugAppView.prototype.eventHandler = function (cb) {\n\t            var _this = this;\n\t            var superHandler = _super.prototype.eventHandler.call(this, cb);\n\t            return function (event) {\n\t                _this._resetDebug();\n\t                try {\n\t                    return superHandler(event);\n\t                }\n\t                catch (e) {\n\t                    _this._rethrowWithContext(e);\n\t                    throw e;\n\t                }\n\t            };\n\t        };\n\t        return DebugAppView;\n\t    }(AppView));\n\t    function _findLastRenderNode(node) {\n\t        var lastNode;\n\t        if (node instanceof AppElement) {\n\t            var appEl = node;\n\t            lastNode = appEl.nativeElement;\n\t            if (isPresent(appEl.nestedViews)) {\n\t                // Note: Views might have no root nodes at all!\n\t                for (var i = appEl.nestedViews.length - 1; i >= 0; i--) {\n\t                    var nestedView = appEl.nestedViews[i];\n\t                    if (nestedView.rootNodesOrAppElements.length > 0) {\n\t                        lastNode = _findLastRenderNode(nestedView.rootNodesOrAppElements[nestedView.rootNodesOrAppElements.length - 1]);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            lastNode = node;\n\t        }\n\t        return lastNode;\n\t    }\n\t\n\t    var __core_private__ = {\n\t        isDefaultChangeDetectionStrategy: isDefaultChangeDetectionStrategy,\n\t        ChangeDetectorStatus: ChangeDetectorStatus,\n\t        constructDependencies: constructDependencies,\n\t        LifecycleHooks: LifecycleHooks,\n\t        LIFECYCLE_HOOKS_VALUES: LIFECYCLE_HOOKS_VALUES,\n\t        ReflectorReader: ReflectorReader,\n\t        CodegenComponentFactoryResolver: CodegenComponentFactoryResolver,\n\t        AppElement: AppElement,\n\t        AppView: AppView,\n\t        DebugAppView: DebugAppView,\n\t        NgModuleInjector: NgModuleInjector,\n\t        registerModuleFactory: registerModuleFactory,\n\t        ViewType: ViewType,\n\t        view_utils: view_utils,\n\t        ViewMetadata: ViewMetadata,\n\t        DebugContext: DebugContext,\n\t        StaticNodeDebugInfo: StaticNodeDebugInfo,\n\t        devModeEqual: devModeEqual,\n\t        UNINITIALIZED: UNINITIALIZED,\n\t        ValueUnwrapper: ValueUnwrapper,\n\t        RenderDebugInfo: RenderDebugInfo,\n\t        TemplateRef_: TemplateRef_,\n\t        ReflectionCapabilities: ReflectionCapabilities,\n\t        makeDecorator: makeDecorator,\n\t        DebugDomRootRenderer: DebugDomRootRenderer,\n\t        Console: Console,\n\t        reflector: reflector,\n\t        Reflector: Reflector,\n\t        NoOpAnimationPlayer: NoOpAnimationPlayer,\n\t        AnimationPlayer: AnimationPlayer,\n\t        AnimationSequencePlayer: AnimationSequencePlayer,\n\t        AnimationGroupPlayer: AnimationGroupPlayer,\n\t        AnimationKeyframe: AnimationKeyframe,\n\t        prepareFinalAnimationStyles: prepareFinalAnimationStyles,\n\t        balanceAnimationKeyframes: balanceAnimationKeyframes,\n\t        flattenStyles: flattenStyles,\n\t        clearStyles: clearStyles,\n\t        renderStyles: renderStyles,\n\t        collectAndResolveStyles: collectAndResolveStyles,\n\t        AnimationStyles: AnimationStyles,\n\t        ANY_STATE: ANY_STATE,\n\t        DEFAULT_STATE: DEFAULT_STATE,\n\t        EMPTY_STATE: EMPTY_STATE,\n\t        FILL_STYLE_FLAG: FILL_STYLE_FLAG,\n\t        ComponentStillLoadingError: ComponentStillLoadingError,\n\t        isPromise: isPromise,\n\t        AnimationTransition: AnimationTransition\n\t    };\n\t\n\t    exports.createPlatform = createPlatform;\n\t    exports.assertPlatform = assertPlatform;\n\t    exports.destroyPlatform = destroyPlatform;\n\t    exports.getPlatform = getPlatform;\n\t    exports.PlatformRef = PlatformRef;\n\t    exports.ApplicationRef = ApplicationRef;\n\t    exports.enableProdMode = enableProdMode;\n\t    exports.isDevMode = isDevMode;\n\t    exports.createPlatformFactory = createPlatformFactory;\n\t    exports.APP_ID = APP_ID;\n\t    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n\t    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n\t    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n\t    exports.APP_INITIALIZER = APP_INITIALIZER;\n\t    exports.ApplicationInitStatus = ApplicationInitStatus;\n\t    exports.DebugElement = DebugElement;\n\t    exports.DebugNode = DebugNode;\n\t    exports.asNativeElements = asNativeElements;\n\t    exports.getDebugNode = getDebugNode;\n\t    exports.Testability = Testability;\n\t    exports.TestabilityRegistry = TestabilityRegistry;\n\t    exports.setTestabilityGetter = setTestabilityGetter;\n\t    exports.TRANSLATIONS = TRANSLATIONS;\n\t    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n\t    exports.LOCALE_ID = LOCALE_ID;\n\t    exports.ApplicationModule = ApplicationModule;\n\t    exports.wtfCreateScope = wtfCreateScope;\n\t    exports.wtfLeave = wtfLeave;\n\t    exports.wtfStartTimeRange = wtfStartTimeRange;\n\t    exports.wtfEndTimeRange = wtfEndTimeRange;\n\t    exports.Type = Type;\n\t    exports.EventEmitter = EventEmitter;\n\t    exports.ErrorHandler = ErrorHandler;\n\t    exports.AnimationTransitionEvent = AnimationTransitionEvent;\n\t    exports.AnimationPlayer = AnimationPlayer;\n\t    exports.Sanitizer = Sanitizer;\n\t    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n\t    exports.Attribute = Attribute;\n\t    exports.ContentChild = ContentChild;\n\t    exports.ContentChildren = ContentChildren;\n\t    exports.Query = Query;\n\t    exports.ViewChild = ViewChild;\n\t    exports.ViewChildren = ViewChildren;\n\t    exports.Component = Component;\n\t    exports.Directive = Directive;\n\t    exports.HostBinding = HostBinding;\n\t    exports.HostListener = HostListener;\n\t    exports.Input = Input;\n\t    exports.Output = Output;\n\t    exports.Pipe = Pipe;\n\t    exports.AfterContentChecked = AfterContentChecked;\n\t    exports.AfterContentInit = AfterContentInit;\n\t    exports.AfterViewChecked = AfterViewChecked;\n\t    exports.AfterViewInit = AfterViewInit;\n\t    exports.DoCheck = DoCheck;\n\t    exports.OnChanges = OnChanges;\n\t    exports.OnDestroy = OnDestroy;\n\t    exports.OnInit = OnInit;\n\t    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n\t    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n\t    exports.NgModule = NgModule;\n\t    exports.Class = Class;\n\t    exports.forwardRef = forwardRef;\n\t    exports.resolveForwardRef = resolveForwardRef;\n\t    exports.Injector = Injector;\n\t    exports.ReflectiveInjector = ReflectiveInjector;\n\t    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n\t    exports.ReflectiveKey = ReflectiveKey;\n\t    exports.OpaqueToken = OpaqueToken;\n\t    exports.Inject = Inject;\n\t    exports.Optional = Optional;\n\t    exports.Injectable = Injectable;\n\t    exports.Self = Self;\n\t    exports.SkipSelf = SkipSelf;\n\t    exports.Host = Host;\n\t    exports.NgZone = NgZone;\n\t    exports.RenderComponentType = RenderComponentType;\n\t    exports.Renderer = Renderer;\n\t    exports.RootRenderer = RootRenderer;\n\t    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n\t    exports.Compiler = Compiler;\n\t    exports.CompilerFactory = CompilerFactory;\n\t    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n\t    exports.ComponentFactory = ComponentFactory;\n\t    exports.ComponentRef = ComponentRef;\n\t    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n\t    exports.ElementRef = ElementRef;\n\t    exports.NgModuleFactory = NgModuleFactory;\n\t    exports.NgModuleRef = NgModuleRef;\n\t    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n\t    exports.getModuleFactory = getModuleFactory;\n\t    exports.QueryList = QueryList;\n\t    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n\t    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n\t    exports.TemplateRef = TemplateRef;\n\t    exports.ViewContainerRef = ViewContainerRef;\n\t    exports.EmbeddedViewRef = EmbeddedViewRef;\n\t    exports.ViewRef = ViewRef;\n\t    exports.ChangeDetectorRef = ChangeDetectorRef;\n\t    exports.CollectionChangeRecord = CollectionChangeRecord;\n\t    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n\t    exports.IterableDiffers = IterableDiffers;\n\t    exports.KeyValueChangeRecord = KeyValueChangeRecord;\n\t    exports.KeyValueDiffers = KeyValueDiffers;\n\t    exports.SimpleChange = SimpleChange;\n\t    exports.WrappedValue = WrappedValue;\n\t    exports.platformCore = platformCore;\n\t    exports.__core_private__ = __core_private__;\n\t    exports.AUTO_STYLE = AUTO_STYLE;\n\t    exports.AnimationEntryMetadata = AnimationEntryMetadata;\n\t    exports.AnimationStateMetadata = AnimationStateMetadata;\n\t    exports.AnimationStateDeclarationMetadata = AnimationStateDeclarationMetadata;\n\t    exports.AnimationStateTransitionMetadata = AnimationStateTransitionMetadata;\n\t    exports.AnimationMetadata = AnimationMetadata;\n\t    exports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata;\n\t    exports.AnimationStyleMetadata = AnimationStyleMetadata;\n\t    exports.AnimationAnimateMetadata = AnimationAnimateMetadata;\n\t    exports.AnimationWithStepsMetadata = AnimationWithStepsMetadata;\n\t    exports.AnimationSequenceMetadata = AnimationSequenceMetadata;\n\t    exports.AnimationGroupMetadata = AnimationGroupMetadata;\n\t    exports.animate = animate;\n\t    exports.group = group;\n\t    exports.sequence = sequence;\n\t    exports.style = style;\n\t    exports.state = state;\n\t    exports.keyframes = keyframes;\n\t    exports.transition = transition;\n\t    exports.trigger = trigger;\n\t\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 89:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @license Angular v2.1.2\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(88), __webpack_require__(12), __webpack_require__(62)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/compiler', '@angular/core', '@angular/platform-browser'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.platformBrowserDynamic = global.ng.platformBrowserDynamic || {}),global.ng.compiler,global.ng.core,global.ng.platformBrowser));\n\t}(this, function (exports,_angular_compiler,_angular_core,_angular_platformBrowser) { 'use strict';\n\t\n\t    var INTERNAL_BROWSER_PLATFORM_PROVIDERS = _angular_platformBrowser.__platform_browser_private__.INTERNAL_BROWSER_PLATFORM_PROVIDERS;\n\t\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var ResourceLoaderImpl = (function (_super) {\n\t        __extends(ResourceLoaderImpl, _super);\n\t        function ResourceLoaderImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        ResourceLoaderImpl.prototype.get = function (url) {\n\t            var resolve;\n\t            var reject;\n\t            var promise = new Promise(function (res, rej) {\n\t                resolve = res;\n\t                reject = rej;\n\t            });\n\t            var xhr = new XMLHttpRequest();\n\t            xhr.open('GET', url, true);\n\t            xhr.responseType = 'text';\n\t            xhr.onload = function () {\n\t                // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n\t                // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n\t                // by IE10)\n\t                var response = xhr.response || xhr.responseText;\n\t                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n\t                var status = xhr.status === 1223 ? 204 : xhr.status;\n\t                // fix status code when it is 0 (0 status is undocumented).\n\t                // Occurs when accessing file resources or on Android 4.1 stock browser\n\t                // while retrieving files from application cache.\n\t                if (status === 0) {\n\t                    status = response ? 200 : 0;\n\t                }\n\t                if (200 <= status && status <= 300) {\n\t                    resolve(response);\n\t                }\n\t                else {\n\t                    reject(\"Failed to load \" + url);\n\t                }\n\t            };\n\t            xhr.onerror = function () { reject(\"Failed to load \" + url); };\n\t            xhr.send();\n\t            return promise;\n\t        };\n\t        ResourceLoaderImpl.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ResourceLoaderImpl.ctorParameters = [];\n\t        return ResourceLoaderImpl;\n\t    }(_angular_compiler.ResourceLoader));\n\t\n\t    var INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [\n\t        INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n\t        {\n\t            provide: _angular_core.COMPILER_OPTIONS,\n\t            useValue: { providers: [{ provide: _angular_compiler.ResourceLoader, useClass: ResourceLoaderImpl }] },\n\t            multi: true\n\t        },\n\t    ];\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var globalScope;\n\t    if (typeof window === 'undefined') {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = self;\n\t        }\n\t        else {\n\t            globalScope = global;\n\t        }\n\t    }\n\t    else {\n\t        globalScope = window;\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var _global = globalScope;\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    _global.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n\t     * ResourceLoader.\n\t     *\n\t     * The template cache needs to be built and loaded into window.$templateCache\n\t     * via a separate mechanism.\n\t     */\n\t    var CachedResourceLoader = (function (_super) {\n\t        __extends$1(CachedResourceLoader, _super);\n\t        function CachedResourceLoader() {\n\t            _super.call(this);\n\t            this._cache = _global.$templateCache;\n\t            if (this._cache == null) {\n\t                throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n\t            }\n\t        }\n\t        CachedResourceLoader.prototype.get = function (url) {\n\t            if (this._cache.hasOwnProperty(url)) {\n\t                return Promise.resolve(this._cache[url]);\n\t            }\n\t            else {\n\t                return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n\t            }\n\t        };\n\t        return CachedResourceLoader;\n\t    }(_angular_compiler.ResourceLoader));\n\t\n\t    var __platform_browser_dynamic_private__ = {\n\t        INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS,\n\t        ResourceLoaderImpl: ResourceLoaderImpl\n\t    };\n\t\n\t    /**\n\t     * @experimental\n\t     */\n\t    var RESOURCE_CACHE_PROVIDER = [{ provide: _angular_compiler.ResourceLoader, useClass: CachedResourceLoader }];\n\t    /**\n\t     * @stable\n\t     */\n\t    var platformBrowserDynamic = _angular_core.createPlatformFactory(_angular_compiler.platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\t\n\t    exports.RESOURCE_CACHE_PROVIDER = RESOURCE_CACHE_PROVIDER;\n\t    exports.platformBrowserDynamic = platformBrowserDynamic;\n\t    exports.__platform_browser_dynamic_private__ = __platform_browser_dynamic_private__;\n\t\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 62:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @license Angular v2.1.2\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(61), __webpack_require__(12)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.platformBrowser = global.ng.platformBrowser || {}),global.ng.common,global.ng.core));\n\t}(this, function (exports,_angular_common,_angular_core) { 'use strict';\n\t\n\t    var DebugDomRootRenderer = _angular_core.__core_private__.DebugDomRootRenderer;\n\t    var NoOpAnimationPlayer = _angular_core.__core_private__.NoOpAnimationPlayer;\n\t\n\t    var _NoOpAnimationDriver = (function () {\n\t        function _NoOpAnimationDriver() {\n\t        }\n\t        _NoOpAnimationDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing) {\n\t            return new NoOpAnimationPlayer();\n\t        };\n\t        return _NoOpAnimationDriver;\n\t    }());\n\t    /**\n\t     * @experimental\n\t     */\n\t    var AnimationDriver = (function () {\n\t        function AnimationDriver() {\n\t        }\n\t        AnimationDriver.NOOP = new _NoOpAnimationDriver();\n\t        return AnimationDriver;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var globalScope;\n\t    if (typeof window === 'undefined') {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = self;\n\t        }\n\t        else {\n\t            globalScope = global;\n\t        }\n\t    }\n\t    else {\n\t        globalScope = window;\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var global$1 = globalScope;\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    global$1.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    function stringify(token) {\n\t        if (typeof token === 'string') {\n\t            return token;\n\t        }\n\t        if (token === undefined || token === null) {\n\t            return '' + token;\n\t        }\n\t        if (token.overriddenName) {\n\t            return token.overriddenName;\n\t        }\n\t        if (token.name) {\n\t            return token.name;\n\t        }\n\t        var res = token.toString();\n\t        var newLineIndex = res.indexOf('\\n');\n\t        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t    }\n\t    function setValueOnPath(global, path, value) {\n\t        var parts = path.split('.');\n\t        var obj = global;\n\t        while (parts.length > 1) {\n\t            var name = parts.shift();\n\t            if (obj.hasOwnProperty(name) && isPresent(obj[name])) {\n\t                obj = obj[name];\n\t            }\n\t            else {\n\t                obj = obj[name] = {};\n\t            }\n\t        }\n\t        if (obj === undefined || obj === null) {\n\t            obj = {};\n\t        }\n\t        obj[parts.shift()] = value;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n\t    var DASH_CASE_REGEXP = /-([a-z])/g;\n\t    function camelCaseToDashCase(input) {\n\t        return input.replace(CAMEL_CASE_REGEXP, function () {\n\t            var m = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                m[_i - 0] = arguments[_i];\n\t            }\n\t            return '-' + m[1].toLowerCase();\n\t        });\n\t    }\n\t    function dashCaseToCamelCase(input) {\n\t        return input.replace(DASH_CASE_REGEXP, function () {\n\t            var m = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                m[_i - 0] = arguments[_i];\n\t            }\n\t            return m[1].toUpperCase();\n\t        });\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var _DOM = null;\n\t    function getDOM() {\n\t        return _DOM;\n\t    }\n\t    function setRootDomAdapter(adapter) {\n\t        if (!_DOM) {\n\t            _DOM = adapter;\n\t        }\n\t    }\n\t    /* tslint:disable:requireParameterType */\n\t    /**\n\t     * Provides DOM operations in an environment-agnostic way.\n\t     *\n\t     * @security Tread carefully! Interacting with the DOM directly is dangerous and\n\t     * can introduce XSS risks.\n\t     */\n\t    var DomAdapter = (function () {\n\t        function DomAdapter() {\n\t            this.resourceLoaderType = null;\n\t        }\n\t        Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\n\t            /**\n\t             * Maps attribute names to their corresponding property names for cases\n\t             * where attribute name doesn't match property name.\n\t             */\n\t            get: function () { return this._attrToPropMap; },\n\t            set: function (value) { this._attrToPropMap = value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        ;\n\t        return DomAdapter;\n\t    }());\n\t\n\t    var WebAnimationsPlayer = (function () {\n\t        function WebAnimationsPlayer(element, keyframes, options) {\n\t            this.element = element;\n\t            this.keyframes = keyframes;\n\t            this.options = options;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._finished = false;\n\t            this._initialized = false;\n\t            this._started = false;\n\t            this.parentPlayer = null;\n\t            this._duration = options['duration'];\n\t        }\n\t        WebAnimationsPlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                if (!isPresent(this.parentPlayer)) {\n\t                    this.destroy();\n\t                }\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        WebAnimationsPlayer.prototype.init = function () {\n\t            var _this = this;\n\t            if (this._initialized)\n\t                return;\n\t            this._initialized = true;\n\t            var keyframes = this.keyframes.map(function (styles) {\n\t                var formattedKeyframe = {};\n\t                Object.keys(styles).forEach(function (prop) {\n\t                    var value = styles[prop];\n\t                    formattedKeyframe[prop] = value == _angular_core.AUTO_STYLE ? _computeStyle(_this.element, prop) : value;\n\t                });\n\t                return formattedKeyframe;\n\t            });\n\t            this._player = this._triggerWebAnimation(this.element, keyframes, this.options);\n\t            // this is required so that the player doesn't start to animate right away\n\t            this.reset();\n\t            this._player.onfinish = function () { return _this._onFinish(); };\n\t        };\n\t        /** @internal */\n\t        WebAnimationsPlayer.prototype._triggerWebAnimation = function (element, keyframes, options) {\n\t            return element.animate(keyframes, options);\n\t        };\n\t        WebAnimationsPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        WebAnimationsPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        WebAnimationsPlayer.prototype.play = function () {\n\t            this.init();\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._player.play();\n\t        };\n\t        WebAnimationsPlayer.prototype.pause = function () {\n\t            this.init();\n\t            this._player.pause();\n\t        };\n\t        WebAnimationsPlayer.prototype.finish = function () {\n\t            this.init();\n\t            this._onFinish();\n\t            this._player.finish();\n\t        };\n\t        WebAnimationsPlayer.prototype.reset = function () { this._player.cancel(); };\n\t        WebAnimationsPlayer.prototype.restart = function () {\n\t            this.reset();\n\t            this.play();\n\t        };\n\t        WebAnimationsPlayer.prototype.hasStarted = function () { return this._started; };\n\t        WebAnimationsPlayer.prototype.destroy = function () {\n\t            this.reset();\n\t            this._onFinish();\n\t        };\n\t        Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n\t            get: function () { return this._duration; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        WebAnimationsPlayer.prototype.setPosition = function (p) { this._player.currentTime = p * this.totalTime; };\n\t        WebAnimationsPlayer.prototype.getPosition = function () { return this._player.currentTime / this.totalTime; };\n\t        return WebAnimationsPlayer;\n\t    }());\n\t    function _computeStyle(element, prop) {\n\t        return getDOM().getComputedStyle(element)[prop];\n\t    }\n\t\n\t    var WebAnimationsDriver = (function () {\n\t        function WebAnimationsDriver() {\n\t        }\n\t        WebAnimationsDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing) {\n\t            var formattedSteps = [];\n\t            var startingStyleLookup = {};\n\t            if (isPresent(startingStyles) && startingStyles.styles.length > 0) {\n\t                startingStyleLookup = _populateStyles(element, startingStyles, {});\n\t                startingStyleLookup['offset'] = 0;\n\t                formattedSteps.push(startingStyleLookup);\n\t            }\n\t            keyframes.forEach(function (keyframe) {\n\t                var data = _populateStyles(element, keyframe.styles, startingStyleLookup);\n\t                data['offset'] = keyframe.offset;\n\t                formattedSteps.push(data);\n\t            });\n\t            // this is a special case when only styles are applied as an\n\t            // animation. When this occurs we want to animate from start to\n\t            // end with the same values. Removing the offset and having only\n\t            // start/end values is suitable enough for the web-animations API\n\t            if (formattedSteps.length == 1) {\n\t                var start = formattedSteps[0];\n\t                start['offset'] = null;\n\t                formattedSteps = [start, start];\n\t            }\n\t            var playerOptions = {\n\t                'duration': duration,\n\t                'delay': delay,\n\t                'fill': 'both' // we use `both` because it allows for styling at 0% to work with `delay`\n\t            };\n\t            // we check for this to avoid having a null|undefined value be present\n\t            // for the easing (which results in an error for certain browsers #9752)\n\t            if (easing) {\n\t                playerOptions['easing'] = easing;\n\t            }\n\t            return new WebAnimationsPlayer(element, formattedSteps, playerOptions);\n\t        };\n\t        return WebAnimationsDriver;\n\t    }());\n\t    function _populateStyles(element, styles, defaultStyles) {\n\t        var data = {};\n\t        styles.styles.forEach(function (entry) {\n\t            Object.keys(entry).forEach(function (prop) {\n\t                var val = entry[prop];\n\t                var formattedProp = dashCaseToCamelCase(prop);\n\t                data[formattedProp] =\n\t                    val == _angular_core.AUTO_STYLE ? val : val.toString() + _resolveStyleUnit(val, prop, formattedProp);\n\t            });\n\t        });\n\t        Object.keys(defaultStyles).forEach(function (prop) {\n\t            if (!isPresent(data[prop])) {\n\t                data[prop] = defaultStyles[prop];\n\t            }\n\t        });\n\t        return data;\n\t    }\n\t    function _resolveStyleUnit(val, userProvidedProp, formattedProp) {\n\t        var unit = '';\n\t        if (_isPixelDimensionStyle(formattedProp) && val != 0 && val != '0') {\n\t            if (typeof val === 'number') {\n\t                unit = 'px';\n\t            }\n\t            else if (_findDimensionalSuffix(val.toString()).length == 0) {\n\t                throw new Error('Please provide a CSS unit value for ' + userProvidedProp + ':' + val);\n\t            }\n\t        }\n\t        return unit;\n\t    }\n\t    var _$0 = 48;\n\t    var _$9 = 57;\n\t    var _$PERIOD = 46;\n\t    function _findDimensionalSuffix(value) {\n\t        for (var i = 0; i < value.length; i++) {\n\t            var c = value.charCodeAt(i);\n\t            if ((c >= _$0 && c <= _$9) || c == _$PERIOD)\n\t                continue;\n\t            return value.substring(i, value.length);\n\t        }\n\t        return '';\n\t    }\n\t    function _isPixelDimensionStyle(prop) {\n\t        switch (prop) {\n\t            case 'width':\n\t            case 'height':\n\t            case 'minWidth':\n\t            case 'minHeight':\n\t            case 'maxWidth':\n\t            case 'maxHeight':\n\t            case 'left':\n\t            case 'top':\n\t            case 'bottom':\n\t            case 'right':\n\t            case 'fontSize':\n\t            case 'outlineWidth':\n\t            case 'outlineOffset':\n\t            case 'paddingTop':\n\t            case 'paddingLeft':\n\t            case 'paddingBottom':\n\t            case 'paddingRight':\n\t            case 'marginTop':\n\t            case 'marginLeft':\n\t            case 'marginBottom':\n\t            case 'marginRight':\n\t            case 'borderRadius':\n\t            case 'borderWidth':\n\t            case 'borderTopWidth':\n\t            case 'borderLeftWidth':\n\t            case 'borderRightWidth':\n\t            case 'borderBottomWidth':\n\t            case 'textIndent':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Provides DOM operations in any browser environment.\n\t     *\n\t     * @security Tread carefully! Interacting with the DOM directly is dangerous and\n\t     * can introduce XSS risks.\n\t     */\n\t    var GenericBrowserDomAdapter = (function (_super) {\n\t        __extends$1(GenericBrowserDomAdapter, _super);\n\t        function GenericBrowserDomAdapter() {\n\t            var _this = this;\n\t            _super.call(this);\n\t            this._animationPrefix = null;\n\t            this._transitionEnd = null;\n\t            try {\n\t                var element_1 = this.createElement('div', this.defaultDoc());\n\t                if (isPresent(this.getStyle(element_1, 'animationName'))) {\n\t                    this._animationPrefix = '';\n\t                }\n\t                else {\n\t                    var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\t                    for (var i = 0; i < domPrefixes.length; i++) {\n\t                        if (isPresent(this.getStyle(element_1, domPrefixes[i] + 'AnimationName'))) {\n\t                            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                var transEndEventNames_1 = {\n\t                    WebkitTransition: 'webkitTransitionEnd',\n\t                    MozTransition: 'transitionend',\n\t                    OTransition: 'oTransitionEnd otransitionend',\n\t                    transition: 'transitionend'\n\t                };\n\t                Object.keys(transEndEventNames_1).forEach(function (key) {\n\t                    if (isPresent(_this.getStyle(element_1, key))) {\n\t                        _this._transitionEnd = transEndEventNames_1[key];\n\t                    }\n\t                });\n\t            }\n\t            catch (e) {\n\t                this._animationPrefix = null;\n\t                this._transitionEnd = null;\n\t            }\n\t        }\n\t        GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return el.getDistributedNodes(); };\n\t        GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\n\t            el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n\t        };\n\t        GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\n\t        GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\n\t            return typeof this.defaultDoc().body.createShadowRoot === 'function';\n\t        };\n\t        GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () { return this._animationPrefix ? this._animationPrefix : ''; };\n\t        GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return this._transitionEnd ? this._transitionEnd : ''; };\n\t        GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\n\t            return isPresent(this._animationPrefix) && isPresent(this._transitionEnd);\n\t        };\n\t        return GenericBrowserDomAdapter;\n\t    }(DomAdapter));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var _attrToPropMap = {\n\t        'class': 'className',\n\t        'innerHtml': 'innerHTML',\n\t        'readonly': 'readOnly',\n\t        'tabindex': 'tabIndex',\n\t    };\n\t    var DOM_KEY_LOCATION_NUMPAD = 3;\n\t    // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n\t    var _keyMap = {\n\t        // The following values are here for cross-browser compatibility and to match the W3C standard\n\t        // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n\t        '\\b': 'Backspace',\n\t        '\\t': 'Tab',\n\t        '\\x7F': 'Delete',\n\t        '\\x1B': 'Escape',\n\t        'Del': 'Delete',\n\t        'Esc': 'Escape',\n\t        'Left': 'ArrowLeft',\n\t        'Right': 'ArrowRight',\n\t        'Up': 'ArrowUp',\n\t        'Down': 'ArrowDown',\n\t        'Menu': 'ContextMenu',\n\t        'Scroll': 'ScrollLock',\n\t        'Win': 'OS'\n\t    };\n\t    // There is a bug in Chrome for numeric keypad keys:\n\t    // https://code.google.com/p/chromium/issues/detail?id=155654\n\t    // 1, 2, 3 ... are reported as A, B, C ...\n\t    var _chromeNumKeyPadMap = {\n\t        'A': '1',\n\t        'B': '2',\n\t        'C': '3',\n\t        'D': '4',\n\t        'E': '5',\n\t        'F': '6',\n\t        'G': '7',\n\t        'H': '8',\n\t        'I': '9',\n\t        'J': '*',\n\t        'K': '+',\n\t        'M': '-',\n\t        'N': '.',\n\t        'O': '/',\n\t        '\\x60': '0',\n\t        '\\x90': 'NumLock'\n\t    };\n\t    /**\n\t     * A `DomAdapter` powered by full browser DOM APIs.\n\t     *\n\t     * @security Tread carefully! Interacting with the DOM directly is dangerous and\n\t     * can introduce XSS risks.\n\t     */\n\t    /* tslint:disable:requireParameterType */\n\t    var BrowserDomAdapter = (function (_super) {\n\t        __extends(BrowserDomAdapter, _super);\n\t        function BrowserDomAdapter() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error('parse not implemented'); };\n\t        BrowserDomAdapter.makeCurrent = function () { setRootDomAdapter(new BrowserDomAdapter()); };\n\t        BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\n\t        BrowserDomAdapter.prototype.setProperty = function (el, name, value) { el[name] = value; };\n\t        BrowserDomAdapter.prototype.getProperty = function (el, name) { return el[name]; };\n\t        BrowserDomAdapter.prototype.invoke = function (el, methodName, args) { (_a = el)[methodName].apply(_a, args); var _a; };\n\t        // TODO(tbosch): move this into a separate environment class once we have it\n\t        BrowserDomAdapter.prototype.logError = function (error) { (window.console.error || window.console.log)(error); };\n\t        BrowserDomAdapter.prototype.log = function (error) { window.console.log(error); };\n\t        BrowserDomAdapter.prototype.logGroup = function (error) {\n\t            window.console.group && window.console.group(error);\n\t            this.logError(error);\n\t        };\n\t        BrowserDomAdapter.prototype.logGroupEnd = function () { window.console.groupEnd && window.console.groupEnd(); };\n\t        Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\n\t            get: function () { return _attrToPropMap; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        BrowserDomAdapter.prototype.query = function (selector) { return document.querySelector(selector); };\n\t        BrowserDomAdapter.prototype.querySelector = function (el, selector) {\n\t            return el.querySelector(selector);\n\t        };\n\t        BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\n\t        BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\n\t        BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\n\t            el.addEventListener(evt, listener, false);\n\t            // Needed to follow Dart's subscription semantic, until fix of\n\t            // https://code.google.com/p/dart/issues/detail?id=17406\n\t            return function () { el.removeEventListener(evt, listener, false); };\n\t        };\n\t        BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\n\t        BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\n\t            var evt = document.createEvent('MouseEvent');\n\t            evt.initEvent(eventType, true, true);\n\t            return evt;\n\t        };\n\t        BrowserDomAdapter.prototype.createEvent = function (eventType) {\n\t            var evt = document.createEvent('Event');\n\t            evt.initEvent(eventType, true, true);\n\t            return evt;\n\t        };\n\t        BrowserDomAdapter.prototype.preventDefault = function (evt) {\n\t            evt.preventDefault();\n\t            evt.returnValue = false;\n\t        };\n\t        BrowserDomAdapter.prototype.isPrevented = function (evt) {\n\t            return evt.defaultPrevented || isPresent(evt.returnValue) && !evt.returnValue;\n\t        };\n\t        BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\n\t        BrowserDomAdapter.prototype.getTemplateContent = function (el) {\n\t            return 'content' in el && el instanceof HTMLTemplateElement ? el.content : null;\n\t        };\n\t        BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\n\t        BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\n\t        BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\n\t        BrowserDomAdapter.prototype.type = function (node) { return node.type; };\n\t        BrowserDomAdapter.prototype.content = function (node) {\n\t            if (this.hasProperty(node, 'content')) {\n\t                return node.content;\n\t            }\n\t            else {\n\t                return node;\n\t            }\n\t        };\n\t        BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\n\t        BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\n\t        BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\n\t        BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\n\t        BrowserDomAdapter.prototype.childNodesAsList = function (el) {\n\t            var childNodes = el.childNodes;\n\t            var res = new Array(childNodes.length);\n\t            for (var i = 0; i < childNodes.length; i++) {\n\t                res[i] = childNodes[i];\n\t            }\n\t            return res;\n\t        };\n\t        BrowserDomAdapter.prototype.clearNodes = function (el) {\n\t            while (el.firstChild) {\n\t                el.removeChild(el.firstChild);\n\t            }\n\t        };\n\t        BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\n\t        BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\n\t        BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\n\t        BrowserDomAdapter.prototype.remove = function (node) {\n\t            if (node.parentNode) {\n\t                node.parentNode.removeChild(node);\n\t            }\n\t            return node;\n\t        };\n\t        BrowserDomAdapter.prototype.insertBefore = function (el, node) { el.parentNode.insertBefore(node, el); };\n\t        BrowserDomAdapter.prototype.insertAllBefore = function (el, nodes) {\n\t            nodes.forEach(function (n) { return el.parentNode.insertBefore(n, el); });\n\t        };\n\t        BrowserDomAdapter.prototype.insertAfter = function (el, node) { el.parentNode.insertBefore(node, el.nextSibling); };\n\t        BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\n\t        BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\n\t        BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\n\t        BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\n\t        BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\n\t        BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\n\t        BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\n\t        BrowserDomAdapter.prototype.createComment = function (text) { return document.createComment(text); };\n\t        BrowserDomAdapter.prototype.createTemplate = function (html) {\n\t            var t = document.createElement('template');\n\t            t.innerHTML = html;\n\t            return t;\n\t        };\n\t        BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            return doc.createElement(tagName);\n\t        };\n\t        BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            return doc.createElementNS(ns, tagName);\n\t        };\n\t        BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            return doc.createTextNode(text);\n\t        };\n\t        BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            var el = doc.createElement('SCRIPT');\n\t            el.setAttribute(attrName, attrValue);\n\t            return el;\n\t        };\n\t        BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            var style = doc.createElement('style');\n\t            this.appendChild(style, this.createTextNode(css));\n\t            return style;\n\t        };\n\t        BrowserDomAdapter.prototype.createShadowRoot = function (el) { return el.createShadowRoot(); };\n\t        BrowserDomAdapter.prototype.getShadowRoot = function (el) { return el.shadowRoot; };\n\t        BrowserDomAdapter.prototype.getHost = function (el) { return el.host; };\n\t        BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\n\t        BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\n\t            return element.getElementsByClassName(name);\n\t        };\n\t        BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\n\t            return element.getElementsByTagName(name);\n\t        };\n\t        BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\n\t        BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\n\t        BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\n\t        BrowserDomAdapter.prototype.hasClass = function (element, className) {\n\t            return element.classList.contains(className);\n\t        };\n\t        BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\n\t            element.style[styleName] = styleValue;\n\t        };\n\t        BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {\n\t            // IE requires '' instead of null\n\t            // see https://github.com/angular/angular/issues/7916\n\t            element.style[stylename] = '';\n\t        };\n\t        BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\n\t        BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\n\t            if (styleValue === void 0) { styleValue = null; }\n\t            var value = this.getStyle(element, styleName) || '';\n\t            return styleValue ? value == styleValue : value.length > 0;\n\t        };\n\t        BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\n\t        BrowserDomAdapter.prototype.attributeMap = function (element) {\n\t            var res = new Map();\n\t            var elAttrs = element.attributes;\n\t            for (var i = 0; i < elAttrs.length; i++) {\n\t                var attrib = elAttrs[i];\n\t                res.set(attrib.name, attrib.value);\n\t            }\n\t            return res;\n\t        };\n\t        BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {\n\t            return element.hasAttribute(attribute);\n\t        };\n\t        BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {\n\t            return element.hasAttributeNS(ns, attribute);\n\t        };\n\t        BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {\n\t            return element.getAttribute(attribute);\n\t        };\n\t        BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {\n\t            return element.getAttributeNS(ns, name);\n\t        };\n\t        BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\n\t        BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\n\t            element.setAttributeNS(ns, name, value);\n\t        };\n\t        BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\n\t        BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {\n\t            element.removeAttributeNS(ns, name);\n\t        };\n\t        BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\n\t        BrowserDomAdapter.prototype.createHtmlDocument = function () {\n\t            return document.implementation.createHTMLDocument('fakeTitle');\n\t        };\n\t        BrowserDomAdapter.prototype.defaultDoc = function () { return document; };\n\t        BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\n\t            try {\n\t                return el.getBoundingClientRect();\n\t            }\n\t            catch (e) {\n\t                return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n\t            }\n\t        };\n\t        BrowserDomAdapter.prototype.getTitle = function () { return document.title; };\n\t        BrowserDomAdapter.prototype.setTitle = function (newTitle) { document.title = newTitle || ''; };\n\t        BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\n\t            if (n instanceof HTMLElement) {\n\t                return n.matches && n.matches(selector) ||\n\t                    n.msMatchesSelector && n.msMatchesSelector(selector) ||\n\t                    n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n\t            }\n\t            return false;\n\t        };\n\t        BrowserDomAdapter.prototype.isTemplateElement = function (el) {\n\t            return el instanceof HTMLElement && el.nodeName == 'TEMPLATE';\n\t        };\n\t        BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\n\t        BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\n\t        BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\n\t        BrowserDomAdapter.prototype.hasShadowRoot = function (node) {\n\t            return isPresent(node.shadowRoot) && node instanceof HTMLElement;\n\t        };\n\t        BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\n\t        BrowserDomAdapter.prototype.importIntoDoc = function (node) { return document.importNode(this.templateAwareRoot(node), true); };\n\t        BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\n\t        BrowserDomAdapter.prototype.getHref = function (el) { return el.href; };\n\t        BrowserDomAdapter.prototype.getEventKey = function (event) {\n\t            var key = event.key;\n\t            if (isBlank(key)) {\n\t                key = event.keyIdentifier;\n\t                // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n\t                // Safari cf\n\t                // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n\t                if (isBlank(key)) {\n\t                    return 'Unidentified';\n\t                }\n\t                if (key.startsWith('U+')) {\n\t                    key = String.fromCharCode(parseInt(key.substring(2), 16));\n\t                    if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n\t                        // There is a bug in Chrome for numeric keypad keys:\n\t                        // https://code.google.com/p/chromium/issues/detail?id=155654\n\t                        // 1, 2, 3 ... are reported as A, B, C ...\n\t                        key = _chromeNumKeyPadMap[key];\n\t                    }\n\t                }\n\t            }\n\t            return _keyMap[key] || key;\n\t        };\n\t        BrowserDomAdapter.prototype.getGlobalEventTarget = function (target) {\n\t            if (target === 'window') {\n\t                return window;\n\t            }\n\t            if (target === 'document') {\n\t                return document;\n\t            }\n\t            if (target === 'body') {\n\t                return document.body;\n\t            }\n\t        };\n\t        BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\n\t        BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\n\t        BrowserDomAdapter.prototype.getBaseHref = function () {\n\t            var href = getBaseElementHref();\n\t            return isBlank(href) ? null : relativePath(href);\n\t        };\n\t        BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\n\t        BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\n\t        BrowserDomAdapter.prototype.setData = function (element, name, value) {\n\t            this.setAttribute(element, 'data-' + name, value);\n\t        };\n\t        BrowserDomAdapter.prototype.getData = function (element, name) {\n\t            return this.getAttribute(element, 'data-' + name);\n\t        };\n\t        BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\n\t        // TODO(tbosch): move this into a separate environment class once we have it\n\t        BrowserDomAdapter.prototype.setGlobalVar = function (path, value) { setValueOnPath(global$1, path, value); };\n\t        BrowserDomAdapter.prototype.supportsWebAnimation = function () {\n\t            return typeof Element.prototype['animate'] === 'function';\n\t        };\n\t        BrowserDomAdapter.prototype.performanceNow = function () {\n\t            // performance.now() is not available in all browsers, see\n\t            // http://caniuse.com/#search=performance.now\n\t            return window.performance && window.performance.now ? window.performance.now() :\n\t                new Date().getTime();\n\t        };\n\t        BrowserDomAdapter.prototype.supportsCookies = function () { return true; };\n\t        BrowserDomAdapter.prototype.getCookie = function (name) { return parseCookieValue(document.cookie, name); };\n\t        BrowserDomAdapter.prototype.setCookie = function (name, value) {\n\t            // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n\t            // not clear other cookies.\n\t            document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n\t        };\n\t        return BrowserDomAdapter;\n\t    }(GenericBrowserDomAdapter));\n\t    var baseElement = null;\n\t    function getBaseElementHref() {\n\t        if (!baseElement) {\n\t            baseElement = document.querySelector('base');\n\t            if (!baseElement) {\n\t                return null;\n\t            }\n\t        }\n\t        return baseElement.getAttribute('href');\n\t    }\n\t    // based on urlUtils.js in AngularJS 1\n\t    var urlParsingNode;\n\t    function relativePath(url) {\n\t        if (!urlParsingNode) {\n\t            urlParsingNode = document.createElement('a');\n\t        }\n\t        urlParsingNode.setAttribute('href', url);\n\t        return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n\t            '/' + urlParsingNode.pathname;\n\t    }\n\t    function parseCookieValue(cookieStr, name) {\n\t        name = encodeURIComponent(name);\n\t        for (var _i = 0, _a = cookieStr.split(';'); _i < _a.length; _i++) {\n\t            var cookie = _a[_i];\n\t            var eqIndex = cookie.indexOf('=');\n\t            var _b = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], cookieName = _b[0], cookieValue = _b[1];\n\t            if (cookieName.trim() === name) {\n\t                return decodeURIComponent(cookieValue);\n\t            }\n\t        }\n\t        return null;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    function supportsState() {\n\t        return !!window.history.pushState;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n\t     * This class should not be used directly by an application developer. Instead, use\n\t     * {@link Location}.\n\t     */\n\t    var BrowserPlatformLocation = (function (_super) {\n\t        __extends$2(BrowserPlatformLocation, _super);\n\t        function BrowserPlatformLocation() {\n\t            _super.call(this);\n\t            this._init();\n\t        }\n\t        // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n\t        /** @internal */\n\t        BrowserPlatformLocation.prototype._init = function () {\n\t            this._location = getDOM().getLocation();\n\t            this._history = getDOM().getHistory();\n\t        };\n\t        Object.defineProperty(BrowserPlatformLocation.prototype, \"location\", {\n\t            get: function () { return this._location; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () { return getDOM().getBaseHref(); };\n\t        BrowserPlatformLocation.prototype.onPopState = function (fn) {\n\t            getDOM().getGlobalEventTarget('window').addEventListener('popstate', fn, false);\n\t        };\n\t        BrowserPlatformLocation.prototype.onHashChange = function (fn) {\n\t            getDOM().getGlobalEventTarget('window').addEventListener('hashchange', fn, false);\n\t        };\n\t        Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\n\t            get: function () { return this._location.pathname; },\n\t            set: function (newPath) { this._location.pathname = newPath; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\n\t            get: function () { return this._location.search; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\n\t            get: function () { return this._location.hash; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        BrowserPlatformLocation.prototype.pushState = function (state, title, url) {\n\t            if (supportsState()) {\n\t                this._history.pushState(state, title, url);\n\t            }\n\t            else {\n\t                this._location.hash = url;\n\t            }\n\t        };\n\t        BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {\n\t            if (supportsState()) {\n\t                this._history.replaceState(state, title, url);\n\t            }\n\t            else {\n\t                this._location.hash = url;\n\t            }\n\t        };\n\t        BrowserPlatformLocation.prototype.forward = function () { this._history.forward(); };\n\t        BrowserPlatformLocation.prototype.back = function () { this._history.back(); };\n\t        BrowserPlatformLocation.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        BrowserPlatformLocation.ctorParameters = [];\n\t        return BrowserPlatformLocation;\n\t    }(_angular_common.PlatformLocation));\n\t\n\t    var BrowserGetTestability = (function () {\n\t        function BrowserGetTestability() {\n\t        }\n\t        BrowserGetTestability.init = function () { _angular_core.setTestabilityGetter(new BrowserGetTestability()); };\n\t        BrowserGetTestability.prototype.addToWindow = function (registry) {\n\t            global$1.getAngularTestability = function (elem, findInAncestors) {\n\t                if (findInAncestors === void 0) { findInAncestors = true; }\n\t                var testability = registry.findTestabilityInTree(elem, findInAncestors);\n\t                if (testability == null) {\n\t                    throw new Error('Could not find testability for element.');\n\t                }\n\t                return testability;\n\t            };\n\t            global$1.getAllAngularTestabilities = function () { return registry.getAllTestabilities(); };\n\t            global$1.getAllAngularRootElements = function () { return registry.getAllRootElements(); };\n\t            var whenAllStable = function (callback /** TODO #9100 */) {\n\t                var testabilities = global$1.getAllAngularTestabilities();\n\t                var count = testabilities.length;\n\t                var didWork = false;\n\t                var decrement = function (didWork_ /** TODO #9100 */) {\n\t                    didWork = didWork || didWork_;\n\t                    count--;\n\t                    if (count == 0) {\n\t                        callback(didWork);\n\t                    }\n\t                };\n\t                testabilities.forEach(function (testability /** TODO #9100 */) {\n\t                    testability.whenStable(decrement);\n\t                });\n\t            };\n\t            if (!global$1['frameworkStabilizers']) {\n\t                global$1['frameworkStabilizers'] = [];\n\t            }\n\t            global$1['frameworkStabilizers'].push(whenAllStable);\n\t        };\n\t        BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n\t            if (elem == null) {\n\t                return null;\n\t            }\n\t            var t = registry.getTestability(elem);\n\t            if (isPresent(t)) {\n\t                return t;\n\t            }\n\t            else if (!findInAncestors) {\n\t                return null;\n\t            }\n\t            if (getDOM().isShadowRoot(elem)) {\n\t                return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n\t            }\n\t            return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n\t        };\n\t        return BrowserGetTestability;\n\t    }());\n\t\n\t    /**\n\t     * A service that can be used to get and set the title of a current HTML document.\n\t     *\n\t     * Since an Angular 2 application can't be bootstrapped on the entire HTML document (`<html>` tag)\n\t     * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n\t     * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n\t     * title value.\n\t     *\n\t     * @experimental\n\t     */\n\t    var Title = (function () {\n\t        function Title() {\n\t        }\n\t        /**\n\t         * Get the title of the current HTML document.\n\t         * @returns {string}\n\t         */\n\t        Title.prototype.getTitle = function () { return getDOM().getTitle(); };\n\t        /**\n\t         * Set the title of the current HTML document.\n\t         * @param newTitle\n\t         */\n\t        Title.prototype.setTitle = function (newTitle) { getDOM().setTitle(newTitle); };\n\t        return Title;\n\t    }());\n\t\n\t    // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n\t    // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n\t    var _arrayFromMap = (function () {\n\t        try {\n\t            if ((new Map()).values().next) {\n\t                return function createArrayFromMap(m, getValues) {\n\t                    return getValues ? Array.from(m.values()) : Array.from(m.keys());\n\t                };\n\t            }\n\t        }\n\t        catch (e) {\n\t        }\n\t        return function createArrayFromMapWithForeach(m, getValues) {\n\t            var res = new Array(m.size), i = 0;\n\t            m.forEach(function (v, k) {\n\t                res[i] = getValues ? v : k;\n\t                i++;\n\t            });\n\t            return res;\n\t        };\n\t    })();\n\t    /**\n\t     * Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var k1 = Object.keys(m1);\n\t            var k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var i = 0; i < k1.length; i++) {\n\t                var key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t    var ListWrapper = (function () {\n\t        function ListWrapper() {\n\t        }\n\t        ListWrapper.removeAll = function (list, items) {\n\t            for (var i = 0; i < items.length; ++i) {\n\t                var index = list.indexOf(items[i]);\n\t                list.splice(index, 1);\n\t            }\n\t        };\n\t        ListWrapper.remove = function (list, el) {\n\t            var index = list.indexOf(el);\n\t            if (index > -1) {\n\t                list.splice(index, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        ListWrapper.equals = function (a, b) {\n\t            if (a.length != b.length)\n\t                return false;\n\t            for (var i = 0; i < a.length; ++i) {\n\t                if (a[i] !== b[i])\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t        ListWrapper.maximum = function (list, predicate) {\n\t            if (list.length == 0) {\n\t                return null;\n\t            }\n\t            var solution = null;\n\t            var maxValue = -Infinity;\n\t            for (var index = 0; index < list.length; index++) {\n\t                var candidate = list[index];\n\t                if (candidate == null) {\n\t                    continue;\n\t                }\n\t                var candidateValue = predicate(candidate);\n\t                if (candidateValue > maxValue) {\n\t                    solution = candidate;\n\t                    maxValue = candidateValue;\n\t                }\n\t            }\n\t            return solution;\n\t        };\n\t        ListWrapper.flatten = function (list) {\n\t            var target = [];\n\t            _flattenArray(list, target);\n\t            return target;\n\t        };\n\t        return ListWrapper;\n\t    }());\n\t    function _flattenArray(source, target) {\n\t        if (isPresent(source)) {\n\t            for (var i = 0; i < source.length; i++) {\n\t                var item = source[i];\n\t                if (Array.isArray(item)) {\n\t                    _flattenArray(item, target);\n\t                }\n\t                else {\n\t                    target.push(item);\n\t                }\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t\n\t    /**\n\t     * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n\t     *\n\t     * Note: Document might not be available in the Application Context when Application and Rendering\n\t     * Contexts are not the same (e.g. when running the application into a Web Worker).\n\t     *\n\t     * @stable\n\t     */\n\t    var DOCUMENT = new _angular_core.OpaqueToken('DocumentToken');\n\t\n\t    /**\n\t     * @stable\n\t     */\n\t    var EVENT_MANAGER_PLUGINS = new _angular_core.OpaqueToken('EventManagerPlugins');\n\t    /**\n\t     * @stable\n\t     */\n\t    var EventManager = (function () {\n\t        function EventManager(plugins, _zone) {\n\t            var _this = this;\n\t            this._zone = _zone;\n\t            plugins.forEach(function (p) { return p.manager = _this; });\n\t            this._plugins = plugins.slice().reverse();\n\t        }\n\t        EventManager.prototype.addEventListener = function (element, eventName, handler) {\n\t            var plugin = this._findPluginFor(eventName);\n\t            return plugin.addEventListener(element, eventName, handler);\n\t        };\n\t        EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\n\t            var plugin = this._findPluginFor(eventName);\n\t            return plugin.addGlobalEventListener(target, eventName, handler);\n\t        };\n\t        EventManager.prototype.getZone = function () { return this._zone; };\n\t        /** @internal */\n\t        EventManager.prototype._findPluginFor = function (eventName) {\n\t            var plugins = this._plugins;\n\t            for (var i = 0; i < plugins.length; i++) {\n\t                var plugin = plugins[i];\n\t                if (plugin.supports(eventName)) {\n\t                    return plugin;\n\t                }\n\t            }\n\t            throw new Error(\"No event manager plugin found for event \" + eventName);\n\t        };\n\t        EventManager.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        EventManager.ctorParameters = [\n\t            { type: Array, decorators: [{ type: _angular_core.Inject, args: [EVENT_MANAGER_PLUGINS,] },] },\n\t            { type: _angular_core.NgZone, },\n\t        ];\n\t        return EventManager;\n\t    }());\n\t    var EventManagerPlugin = (function () {\n\t        function EventManagerPlugin() {\n\t        }\n\t        // That is equivalent to having supporting $event.target\n\t        EventManagerPlugin.prototype.supports = function (eventName) { return false; };\n\t        EventManagerPlugin.prototype.addEventListener = function (element, eventName, handler) {\n\t            throw 'not implemented';\n\t        };\n\t        EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\n\t            throw 'not implemented';\n\t        };\n\t        return EventManagerPlugin;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var SharedStylesHost = (function () {\n\t        function SharedStylesHost() {\n\t            /** @internal */\n\t            this._styles = [];\n\t            /** @internal */\n\t            this._stylesSet = new Set();\n\t        }\n\t        SharedStylesHost.prototype.addStyles = function (styles) {\n\t            var _this = this;\n\t            var additions = [];\n\t            styles.forEach(function (style) {\n\t                if (!_this._stylesSet.has(style)) {\n\t                    _this._stylesSet.add(style);\n\t                    _this._styles.push(style);\n\t                    additions.push(style);\n\t                }\n\t            });\n\t            this.onStylesAdded(additions);\n\t        };\n\t        SharedStylesHost.prototype.onStylesAdded = function (additions) { };\n\t        SharedStylesHost.prototype.getAllStyles = function () { return this._styles; };\n\t        SharedStylesHost.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        SharedStylesHost.ctorParameters = [];\n\t        return SharedStylesHost;\n\t    }());\n\t    var DomSharedStylesHost = (function (_super) {\n\t        __extends$4(DomSharedStylesHost, _super);\n\t        function DomSharedStylesHost(doc) {\n\t            _super.call(this);\n\t            this._hostNodes = new Set();\n\t            this._hostNodes.add(doc.head);\n\t        }\n\t        /** @internal */\n\t        DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\n\t            for (var i = 0; i < styles.length; i++) {\n\t                var style = styles[i];\n\t                getDOM().appendChild(host, getDOM().createStyleElement(style));\n\t            }\n\t        };\n\t        DomSharedStylesHost.prototype.addHost = function (hostNode) {\n\t            this._addStylesToHost(this._styles, hostNode);\n\t            this._hostNodes.add(hostNode);\n\t        };\n\t        DomSharedStylesHost.prototype.removeHost = function (hostNode) { this._hostNodes.delete(hostNode); };\n\t        DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\n\t            var _this = this;\n\t            this._hostNodes.forEach(function (hostNode) { _this._addStylesToHost(additions, hostNode); });\n\t        };\n\t        DomSharedStylesHost.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        DomSharedStylesHost.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [DOCUMENT,] },] },\n\t        ];\n\t        return DomSharedStylesHost;\n\t    }(SharedStylesHost));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var NAMESPACE_URIS = {\n\t        'xlink': 'http://www.w3.org/1999/xlink',\n\t        'svg': 'http://www.w3.org/2000/svg',\n\t        'xhtml': 'http://www.w3.org/1999/xhtml'\n\t    };\n\t    var TEMPLATE_COMMENT_TEXT = 'template bindings={}';\n\t    var TEMPLATE_BINDINGS_EXP = /^template bindings=(.*)$/;\n\t    var DomRootRenderer = (function () {\n\t        function DomRootRenderer(document, eventManager, sharedStylesHost, animationDriver) {\n\t            this.document = document;\n\t            this.eventManager = eventManager;\n\t            this.sharedStylesHost = sharedStylesHost;\n\t            this.animationDriver = animationDriver;\n\t            this.registeredComponents = new Map();\n\t        }\n\t        DomRootRenderer.prototype.renderComponent = function (componentProto) {\n\t            var renderer = this.registeredComponents.get(componentProto.id);\n\t            if (!renderer) {\n\t                renderer = new DomRenderer(this, componentProto, this.animationDriver);\n\t                this.registeredComponents.set(componentProto.id, renderer);\n\t            }\n\t            return renderer;\n\t        };\n\t        return DomRootRenderer;\n\t    }());\n\t    var DomRootRenderer_ = (function (_super) {\n\t        __extends$3(DomRootRenderer_, _super);\n\t        function DomRootRenderer_(_document, _eventManager, sharedStylesHost, animationDriver) {\n\t            _super.call(this, _document, _eventManager, sharedStylesHost, animationDriver);\n\t        }\n\t        DomRootRenderer_.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        DomRootRenderer_.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [DOCUMENT,] },] },\n\t            { type: EventManager, },\n\t            { type: DomSharedStylesHost, },\n\t            { type: AnimationDriver, },\n\t        ];\n\t        return DomRootRenderer_;\n\t    }(DomRootRenderer));\n\t    var DomRenderer = (function () {\n\t        function DomRenderer(_rootRenderer, componentProto, _animationDriver) {\n\t            this._rootRenderer = _rootRenderer;\n\t            this.componentProto = componentProto;\n\t            this._animationDriver = _animationDriver;\n\t            this._styles = _flattenStyles(componentProto.id, componentProto.styles, []);\n\t            if (componentProto.encapsulation !== _angular_core.ViewEncapsulation.Native) {\n\t                this._rootRenderer.sharedStylesHost.addStyles(this._styles);\n\t            }\n\t            if (this.componentProto.encapsulation === _angular_core.ViewEncapsulation.Emulated) {\n\t                this._contentAttr = _shimContentAttribute(componentProto.id);\n\t                this._hostAttr = _shimHostAttribute(componentProto.id);\n\t            }\n\t            else {\n\t                this._contentAttr = null;\n\t                this._hostAttr = null;\n\t            }\n\t        }\n\t        DomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n\t            var el;\n\t            if (typeof selectorOrNode === 'string') {\n\t                el = getDOM().querySelector(this._rootRenderer.document, selectorOrNode);\n\t                if (isBlank(el)) {\n\t                    throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\n\t                }\n\t            }\n\t            else {\n\t                el = selectorOrNode;\n\t            }\n\t            getDOM().clearNodes(el);\n\t            return el;\n\t        };\n\t        DomRenderer.prototype.createElement = function (parent, name, debugInfo) {\n\t            var nsAndName = splitNamespace(name);\n\t            var el = isPresent(nsAndName[0]) ?\n\t                getDOM().createElementNS(NAMESPACE_URIS[nsAndName[0]], nsAndName[1]) :\n\t                getDOM().createElement(nsAndName[1]);\n\t            if (isPresent(this._contentAttr)) {\n\t                getDOM().setAttribute(el, this._contentAttr, '');\n\t            }\n\t            if (isPresent(parent)) {\n\t                getDOM().appendChild(parent, el);\n\t            }\n\t            return el;\n\t        };\n\t        DomRenderer.prototype.createViewRoot = function (hostElement) {\n\t            var nodesParent;\n\t            if (this.componentProto.encapsulation === _angular_core.ViewEncapsulation.Native) {\n\t                nodesParent = getDOM().createShadowRoot(hostElement);\n\t                this._rootRenderer.sharedStylesHost.addHost(nodesParent);\n\t                for (var i = 0; i < this._styles.length; i++) {\n\t                    getDOM().appendChild(nodesParent, getDOM().createStyleElement(this._styles[i]));\n\t                }\n\t            }\n\t            else {\n\t                if (isPresent(this._hostAttr)) {\n\t                    getDOM().setAttribute(hostElement, this._hostAttr, '');\n\t                }\n\t                nodesParent = hostElement;\n\t            }\n\t            return nodesParent;\n\t        };\n\t        DomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n\t            var comment = getDOM().createComment(TEMPLATE_COMMENT_TEXT);\n\t            if (isPresent(parentElement)) {\n\t                getDOM().appendChild(parentElement, comment);\n\t            }\n\t            return comment;\n\t        };\n\t        DomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n\t            var node = getDOM().createTextNode(value);\n\t            if (isPresent(parentElement)) {\n\t                getDOM().appendChild(parentElement, node);\n\t            }\n\t            return node;\n\t        };\n\t        DomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n\t            if (isBlank(parentElement))\n\t                return;\n\t            appendNodes(parentElement, nodes);\n\t        };\n\t        DomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) { moveNodesAfterSibling(node, viewRootNodes); };\n\t        DomRenderer.prototype.detachView = function (viewRootNodes) {\n\t            for (var i = 0; i < viewRootNodes.length; i++) {\n\t                getDOM().remove(viewRootNodes[i]);\n\t            }\n\t        };\n\t        DomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n\t            if (this.componentProto.encapsulation === _angular_core.ViewEncapsulation.Native && isPresent(hostElement)) {\n\t                this._rootRenderer.sharedStylesHost.removeHost(getDOM().getShadowRoot(hostElement));\n\t            }\n\t        };\n\t        DomRenderer.prototype.listen = function (renderElement, name, callback) {\n\t            return this._rootRenderer.eventManager.addEventListener(renderElement, name, decoratePreventDefault(callback));\n\t        };\n\t        DomRenderer.prototype.listenGlobal = function (target, name, callback) {\n\t            return this._rootRenderer.eventManager.addGlobalEventListener(target, name, decoratePreventDefault(callback));\n\t        };\n\t        DomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n\t            getDOM().setProperty(renderElement, propertyName, propertyValue);\n\t        };\n\t        DomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n\t            var attrNs;\n\t            var nsAndName = splitNamespace(attributeName);\n\t            if (isPresent(nsAndName[0])) {\n\t                attributeName = nsAndName[0] + ':' + nsAndName[1];\n\t                attrNs = NAMESPACE_URIS[nsAndName[0]];\n\t            }\n\t            if (isPresent(attributeValue)) {\n\t                if (isPresent(attrNs)) {\n\t                    getDOM().setAttributeNS(renderElement, attrNs, attributeName, attributeValue);\n\t                }\n\t                else {\n\t                    getDOM().setAttribute(renderElement, attributeName, attributeValue);\n\t                }\n\t            }\n\t            else {\n\t                if (isPresent(attrNs)) {\n\t                    getDOM().removeAttributeNS(renderElement, attrNs, nsAndName[1]);\n\t                }\n\t                else {\n\t                    getDOM().removeAttribute(renderElement, attributeName);\n\t                }\n\t            }\n\t        };\n\t        DomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n\t            var dashCasedPropertyName = camelCaseToDashCase(propertyName);\n\t            if (getDOM().isCommentNode(renderElement)) {\n\t                var existingBindings = getDOM().getText(renderElement).replace(/\\n/g, '').match(TEMPLATE_BINDINGS_EXP);\n\t                var parsedBindings = JSON.parse(existingBindings[1]);\n\t                parsedBindings[dashCasedPropertyName] = propertyValue;\n\t                getDOM().setText(renderElement, TEMPLATE_COMMENT_TEXT.replace('{}', JSON.stringify(parsedBindings, null, 2)));\n\t            }\n\t            else {\n\t                this.setElementAttribute(renderElement, propertyName, propertyValue);\n\t            }\n\t        };\n\t        DomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n\t            if (isAdd) {\n\t                getDOM().addClass(renderElement, className);\n\t            }\n\t            else {\n\t                getDOM().removeClass(renderElement, className);\n\t            }\n\t        };\n\t        DomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n\t            if (isPresent(styleValue)) {\n\t                getDOM().setStyle(renderElement, styleName, stringify(styleValue));\n\t            }\n\t            else {\n\t                getDOM().removeStyle(renderElement, styleName);\n\t            }\n\t        };\n\t        DomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n\t            getDOM().invoke(renderElement, methodName, args);\n\t        };\n\t        DomRenderer.prototype.setText = function (renderNode, text) { getDOM().setText(renderNode, text); };\n\t        DomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing) {\n\t            return this._animationDriver.animate(element, startingStyles, keyframes, duration, delay, easing);\n\t        };\n\t        return DomRenderer;\n\t    }());\n\t    function moveNodesAfterSibling(sibling /** TODO #9100 */, nodes /** TODO #9100 */) {\n\t        var parent = getDOM().parentElement(sibling);\n\t        if (nodes.length > 0 && isPresent(parent)) {\n\t            var nextSibling = getDOM().nextSibling(sibling);\n\t            if (isPresent(nextSibling)) {\n\t                for (var i = 0; i < nodes.length; i++) {\n\t                    getDOM().insertBefore(nextSibling, nodes[i]);\n\t                }\n\t            }\n\t            else {\n\t                for (var i = 0; i < nodes.length; i++) {\n\t                    getDOM().appendChild(parent, nodes[i]);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    function appendNodes(parent /** TODO #9100 */, nodes /** TODO #9100 */) {\n\t        for (var i = 0; i < nodes.length; i++) {\n\t            getDOM().appendChild(parent, nodes[i]);\n\t        }\n\t    }\n\t    function decoratePreventDefault(eventHandler) {\n\t        return function (event /** TODO #9100 */) {\n\t            var allowDefaultBehavior = eventHandler(event);\n\t            if (allowDefaultBehavior === false) {\n\t                // TODO(tbosch): move preventDefault into event plugins...\n\t                getDOM().preventDefault(event);\n\t            }\n\t        };\n\t    }\n\t    var COMPONENT_REGEX = /%COMP%/g;\n\t    var COMPONENT_VARIABLE = '%COMP%';\n\t    var HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n\t    var CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n\t    function _shimContentAttribute(componentShortId) {\n\t        return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n\t    }\n\t    function _shimHostAttribute(componentShortId) {\n\t        return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n\t    }\n\t    function _flattenStyles(compId, styles, target) {\n\t        for (var i = 0; i < styles.length; i++) {\n\t            var style = styles[i];\n\t            if (Array.isArray(style)) {\n\t                _flattenStyles(compId, style, target);\n\t            }\n\t            else {\n\t                style = style.replace(COMPONENT_REGEX, compId);\n\t                target.push(style);\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n\t    function splitNamespace(name) {\n\t        if (name[0] != ':') {\n\t            return [null, name];\n\t        }\n\t        var match = name.match(NS_PREFIX_RE);\n\t        return [match[1], match[2]];\n\t    }\n\t\n\t    var CORE_TOKENS = {\n\t        'ApplicationRef': _angular_core.ApplicationRef,\n\t        'NgZone': _angular_core.NgZone\n\t    };\n\t    var INSPECT_GLOBAL_NAME = 'ng.probe';\n\t    var CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n\t    /**\n\t     * Returns a {@link DebugElement} for the given native DOM element, or\n\t     * null if the given native element does not have an Angular view associated\n\t     * with it.\n\t     */\n\t    function inspectNativeElement(element /** TODO #9100 */) {\n\t        return _angular_core.getDebugNode(element);\n\t    }\n\t    /**\n\t     * @experimental\n\t     */\n\t    var NgProbeToken = (function () {\n\t        function NgProbeToken(name, token) {\n\t            this.name = name;\n\t            this.token = token;\n\t        }\n\t        return NgProbeToken;\n\t    }());\n\t    function _createConditionalRootRenderer(rootRenderer /** TODO #9100 */, extraTokens) {\n\t        if (_angular_core.isDevMode()) {\n\t            return _createRootRenderer(rootRenderer, extraTokens);\n\t        }\n\t        return rootRenderer;\n\t    }\n\t    function _createRootRenderer(rootRenderer /** TODO #9100 */, extraTokens) {\n\t        getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n\t        getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME, StringMapWrapper.merge(CORE_TOKENS, _ngProbeTokensToMap(extraTokens || [])));\n\t        return new DebugDomRootRenderer(rootRenderer);\n\t    }\n\t    function _ngProbeTokensToMap(tokens) {\n\t        return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\n\t    }\n\t    /**\n\t     * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n\t     */\n\t    var ELEMENT_PROBE_PROVIDERS = [{\n\t            provide: _angular_core.RootRenderer,\n\t            useFactory: _createConditionalRootRenderer,\n\t            deps: [DomRootRenderer, [NgProbeToken, new _angular_core.Optional()]]\n\t        }];\n\t    var ELEMENT_PROBE_PROVIDERS_PROD_MODE = [{\n\t            provide: _angular_core.RootRenderer,\n\t            useFactory: _createRootRenderer,\n\t            deps: [DomRootRenderer, [NgProbeToken, new _angular_core.Optional()]]\n\t        }];\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var DomEventsPlugin = (function (_super) {\n\t        __extends$5(DomEventsPlugin, _super);\n\t        function DomEventsPlugin() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        // This plugin should come last in the list of plugins, because it accepts all\n\t        // events.\n\t        DomEventsPlugin.prototype.supports = function (eventName) { return true; };\n\t        DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n\t            var zone = this.manager.getZone();\n\t            var outsideHandler = function (event /** TODO #9100 */) { return zone.runGuarded(function () { return handler(event); }); };\n\t            return this.manager.getZone().runOutsideAngular(function () { return getDOM().onAndCancel(element, eventName, outsideHandler); });\n\t        };\n\t        DomEventsPlugin.prototype.addGlobalEventListener = function (target, eventName, handler) {\n\t            var element = getDOM().getGlobalEventTarget(target);\n\t            var zone = this.manager.getZone();\n\t            var outsideHandler = function (event /** TODO #9100 */) { return zone.runGuarded(function () { return handler(event); }); };\n\t            return this.manager.getZone().runOutsideAngular(function () { return getDOM().onAndCancel(element, eventName, outsideHandler); });\n\t        };\n\t        DomEventsPlugin.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        DomEventsPlugin.ctorParameters = [];\n\t        return DomEventsPlugin;\n\t    }(EventManagerPlugin));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var _eventNames = {\n\t        // pan\n\t        'pan': true,\n\t        'panstart': true,\n\t        'panmove': true,\n\t        'panend': true,\n\t        'pancancel': true,\n\t        'panleft': true,\n\t        'panright': true,\n\t        'panup': true,\n\t        'pandown': true,\n\t        // pinch\n\t        'pinch': true,\n\t        'pinchstart': true,\n\t        'pinchmove': true,\n\t        'pinchend': true,\n\t        'pinchcancel': true,\n\t        'pinchin': true,\n\t        'pinchout': true,\n\t        // press\n\t        'press': true,\n\t        'pressup': true,\n\t        // rotate\n\t        'rotate': true,\n\t        'rotatestart': true,\n\t        'rotatemove': true,\n\t        'rotateend': true,\n\t        'rotatecancel': true,\n\t        // swipe\n\t        'swipe': true,\n\t        'swipeleft': true,\n\t        'swiperight': true,\n\t        'swipeup': true,\n\t        'swipedown': true,\n\t        // tap\n\t        'tap': true,\n\t    };\n\t    var HammerGesturesPluginCommon = (function (_super) {\n\t        __extends$7(HammerGesturesPluginCommon, _super);\n\t        function HammerGesturesPluginCommon() {\n\t            _super.call(this);\n\t        }\n\t        HammerGesturesPluginCommon.prototype.supports = function (eventName) {\n\t            return _eventNames.hasOwnProperty(eventName.toLowerCase());\n\t        };\n\t        return HammerGesturesPluginCommon;\n\t    }(EventManagerPlugin));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * A DI token that you can use to provide{@link HammerGestureConfig} to Angular. Use it to configure\n\t     * Hammer gestures.\n\t     *\n\t     * @experimental\n\t     */\n\t    var HAMMER_GESTURE_CONFIG = new _angular_core.OpaqueToken('HammerGestureConfig');\n\t    /**\n\t     * @experimental\n\t     */\n\t    var HammerGestureConfig = (function () {\n\t        function HammerGestureConfig() {\n\t            this.events = [];\n\t            this.overrides = {};\n\t        }\n\t        HammerGestureConfig.prototype.buildHammer = function (element) {\n\t            var mc = new Hammer(element);\n\t            mc.get('pinch').set({ enable: true });\n\t            mc.get('rotate').set({ enable: true });\n\t            for (var eventName in this.overrides) {\n\t                mc.get(eventName).set(this.overrides[eventName]);\n\t            }\n\t            return mc;\n\t        };\n\t        HammerGestureConfig.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        HammerGestureConfig.ctorParameters = [];\n\t        return HammerGestureConfig;\n\t    }());\n\t    var HammerGesturesPlugin = (function (_super) {\n\t        __extends$6(HammerGesturesPlugin, _super);\n\t        function HammerGesturesPlugin(_config) {\n\t            _super.call(this);\n\t            this._config = _config;\n\t        }\n\t        HammerGesturesPlugin.prototype.supports = function (eventName) {\n\t            if (!_super.prototype.supports.call(this, eventName) && !this.isCustomEvent(eventName))\n\t                return false;\n\t            if (!isPresent(window['Hammer'])) {\n\t                throw new Error(\"Hammer.js is not loaded, can not bind \" + eventName + \" event\");\n\t            }\n\t            return true;\n\t        };\n\t        HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\n\t            var _this = this;\n\t            var zone = this.manager.getZone();\n\t            eventName = eventName.toLowerCase();\n\t            return zone.runOutsideAngular(function () {\n\t                // Creating the manager bind events, must be done outside of angular\n\t                var mc = _this._config.buildHammer(element);\n\t                var callback = function (eventObj /** TODO #???? */) {\n\t                    zone.runGuarded(function () { handler(eventObj); });\n\t                };\n\t                mc.on(eventName, callback);\n\t                return function () { mc.off(eventName, callback); };\n\t            });\n\t        };\n\t        HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) { return this._config.events.indexOf(eventName) > -1; };\n\t        HammerGesturesPlugin.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        HammerGesturesPlugin.ctorParameters = [\n\t            { type: HammerGestureConfig, decorators: [{ type: _angular_core.Inject, args: [HAMMER_GESTURE_CONFIG,] },] },\n\t        ];\n\t        return HammerGesturesPlugin;\n\t    }(HammerGesturesPluginCommon));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var modifierKeys = ['alt', 'control', 'meta', 'shift'];\n\t    var modifierKeyGetters = {\n\t        'alt': function (event) { return event.altKey; },\n\t        'control': function (event) { return event.ctrlKey; },\n\t        'meta': function (event) { return event.metaKey; },\n\t        'shift': function (event) { return event.shiftKey; }\n\t    };\n\t    /**\n\t     * @experimental\n\t     */\n\t    var KeyEventsPlugin = (function (_super) {\n\t        __extends$8(KeyEventsPlugin, _super);\n\t        function KeyEventsPlugin() {\n\t            _super.call(this);\n\t        }\n\t        KeyEventsPlugin.prototype.supports = function (eventName) {\n\t            return isPresent(KeyEventsPlugin.parseEventName(eventName));\n\t        };\n\t        KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n\t            var parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n\t            var outsideHandler = KeyEventsPlugin.eventCallback(element, parsedEvent['fullKey'], handler, this.manager.getZone());\n\t            return this.manager.getZone().runOutsideAngular(function () {\n\t                return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n\t            });\n\t        };\n\t        KeyEventsPlugin.parseEventName = function (eventName) {\n\t            var parts = eventName.toLowerCase().split('.');\n\t            var domEventName = parts.shift();\n\t            if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n\t                return null;\n\t            }\n\t            var key = KeyEventsPlugin._normalizeKey(parts.pop());\n\t            var fullKey = '';\n\t            modifierKeys.forEach(function (modifierName) {\n\t                if (parts.indexOf(modifierName) > -1) {\n\t                    ListWrapper.remove(parts, modifierName);\n\t                    fullKey += modifierName + '.';\n\t                }\n\t            });\n\t            fullKey += key;\n\t            if (parts.length != 0 || key.length === 0) {\n\t                // returning null instead of throwing to let another plugin process the event\n\t                return null;\n\t            }\n\t            var result = {};\n\t            result['domEventName'] = domEventName;\n\t            result['fullKey'] = fullKey;\n\t            return result;\n\t        };\n\t        KeyEventsPlugin.getEventFullKey = function (event) {\n\t            var fullKey = '';\n\t            var key = getDOM().getEventKey(event);\n\t            key = key.toLowerCase();\n\t            if (key === ' ') {\n\t                key = 'space'; // for readability\n\t            }\n\t            else if (key === '.') {\n\t                key = 'dot'; // because '.' is used as a separator in event names\n\t            }\n\t            modifierKeys.forEach(function (modifierName) {\n\t                if (modifierName != key) {\n\t                    var modifierGetter = modifierKeyGetters[modifierName];\n\t                    if (modifierGetter(event)) {\n\t                        fullKey += modifierName + '.';\n\t                    }\n\t                }\n\t            });\n\t            fullKey += key;\n\t            return fullKey;\n\t        };\n\t        KeyEventsPlugin.eventCallback = function (element, fullKey, handler, zone) {\n\t            return function (event /** TODO #9100 */) {\n\t                if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n\t                    zone.runGuarded(function () { return handler(event); });\n\t                }\n\t            };\n\t        };\n\t        /** @internal */\n\t        KeyEventsPlugin._normalizeKey = function (keyName) {\n\t            // TODO: switch to a StringMap if the mapping grows too much\n\t            switch (keyName) {\n\t                case 'esc':\n\t                    return 'escape';\n\t                default:\n\t                    return keyName;\n\t            }\n\t        };\n\t        KeyEventsPlugin.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        KeyEventsPlugin.ctorParameters = [];\n\t        return KeyEventsPlugin;\n\t    }(EventManagerPlugin));\n\t\n\t    /**\n\t     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n\t     *\n\t     * This regular expression matches a subset of URLs that will not cause script\n\t     * execution if used in URL context within a HTML document. Specifically, this\n\t     * regular expression matches if (comment from here on and regex copied from\n\t     * Soy's EscapingConventions):\n\t     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n\t     * (2) or no protocol.  A protocol must be followed by a colon. The below\n\t     *     allows that by allowing colons only after one of the characters [/?#].\n\t     *     A colon after a hash (#) must be in the fragment.\n\t     *     Otherwise, a colon after a (?) must be in a query.\n\t     *     Otherwise, a colon after a single solidus (/) must be in a path.\n\t     *     Otherwise, a colon after a double solidus (//) must be in the authority\n\t     *     (before port).\n\t     *\n\t     * The pattern disallows &, used in HTML entity declarations before\n\t     * one of the characters in [/?#]. This disallows HTML entities used in the\n\t     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n\t     * It also disallows HTML entities in the first path part of a relative path,\n\t     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n\t     * that. More importantly, it disallows masking of a colon,\n\t     * e.g. \"javascript&#58;...\".\n\t     *\n\t     * This regular expression was taken from the Closure sanitization library.\n\t     */\n\t    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\t    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n\t    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n\t    function sanitizeUrl(url) {\n\t        url = String(url);\n\t        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n\t            return url;\n\t        if (_angular_core.isDevMode()) {\n\t            getDOM().log(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n\t        }\n\t        return 'unsafe:' + url;\n\t    }\n\t    function sanitizeSrcset(srcset) {\n\t        srcset = String(srcset);\n\t        return srcset.split(',').map(function (srcset) { return sanitizeUrl(srcset.trim()); }).join(', ');\n\t    }\n\t\n\t    /** A <body> element that can be safely used to parse untrusted HTML. Lazily initialized below. */\n\t    var inertElement = null;\n\t    /** Lazily initialized to make sure the DOM adapter gets set before use. */\n\t    var DOM = null;\n\t    /** Returns an HTML element that is guaranteed to not execute code when creating elements in it. */\n\t    function getInertElement() {\n\t        if (inertElement)\n\t            return inertElement;\n\t        DOM = getDOM();\n\t        // Prefer using <template> element if supported.\n\t        var templateEl = DOM.createElement('template');\n\t        if ('content' in templateEl)\n\t            return templateEl;\n\t        var doc = DOM.createHtmlDocument();\n\t        inertElement = DOM.querySelector(doc, 'body');\n\t        if (inertElement == null) {\n\t            // usually there should be only one body element in the document, but IE doesn't have any, so we\n\t            // need to create one.\n\t            var html = DOM.createElement('html', doc);\n\t            inertElement = DOM.createElement('body', doc);\n\t            DOM.appendChild(html, inertElement);\n\t            DOM.appendChild(doc, html);\n\t        }\n\t        return inertElement;\n\t    }\n\t    function tagSet(tags) {\n\t        var res = {};\n\t        for (var _i = 0, _a = tags.split(','); _i < _a.length; _i++) {\n\t            var t = _a[_i];\n\t            res[t] = true;\n\t        }\n\t        return res;\n\t    }\n\t    function merge() {\n\t        var sets = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            sets[_i - 0] = arguments[_i];\n\t        }\n\t        var res = {};\n\t        for (var _a = 0, sets_1 = sets; _a < sets_1.length; _a++) {\n\t            var s = sets_1[_a];\n\t            for (var v in s) {\n\t                if (s.hasOwnProperty(v))\n\t                    res[v] = true;\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    // Good source of info about elements and attributes\n\t    // http://dev.w3.org/html5/spec/Overview.html#semantics\n\t    // http://simon.html5.org/html-elements\n\t    // Safe Void Elements - HTML5\n\t    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n\t    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n\t    // Elements that you can, intentionally, leave open (and which close themselves)\n\t    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n\t    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n\t    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n\t    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n\t    // Safe Block Elements - HTML5\n\t    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n\t        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n\t        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n\t    // Inline Elements - HTML5\n\t    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n\t        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n\t        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n\t    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n\t    // Attributes that have href and hence need to be sanitized\n\t    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n\t    // Attributes that have special href set hence need to be sanitized\n\t    var SRCSET_ATTRS = tagSet('srcset');\n\t    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n\t        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n\t        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n\t        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n\t        'valign,value,vspace,width');\n\t    // NB: This currently conciously doesn't support SVG. SVG sanitization has had several security\n\t    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n\t    // innerHTML is required, SVG attributes should be added here.\n\t    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n\t    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n\t    // are left out here.\n\t    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n\t    /**\n\t     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n\t     * attributes.\n\t     */\n\t    var SanitizingHtmlSerializer = (function () {\n\t        function SanitizingHtmlSerializer() {\n\t            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n\t            // because characters were re-encoded.\n\t            this.sanitizedSomething = false;\n\t            this.buf = [];\n\t        }\n\t        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n\t            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n\t            // However this code never accesses properties off of `document` before deleting its contents\n\t            // again, so it shouldn't be vulnerable to DOM clobbering.\n\t            var current = el.firstChild;\n\t            while (current) {\n\t                if (DOM.isElementNode(current)) {\n\t                    this.startElement(current);\n\t                }\n\t                else if (DOM.isTextNode(current)) {\n\t                    this.chars(DOM.nodeValue(current));\n\t                }\n\t                else {\n\t                    // Strip non-element, non-text nodes.\n\t                    this.sanitizedSomething = true;\n\t                }\n\t                if (DOM.firstChild(current)) {\n\t                    current = DOM.firstChild(current);\n\t                    continue;\n\t                }\n\t                while (current) {\n\t                    // Leaving the element. Walk up and to the right, closing tags as we go.\n\t                    if (DOM.isElementNode(current)) {\n\t                        this.endElement(current);\n\t                    }\n\t                    if (DOM.nextSibling(current)) {\n\t                        current = DOM.nextSibling(current);\n\t                        break;\n\t                    }\n\t                    current = DOM.parentElement(current);\n\t                }\n\t            }\n\t            return this.buf.join('');\n\t        };\n\t        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n\t            var _this = this;\n\t            var tagName = DOM.nodeName(element).toLowerCase();\n\t            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n\t                this.sanitizedSomething = true;\n\t                return;\n\t            }\n\t            this.buf.push('<');\n\t            this.buf.push(tagName);\n\t            DOM.attributeMap(element).forEach(function (value, attrName) {\n\t                var lower = attrName.toLowerCase();\n\t                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n\t                    _this.sanitizedSomething = true;\n\t                    return;\n\t                }\n\t                // TODO(martinprobst): Special case image URIs for data:image/...\n\t                if (URI_ATTRS[lower])\n\t                    value = sanitizeUrl(value);\n\t                if (SRCSET_ATTRS[lower])\n\t                    value = sanitizeSrcset(value);\n\t                _this.buf.push(' ');\n\t                _this.buf.push(attrName);\n\t                _this.buf.push('=\"');\n\t                _this.buf.push(encodeEntities(value));\n\t                _this.buf.push('\"');\n\t            });\n\t            this.buf.push('>');\n\t        };\n\t        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n\t            var tagName = DOM.nodeName(current).toLowerCase();\n\t            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n\t                this.buf.push('</');\n\t                this.buf.push(tagName);\n\t                this.buf.push('>');\n\t            }\n\t        };\n\t        SanitizingHtmlSerializer.prototype.chars = function (chars /** TODO #9100 */) { this.buf.push(encodeEntities(chars)); };\n\t        return SanitizingHtmlSerializer;\n\t    }());\n\t    // Regular Expressions for parsing tags and attributes\n\t    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t    // ! to ~ is the ASCII range.\n\t    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n\t    /**\n\t     * Escapes all potentially dangerous characters, so that the\n\t     * resulting string can be safely inserted into attribute or\n\t     * element text.\n\t     * @param value\n\t     * @returns {string} escaped text\n\t     */\n\t    function encodeEntities(value) {\n\t        return value.replace(/&/g, '&amp;')\n\t            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n\t            var hi = match.charCodeAt(0);\n\t            var low = match.charCodeAt(1);\n\t            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n\t        })\n\t            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n\t            .replace(/</g, '&lt;')\n\t            .replace(/>/g, '&gt;');\n\t    }\n\t    /**\n\t     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n\t     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo').\n\t     *\n\t     * This is undesirable since we don't want to allow any of these custom attributes. This method\n\t     * strips them all.\n\t     */\n\t    function stripCustomNsAttrs(el) {\n\t        DOM.attributeMap(el).forEach(function (_, attrName) {\n\t            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n\t                DOM.removeAttribute(el, attrName);\n\t            }\n\t        });\n\t        for (var _i = 0, _a = DOM.childNodesAsList(el); _i < _a.length; _i++) {\n\t            var n = _a[_i];\n\t            if (DOM.isElementNode(n))\n\t                stripCustomNsAttrs(n);\n\t        }\n\t    }\n\t    /**\n\t     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n\t     * the DOM in a browser environment.\n\t     */\n\t    function sanitizeHtml(unsafeHtmlInput) {\n\t        try {\n\t            var containerEl = getInertElement();\n\t            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n\t            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n\t            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n\t            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n\t            var mXSSAttempts = 5;\n\t            var parsedHtml = unsafeHtml;\n\t            do {\n\t                if (mXSSAttempts === 0) {\n\t                    throw new Error('Failed to sanitize html because the input is unstable');\n\t                }\n\t                mXSSAttempts--;\n\t                unsafeHtml = parsedHtml;\n\t                DOM.setInnerHTML(containerEl, unsafeHtml);\n\t                if (DOM.defaultDoc().documentMode) {\n\t                    // strip custom-namespaced attributes on IE<=11\n\t                    stripCustomNsAttrs(containerEl);\n\t                }\n\t                parsedHtml = DOM.getInnerHTML(containerEl);\n\t            } while (unsafeHtml !== parsedHtml);\n\t            var sanitizer = new SanitizingHtmlSerializer();\n\t            var safeHtml = sanitizer.sanitizeChildren(DOM.getTemplateContent(containerEl) || containerEl);\n\t            // Clear out the body element.\n\t            var parent_1 = DOM.getTemplateContent(containerEl) || containerEl;\n\t            for (var _i = 0, _a = DOM.childNodesAsList(parent_1); _i < _a.length; _i++) {\n\t                var child = _a[_i];\n\t                DOM.removeChild(parent_1, child);\n\t            }\n\t            if (_angular_core.isDevMode() && sanitizer.sanitizedSomething) {\n\t                DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n\t            }\n\t            return safeHtml;\n\t        }\n\t        catch (e) {\n\t            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n\t            inertElement = null;\n\t            throw e;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Regular expression for safe style values.\n\t     *\n\t     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n\t     *\n\t     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n\t     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n\t     * of XSS.\n\t     *\n\t     * The function expression checks only for XSS safety, not for CSS validity.\n\t     *\n\t     * This regular expression was taken from the Closure sanitization library, and augmented for\n\t     * transformation values.\n\t     */\n\t    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n\t    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n\t    var COLOR_FNS = '(?:rgb|hsl)a?';\n\t    var FN_ARGS = '\\\\([-0-9.%, a-zA-Z]+\\\\)';\n\t    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \")\" + FN_ARGS + \")$\", 'g');\n\t    /**\n\t     * Matches a `url(...)` value with an arbitrary argument as long as it does\n\t     * not contain parentheses.\n\t     *\n\t     * The URL value still needs to be sanitized separately.\n\t     *\n\t     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n\t     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n\t     * by observing whether scroll bars are displayed, or character ranges used by a font face\n\t     * definition.\n\t     *\n\t     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n\t     * binding a URL value without further cooperation from the page will cause an information leak, and\n\t     * if so, it is just a leak, not a full blown XSS vulnerability.\n\t     *\n\t     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n\t     * code is permissive and allows URLs that sanitize otherwise.\n\t     */\n\t    var URL_RE = /^url\\(([^)]+)\\)$/;\n\t    /**\n\t     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n\t     * that neither escape (\\) nor any other character that could result in\n\t     * breaking out of a string parsing context are allowed;\n\t     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n\t     *\n\t     * This code was taken from the Closure sanitization library.\n\t     */\n\t    function hasBalancedQuotes(value) {\n\t        var outsideSingle = true;\n\t        var outsideDouble = true;\n\t        for (var i = 0; i < value.length; i++) {\n\t            var c = value.charAt(i);\n\t            if (c === '\\'' && outsideDouble) {\n\t                outsideSingle = !outsideSingle;\n\t            }\n\t            else if (c === '\"' && outsideSingle) {\n\t                outsideDouble = !outsideDouble;\n\t            }\n\t        }\n\t        return outsideSingle && outsideDouble;\n\t    }\n\t    /**\n\t     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n\t     * value) and returns a value that is safe to use in a browser environment.\n\t     */\n\t    function sanitizeStyle(value) {\n\t        value = String(value).trim(); // Make sure it's actually a string.\n\t        if (!value)\n\t            return '';\n\t        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n\t        // reasoning behind this.\n\t        var urlMatch = value.match(URL_RE);\n\t        if ((urlMatch && sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n\t            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n\t            return value; // Safe style values.\n\t        }\n\t        if (_angular_core.isDevMode()) {\n\t            getDOM().log(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n\t        }\n\t        return 'unsafe';\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$9 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n\t     * values to be safe to use in the different DOM contexts.\n\t     *\n\t     * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n\t     * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n\t     * the website.\n\t     *\n\t     * In specific situations, it might be necessary to disable sanitization, for example if the\n\t     * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n\t     * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n\t     * methods, and then binding to that value from the template.\n\t     *\n\t     * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n\t     * Cross Site Scripting (XSS) security bug!\n\t     *\n\t     * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n\t     * close as possible to the source of the value, to make it easy to verify no security bug is\n\t     * created by its use.\n\t     *\n\t     * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n\t     * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n\t     * code. The sanitizer leaves safe values intact.\n\t     *\n\t     * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n\t     * sanitization for the value passed in. Carefully check and audit all values and code paths going\n\t     * into this call. Make sure any user data is appropriately escaped for this security context.\n\t     * For more detail, see the [Security Guide](http://g.co/ng/security).\n\t     *\n\t     * @stable\n\t     */\n\t    var DomSanitizer = (function () {\n\t        function DomSanitizer() {\n\t        }\n\t        return DomSanitizer;\n\t    }());\n\t    var DomSanitizerImpl = (function (_super) {\n\t        __extends$9(DomSanitizerImpl, _super);\n\t        function DomSanitizerImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        DomSanitizerImpl.prototype.sanitize = function (ctx, value) {\n\t            if (value == null)\n\t                return null;\n\t            switch (ctx) {\n\t                case _angular_core.SecurityContext.NONE:\n\t                    return value;\n\t                case _angular_core.SecurityContext.HTML:\n\t                    if (value instanceof SafeHtmlImpl)\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    this.checkNotSafeValue(value, 'HTML');\n\t                    return sanitizeHtml(String(value));\n\t                case _angular_core.SecurityContext.STYLE:\n\t                    if (value instanceof SafeStyleImpl)\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    this.checkNotSafeValue(value, 'Style');\n\t                    return sanitizeStyle(value);\n\t                case _angular_core.SecurityContext.SCRIPT:\n\t                    if (value instanceof SafeScriptImpl)\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    this.checkNotSafeValue(value, 'Script');\n\t                    throw new Error('unsafe value used in a script context');\n\t                case _angular_core.SecurityContext.URL:\n\t                    if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n\t                        // Allow resource URLs in URL contexts, they are strictly more trusted.\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    }\n\t                    this.checkNotSafeValue(value, 'URL');\n\t                    return sanitizeUrl(String(value));\n\t                case _angular_core.SecurityContext.RESOURCE_URL:\n\t                    if (value instanceof SafeResourceUrlImpl) {\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    }\n\t                    this.checkNotSafeValue(value, 'ResourceURL');\n\t                    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n\t                default:\n\t                    throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\n\t            }\n\t        };\n\t        DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {\n\t            if (value instanceof SafeValueImpl) {\n\t                throw new Error((\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \") +\n\t                    \"(see http://g.co/ng/security#xss)\");\n\t            }\n\t        };\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) { return new SafeHtmlImpl(value); };\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) { return new SafeStyleImpl(value); };\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) { return new SafeScriptImpl(value); };\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) { return new SafeUrlImpl(value); };\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {\n\t            return new SafeResourceUrlImpl(value);\n\t        };\n\t        DomSanitizerImpl.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        DomSanitizerImpl.ctorParameters = [];\n\t        return DomSanitizerImpl;\n\t    }(DomSanitizer));\n\t    var SafeValueImpl = (function () {\n\t        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n\t            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n\t            // empty\n\t        }\n\t        SafeValueImpl.prototype.toString = function () {\n\t            return (\"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity) +\n\t                \" (see http://g.co/ng/security#xss)\";\n\t        };\n\t        return SafeValueImpl;\n\t    }());\n\t    var SafeHtmlImpl = (function (_super) {\n\t        __extends$9(SafeHtmlImpl, _super);\n\t        function SafeHtmlImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        SafeHtmlImpl.prototype.getTypeName = function () { return 'HTML'; };\n\t        return SafeHtmlImpl;\n\t    }(SafeValueImpl));\n\t    var SafeStyleImpl = (function (_super) {\n\t        __extends$9(SafeStyleImpl, _super);\n\t        function SafeStyleImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        SafeStyleImpl.prototype.getTypeName = function () { return 'Style'; };\n\t        return SafeStyleImpl;\n\t    }(SafeValueImpl));\n\t    var SafeScriptImpl = (function (_super) {\n\t        __extends$9(SafeScriptImpl, _super);\n\t        function SafeScriptImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        SafeScriptImpl.prototype.getTypeName = function () { return 'Script'; };\n\t        return SafeScriptImpl;\n\t    }(SafeValueImpl));\n\t    var SafeUrlImpl = (function (_super) {\n\t        __extends$9(SafeUrlImpl, _super);\n\t        function SafeUrlImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        SafeUrlImpl.prototype.getTypeName = function () { return 'URL'; };\n\t        return SafeUrlImpl;\n\t    }(SafeValueImpl));\n\t    var SafeResourceUrlImpl = (function (_super) {\n\t        __extends$9(SafeResourceUrlImpl, _super);\n\t        function SafeResourceUrlImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        SafeResourceUrlImpl.prototype.getTypeName = function () { return 'ResourceURL'; };\n\t        return SafeResourceUrlImpl;\n\t    }(SafeValueImpl));\n\t\n\t    var INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n\t        { provide: _angular_core.PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n\t        { provide: _angular_common.PlatformLocation, useClass: BrowserPlatformLocation }\n\t    ];\n\t    /**\n\t     * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n\t     * Attacker-controlled data introduced by an unsanitized provider could expose your\n\t     * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n\t     * @experimental\n\t     */\n\t    var BROWSER_SANITIZATION_PROVIDERS = [\n\t        { provide: _angular_core.Sanitizer, useExisting: DomSanitizer },\n\t        { provide: DomSanitizer, useClass: DomSanitizerImpl },\n\t    ];\n\t    /**\n\t     * @stable\n\t     */\n\t    var platformBrowser = _angular_core.createPlatformFactory(_angular_core.platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\t    function initDomAdapter() {\n\t        BrowserDomAdapter.makeCurrent();\n\t        BrowserGetTestability.init();\n\t    }\n\t    function errorHandler() {\n\t        return new _angular_core.ErrorHandler();\n\t    }\n\t    function _document() {\n\t        return getDOM().defaultDoc();\n\t    }\n\t    function _resolveDefaultAnimationDriver() {\n\t        if (getDOM().supportsWebAnimation()) {\n\t            return new WebAnimationsDriver();\n\t        }\n\t        return AnimationDriver.NOOP;\n\t    }\n\t    /**\n\t     * The ng module for the browser.\n\t     *\n\t     * @stable\n\t     */\n\t    var BrowserModule = (function () {\n\t        function BrowserModule(parentModule) {\n\t            if (parentModule) {\n\t                throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n\t            }\n\t        }\n\t        BrowserModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        providers: [\n\t                            BROWSER_SANITIZATION_PROVIDERS, { provide: _angular_core.ErrorHandler, useFactory: errorHandler, deps: [] },\n\t                            { provide: DOCUMENT, useFactory: _document, deps: [] },\n\t                            { provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true },\n\t                            { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true },\n\t                            { provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true },\n\t                            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig },\n\t                            { provide: DomRootRenderer, useClass: DomRootRenderer_ },\n\t                            { provide: _angular_core.RootRenderer, useExisting: DomRootRenderer },\n\t                            { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n\t                            { provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver }, DomSharedStylesHost,\n\t                            _angular_core.Testability, EventManager, ELEMENT_PROBE_PROVIDERS, Title\n\t                        ],\n\t                        exports: [_angular_common.CommonModule, _angular_core.ApplicationModule]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        BrowserModule.ctorParameters = [\n\t            { type: BrowserModule, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.SkipSelf },] },\n\t        ];\n\t        return BrowserModule;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * JS version of browser APIs. This library can only run in the browser.\n\t     */\n\t    var win = typeof window !== 'undefined' && window || {};\n\t\n\t    var ChangeDetectionPerfRecord = (function () {\n\t        function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n\t            this.msPerTick = msPerTick;\n\t            this.numTicks = numTicks;\n\t        }\n\t        return ChangeDetectionPerfRecord;\n\t    }());\n\t    /**\n\t     * Entry point for all Angular debug tools. This object corresponds to the `ng`\n\t     * global variable accessible in the dev console.\n\t     */\n\t    var AngularTools = (function () {\n\t        function AngularTools(ref) {\n\t            this.profiler = new AngularProfiler(ref);\n\t        }\n\t        return AngularTools;\n\t    }());\n\t    /**\n\t     * Entry point for all Angular profiling-related debug tools. This object\n\t     * corresponds to the `ng.profiler` in the dev console.\n\t     */\n\t    var AngularProfiler = (function () {\n\t        function AngularProfiler(ref) {\n\t            this.appRef = ref.injector.get(_angular_core.ApplicationRef);\n\t        }\n\t        /**\n\t         * Exercises change detection in a loop and then prints the average amount of\n\t         * time in milliseconds how long a single round of change detection takes for\n\t         * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n\t         * of 500 milliseconds.\n\t         *\n\t         * Optionally, a user may pass a `config` parameter containing a map of\n\t         * options. Supported options are:\n\t         *\n\t         * `record` (boolean) - causes the profiler to record a CPU profile while\n\t         * it exercises the change detector. Example:\n\t         *\n\t         * ```\n\t         * ng.profiler.timeChangeDetection({record: true})\n\t         * ```\n\t         */\n\t        AngularProfiler.prototype.timeChangeDetection = function (config) {\n\t            var record = config && config['record'];\n\t            var profileName = 'Change Detection';\n\t            // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n\t            var isProfilerAvailable = isPresent(win.console.profile);\n\t            if (record && isProfilerAvailable) {\n\t                win.console.profile(profileName);\n\t            }\n\t            var start = getDOM().performanceNow();\n\t            var numTicks = 0;\n\t            while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n\t                this.appRef.tick();\n\t                numTicks++;\n\t            }\n\t            var end = getDOM().performanceNow();\n\t            if (record && isProfilerAvailable) {\n\t                // need to cast to <any> because type checker thinks there's no argument\n\t                // while in fact there is:\n\t                //\n\t                // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\n\t                win.console.profileEnd(profileName);\n\t            }\n\t            var msPerTick = (end - start) / numTicks;\n\t            win.console.log(\"ran \" + numTicks + \" change detection cycles\");\n\t            win.console.log(msPerTick.toFixed(2) + \" ms per check\");\n\t            return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n\t        };\n\t        return AngularProfiler;\n\t    }());\n\t\n\t    var context = global$1;\n\t    /**\n\t     * Enabled Angular 2 debug tools that are accessible via your browser's\n\t     * developer console.\n\t     *\n\t     * Usage:\n\t     *\n\t     * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n\t     * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n\t     * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n\t     *    then hit Enter.\n\t     *\n\t     * @experimental All debugging apis are currently experimental.\n\t     */\n\t    function enableDebugTools(ref) {\n\t        context.ng = new AngularTools(ref);\n\t        return ref;\n\t    }\n\t    /**\n\t     * Disables Angular 2 tools.\n\t     *\n\t     * @experimental All debugging apis are currently experimental.\n\t     */\n\t    function disableDebugTools() {\n\t        delete context.ng;\n\t    }\n\t\n\t    /**\n\t     * Predicates for use with {@link DebugElement}'s query functions.\n\t     *\n\t     * @experimental All debugging apis are currently experimental.\n\t     */\n\t    var By = (function () {\n\t        function By() {\n\t        }\n\t        /**\n\t         * Match all elements.\n\t         *\n\t         * ## Example\n\t         *\n\t         * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n\t         */\n\t        By.all = function () { return function (debugElement) { return true; }; };\n\t        /**\n\t         * Match elements by the given CSS selector.\n\t         *\n\t         * ## Example\n\t         *\n\t         * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n\t         */\n\t        By.css = function (selector) {\n\t            return function (debugElement) {\n\t                return isPresent(debugElement.nativeElement) ?\n\t                    getDOM().elementMatches(debugElement.nativeElement, selector) :\n\t                    false;\n\t            };\n\t        };\n\t        /**\n\t         * Match elements that have the given directive present.\n\t         *\n\t         * ## Example\n\t         *\n\t         * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n\t         */\n\t        By.directive = function (type) {\n\t            return function (debugElement) { return debugElement.providerTokens.indexOf(type) !== -1; };\n\t        };\n\t        return By;\n\t    }());\n\t\n\t    var __platform_browser_private__ = {\n\t        BrowserPlatformLocation: BrowserPlatformLocation,\n\t        DomAdapter: DomAdapter,\n\t        BrowserDomAdapter: BrowserDomAdapter,\n\t        BrowserGetTestability: BrowserGetTestability,\n\t        getDOM: getDOM,\n\t        setRootDomAdapter: setRootDomAdapter,\n\t        DomRootRenderer_: DomRootRenderer_,\n\t        DomRootRenderer: DomRootRenderer,\n\t        DomSharedStylesHost: DomSharedStylesHost,\n\t        SharedStylesHost: SharedStylesHost,\n\t        ELEMENT_PROBE_PROVIDERS: ELEMENT_PROBE_PROVIDERS,\n\t        DomEventsPlugin: DomEventsPlugin,\n\t        KeyEventsPlugin: KeyEventsPlugin,\n\t        HammerGesturesPlugin: HammerGesturesPlugin,\n\t        initDomAdapter: initDomAdapter,\n\t        INTERNAL_BROWSER_PLATFORM_PROVIDERS: INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n\t        BROWSER_SANITIZATION_PROVIDERS: BROWSER_SANITIZATION_PROVIDERS\n\t    };\n\t\n\t    exports.BrowserModule = BrowserModule;\n\t    exports.platformBrowser = platformBrowser;\n\t    exports.Title = Title;\n\t    exports.disableDebugTools = disableDebugTools;\n\t    exports.enableDebugTools = enableDebugTools;\n\t    exports.AnimationDriver = AnimationDriver;\n\t    exports.By = By;\n\t    exports.NgProbeToken = NgProbeToken;\n\t    exports.DOCUMENT = DOCUMENT;\n\t    exports.EVENT_MANAGER_PLUGINS = EVENT_MANAGER_PLUGINS;\n\t    exports.EventManager = EventManager;\n\t    exports.HAMMER_GESTURE_CONFIG = HAMMER_GESTURE_CONFIG;\n\t    exports.HammerGestureConfig = HammerGestureConfig;\n\t    exports.DomSanitizer = DomSanitizer;\n\t    exports.__platform_browser_private__ = __platform_browser_private__;\n\t\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(15);\n\tvar toSubscriber_1 = __webpack_require__(103);\n\tvar observable_1 = __webpack_require__(53);\n\t/**\n\t * A representation of any set of values over any amount of time. This the most basic building block\n\t * of RxJS.\n\t *\n\t * @class Observable<T>\n\t */\n\tvar Observable = (function () {\n\t    /**\n\t     * @constructor\n\t     * @param {Function} subscribe the function that is  called when the Observable is\n\t     * initially subscribed to. This function is given a Subscriber, to which new values\n\t     * can be `next`ed, or an `error` method can be called to raise an error, or\n\t     * `complete` can be called to notify of a successful completion.\n\t     */\n\t    function Observable(subscribe) {\n\t        this._isScalar = false;\n\t        if (subscribe) {\n\t            this._subscribe = subscribe;\n\t        }\n\t    }\n\t    /**\n\t     * Creates a new Observable, with this Observable as the source, and the passed\n\t     * operator defined as the new observable's operator.\n\t     * @method lift\n\t     * @param {Operator} operator the operator defining the operation to take on the observable\n\t     * @return {Observable} a new observable with the Operator applied\n\t     */\n\t    Observable.prototype.lift = function (operator) {\n\t        var observable = new Observable();\n\t        observable.source = this;\n\t        observable.operator = operator;\n\t        return observable;\n\t    };\n\t    /**\n\t     * Registers handlers for handling emitted values, error and completions from the observable, and\n\t     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n\t     * @method subscribe\n\t     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n\t     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n\t     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n\t     *  the error will be thrown as unhandled\n\t     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n\t     * @return {ISubscription} a subscription reference to the registered handlers\n\t     */\n\t    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n\t        var operator = this.operator;\n\t        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n\t        if (operator) {\n\t            operator.call(sink, this);\n\t        }\n\t        else {\n\t            sink.add(this._subscribe(sink));\n\t        }\n\t        if (sink.syncErrorThrowable) {\n\t            sink.syncErrorThrowable = false;\n\t            if (sink.syncErrorThrown) {\n\t                throw sink.syncErrorValue;\n\t            }\n\t        }\n\t        return sink;\n\t    };\n\t    /**\n\t     * @method forEach\n\t     * @param {Function} next a handler for each value emitted by the observable\n\t     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n\t     * @return {Promise} a promise that either resolves on observable completion or\n\t     *  rejects with the handled error\n\t     */\n\t    Observable.prototype.forEach = function (next, PromiseCtor) {\n\t        var _this = this;\n\t        if (!PromiseCtor) {\n\t            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n\t                PromiseCtor = root_1.root.Rx.config.Promise;\n\t            }\n\t            else if (root_1.root.Promise) {\n\t                PromiseCtor = root_1.root.Promise;\n\t            }\n\t        }\n\t        if (!PromiseCtor) {\n\t            throw new Error('no Promise impl found');\n\t        }\n\t        return new PromiseCtor(function (resolve, reject) {\n\t            var subscription = _this.subscribe(function (value) {\n\t                if (subscription) {\n\t                    // if there is a subscription, then we can surmise\n\t                    // the next handling is asynchronous. Any errors thrown\n\t                    // need to be rejected explicitly and unsubscribe must be\n\t                    // called manually\n\t                    try {\n\t                        next(value);\n\t                    }\n\t                    catch (err) {\n\t                        reject(err);\n\t                        subscription.unsubscribe();\n\t                    }\n\t                }\n\t                else {\n\t                    // if there is NO subscription, then we're getting a nexted\n\t                    // value synchronously during subscription. We can just call it.\n\t                    // If it errors, Observable's `subscribe` will ensure the\n\t                    // unsubscription logic is called, then synchronously rethrow the error.\n\t                    // After that, Promise will trap the error and send it\n\t                    // down the rejection path.\n\t                    next(value);\n\t                }\n\t            }, reject, resolve);\n\t        });\n\t    };\n\t    Observable.prototype._subscribe = function (subscriber) {\n\t        return this.source.subscribe(subscriber);\n\t    };\n\t    /**\n\t     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n\t     * @method Symbol.observable\n\t     * @return {Observable} this instance of the observable\n\t     */\n\t    Observable.prototype[observable_1.$$observable] = function () {\n\t        return this;\n\t    };\n\t    // HACK: Since TypeScript inherits static properties too, we have to\n\t    // fight against TypeScript here so Subject can have a different static create signature\n\t    /**\n\t     * Creates a new cold Observable by calling the Observable constructor\n\t     * @static true\n\t     * @owner Observable\n\t     * @method create\n\t     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n\t     * @return {Observable} a new cold observable\n\t     */\n\t    Observable.create = function (subscribe) {\n\t        return new Observable(subscribe);\n\t    };\n\t    return Observable;\n\t}());\n\texports.Observable = Observable;\n\t//# sourceMappingURL=Observable.js.map\n\n/***/ },\n\n/***/ 90:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.empty = {\n\t    closed: true,\n\t    next: function (value) { },\n\t    error: function (err) { throw err; },\n\t    complete: function () { }\n\t};\n\t//# sourceMappingURL=Observer.js.map\n\n/***/ },\n\n/***/ 13:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(1);\n\tvar Subscriber_1 = __webpack_require__(3);\n\tvar Subscription_1 = __webpack_require__(11);\n\tvar ObjectUnsubscribedError_1 = __webpack_require__(67);\n\tvar SubjectSubscription_1 = __webpack_require__(92);\n\tvar rxSubscriber_1 = __webpack_require__(41);\n\t/**\n\t * @class SubjectSubscriber<T>\n\t */\n\tvar SubjectSubscriber = (function (_super) {\n\t    __extends(SubjectSubscriber, _super);\n\t    function SubjectSubscriber(destination) {\n\t        _super.call(this, destination);\n\t        this.destination = destination;\n\t    }\n\t    return SubjectSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.SubjectSubscriber = SubjectSubscriber;\n\t/**\n\t * @class Subject<T>\n\t */\n\tvar Subject = (function (_super) {\n\t    __extends(Subject, _super);\n\t    function Subject() {\n\t        _super.call(this);\n\t        this.observers = [];\n\t        this.closed = false;\n\t        this.isStopped = false;\n\t        this.hasError = false;\n\t        this.thrownError = null;\n\t    }\n\t    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n\t        return new SubjectSubscriber(this);\n\t    };\n\t    Subject.prototype.lift = function (operator) {\n\t        var subject = new AnonymousSubject(this, this);\n\t        subject.operator = operator;\n\t        return subject;\n\t    };\n\t    Subject.prototype.next = function (value) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        if (!this.isStopped) {\n\t            var observers = this.observers;\n\t            var len = observers.length;\n\t            var copy = observers.slice();\n\t            for (var i = 0; i < len; i++) {\n\t                copy[i].next(value);\n\t            }\n\t        }\n\t    };\n\t    Subject.prototype.error = function (err) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        this.hasError = true;\n\t        this.thrownError = err;\n\t        this.isStopped = true;\n\t        var observers = this.observers;\n\t        var len = observers.length;\n\t        var copy = observers.slice();\n\t        for (var i = 0; i < len; i++) {\n\t            copy[i].error(err);\n\t        }\n\t        this.observers.length = 0;\n\t    };\n\t    Subject.prototype.complete = function () {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        this.isStopped = true;\n\t        var observers = this.observers;\n\t        var len = observers.length;\n\t        var copy = observers.slice();\n\t        for (var i = 0; i < len; i++) {\n\t            copy[i].complete();\n\t        }\n\t        this.observers.length = 0;\n\t    };\n\t    Subject.prototype.unsubscribe = function () {\n\t        this.isStopped = true;\n\t        this.closed = true;\n\t        this.observers = null;\n\t    };\n\t    Subject.prototype._subscribe = function (subscriber) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        else if (this.hasError) {\n\t            subscriber.error(this.thrownError);\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t        else if (this.isStopped) {\n\t            subscriber.complete();\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t        else {\n\t            this.observers.push(subscriber);\n\t            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n\t        }\n\t    };\n\t    Subject.prototype.asObservable = function () {\n\t        var observable = new Observable_1.Observable();\n\t        observable.source = this;\n\t        return observable;\n\t    };\n\t    Subject.create = function (destination, source) {\n\t        return new AnonymousSubject(destination, source);\n\t    };\n\t    return Subject;\n\t}(Observable_1.Observable));\n\texports.Subject = Subject;\n\t/**\n\t * @class AnonymousSubject<T>\n\t */\n\tvar AnonymousSubject = (function (_super) {\n\t    __extends(AnonymousSubject, _super);\n\t    function AnonymousSubject(destination, source) {\n\t        _super.call(this);\n\t        this.destination = destination;\n\t        this.source = source;\n\t    }\n\t    AnonymousSubject.prototype.next = function (value) {\n\t        var destination = this.destination;\n\t        if (destination && destination.next) {\n\t            destination.next(value);\n\t        }\n\t    };\n\t    AnonymousSubject.prototype.error = function (err) {\n\t        var destination = this.destination;\n\t        if (destination && destination.error) {\n\t            this.destination.error(err);\n\t        }\n\t    };\n\t    AnonymousSubject.prototype.complete = function () {\n\t        var destination = this.destination;\n\t        if (destination && destination.complete) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    AnonymousSubject.prototype._subscribe = function (subscriber) {\n\t        var source = this.source;\n\t        if (source) {\n\t            return this.source.subscribe(subscriber);\n\t        }\n\t        else {\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t    };\n\t    return AnonymousSubject;\n\t}(Subject));\n\texports.AnonymousSubject = AnonymousSubject;\n\t//# sourceMappingURL=Subject.js.map\n\n/***/ },\n\n/***/ 92:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscription_1 = __webpack_require__(11);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SubjectSubscription = (function (_super) {\n\t    __extends(SubjectSubscription, _super);\n\t    function SubjectSubscription(subject, subscriber) {\n\t        _super.call(this);\n\t        this.subject = subject;\n\t        this.subscriber = subscriber;\n\t        this.closed = false;\n\t    }\n\t    SubjectSubscription.prototype.unsubscribe = function () {\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.closed = true;\n\t        var subject = this.subject;\n\t        var observers = subject.observers;\n\t        this.subject = null;\n\t        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n\t            return;\n\t        }\n\t        var subscriberIndex = observers.indexOf(this.subscriber);\n\t        if (subscriberIndex !== -1) {\n\t            observers.splice(subscriberIndex, 1);\n\t        }\n\t    };\n\t    return SubjectSubscription;\n\t}(Subscription_1.Subscription));\n\texports.SubjectSubscription = SubjectSubscription;\n\t//# sourceMappingURL=SubjectSubscription.js.map\n\n/***/ },\n\n/***/ 3:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar isFunction_1 = __webpack_require__(54);\n\tvar Subscription_1 = __webpack_require__(11);\n\tvar Observer_1 = __webpack_require__(90);\n\tvar rxSubscriber_1 = __webpack_require__(41);\n\t/**\n\t * Implements the {@link Observer} interface and extends the\n\t * {@link Subscription} class. While the {@link Observer} is the public API for\n\t * consuming the values of an {@link Observable}, all Observers get converted to\n\t * a Subscriber, in order to provide Subscription-like capabilities such as\n\t * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n\t * implementing operators, but it is rarely used as a public API.\n\t *\n\t * @class Subscriber<T>\n\t */\n\tvar Subscriber = (function (_super) {\n\t    __extends(Subscriber, _super);\n\t    /**\n\t     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n\t     * defined Observer or a `next` callback function.\n\t     * @param {function(e: ?any): void} [error] The `error` callback of an\n\t     * Observer.\n\t     * @param {function(): void} [complete] The `complete` callback of an\n\t     * Observer.\n\t     */\n\t    function Subscriber(destinationOrNext, error, complete) {\n\t        _super.call(this);\n\t        this.syncErrorValue = null;\n\t        this.syncErrorThrown = false;\n\t        this.syncErrorThrowable = false;\n\t        this.isStopped = false;\n\t        switch (arguments.length) {\n\t            case 0:\n\t                this.destination = Observer_1.empty;\n\t                break;\n\t            case 1:\n\t                if (!destinationOrNext) {\n\t                    this.destination = Observer_1.empty;\n\t                    break;\n\t                }\n\t                if (typeof destinationOrNext === 'object') {\n\t                    if (destinationOrNext instanceof Subscriber) {\n\t                        this.destination = destinationOrNext;\n\t                        this.destination.add(this);\n\t                    }\n\t                    else {\n\t                        this.syncErrorThrowable = true;\n\t                        this.destination = new SafeSubscriber(this, destinationOrNext);\n\t                    }\n\t                    break;\n\t                }\n\t            default:\n\t                this.syncErrorThrowable = true;\n\t                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n\t                break;\n\t        }\n\t    }\n\t    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n\t    /**\n\t     * A static factory for a Subscriber, given a (potentially partial) definition\n\t     * of an Observer.\n\t     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n\t     * @param {function(e: ?any): void} [error] The `error` callback of an\n\t     * Observer.\n\t     * @param {function(): void} [complete] The `complete` callback of an\n\t     * Observer.\n\t     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n\t     * Observer represented by the given arguments.\n\t     */\n\t    Subscriber.create = function (next, error, complete) {\n\t        var subscriber = new Subscriber(next, error, complete);\n\t        subscriber.syncErrorThrowable = false;\n\t        return subscriber;\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive notifications of type `next` from\n\t     * the Observable, with a value. The Observable may call this method 0 or more\n\t     * times.\n\t     * @param {T} [value] The `next` value.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.next = function (value) {\n\t        if (!this.isStopped) {\n\t            this._next(value);\n\t        }\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive notifications of type `error` from\n\t     * the Observable, with an attached {@link Error}. Notifies the Observer that\n\t     * the Observable has experienced an error condition.\n\t     * @param {any} [err] The `error` exception.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            this.isStopped = true;\n\t            this._error(err);\n\t        }\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive a valueless notification of type\n\t     * `complete` from the Observable. Notifies the Observer that the Observable\n\t     * has finished sending push-based notifications.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.complete = function () {\n\t        if (!this.isStopped) {\n\t            this.isStopped = true;\n\t            this._complete();\n\t        }\n\t    };\n\t    Subscriber.prototype.unsubscribe = function () {\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.isStopped = true;\n\t        _super.prototype.unsubscribe.call(this);\n\t    };\n\t    Subscriber.prototype._next = function (value) {\n\t        this.destination.next(value);\n\t    };\n\t    Subscriber.prototype._error = function (err) {\n\t        this.destination.error(err);\n\t        this.unsubscribe();\n\t    };\n\t    Subscriber.prototype._complete = function () {\n\t        this.destination.complete();\n\t        this.unsubscribe();\n\t    };\n\t    return Subscriber;\n\t}(Subscription_1.Subscription));\n\texports.Subscriber = Subscriber;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SafeSubscriber = (function (_super) {\n\t    __extends(SafeSubscriber, _super);\n\t    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n\t        _super.call(this);\n\t        this._parent = _parent;\n\t        var next;\n\t        var context = this;\n\t        if (isFunction_1.isFunction(observerOrNext)) {\n\t            next = observerOrNext;\n\t        }\n\t        else if (observerOrNext) {\n\t            context = observerOrNext;\n\t            next = observerOrNext.next;\n\t            error = observerOrNext.error;\n\t            complete = observerOrNext.complete;\n\t            if (isFunction_1.isFunction(context.unsubscribe)) {\n\t                this.add(context.unsubscribe.bind(context));\n\t            }\n\t            context.unsubscribe = this.unsubscribe.bind(this);\n\t        }\n\t        this._context = context;\n\t        this._next = next;\n\t        this._error = error;\n\t        this._complete = complete;\n\t    }\n\t    SafeSubscriber.prototype.next = function (value) {\n\t        if (!this.isStopped && this._next) {\n\t            var _parent = this._parent;\n\t            if (!_parent.syncErrorThrowable) {\n\t                this.__tryOrUnsub(this._next, value);\n\t            }\n\t            else if (this.__tryOrSetError(_parent, this._next, value)) {\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            var _parent = this._parent;\n\t            if (this._error) {\n\t                if (!_parent.syncErrorThrowable) {\n\t                    this.__tryOrUnsub(this._error, err);\n\t                    this.unsubscribe();\n\t                }\n\t                else {\n\t                    this.__tryOrSetError(_parent, this._error, err);\n\t                    this.unsubscribe();\n\t                }\n\t            }\n\t            else if (!_parent.syncErrorThrowable) {\n\t                this.unsubscribe();\n\t                throw err;\n\t            }\n\t            else {\n\t                _parent.syncErrorValue = err;\n\t                _parent.syncErrorThrown = true;\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.complete = function () {\n\t        if (!this.isStopped) {\n\t            var _parent = this._parent;\n\t            if (this._complete) {\n\t                if (!_parent.syncErrorThrowable) {\n\t                    this.__tryOrUnsub(this._complete);\n\t                    this.unsubscribe();\n\t                }\n\t                else {\n\t                    this.__tryOrSetError(_parent, this._complete);\n\t                    this.unsubscribe();\n\t                }\n\t            }\n\t            else {\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n\t        try {\n\t            fn.call(this._context, value);\n\t        }\n\t        catch (err) {\n\t            this.unsubscribe();\n\t            throw err;\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n\t        try {\n\t            fn.call(this._context, value);\n\t        }\n\t        catch (err) {\n\t            parent.syncErrorValue = err;\n\t            parent.syncErrorThrown = true;\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    SafeSubscriber.prototype._unsubscribe = function () {\n\t        var _parent = this._parent;\n\t        this._context = null;\n\t        this._parent = null;\n\t        _parent.unsubscribe();\n\t    };\n\t    return SafeSubscriber;\n\t}(Subscriber));\n\t//# sourceMappingURL=Subscriber.js.map\n\n/***/ },\n\n/***/ 11:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar isArray_1 = __webpack_require__(23);\n\tvar isObject_1 = __webpack_require__(102);\n\tvar isFunction_1 = __webpack_require__(54);\n\tvar tryCatch_1 = __webpack_require__(17);\n\tvar errorObject_1 = __webpack_require__(14);\n\tvar UnsubscriptionError_1 = __webpack_require__(77);\n\t/**\n\t * Represents a disposable resource, such as the execution of an Observable. A\n\t * Subscription has one important method, `unsubscribe`, that takes no argument\n\t * and just disposes the resource held by the subscription.\n\t *\n\t * Additionally, subscriptions may be grouped together through the `add()`\n\t * method, which will attach a child Subscription to the current Subscription.\n\t * When a Subscription is unsubscribed, all its children (and its grandchildren)\n\t * will be unsubscribed as well.\n\t *\n\t * @class Subscription\n\t */\n\tvar Subscription = (function () {\n\t    /**\n\t     * @param {function(): void} [unsubscribe] A function describing how to\n\t     * perform the disposal of resources when the `unsubscribe` method is called.\n\t     */\n\t    function Subscription(unsubscribe) {\n\t        /**\n\t         * A flag to indicate whether this Subscription has already been unsubscribed.\n\t         * @type {boolean}\n\t         */\n\t        this.closed = false;\n\t        if (unsubscribe) {\n\t            this._unsubscribe = unsubscribe;\n\t        }\n\t    }\n\t    /**\n\t     * Disposes the resources held by the subscription. May, for instance, cancel\n\t     * an ongoing Observable execution or cancel any other type of work that\n\t     * started when the Subscription was created.\n\t     * @return {void}\n\t     */\n\t    Subscription.prototype.unsubscribe = function () {\n\t        var hasErrors = false;\n\t        var errors;\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.closed = true;\n\t        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n\t        this._subscriptions = null;\n\t        if (isFunction_1.isFunction(_unsubscribe)) {\n\t            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n\t            if (trial === errorObject_1.errorObject) {\n\t                hasErrors = true;\n\t                (errors = errors || []).push(errorObject_1.errorObject.e);\n\t            }\n\t        }\n\t        if (isArray_1.isArray(_subscriptions)) {\n\t            var index = -1;\n\t            var len = _subscriptions.length;\n\t            while (++index < len) {\n\t                var sub = _subscriptions[index];\n\t                if (isObject_1.isObject(sub)) {\n\t                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n\t                    if (trial === errorObject_1.errorObject) {\n\t                        hasErrors = true;\n\t                        errors = errors || [];\n\t                        var err = errorObject_1.errorObject.e;\n\t                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n\t                            errors = errors.concat(err.errors);\n\t                        }\n\t                        else {\n\t                            errors.push(err);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        if (hasErrors) {\n\t            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n\t        }\n\t    };\n\t    /**\n\t     * Adds a tear down to be called during the unsubscribe() of this\n\t     * Subscription.\n\t     *\n\t     * If the tear down being added is a subscription that is already\n\t     * unsubscribed, is the same reference `add` is being called on, or is\n\t     * `Subscription.EMPTY`, it will not be added.\n\t     *\n\t     * If this subscription is already in an `closed` state, the passed\n\t     * tear down logic will be executed immediately.\n\t     *\n\t     * @param {TeardownLogic} teardown The additional logic to execute on\n\t     * teardown.\n\t     * @return {Subscription} Returns the Subscription used or created to be\n\t     * added to the inner subscriptions list. This Subscription can be used with\n\t     * `remove()` to remove the passed teardown logic from the inner subscriptions\n\t     * list.\n\t     */\n\t    Subscription.prototype.add = function (teardown) {\n\t        if (!teardown || (teardown === Subscription.EMPTY)) {\n\t            return Subscription.EMPTY;\n\t        }\n\t        if (teardown === this) {\n\t            return this;\n\t        }\n\t        var sub = teardown;\n\t        switch (typeof teardown) {\n\t            case 'function':\n\t                sub = new Subscription(teardown);\n\t            case 'object':\n\t                if (sub.closed || typeof sub.unsubscribe !== 'function') {\n\t                    break;\n\t                }\n\t                else if (this.closed) {\n\t                    sub.unsubscribe();\n\t                }\n\t                else {\n\t                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n\t                }\n\t                break;\n\t            default:\n\t                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n\t        }\n\t        return sub;\n\t    };\n\t    /**\n\t     * Removes a Subscription from the internal list of subscriptions that will\n\t     * unsubscribe during the unsubscribe process of this Subscription.\n\t     * @param {Subscription} subscription The subscription to remove.\n\t     * @return {void}\n\t     */\n\t    Subscription.prototype.remove = function (subscription) {\n\t        // HACK: This might be redundant because of the logic in `add()`\n\t        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n\t            return;\n\t        }\n\t        var subscriptions = this._subscriptions;\n\t        if (subscriptions) {\n\t            var subscriptionIndex = subscriptions.indexOf(subscription);\n\t            if (subscriptionIndex !== -1) {\n\t                subscriptions.splice(subscriptionIndex, 1);\n\t            }\n\t        }\n\t    };\n\t    Subscription.EMPTY = (function (empty) {\n\t        empty.closed = true;\n\t        return empty;\n\t    }(new Subscription()));\n\t    return Subscription;\n\t}());\n\texports.Subscription = Subscription;\n\t//# sourceMappingURL=Subscription.js.map\n\n/***/ },\n\n/***/ 53:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(15);\n\tfunction getSymbolObservable(context) {\n\t    var $$observable;\n\t    var Symbol = context.Symbol;\n\t    if (typeof Symbol === 'function') {\n\t        if (Symbol.observable) {\n\t            $$observable = Symbol.observable;\n\t        }\n\t        else {\n\t            $$observable = Symbol('observable');\n\t            Symbol.observable = $$observable;\n\t        }\n\t    }\n\t    else {\n\t        $$observable = '@@observable';\n\t    }\n\t    return $$observable;\n\t}\n\texports.getSymbolObservable = getSymbolObservable;\n\texports.$$observable = getSymbolObservable(root_1.root);\n\t//# sourceMappingURL=observable.js.map\n\n/***/ },\n\n/***/ 41:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(15);\n\tvar Symbol = root_1.root.Symbol;\n\texports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n\t    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\t//# sourceMappingURL=rxSubscriber.js.map\n\n/***/ },\n\n/***/ 67:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * An error thrown when an action is invalid because the object has been\n\t * unsubscribed.\n\t *\n\t * @see {@link Subject}\n\t * @see {@link BehaviorSubject}\n\t *\n\t * @class ObjectUnsubscribedError\n\t */\n\tvar ObjectUnsubscribedError = (function (_super) {\n\t    __extends(ObjectUnsubscribedError, _super);\n\t    function ObjectUnsubscribedError() {\n\t        var err = _super.call(this, 'object unsubscribed');\n\t        this.name = err.name = 'ObjectUnsubscribedError';\n\t        this.stack = err.stack;\n\t        this.message = err.message;\n\t    }\n\t    return ObjectUnsubscribedError;\n\t}(Error));\n\texports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n\t//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n/***/ },\n\n/***/ 77:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * An error thrown when one or more errors have occurred during the\n\t * `unsubscribe` of a {@link Subscription}.\n\t */\n\tvar UnsubscriptionError = (function (_super) {\n\t    __extends(UnsubscriptionError, _super);\n\t    function UnsubscriptionError(errors) {\n\t        _super.call(this);\n\t        this.errors = errors;\n\t        var err = Error.call(this, errors ?\n\t            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n\t        this.name = err.name = 'UnsubscriptionError';\n\t        this.stack = err.stack;\n\t        this.message = err.message;\n\t    }\n\t    return UnsubscriptionError;\n\t}(Error));\n\texports.UnsubscriptionError = UnsubscriptionError;\n\t//# sourceMappingURL=UnsubscriptionError.js.map\n\n/***/ },\n\n/***/ 14:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// typeof any so that it we don't have to cast when comparing a result to the error object\n\texports.errorObject = { e: {} };\n\t//# sourceMappingURL=errorObject.js.map\n\n/***/ },\n\n/***/ 23:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\t//# sourceMappingURL=isArray.js.map\n\n/***/ },\n\n/***/ 54:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction isFunction(x) {\n\t    return typeof x === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t//# sourceMappingURL=isFunction.js.map\n\n/***/ },\n\n/***/ 102:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction isObject(x) {\n\t    return x != null && typeof x === 'object';\n\t}\n\texports.isObject = isObject;\n\t//# sourceMappingURL=isObject.js.map\n\n/***/ },\n\n/***/ 15:\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\tvar objectTypes = {\n\t    'boolean': false,\n\t    'function': true,\n\t    'object': true,\n\t    'number': false,\n\t    'string': false,\n\t    'undefined': false\n\t};\n\texports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\n\tvar freeGlobal = objectTypes[typeof global] && global;\n\tif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n\t    exports.root = freeGlobal;\n\t}\n\t//# sourceMappingURL=root.js.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 103:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Subscriber_1 = __webpack_require__(3);\n\tvar rxSubscriber_1 = __webpack_require__(41);\n\tfunction toSubscriber(nextOrObserver, error, complete) {\n\t    if (nextOrObserver) {\n\t        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n\t            return nextOrObserver;\n\t        }\n\t        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n\t            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n\t        }\n\t    }\n\t    if (!nextOrObserver && !error && !complete) {\n\t        return new Subscriber_1.Subscriber();\n\t    }\n\t    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n\t}\n\texports.toSubscriber = toSubscriber;\n\t//# sourceMappingURL=toSubscriber.js.map\n\n/***/ },\n\n/***/ 17:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar errorObject_1 = __webpack_require__(14);\n\tvar tryCatchTarget;\n\tfunction tryCatcher() {\n\t    try {\n\t        return tryCatchTarget.apply(this, arguments);\n\t    }\n\t    catch (e) {\n\t        errorObject_1.errorObject.e = e;\n\t        return errorObject_1.errorObject;\n\t    }\n\t}\n\tfunction tryCatch(fn) {\n\t    tryCatchTarget = fn;\n\t    return tryCatcher;\n\t}\n\texports.tryCatch = tryCatch;\n\t;\n\t//# sourceMappingURL=tryCatch.js.map\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// vendor.479b9ff7103491f661f2.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 479b9ff7103491f661f2","// Angular 2\nimport '@angular/common';\nimport '@angular/core';\nimport '@angular/platform-browser';\nimport '@angular/platform-browser-dynamic';\n\n\n\n// WEBPACK FOOTER //\n// ./demo/vendor.ts","/**\n * @license Angular v2.1.2\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}),global.ng.core));\n}(this, function (exports,_angular_core) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This class should not be used directly by an application developer. Instead, use\n     * {@link Location}.\n     *\n     * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n     * agnostic.\n     * This means that we can have different implementation of `PlatformLocation` for the different\n     * platforms\n     * that angular supports. For example, the default `PlatformLocation` is {@link\n     * BrowserPlatformLocation},\n     * however when you run your app in a WebWorker you use {@link WebWorkerPlatformLocation}.\n     *\n     * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n     * when\n     * they need to interact with the DOM apis like pushState, popState, etc...\n     *\n     * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n     * by\n     * the {@link Router} in order to navigate between routes. Since all interactions between {@link\n     * Router} /\n     * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n     * class\n     * they are all platform independent.\n     *\n     * @stable\n     */\n    var PlatformLocation = (function () {\n        function PlatformLocation() {\n        }\n        Object.defineProperty(PlatformLocation.prototype, \"pathname\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformLocation.prototype, \"search\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformLocation.prototype, \"hash\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return PlatformLocation;\n    }());\n\n    /**\n     * `LocationStrategy` is responsible for representing and reading route state\n     * from the browser's URL. Angular provides two strategies:\n     * {@link HashLocationStrategy} and {@link PathLocationStrategy} (default).\n     *\n     * This is used under the hood of the {@link Location} service.\n     *\n     * Applications should use the {@link Router} or {@link Location} services to\n     * interact with application route state.\n     *\n     * For instance, {@link HashLocationStrategy} produces URLs like\n     * `http://example.com#/foo`, and {@link PathLocationStrategy} produces\n     * `http://example.com/foo` as an equivalent URL.\n     *\n     * See these two classes for more.\n     *\n     * @stable\n     */\n    var LocationStrategy = (function () {\n        function LocationStrategy() {\n        }\n        return LocationStrategy;\n    }());\n    /**\n     * The `APP_BASE_HREF` token represents the base href to be used with the\n     * {@link PathLocationStrategy}.\n     *\n     * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n     * representing the URL prefix that should be preserved when generating and recognizing\n     * URLs.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import {Component, NgModule} from '@angular/core';\n     * import {APP_BASE_HREF} from '@angular/common';\n     *\n     * @NgModule({\n     *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n     * })\n     * class AppModule {}\n     * ```\n     *\n     * @stable\n     */\n    var APP_BASE_HREF = new _angular_core.OpaqueToken('appBaseHref');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var _global = globalScope;\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    _global.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    function isPresent(obj) {\n        return obj != null;\n    }\n    function isBlank(obj) {\n        return obj == null;\n    }\n    function isDate(obj) {\n        return obj instanceof Date && !isNaN(obj.valueOf());\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token === undefined || token === null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return token.overriddenName;\n        }\n        if (token.name) {\n            return token.name;\n        }\n        var res = token.toString();\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    var NumberWrapper = (function () {\n        function NumberWrapper() {\n        }\n        NumberWrapper.parseIntAutoRadix = function (text) {\n            var result = parseInt(text);\n            if (isNaN(result)) {\n                throw new Error('Invalid integer literal when parsing ' + text);\n            }\n            return result;\n        };\n        NumberWrapper.parseInt = function (text, radix) {\n            if (radix == 10) {\n                if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n                    return parseInt(text, radix);\n                }\n            }\n            else if (radix == 16) {\n                if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n                    return parseInt(text, radix);\n                }\n            }\n            else {\n                var result = parseInt(text, radix);\n                if (!isNaN(result)) {\n                    return result;\n                }\n            }\n            throw new Error('Invalid integer literal when parsing ' + text + ' in base ' + radix);\n        };\n        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n        return NumberWrapper;\n    }());\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            if (globalScope.Symbol && Symbol.iterator) {\n                _symbolIterator = Symbol.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * `Location` is a service that applications can use to interact with a browser's URL.\n     * Depending on which {@link LocationStrategy} is used, `Location` will either persist\n     * to the URL's path or the URL's hash segment.\n     *\n     * Note: it's better to use {@link Router#navigate} service to trigger route changes. Use\n     * `Location` only if you need to interact with or create normalized URLs outside of\n     * routing.\n     *\n     * `Location` is responsible for normalizing the URL against the application's base href.\n     * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n     * trailing slash:\n     * - `/my/app/user/123` is normalized\n     * - `my/app/user/123` **is not** normalized\n     * - `/my/app/user/123/` **is not** normalized\n     *\n     * ### Example\n     *\n     * ```\n     * import {Component} from '@angular/core';\n     * import {Location} from '@angular/common';\n     *\n     * @Component({selector: 'app-component'})\n     * class AppCmp {\n     *   constructor(location: Location) {\n     *     location.go('/foo');\n     *   }\n     * }\n     * ```\n     *\n     * @stable\n     */\n    var Location = (function () {\n        function Location(platformStrategy) {\n            var _this = this;\n            /** @internal */\n            this._subject = new _angular_core.EventEmitter();\n            this._platformStrategy = platformStrategy;\n            var browserBaseHref = this._platformStrategy.getBaseHref();\n            this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n            this._platformStrategy.onPopState(function (ev) {\n                _this._subject.emit({\n                    'url': _this.path(true),\n                    'pop': true,\n                    'type': ev.type,\n                });\n            });\n        }\n        /**\n         * Returns the normalized URL path.\n         */\n        // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n        // removed.\n        Location.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            return this.normalize(this._platformStrategy.path(includeHash));\n        };\n        /**\n         * Normalizes the given path and compares to the current normalized path.\n         */\n        Location.prototype.isCurrentPathEqualTo = function (path, query) {\n            if (query === void 0) { query = ''; }\n            return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n        };\n        /**\n         * Given a string representing a URL, returns the normalized URL path without leading or\n         * trailing slashes.\n         */\n        Location.prototype.normalize = function (url) {\n            return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n        };\n        /**\n         * Given a string representing a URL, returns the platform-specific external URL path.\n         * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n         * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n         * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n         */\n        Location.prototype.prepareExternalUrl = function (url) {\n            if (url.length > 0 && !url.startsWith('/')) {\n                url = '/' + url;\n            }\n            return this._platformStrategy.prepareExternalUrl(url);\n        };\n        // TODO: rename this method to pushState\n        /**\n         * Changes the browsers URL to the normalized version of the given URL, and pushes a\n         * new item onto the platform's history.\n         */\n        Location.prototype.go = function (path, query) {\n            if (query === void 0) { query = ''; }\n            this._platformStrategy.pushState(null, '', path, query);\n        };\n        /**\n         * Changes the browsers URL to the normalized version of the given URL, and replaces\n         * the top item on the platform's history stack.\n         */\n        Location.prototype.replaceState = function (path, query) {\n            if (query === void 0) { query = ''; }\n            this._platformStrategy.replaceState(null, '', path, query);\n        };\n        /**\n         * Navigates forward in the platform's history.\n         */\n        Location.prototype.forward = function () { this._platformStrategy.forward(); };\n        /**\n         * Navigates back in the platform's history.\n         */\n        Location.prototype.back = function () { this._platformStrategy.back(); };\n        /**\n         * Subscribe to the platform's `popState` events.\n         */\n        Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n            if (onThrow === void 0) { onThrow = null; }\n            if (onReturn === void 0) { onReturn = null; }\n            return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n        };\n        /**\n         * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n         * is.\n         */\n        Location.normalizeQueryParams = function (params) {\n            return (params.length > 0 && params.substring(0, 1) != '?') ? ('?' + params) : params;\n        };\n        /**\n         * Given 2 parts of a url, join them with a slash if needed.\n         */\n        Location.joinWithSlash = function (start, end) {\n            if (start.length == 0) {\n                return end;\n            }\n            if (end.length == 0) {\n                return start;\n            }\n            var slashes = 0;\n            if (start.endsWith('/')) {\n                slashes++;\n            }\n            if (end.startsWith('/')) {\n                slashes++;\n            }\n            if (slashes == 2) {\n                return start + end.substring(1);\n            }\n            if (slashes == 1) {\n                return start + end;\n            }\n            return start + '/' + end;\n        };\n        /**\n         * If url has a trailing slash, remove it, otherwise return url as is.\n         */\n        Location.stripTrailingSlash = function (url) {\n            if (/\\/$/g.test(url)) {\n                url = url.substring(0, url.length - 1);\n            }\n            return url;\n        };\n        Location.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        Location.ctorParameters = [\n            { type: LocationStrategy, },\n        ];\n        return Location;\n    }());\n    function _stripBaseHref(baseHref, url) {\n        if (baseHref.length > 0 && url.startsWith(baseHref)) {\n            return url.substring(baseHref.length);\n        }\n        return url;\n    }\n    function _stripIndexHtml(url) {\n        if (/\\/index.html$/g.test(url)) {\n            // '/index.html'.length == 11\n            return url.substring(0, url.length - 11);\n        }\n        return url;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * `HashLocationStrategy` is a {@link LocationStrategy} used to configure the\n     * {@link Location} service to represent its state in the\n     * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n     * of the browser's URL.\n     *\n     * For instance, if you call `location.go('/foo')`, the browser's URL will become\n     * `example.com#/foo`.\n     *\n     * ### Example\n     *\n     * ```\n     * import {Component, NgModule} from '@angular/core';\n     * import {\n     *   LocationStrategy,\n     *   HashLocationStrategy\n     * } from '@angular/common';\n     *\n     * @NgModule({\n     *   providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}]\n     * })\n     * class AppModule {}\n     * ```\n     *\n     * @stable\n     */\n    var HashLocationStrategy = (function (_super) {\n        __extends(HashLocationStrategy, _super);\n        function HashLocationStrategy(_platformLocation, _baseHref) {\n            _super.call(this);\n            this._platformLocation = _platformLocation;\n            this._baseHref = '';\n            if (isPresent(_baseHref)) {\n                this._baseHref = _baseHref;\n            }\n        }\n        HashLocationStrategy.prototype.onPopState = function (fn) {\n            this._platformLocation.onPopState(fn);\n            this._platformLocation.onHashChange(fn);\n        };\n        HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n        HashLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            // the hash value is always prefixed with a `#`\n            // and if it is empty then it will stay empty\n            var path = this._platformLocation.hash;\n            if (!isPresent(path))\n                path = '#';\n            return path.length > 0 ? path.substring(1) : path;\n        };\n        HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            var url = Location.joinWithSlash(this._baseHref, internal);\n            return url.length > 0 ? ('#' + url) : url;\n        };\n        HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n            var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n            if (url.length == 0) {\n                url = this._platformLocation.pathname;\n            }\n            this._platformLocation.pushState(state, title, url);\n        };\n        HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n            var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n            if (url.length == 0) {\n                url = this._platformLocation.pathname;\n            }\n            this._platformLocation.replaceState(state, title, url);\n        };\n        HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n        HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n        HashLocationStrategy.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        HashLocationStrategy.ctorParameters = [\n            { type: PlatformLocation, },\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n        ];\n        return HashLocationStrategy;\n    }(LocationStrategy));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * `PathLocationStrategy` is a {@link LocationStrategy} used to configure the\n     * {@link Location} service to represent its state in the\n     * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n     * browser's URL.\n     *\n     * `PathLocationStrategy` is the default binding for {@link LocationStrategy}\n     * provided in {@link ROUTER_PROVIDERS}.\n     *\n     * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\n     * or add a base element to the document. This URL prefix that will be preserved\n     * when generating and recognizing URLs.\n     *\n     * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n     * `location.go('/foo')`, the browser's URL will become\n     * `example.com/my/app/foo`.\n     *\n     * Similarly, if you add `<base href='/my/app'/>` to the document and call\n     * `location.go('/foo')`, the browser's URL will become\n     * `example.com/my/app/foo`.\n     *\n     * @stable\n     */\n    var PathLocationStrategy = (function (_super) {\n        __extends$1(PathLocationStrategy, _super);\n        function PathLocationStrategy(_platformLocation, href) {\n            _super.call(this);\n            this._platformLocation = _platformLocation;\n            if (isBlank(href)) {\n                href = this._platformLocation.getBaseHrefFromDOM();\n            }\n            if (isBlank(href)) {\n                throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n            }\n            this._baseHref = href;\n        }\n        PathLocationStrategy.prototype.onPopState = function (fn) {\n            this._platformLocation.onPopState(fn);\n            this._platformLocation.onHashChange(fn);\n        };\n        PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n        PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            return Location.joinWithSlash(this._baseHref, internal);\n        };\n        PathLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            var pathname = this._platformLocation.pathname +\n                Location.normalizeQueryParams(this._platformLocation.search);\n            var hash = this._platformLocation.hash;\n            return hash && includeHash ? \"\" + pathname + hash : pathname;\n        };\n        PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n            var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n            this._platformLocation.pushState(state, title, externalUrl);\n        };\n        PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n            var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n            this._platformLocation.replaceState(state, title, externalUrl);\n        };\n        PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n        PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n        PathLocationStrategy.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        PathLocationStrategy.ctorParameters = [\n            { type: PlatformLocation, },\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n        ];\n        return PathLocationStrategy;\n    }(LocationStrategy));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @experimental\n     */\n    var NgLocalization = (function () {\n        function NgLocalization() {\n        }\n        return NgLocalization;\n    }());\n    /**\n     * Returns the plural category for a given value.\n     * - \"=value\" when the case exists,\n     * - the plural category otherwise\n     *\n     * @internal\n     */\n    function getPluralCategory(value, cases, ngLocalization) {\n        var nbCase = \"=\" + value;\n        return cases.indexOf(nbCase) > -1 ? nbCase : ngLocalization.getPluralCategory(value);\n    }\n    /**\n     * Returns the plural case based on the locale\n     *\n     * @experimental\n     */\n    var NgLocaleLocalization = (function (_super) {\n        __extends$2(NgLocaleLocalization, _super);\n        function NgLocaleLocalization(_locale) {\n            _super.call(this);\n            this._locale = _locale;\n        }\n        NgLocaleLocalization.prototype.getPluralCategory = function (value) {\n            var plural = getPluralCase(this._locale, value);\n            switch (plural) {\n                case Plural.Zero:\n                    return 'zero';\n                case Plural.One:\n                    return 'one';\n                case Plural.Two:\n                    return 'two';\n                case Plural.Few:\n                    return 'few';\n                case Plural.Many:\n                    return 'many';\n                default:\n                    return 'other';\n            }\n        };\n        NgLocaleLocalization.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        NgLocaleLocalization.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return NgLocaleLocalization;\n    }(NgLocalization));\n    // This is generated code DO NOT MODIFY\n    // see angular2/script/cldr/gen_plural_rules.js\n    /** @experimental */\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale\n     *\n     * @experimental\n     */\n    function getPluralCase(locale, nLike) {\n        // TODO(vicb): lazy compute\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'agq':\n            case 'bas':\n            case 'cu':\n            case 'dav':\n            case 'dje':\n            case 'dua':\n            case 'dyo':\n            case 'ebu':\n            case 'ewo':\n            case 'guz':\n            case 'kam':\n            case 'khq':\n            case 'ki':\n            case 'kln':\n            case 'kok':\n            case 'ksf':\n            case 'lrc':\n            case 'lu':\n            case 'luo':\n            case 'luy':\n            case 'mer':\n            case 'mfe':\n            case 'mgh':\n            case 'mua':\n            case 'mzn':\n            case 'nmg':\n            case 'nus':\n            case 'qu':\n            case 'rn':\n            case 'rw':\n            case 'sbp':\n            case 'twq':\n            case 'vai':\n            case 'yav':\n            case 'yue':\n            case 'zgh':\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            default:\n                return Plural.Other;\n        }\n    }\n\n    // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n    // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n    var _arrayFromMap = (function () {\n        try {\n            if ((new Map()).values().next) {\n                return function createArrayFromMap(m, getValues) {\n                    return getValues ? Array.from(m.values()) : Array.from(m.keys());\n                };\n            }\n        }\n        catch (e) {\n        }\n        return function createArrayFromMapWithForeach(m, getValues) {\n            var res = new Array(m.size), i = 0;\n            m.forEach(function (v, k) {\n                res[i] = getValues ? v : k;\n                i++;\n            });\n            return res;\n        };\n    })();\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        ListWrapper.removeAll = function (list, items) {\n            for (var i = 0; i < items.length; ++i) {\n                var index = list.indexOf(items[i]);\n                list.splice(index, 1);\n            }\n        };\n        ListWrapper.remove = function (list, el) {\n            var index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        ListWrapper.maximum = function (list, predicate) {\n            if (list.length == 0) {\n                return null;\n            }\n            var solution = null;\n            var maxValue = -Infinity;\n            for (var index = 0; index < list.length; index++) {\n                var candidate = list[index];\n                if (candidate == null) {\n                    continue;\n                }\n                var candidateValue = predicate(candidate);\n                if (candidateValue > maxValue) {\n                    solution = candidate;\n                    maxValue = candidateValue;\n                }\n            }\n            return solution;\n        };\n        ListWrapper.flatten = function (list) {\n            var target = [];\n            _flattenArray(list, target);\n            return target;\n        };\n        return ListWrapper;\n    }());\n    function _flattenArray(source, target) {\n        if (isPresent(source)) {\n            for (var i = 0; i < source.length; i++) {\n                var item = source[i];\n                if (Array.isArray(item)) {\n                    _flattenArray(item, target);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n        }\n        return target;\n    }\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) &&\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Adds and removes CSS classes on an HTML element.\n     *\n     * @howToUse\n     * ```\n     *     <some-element [ngClass]=\"'first second'\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n     * ```\n     *\n     * @description\n     *\n     * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n     * - `string` - the CSS classes listed in the string (space delimited) are added,\n     * - `Array` - the CSS classes declared as Array elements are added,\n     * - `Object` - keys are CSS classes that get added when the expression given in the value\n     *              evaluates to a truthy value, otherwise they are removed.\n     *\n     * @stable\n     */\n    var NgClass = (function () {\n        function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n            this._iterableDiffers = _iterableDiffers;\n            this._keyValueDiffers = _keyValueDiffers;\n            this._ngEl = _ngEl;\n            this._renderer = _renderer;\n            this._initialClasses = [];\n        }\n        Object.defineProperty(NgClass.prototype, \"klass\", {\n            set: function (v) {\n                this._applyInitialClasses(true);\n                this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n                this._applyInitialClasses(false);\n                this._applyClasses(this._rawClass, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgClass.prototype, \"ngClass\", {\n            set: function (v) {\n                this._cleanupClasses(this._rawClass);\n                this._iterableDiffer = null;\n                this._keyValueDiffer = null;\n                this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n                if (this._rawClass) {\n                    if (isListLikeIterable(this._rawClass)) {\n                        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create(null);\n                    }\n                    else {\n                        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create(null);\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgClass.prototype.ngDoCheck = function () {\n            if (this._iterableDiffer) {\n                var changes = this._iterableDiffer.diff(this._rawClass);\n                if (changes) {\n                    this._applyIterableChanges(changes);\n                }\n            }\n            else if (this._keyValueDiffer) {\n                var changes = this._keyValueDiffer.diff(this._rawClass);\n                if (changes) {\n                    this._applyKeyValueChanges(changes);\n                }\n            }\n        };\n        NgClass.prototype._cleanupClasses = function (rawClassVal) {\n            this._applyClasses(rawClassVal, true);\n            this._applyInitialClasses(false);\n        };\n        NgClass.prototype._applyKeyValueChanges = function (changes) {\n            var _this = this;\n            changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n            changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n            changes.forEachRemovedItem(function (record) {\n                if (record.previousValue) {\n                    _this._toggleClass(record.key, false);\n                }\n            });\n        };\n        NgClass.prototype._applyIterableChanges = function (changes) {\n            var _this = this;\n            changes.forEachAddedItem(function (record) { return _this._toggleClass(record.item, true); });\n            changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n        };\n        NgClass.prototype._applyInitialClasses = function (isCleanup) {\n            var _this = this;\n            this._initialClasses.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n        };\n        NgClass.prototype._applyClasses = function (rawClassVal, isCleanup) {\n            var _this = this;\n            if (rawClassVal) {\n                if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                    rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n                }\n                else {\n                    Object.keys(rawClassVal).forEach(function (klass) {\n                        if (isPresent(rawClassVal[klass]))\n                            _this._toggleClass(klass, !isCleanup);\n                    });\n                }\n            }\n        };\n        NgClass.prototype._toggleClass = function (klass, enabled) {\n            var _this = this;\n            klass = klass.trim();\n            if (klass) {\n                klass.split(/\\s+/g).forEach(function (klass) { _this._renderer.setElementClass(_this._ngEl.nativeElement, klass, enabled); });\n            }\n        };\n        NgClass.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngClass]' },] },\n        ];\n        /** @nocollapse */\n        NgClass.ctorParameters = [\n            { type: _angular_core.IterableDiffers, },\n            { type: _angular_core.KeyValueDiffers, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ];\n        NgClass.propDecorators = {\n            'klass': [{ type: _angular_core.Input, args: ['class',] },],\n            'ngClass': [{ type: _angular_core.Input },],\n        };\n        return NgClass;\n    }());\n\n    var NgForRow = (function () {\n        function NgForRow($implicit, index, count) {\n            this.$implicit = $implicit;\n            this.index = index;\n            this.count = count;\n        }\n        Object.defineProperty(NgForRow.prototype, \"first\", {\n            get: function () { return this.index === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"last\", {\n            get: function () { return this.index === this.count - 1; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"even\", {\n            get: function () { return this.index % 2 === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"odd\", {\n            get: function () { return !this.even; },\n            enumerable: true,\n            configurable: true\n        });\n        return NgForRow;\n    }());\n    /**\n     * The `NgFor` directive instantiates a template once per item from an iterable. The context for\n     * each instantiated template inherits from the outer context with the given loop variable set\n     * to the current item from the iterable.\n     *\n     * ### Local Variables\n     *\n     * `NgFor` provides several exported values that can be aliased to local variables:\n     *\n     * * `index` will be set to the current loop iteration for each template context.\n     * * `first` will be set to a boolean value indicating whether the item is the first one in the\n     *   iteration.\n     * * `last` will be set to a boolean value indicating whether the item is the last one in the\n     *   iteration.\n     * * `even` will be set to a boolean value indicating whether this item has an even index.\n     * * `odd` will be set to a boolean value indicating whether this item has an odd index.\n     *\n     * ### Change Propagation\n     *\n     * When the contents of the iterator changes, `NgFor` makes the corresponding changes to the DOM:\n     *\n     * * When an item is added, a new instance of the template is added to the DOM.\n     * * When an item is removed, its template instance is removed from the DOM.\n     * * When items are reordered, their respective templates are reordered in the DOM.\n     * * Otherwise, the DOM element for that item will remain the same.\n     *\n     * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n     * those changes in the DOM. This has important implications for animations and any stateful\n     * controls\n     * (such as `<input>` elements which accept user input) that are present. Inserted rows can be\n     * animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state such\n     * as user input.\n     *\n     * It is possible for the identities of elements in the iterator to change while the data does not.\n     * This can happen, for example, if the iterator produced from an RPC to the server, and that\n     * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n     * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n     * elements were deleted and all new elements inserted). This is an expensive operation and should\n     * be avoided if possible.\n     *\n     * To customize the default tracking algorithm, `NgFor` supports `trackBy` option.\n     * `trackBy` takes a function which has two arguments: `index` and `item`.\n     * If `trackBy` is given, Angular tracks changes by the return value of the function.\n     *\n     * ### Syntax\n     *\n     * - `<li *ngFor=\"let item of items; let i = index; trackBy: trackByFn\">...</li>`\n     * - `<li template=\"ngFor let item of items; let i = index; trackBy: trackByFn\">...</li>`\n     *\n     * With `<template>` element:\n     *\n     * ```\n     * <template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n     *   <li>...</li>\n     * </template>\n     * ```\n     *\n     * ### Example\n     *\n     * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n     * example.\n     *\n     * @stable\n     */\n    var NgFor = (function () {\n        function NgFor(_viewContainer, _template, _differs, _cdr) {\n            this._viewContainer = _viewContainer;\n            this._template = _template;\n            this._differs = _differs;\n            this._cdr = _cdr;\n            this._differ = null;\n        }\n        Object.defineProperty(NgFor.prototype, \"ngForTemplate\", {\n            set: function (value) {\n                if (value) {\n                    this._template = value;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgFor.prototype.ngOnChanges = function (changes) {\n            if ('ngForOf' in changes) {\n                // React on ngForOf changes only once all inputs have been initialized\n                var value = changes['ngForOf'].currentValue;\n                if (!this._differ && value) {\n                    try {\n                        this._differ = this._differs.find(value).create(this._cdr, this.ngForTrackBy);\n                    }\n                    catch (e) {\n                        throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n                    }\n                }\n            }\n        };\n        NgFor.prototype.ngDoCheck = function () {\n            if (this._differ) {\n                var changes = this._differ.diff(this.ngForOf);\n                if (changes)\n                    this._applyChanges(changes);\n            }\n        };\n        NgFor.prototype._applyChanges = function (changes) {\n            var _this = this;\n            var insertTuples = [];\n            changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n                if (item.previousIndex == null) {\n                    var view = _this._viewContainer.createEmbeddedView(_this._template, new NgForRow(null, null, null), currentIndex);\n                    var tuple = new RecordViewTuple(item, view);\n                    insertTuples.push(tuple);\n                }\n                else if (currentIndex == null) {\n                    _this._viewContainer.remove(adjustedPreviousIndex);\n                }\n                else {\n                    var view = _this._viewContainer.get(adjustedPreviousIndex);\n                    _this._viewContainer.move(view, currentIndex);\n                    var tuple = new RecordViewTuple(item, view);\n                    insertTuples.push(tuple);\n                }\n            });\n            for (var i = 0; i < insertTuples.length; i++) {\n                this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n            }\n            for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n                var viewRef = this._viewContainer.get(i);\n                viewRef.context.index = i;\n                viewRef.context.count = ilen;\n            }\n            changes.forEachIdentityChange(function (record) {\n                var viewRef = _this._viewContainer.get(record.currentIndex);\n                viewRef.context.$implicit = record.item;\n            });\n        };\n        NgFor.prototype._perViewChange = function (view, record) {\n            view.context.$implicit = record.item;\n        };\n        NgFor.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngFor][ngForOf]' },] },\n        ];\n        /** @nocollapse */\n        NgFor.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: _angular_core.IterableDiffers, },\n            { type: _angular_core.ChangeDetectorRef, },\n        ];\n        NgFor.propDecorators = {\n            'ngForOf': [{ type: _angular_core.Input },],\n            'ngForTrackBy': [{ type: _angular_core.Input },],\n            'ngForTemplate': [{ type: _angular_core.Input },],\n        };\n        return NgFor;\n    }());\n    var RecordViewTuple = (function () {\n        function RecordViewTuple(record, view) {\n            this.record = record;\n            this.view = view;\n        }\n        return RecordViewTuple;\n    }());\n\n    /**\n     * Removes or recreates a portion of the DOM tree based on an {expression}.\n     *\n     * If the expression assigned to `ngIf` evaluates to a falsy value then the element\n     * is removed from the DOM, otherwise a clone of the element is reinserted into the DOM.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/fe0kgemFBtmQOY31b4tw?p=preview)):\n     *\n     * ```\n     * <div *ngIf=\"errorCount > 0\" class=\"error\">\n     *   <!-- Error message displayed when the errorCount property in the current context is greater\n     * than 0. -->\n     *   {{errorCount}} errors detected\n     * </div>\n     * ```\n     *\n     * ### Syntax\n     *\n     * - `<div *ngIf=\"condition\">...</div>`\n     * - `<div template=\"ngIf condition\">...</div>`\n     * - `<template [ngIf]=\"condition\"><div>...</div></template>`\n     *\n     * @stable\n     */\n    var NgIf = (function () {\n        function NgIf(_viewContainer, _template) {\n            this._viewContainer = _viewContainer;\n            this._template = _template;\n            this._hasView = false;\n        }\n        Object.defineProperty(NgIf.prototype, \"ngIf\", {\n            set: function (condition) {\n                if (condition && !this._hasView) {\n                    this._hasView = true;\n                    this._viewContainer.createEmbeddedView(this._template);\n                }\n                else if (!condition && this._hasView) {\n                    this._hasView = false;\n                    this._viewContainer.clear();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgIf.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngIf]' },] },\n        ];\n        /** @nocollapse */\n        NgIf.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n        ];\n        NgIf.propDecorators = {\n            'ngIf': [{ type: _angular_core.Input },],\n        };\n        return NgIf;\n    }());\n\n    var _CASE_DEFAULT = {};\n    var SwitchView = (function () {\n        function SwitchView(_viewContainerRef, _templateRef) {\n            this._viewContainerRef = _viewContainerRef;\n            this._templateRef = _templateRef;\n        }\n        SwitchView.prototype.create = function () { this._viewContainerRef.createEmbeddedView(this._templateRef); };\n        SwitchView.prototype.destroy = function () { this._viewContainerRef.clear(); };\n        return SwitchView;\n    }());\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n     *             expression.\n     *\n     * @howToUse\n     * ```\n     *     <container-element [ngSwitch]=\"switch_expression\">\n     *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n     *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n     *       <ng-container *ngSwitchCase=\"match_expression_3\">\n     *         <!-- use a ng-container to group multiple root nodes -->\n     *         <inner-element></inner-element>\n     *         <inner-other-element></inner-other-element>\n     *       </ng-container>\n     *       <some-element *ngSwitchDefault>...</some-element>\n     *     </container-element>\n     * ```\n     * @description\n     *\n     * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n     * switch expression.\n     *\n     * In other words:\n     * - you define a container element (where you place the directive with a switch expression on the\n     * `[ngSwitch]=\"...\"` attribute)\n     * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n     * root elements.\n     *\n     * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n     * be preserved at the location.\n     *\n     * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n     * expression is evaluated.\n     * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n     * stamped out.\n     *\n     * @stable\n     */\n    var NgSwitch = (function () {\n        function NgSwitch() {\n            this._useDefault = false;\n            this._valueViews = new Map();\n            this._activeViews = [];\n        }\n        Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n            set: function (value) {\n                // Set of views to display for this value\n                var views = this._valueViews.get(value);\n                if (views) {\n                    this._useDefault = false;\n                }\n                else {\n                    // No view to display for the current value -> default case\n                    // Nothing to do if the default case was already active\n                    if (this._useDefault) {\n                        return;\n                    }\n                    this._useDefault = true;\n                    views = this._valueViews.get(_CASE_DEFAULT);\n                }\n                this._emptyAllActiveViews();\n                this._activateViews(views);\n                this._switchValue = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSwitch.prototype._onCaseValueChanged = function (oldCase, newCase, view) {\n            this._deregisterView(oldCase, view);\n            this._registerView(newCase, view);\n            if (oldCase === this._switchValue) {\n                view.destroy();\n                ListWrapper.remove(this._activeViews, view);\n            }\n            else if (newCase === this._switchValue) {\n                if (this._useDefault) {\n                    this._useDefault = false;\n                    this._emptyAllActiveViews();\n                }\n                view.create();\n                this._activeViews.push(view);\n            }\n            // Switch to default when there is no more active ViewContainers\n            if (this._activeViews.length === 0 && !this._useDefault) {\n                this._useDefault = true;\n                this._activateViews(this._valueViews.get(_CASE_DEFAULT));\n            }\n        };\n        NgSwitch.prototype._emptyAllActiveViews = function () {\n            var activeContainers = this._activeViews;\n            for (var i = 0; i < activeContainers.length; i++) {\n                activeContainers[i].destroy();\n            }\n            this._activeViews = [];\n        };\n        NgSwitch.prototype._activateViews = function (views) {\n            if (views) {\n                for (var i = 0; i < views.length; i++) {\n                    views[i].create();\n                }\n                this._activeViews = views;\n            }\n        };\n        /** @internal */\n        NgSwitch.prototype._registerView = function (value, view) {\n            var views = this._valueViews.get(value);\n            if (!views) {\n                views = [];\n                this._valueViews.set(value, views);\n            }\n            views.push(view);\n        };\n        NgSwitch.prototype._deregisterView = function (value, view) {\n            // `_CASE_DEFAULT` is used a marker for non-registered cases\n            if (value === _CASE_DEFAULT)\n                return;\n            var views = this._valueViews.get(value);\n            if (views.length == 1) {\n                this._valueViews.delete(value);\n            }\n            else {\n                ListWrapper.remove(views, view);\n            }\n        };\n        NgSwitch.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitch]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitch.ctorParameters = [];\n        NgSwitch.propDecorators = {\n            'ngSwitch': [{ type: _angular_core.Input },],\n        };\n        return NgSwitch;\n    }());\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Creates a view that will be added/removed from the parent {@link NgSwitch} when the\n     *             given expression evaluate to respectively the same/different value as the switch\n     *             expression.\n     *\n     * @howToUse\n     * ```\n     * <container-element [ngSwitch]=\"switch_expression\">\n     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     * </container-element>\n     *```\n     * @description\n     *\n     * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n     * expression.\n     *\n     * If multiple match expressions match the switch expression value, all of them are displayed.\n     *\n     * See {@link NgSwitch} for more details and example.\n     *\n     * @stable\n     */\n    var NgSwitchCase = (function () {\n        function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n            // `_CASE_DEFAULT` is used as a marker for a not yet initialized value\n            this._value = _CASE_DEFAULT;\n            this._switch = ngSwitch;\n            this._view = new SwitchView(viewContainer, templateRef);\n        }\n        Object.defineProperty(NgSwitchCase.prototype, \"ngSwitchCase\", {\n            set: function (value) {\n                this._switch._onCaseValueChanged(this._value, value, this._view);\n                this._value = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgSwitchCase.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchCase]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitchCase.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n        ];\n        NgSwitchCase.propDecorators = {\n            'ngSwitchCase': [{ type: _angular_core.Input },],\n        };\n        return NgSwitchCase;\n    }());\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Creates a view that is added to the parent {@link NgSwitch} when no case expressions\n     * match the\n     *             switch expression.\n     *\n     * @howToUse\n     * ```\n     * <container-element [ngSwitch]=\"switch_expression\">\n     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     *   <some-other-element *ngSwitchDefault>...</some-other-element>\n     * </container-element>\n     * ```\n     *\n     * @description\n     *\n     * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n     * expression.\n     *\n     * See {@link NgSwitch} for more details and example.\n     *\n     * @stable\n     */\n    var NgSwitchDefault = (function () {\n        function NgSwitchDefault(viewContainer, templateRef, sswitch) {\n            sswitch._registerView(_CASE_DEFAULT, new SwitchView(viewContainer, templateRef));\n        }\n        NgSwitchDefault.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchDefault]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitchDefault.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n        ];\n        return NgSwitchDefault;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n     *\n     * @howToUse\n     * ```\n     * <some-element [ngPlural]=\"value\">\n     *   <ng-container *ngPluralCase=\"'=0'\">there is nothing</ng-container>\n     *   <ng-container *ngPluralCase=\"'=1'\">there is one</ng-container>\n     *   <ng-container *ngPluralCase=\"'few'\">there are a few</ng-container>\n     *   <ng-container *ngPluralCase=\"'other'\">there are exactly #</ng-container>\n     * </some-element>\n     * ```\n     *\n     * @description\n     *\n     * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n     * that match the switch expression's pluralization category.\n     *\n     * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n     * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n     * expression:\n     * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n     *   matches the switch expression exactly,\n     * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n     *   value matches aren't found and the value maps to its category for the defined locale.\n     *\n     * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n     *\n     * @experimental\n     */\n    var NgPlural = (function () {\n        function NgPlural(_localization) {\n            this._localization = _localization;\n            this._caseViews = {};\n        }\n        Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n            set: function (value) {\n                this._switchValue = value;\n                this._updateView();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n        NgPlural.prototype._updateView = function () {\n            this._clearViews();\n            var cases = Object.keys(this._caseViews);\n            var key = getPluralCategory(this._switchValue, cases, this._localization);\n            this._activateView(this._caseViews[key]);\n        };\n        NgPlural.prototype._clearViews = function () {\n            if (this._activeView)\n                this._activeView.destroy();\n        };\n        NgPlural.prototype._activateView = function (view) {\n            if (view) {\n                this._activeView = view;\n                this._activeView.create();\n            }\n        };\n        NgPlural.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngPlural]' },] },\n        ];\n        /** @nocollapse */\n        NgPlural.ctorParameters = [\n            { type: NgLocalization, },\n        ];\n        NgPlural.propDecorators = {\n            'ngPlural': [{ type: _angular_core.Input },],\n        };\n        return NgPlural;\n    }());\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Creates a view that will be added/removed from the parent {@link NgPlural} when the\n     *             given expression matches the plural expression according to CLDR rules.\n     *\n     * @howToUse\n     * ```\n     * <some-element [ngPlural]=\"value\">\n     *   <ng-container *ngPluralCase=\"'=0'\">...</ng-container>\n     *   <ng-container *ngPluralCase=\"'other'\">...</ng-container>\n     * </some-element>\n     *```\n     *\n     * See {@link NgPlural} for more details and example.\n     *\n     * @experimental\n     */\n    var NgPluralCase = (function () {\n        function NgPluralCase(value, template, viewContainer, ngPlural) {\n            this.value = value;\n            ngPlural.addCase(value, new SwitchView(viewContainer, template));\n        }\n        NgPluralCase.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngPluralCase]' },] },\n        ];\n        /** @nocollapse */\n        NgPluralCase.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['ngPluralCase',] },] },\n            { type: _angular_core.TemplateRef, },\n            { type: _angular_core.ViewContainerRef, },\n            { type: NgPlural, decorators: [{ type: _angular_core.Host },] },\n        ];\n        return NgPluralCase;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Update an HTML element styles.\n     *\n     * @howToUse\n     * ```\n     * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n     *\n     * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n     *\n     * <some-element [ngStyle]=\"objExp\">...</some-element>\n     * ```\n     *\n     * @description\n     *\n     * The styles are updated according to the value of the expression evaluation:\n     * - keys are style names with an option `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n     * - values are the values assigned to those properties (expressed in the given unit).\n     *\n     * @stable\n     */\n    var NgStyle = (function () {\n        function NgStyle(_differs, _ngEl, _renderer) {\n            this._differs = _differs;\n            this._ngEl = _ngEl;\n            this._renderer = _renderer;\n        }\n        Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n            set: function (v) {\n                this._ngStyle = v;\n                if (!this._differ && v) {\n                    this._differ = this._differs.find(v).create(null);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgStyle.prototype.ngDoCheck = function () {\n            if (this._differ) {\n                var changes = this._differ.diff(this._ngStyle);\n                if (changes) {\n                    this._applyChanges(changes);\n                }\n            }\n        };\n        NgStyle.prototype._applyChanges = function (changes) {\n            var _this = this;\n            changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n            changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n            changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n        };\n        NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n            var _a = nameAndUnit.split('.'), name = _a[0], unit = _a[1];\n            value = value && unit ? \"\" + value + unit : value;\n            this._renderer.setElementStyle(this._ngEl.nativeElement, name, value);\n        };\n        NgStyle.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngStyle]' },] },\n        ];\n        /** @nocollapse */\n        NgStyle.ctorParameters = [\n            { type: _angular_core.KeyValueDiffers, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ];\n        NgStyle.propDecorators = {\n            'ngStyle': [{ type: _angular_core.Input },],\n        };\n        return NgStyle;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n     *\n     * @howToUse\n     * ```\n     * <template [ngTemplateOutlet]=\"templateRefExpression\"\n     *           [ngOutletContext]=\"objectExpression\">\n     * </template>\n     * ```\n     *\n     * @description\n     *\n     * You can attach a context object to the `EmbeddedViewRef` by setting `[ngOutletContext]`.\n     * `[ngOutletContext]` should be an object, the object's keys will be the local template variables\n     * available within the `TemplateRef`.\n     *\n     * Note: using the key `$implicit` in the context object will set it's value as default.\n     *\n     * @experimental\n     */\n    var NgTemplateOutlet = (function () {\n        function NgTemplateOutlet(_viewContainerRef) {\n            this._viewContainerRef = _viewContainerRef;\n        }\n        Object.defineProperty(NgTemplateOutlet.prototype, \"ngOutletContext\", {\n            set: function (context) { this._context = context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgTemplateOutlet.prototype, \"ngTemplateOutlet\", {\n            set: function (templateRef) { this._templateRef = templateRef; },\n            enumerable: true,\n            configurable: true\n        });\n        NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n            if (this._viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            if (this._templateRef) {\n                this._viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, this._context);\n            }\n        };\n        NgTemplateOutlet.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngTemplateOutlet]' },] },\n        ];\n        /** @nocollapse */\n        NgTemplateOutlet.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n        ];\n        NgTemplateOutlet.propDecorators = {\n            'ngOutletContext': [{ type: _angular_core.Input },],\n            'ngTemplateOutlet': [{ type: _angular_core.Input },],\n        };\n        return NgTemplateOutlet;\n    }());\n\n    /**\n     * A collection of Angular directives that are likely to be used in each and every Angular\n     * application.\n     */\n    var COMMON_DIRECTIVES = [\n        NgClass,\n        NgFor,\n        NgIf,\n        NgTemplateOutlet,\n        NgStyle,\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault,\n        NgPlural,\n        NgPluralCase,\n    ];\n\n    var isPromise = _angular_core.__core_private__.isPromise;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @stable\n     */\n    var BaseError = (function (_super) {\n        __extends$4(BaseError, _super);\n        function BaseError(message) {\n            // Errors don't use current this, instead they create a new instance.\n            // We have to do forward all of our api to the nativeInstance.\n            var nativeError = _super.call(this, message);\n            this._nativeError = nativeError;\n        }\n        Object.defineProperty(BaseError.prototype, \"message\", {\n            get: function () { return this._nativeError.message; },\n            set: function (message) { this._nativeError.message = message; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"name\", {\n            get: function () { return this._nativeError.name; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"stack\", {\n            get: function () { return this._nativeError.stack; },\n            set: function (value) { this._nativeError.stack = value; },\n            enumerable: true,\n            configurable: true\n        });\n        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n        return BaseError;\n    }(Error));\n    /**\n     * @stable\n     */\n    var WrappedError = (function (_super) {\n        __extends$4(WrappedError, _super);\n        function WrappedError(message, error) {\n            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n            this.originalError = error;\n        }\n        Object.defineProperty(WrappedError.prototype, \"stack\", {\n            get: function () {\n                return (this.originalError instanceof Error ? this.originalError : this._nativeError)\n                    .stack;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return WrappedError;\n    }(BaseError));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var InvalidPipeArgumentError = (function (_super) {\n        __extends$3(InvalidPipeArgumentError, _super);\n        function InvalidPipeArgumentError(type, value) {\n            _super.call(this, \"Invalid argument '\" + value + \"' for pipe '\" + stringify(type) + \"'\");\n        }\n        return InvalidPipeArgumentError;\n    }(BaseError));\n\n    var ObservableStrategy = (function () {\n        function ObservableStrategy() {\n        }\n        ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n            return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n        };\n        ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n        ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n        return ObservableStrategy;\n    }());\n    var PromiseStrategy = (function () {\n        function PromiseStrategy() {\n        }\n        PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n            return async.then(updateLatestValue, function (e) { throw e; });\n        };\n        PromiseStrategy.prototype.dispose = function (subscription) { };\n        PromiseStrategy.prototype.onDestroy = function (subscription) { };\n        return PromiseStrategy;\n    }());\n    var _promiseStrategy = new PromiseStrategy();\n    var _observableStrategy = new ObservableStrategy();\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Unwraps a value from an asynchronous primitive.\n     * @howToUse `observable_or_promise_expression | async`\n     * @description\n     * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n     * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n     * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n     * potential memory leaks.\n     *\n     *\n     * ## Examples\n     *\n     * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n     * promise.\n     *\n     * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n     *\n     * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n     * to the view. The Observable continuesly updates the view with the current time.\n     *\n     * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n     *\n     * @stable\n     */\n    var AsyncPipe = (function () {\n        function AsyncPipe(_ref) {\n            this._ref = _ref;\n            this._latestValue = null;\n            this._latestReturnedValue = null;\n            this._subscription = null;\n            this._obj = null;\n            this._strategy = null;\n        }\n        AsyncPipe.prototype.ngOnDestroy = function () {\n            if (this._subscription) {\n                this._dispose();\n            }\n        };\n        AsyncPipe.prototype.transform = function (obj) {\n            if (!this._obj) {\n                if (obj) {\n                    this._subscribe(obj);\n                }\n                this._latestReturnedValue = this._latestValue;\n                return this._latestValue;\n            }\n            if (obj !== this._obj) {\n                this._dispose();\n                return this.transform(obj);\n            }\n            if (this._latestValue === this._latestReturnedValue) {\n                return this._latestReturnedValue;\n            }\n            this._latestReturnedValue = this._latestValue;\n            return _angular_core.WrappedValue.wrap(this._latestValue);\n        };\n        AsyncPipe.prototype._subscribe = function (obj) {\n            var _this = this;\n            this._obj = obj;\n            this._strategy = this._selectStrategy(obj);\n            this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n        };\n        AsyncPipe.prototype._selectStrategy = function (obj) {\n            if (isPromise(obj)) {\n                return _promiseStrategy;\n            }\n            if (obj.subscribe) {\n                return _observableStrategy;\n            }\n            throw new InvalidPipeArgumentError(AsyncPipe, obj);\n        };\n        AsyncPipe.prototype._dispose = function () {\n            this._strategy.dispose(this._subscription);\n            this._latestValue = null;\n            this._latestReturnedValue = null;\n            this._subscription = null;\n            this._obj = null;\n        };\n        AsyncPipe.prototype._updateLatestValue = function (async, value) {\n            if (async === this._obj) {\n                this._latestValue = value;\n                this._ref.markForCheck();\n            }\n        };\n        AsyncPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'async', pure: false },] },\n        ];\n        /** @nocollapse */\n        AsyncPipe.ctorParameters = [\n            { type: _angular_core.ChangeDetectorRef, },\n        ];\n        return AsyncPipe;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NumberFormatStyle;\n    (function (NumberFormatStyle) {\n        NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\n        NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\n        NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\n    })(NumberFormatStyle || (NumberFormatStyle = {}));\n    var NumberFormatter = (function () {\n        function NumberFormatter() {\n        }\n        NumberFormatter.format = function (num, locale, style, _a) {\n            var _b = _a === void 0 ? {} : _a, minimumIntegerDigits = _b.minimumIntegerDigits, minimumFractionDigits = _b.minimumFractionDigits, maximumFractionDigits = _b.maximumFractionDigits, currency = _b.currency, _c = _b.currencyAsSymbol, currencyAsSymbol = _c === void 0 ? false : _c;\n            var options = {\n                minimumIntegerDigits: minimumIntegerDigits,\n                minimumFractionDigits: minimumFractionDigits,\n                maximumFractionDigits: maximumFractionDigits,\n                style: NumberFormatStyle[style].toLowerCase()\n            };\n            if (style == NumberFormatStyle.Currency) {\n                options.currency = currency;\n                options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n            }\n            return new Intl.NumberFormat(locale, options).format(num);\n        };\n        return NumberFormatter;\n    }());\n    var DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n    var PATTERN_ALIASES = {\n        yMMMdjms: datePartGetterFactory(combine([\n            digitCondition('year', 1),\n            nameCondition('month', 3),\n            digitCondition('day', 1),\n            digitCondition('hour', 1),\n            digitCondition('minute', 1),\n            digitCondition('second', 1),\n        ])),\n        yMdjm: datePartGetterFactory(combine([\n            digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n            digitCondition('hour', 1), digitCondition('minute', 1)\n        ])),\n        yMMMMEEEEd: datePartGetterFactory(combine([\n            digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n            digitCondition('day', 1)\n        ])),\n        yMMMMd: datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n        yMMMd: datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n        yMd: datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n        jms: datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n        jm: datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n    };\n    var DATE_FORMATS = {\n        yyyy: datePartGetterFactory(digitCondition('year', 4)),\n        yy: datePartGetterFactory(digitCondition('year', 2)),\n        y: datePartGetterFactory(digitCondition('year', 1)),\n        MMMM: datePartGetterFactory(nameCondition('month', 4)),\n        MMM: datePartGetterFactory(nameCondition('month', 3)),\n        MM: datePartGetterFactory(digitCondition('month', 2)),\n        M: datePartGetterFactory(digitCondition('month', 1)),\n        LLLL: datePartGetterFactory(nameCondition('month', 4)),\n        dd: datePartGetterFactory(digitCondition('day', 2)),\n        d: datePartGetterFactory(digitCondition('day', 1)),\n        HH: digitModifier(hourExtracter(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n        H: hourExtracter(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n        hh: digitModifier(hourExtracter(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n        h: hourExtracter(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n        jj: datePartGetterFactory(digitCondition('hour', 2)),\n        j: datePartGetterFactory(digitCondition('hour', 1)),\n        mm: digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n        m: datePartGetterFactory(digitCondition('minute', 1)),\n        ss: digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n        s: datePartGetterFactory(digitCondition('second', 1)),\n        // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n        // we can be just safely rely on using `sss` since we currently don't support single or two digit\n        // fractions\n        sss: datePartGetterFactory(digitCondition('second', 3)),\n        EEEE: datePartGetterFactory(nameCondition('weekday', 4)),\n        EEE: datePartGetterFactory(nameCondition('weekday', 3)),\n        EE: datePartGetterFactory(nameCondition('weekday', 2)),\n        E: datePartGetterFactory(nameCondition('weekday', 1)),\n        a: hourClockExtracter(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n        Z: timeZoneGetter('short'),\n        z: timeZoneGetter('long'),\n        ww: datePartGetterFactory({}),\n        // first Thursday of the year. not support ?\n        w: datePartGetterFactory({}),\n        // of the year not support ?\n        G: datePartGetterFactory(nameCondition('era', 1)),\n        GG: datePartGetterFactory(nameCondition('era', 2)),\n        GGG: datePartGetterFactory(nameCondition('era', 3)),\n        GGGG: datePartGetterFactory(nameCondition('era', 4))\n    };\n    function digitModifier(inner) {\n        return function (date, locale) {\n            var result = inner(date, locale);\n            return result.length == 1 ? '0' + result : result;\n        };\n    }\n    function hourClockExtracter(inner) {\n        return function (date, locale) {\n            var result = inner(date, locale);\n            return result.split(' ')[1];\n        };\n    }\n    function hourExtracter(inner) {\n        return function (date, locale) {\n            var result = inner(date, locale);\n            return result.split(' ')[0];\n        };\n    }\n    function intlDateFormat(date, locale, options) {\n        return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n    }\n    function timeZoneGetter(timezone) {\n        // To workaround `Intl` API restriction for single timezone let format with 24 hours\n        var options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n        return function (date, locale) {\n            var result = intlDateFormat(date, locale, options);\n            // Then extract first 3 letters that related to hours\n            return result ? result.substring(3) : '';\n        };\n    }\n    function hour12Modify(options, value) {\n        options.hour12 = value;\n        return options;\n    }\n    function digitCondition(prop, len) {\n        var result = {};\n        result[prop] = len == 2 ? '2-digit' : 'numeric';\n        return result;\n    }\n    function nameCondition(prop, len) {\n        var result = {};\n        result[prop] = len < 4 ? 'short' : 'long';\n        return result;\n    }\n    function combine(options) {\n        var result = {};\n        options.forEach(function (option) { Object.assign(result, option); });\n        return result;\n    }\n    function datePartGetterFactory(ret) {\n        return function (date, locale) { return intlDateFormat(date, locale, ret); };\n    }\n    var datePartsFormatterCache = new Map();\n    function dateFormatter(format, date, locale) {\n        var text = '';\n        var match;\n        var fn;\n        var parts = [];\n        if (PATTERN_ALIASES[format]) {\n            return PATTERN_ALIASES[format](date, locale);\n        }\n        if (datePartsFormatterCache.has(format)) {\n            parts = datePartsFormatterCache.get(format);\n        }\n        else {\n            var matches = DATE_FORMATS_SPLIT.exec(format);\n            while (format) {\n                match = DATE_FORMATS_SPLIT.exec(format);\n                if (match) {\n                    parts = concat(parts, match, 1);\n                    format = parts.pop();\n                }\n                else {\n                    parts.push(format);\n                    format = null;\n                }\n            }\n            datePartsFormatterCache.set(format, parts);\n        }\n        parts.forEach(function (part) {\n            fn = DATE_FORMATS[part];\n            text += fn ? fn(date, locale) :\n                part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n        });\n        return text;\n    }\n    var slice = [].slice;\n    function concat(array1 /** TODO #9100 */, array2 /** TODO #9100 */, index /** TODO #9100 */) {\n        return array1.concat(slice.call(array2, index));\n    }\n    var DateFormatter = (function () {\n        function DateFormatter() {\n        }\n        DateFormatter.format = function (date, locale, pattern) {\n            return dateFormatter(pattern, date, locale);\n        };\n        return DateFormatter;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Formats a date according to locale rules.\n     * @howToUse `date_expression | date[:format]`\n     * @description\n     *\n     * Where:\n     * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n     * (https://www.w3.org/TR/NOTE-datetime).\n     * - `format` indicates which date/time components to include. The format can be predifined as\n     *   shown below or custom as shown in the table.\n     *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n     *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n     *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n     *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n     *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n     *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n     *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n     *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n     *\n     *\n     *  | Component | Symbol | Short Form   | Long Form         | Numeric   | 2-digit   |\n     *  |-----------|:------:|--------------|-------------------|-----------|-----------|\n     *  | era       |   G    | G (AD)       | GGGG (Anno Domini)| -         | -         |\n     *  | year      |   y    | -            | -                 | y (2015)  | yy (15)   |\n     *  | month     |   M    | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n     *  | day       |   d    | -            | -                 | d (3)     | dd (03)   |\n     *  | weekday   |   E    | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n     *  | hour      |   j    | -            | -                 | j (13)    | jj (13)   |\n     *  | hour12    |   h    | -            | -                 | h (1 PM)  | hh (01 PM)|\n     *  | hour24    |   H    | -            | -                 | H (13)    | HH (13)   |\n     *  | minute    |   m    | -            | -                 | m (5)     | mm (05)   |\n     *  | second    |   s    | -            | -                 | s (9)     | ss (09)   |\n     *  | timezone  |   z    | -            | z (Pacific Standard Time)| -  | -         |\n     *  | timezone  |   Z    | Z (GMT-8:00) | -                 | -         | -         |\n     *  | timezone  |   a    | a (PM)       | -                 | -         | -         |\n     *\n     * In javascript, only the components specified will be respected (not the ordering,\n     * punctuations, ...) and details of the formatting will be dependent on the locale.\n     *\n     * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n     *\n     * WARNINGS:\n     * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n     *   Instead users should treat the date as an immutable object and change the reference when the\n     *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n     *   which would be an expensive operation).\n     * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n     *   browsers.\n     *\n     * ### Examples\n     *\n     * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n     * in the _local_ time and locale is 'en-US':\n     *\n     * ```\n     *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n     *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n     *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n     *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n     * ```\n     *\n     * {@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n     *\n     * @stable\n     */\n    var DatePipe = (function () {\n        function DatePipe(_locale) {\n            this._locale = _locale;\n        }\n        DatePipe.prototype.transform = function (value, pattern) {\n            if (pattern === void 0) { pattern = 'mediumDate'; }\n            if (isBlank(value))\n                return null;\n            if (!this.supports(value)) {\n                throw new InvalidPipeArgumentError(DatePipe, value);\n            }\n            if (NumberWrapper.isNumeric(value)) {\n                value = parseFloat(value);\n            }\n            return DateFormatter.format(new Date(value), this._locale, DatePipe._ALIASES[pattern] || pattern);\n        };\n        DatePipe.prototype.supports = function (obj) {\n            return isDate(obj) || NumberWrapper.isNumeric(obj) ||\n                (typeof obj === 'string' && isDate(new Date(obj)));\n        };\n        /** @internal */\n        DatePipe._ALIASES = {\n            'medium': 'yMMMdjms',\n            'short': 'yMdjm',\n            'fullDate': 'yMMMMEEEEd',\n            'longDate': 'yMMMMd',\n            'mediumDate': 'yMMMd',\n            'shortDate': 'yMd',\n            'mediumTime': 'jms',\n            'shortTime': 'jm'\n        };\n        DatePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'date', pure: true },] },\n        ];\n        /** @nocollapse */\n        DatePipe.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return DatePipe;\n    }());\n\n    var _INTERPOLATION_REGEXP = /#/g;\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n     * @howToUse `expression | i18nPlural:mapping`\n     * @description\n     *\n     *  Where:\n     *  - `expression` is a number.\n     *  - `mapping` is an object that mimics the ICU format, see\n     *    http://userguide.icu-project.org/formatparse/messages\n     *\n     *  ## Example\n     *\n     * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n     *\n     * @experimental\n     */\n    var I18nPluralPipe = (function () {\n        function I18nPluralPipe(_localization) {\n            this._localization = _localization;\n        }\n        I18nPluralPipe.prototype.transform = function (value, pluralMap) {\n            if (isBlank(value))\n                return '';\n            if (typeof pluralMap !== 'object' || pluralMap === null) {\n                throw new InvalidPipeArgumentError(I18nPluralPipe, pluralMap);\n            }\n            var key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n            return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n        };\n        I18nPluralPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'i18nPlural', pure: true },] },\n        ];\n        /** @nocollapse */\n        I18nPluralPipe.ctorParameters = [\n            { type: NgLocalization, },\n        ];\n        return I18nPluralPipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Generic selector that displays the string that matches the current value.\n     * @howToUse `expression | i18nSelect:mapping`\n     * @description\n     *\n     *  Where:\n     *  - `mapping`: is an object that indicates the text that should be displayed\n     *  for different values of the provided `expression`.\n     *\n     *  ## Example\n     *\n     * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n     *\n     *  @experimental\n     */\n    var I18nSelectPipe = (function () {\n        function I18nSelectPipe() {\n        }\n        I18nSelectPipe.prototype.transform = function (value, mapping) {\n            if (isBlank(value))\n                return '';\n            if (typeof mapping !== 'object' || mapping === null) {\n                throw new InvalidPipeArgumentError(I18nSelectPipe, mapping);\n            }\n            return mapping[value] || '';\n        };\n        I18nSelectPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'i18nSelect', pure: true },] },\n        ];\n        /** @nocollapse */\n        I18nSelectPipe.ctorParameters = [];\n        return I18nSelectPipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Converts value into JSON string.\n     * @howToUse `expression | json`\n     * @description\n     *\n     * Converts value into string using `JSON.stringify`. Useful for debugging.\n     *\n     * ### Example\n     * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n     *\n     * @stable\n     */\n    var JsonPipe = (function () {\n        function JsonPipe() {\n        }\n        JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n        JsonPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'json', pure: false },] },\n        ];\n        /** @nocollapse */\n        JsonPipe.ctorParameters = [];\n        return JsonPipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Transforms string to lowercase.\n     * @howToUse `expression | lowercase`\n     * @description\n     *\n     * Converts value into lowercase string using `String.prototype.toLowerCase()`.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n     *\n     * @stable\n     */\n    var LowerCasePipe = (function () {\n        function LowerCasePipe() {\n        }\n        LowerCasePipe.prototype.transform = function (value) {\n            if (isBlank(value))\n                return value;\n            if (typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(LowerCasePipe, value);\n            }\n            return value.toLowerCase();\n        };\n        LowerCasePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'lowercase' },] },\n        ];\n        /** @nocollapse */\n        LowerCasePipe.ctorParameters = [];\n        return LowerCasePipe;\n    }());\n\n    var _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n    function formatNumber(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n        if (currency === void 0) { currency = null; }\n        if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n        if (isBlank(value))\n            return null;\n        // Convert strings to numbers\n        value = typeof value === 'string' && NumberWrapper.isNumeric(value) ? +value : value;\n        if (typeof value !== 'number') {\n            throw new InvalidPipeArgumentError(pipe, value);\n        }\n        var minInt;\n        var minFraction;\n        var maxFraction;\n        if (style !== NumberFormatStyle.Currency) {\n            // rely on Intl default for currency\n            minInt = 1;\n            minFraction = 0;\n            maxFraction = 3;\n        }\n        if (digits) {\n            var parts = digits.match(_NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(digits + \" is not a valid digit info for number pipes\");\n            }\n            if (isPresent(parts[1])) {\n                minInt = NumberWrapper.parseIntAutoRadix(parts[1]);\n            }\n            if (isPresent(parts[3])) {\n                minFraction = NumberWrapper.parseIntAutoRadix(parts[3]);\n            }\n            if (isPresent(parts[5])) {\n                maxFraction = NumberWrapper.parseIntAutoRadix(parts[5]);\n            }\n        }\n        return NumberFormatter.format(value, locale, style, {\n            minimumIntegerDigits: minInt,\n            minimumFractionDigits: minFraction,\n            maximumFractionDigits: maxFraction,\n            currency: currency,\n            currencyAsSymbol: currencyAsSymbol,\n        });\n    }\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Formats a number according to locale rules.\n     * @howToUse `number_expression | number[:digitInfo]`\n     *\n     * Formats a number as text. Group sizing and separator and other locale-specific\n     * configurations are based on the active locale.\n     *\n     * where `expression` is a number:\n     *  - `digitInfo` is a `string` which has a following format: <br>\n     *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n     *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n     *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n     *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n     *\n     * For more information on the acceptable range for each of these numbers and other\n     * details see your native internationalization library.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n     *\n     * @stable\n     */\n    var DecimalPipe = (function () {\n        function DecimalPipe(_locale) {\n            this._locale = _locale;\n        }\n        DecimalPipe.prototype.transform = function (value, digits) {\n            if (digits === void 0) { digits = null; }\n            return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n        };\n        DecimalPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'number' },] },\n        ];\n        /** @nocollapse */\n        DecimalPipe.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return DecimalPipe;\n    }());\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Formats a number as a percentage according to locale rules.\n     * @howToUse `number_expression | percent[:digitInfo]`\n     *\n     * @description\n     *\n     * Formats a number as percentage.\n     *\n     * - `digitInfo` See {@link DecimalPipe} for detailed description.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n     *\n     * @stable\n     */\n    var PercentPipe = (function () {\n        function PercentPipe(_locale) {\n            this._locale = _locale;\n        }\n        PercentPipe.prototype.transform = function (value, digits) {\n            if (digits === void 0) { digits = null; }\n            return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n        };\n        PercentPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'percent' },] },\n        ];\n        /** @nocollapse */\n        PercentPipe.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return PercentPipe;\n    }());\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Formats a number as currency using locale rules.\n     * @howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n     * @description\n     *\n     * Use `currency` to format a number as currency.\n     *\n     * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n     *    as `USD` for the US dollar and `EUR` for the euro.\n     * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n     *   - `true`: use symbol (e.g. `$`).\n     *   - `false`(default): use code (e.g. `USD`).\n     * - `digitInfo` See {@link DecimalPipe} for detailed description.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n     *\n     * @stable\n     */\n    var CurrencyPipe = (function () {\n        function CurrencyPipe(_locale) {\n            this._locale = _locale;\n        }\n        CurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n            if (currencyCode === void 0) { currencyCode = 'USD'; }\n            if (symbolDisplay === void 0) { symbolDisplay = false; }\n            if (digits === void 0) { digits = null; }\n            return formatNumber(CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n        };\n        CurrencyPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'currency' },] },\n        ];\n        /** @nocollapse */\n        CurrencyPipe.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return CurrencyPipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n     * @howToUse `array_or_string_expression | slice:start[:end]`\n     * @description\n     *\n     * Where the input expression is a `List` or `String`, and:\n     * - `start`: The starting index of the subset to return.\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * - `end`: The ending index of the subset to return.\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     *\n     * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n     * and `String.prototype.slice()`.\n     *\n     * When operating on a [List], the returned list is always a copy even when all\n     * the elements are being returned.\n     *\n     * When operating on a blank value, the pipe returns the blank value.\n     *\n     * ## List Example\n     *\n     * This `ngFor` example:\n     *\n     * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n     *\n     * produces the following:\n     *\n     *     <li>b</li>\n     *     <li>c</li>\n     *\n     * ## String Examples\n     *\n     * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n     *\n     * @stable\n     */\n    var SlicePipe = (function () {\n        function SlicePipe() {\n        }\n        SlicePipe.prototype.transform = function (value, start, end) {\n            if (isBlank(value))\n                return value;\n            if (!this.supports(value)) {\n                throw new InvalidPipeArgumentError(SlicePipe, value);\n            }\n            return value.slice(start, end);\n        };\n        SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n        SlicePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'slice', pure: false },] },\n        ];\n        /** @nocollapse */\n        SlicePipe.ctorParameters = [];\n        return SlicePipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Transforms string to uppercase.\n     * @howToUse `expression | uppercase`\n     * @description\n     *\n     * Converts value into lowercase string using `String.prototype.toUpperCase()`.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n     *\n     * @stable\n     */\n    var UpperCasePipe = (function () {\n        function UpperCasePipe() {\n        }\n        UpperCasePipe.prototype.transform = function (value) {\n            if (isBlank(value))\n                return value;\n            if (typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(UpperCasePipe, value);\n            }\n            return value.toUpperCase();\n        };\n        UpperCasePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'uppercase' },] },\n        ];\n        /** @nocollapse */\n        UpperCasePipe.ctorParameters = [];\n        return UpperCasePipe;\n    }());\n\n    /**\n     * A collection of Angular pipes that are likely to be used in each and every application.\n     */\n    var COMMON_PIPES = [\n        AsyncPipe,\n        UpperCasePipe,\n        LowerCasePipe,\n        JsonPipe,\n        SlicePipe,\n        DecimalPipe,\n        PercentPipe,\n        CurrencyPipe,\n        DatePipe,\n        I18nPluralPipe,\n        I18nSelectPipe,\n    ];\n\n    // Note: This does not contain the location providers,\n    // as they need some platform specific implementations to work.\n    /**\n     * The module that includes all the basic Angular directives like {@link NgIf}, {@link NgFor}, ...\n     *\n     * @stable\n     */\n    var CommonModule = (function () {\n        function CommonModule() {\n        }\n        CommonModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n                        exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n                        providers: [\n                            { provide: NgLocalization, useClass: NgLocaleLocalization },\n                        ],\n                    },] },\n        ];\n        /** @nocollapse */\n        CommonModule.ctorParameters = [];\n        return CommonModule;\n    }());\n\n    exports.NgLocalization = NgLocalization;\n    exports.CommonModule = CommonModule;\n    exports.NgClass = NgClass;\n    exports.NgFor = NgFor;\n    exports.NgIf = NgIf;\n    exports.NgPlural = NgPlural;\n    exports.NgPluralCase = NgPluralCase;\n    exports.NgStyle = NgStyle;\n    exports.NgSwitch = NgSwitch;\n    exports.NgSwitchCase = NgSwitchCase;\n    exports.NgSwitchDefault = NgSwitchDefault;\n    exports.NgTemplateOutlet = NgTemplateOutlet;\n    exports.AsyncPipe = AsyncPipe;\n    exports.DatePipe = DatePipe;\n    exports.I18nPluralPipe = I18nPluralPipe;\n    exports.I18nSelectPipe = I18nSelectPipe;\n    exports.JsonPipe = JsonPipe;\n    exports.LowerCasePipe = LowerCasePipe;\n    exports.CurrencyPipe = CurrencyPipe;\n    exports.DecimalPipe = DecimalPipe;\n    exports.PercentPipe = PercentPipe;\n    exports.SlicePipe = SlicePipe;\n    exports.UpperCasePipe = UpperCasePipe;\n    exports.PlatformLocation = PlatformLocation;\n    exports.LocationStrategy = LocationStrategy;\n    exports.APP_BASE_HREF = APP_BASE_HREF;\n    exports.HashLocationStrategy = HashLocationStrategy;\n    exports.PathLocationStrategy = PathLocationStrategy;\n    exports.Location = Location;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/common/bundles/common.umd.js\n// module id = 61\n// module chunks = 0 2","/**\n * @license Angular v2.1.2\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n  (factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, function (exports,_angular_core) { 'use strict';\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * A segment of text within the template.\n   */\n  var TextAst = (function () {\n      function TextAst(value, ngContentIndex, sourceSpan) {\n          this.value = value;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n      }\n      TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n      return TextAst;\n  }());\n  /**\n   * A bound expression within the text of a template.\n   */\n  var BoundTextAst = (function () {\n      function BoundTextAst(value, ngContentIndex, sourceSpan) {\n          this.value = value;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n      }\n      BoundTextAst.prototype.visit = function (visitor, context) {\n          return visitor.visitBoundText(this, context);\n      };\n      return BoundTextAst;\n  }());\n  /**\n   * A plain attribute on an element.\n   */\n  var AttrAst = (function () {\n      function AttrAst(name, value, sourceSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n      return AttrAst;\n  }());\n  /**\n   * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n   * `[@trigger]=\"stateExp\"`)\n   */\n  var BoundElementPropertyAst = (function () {\n      function BoundElementPropertyAst(name, type, securityContext, needsRuntimeSecurityContext, value, unit, sourceSpan) {\n          this.name = name;\n          this.type = type;\n          this.securityContext = securityContext;\n          this.needsRuntimeSecurityContext = needsRuntimeSecurityContext;\n          this.value = value;\n          this.unit = unit;\n          this.sourceSpan = sourceSpan;\n      }\n      BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n          return visitor.visitElementProperty(this, context);\n      };\n      Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n          get: function () { return this.type === exports.PropertyBindingType.Animation; },\n          enumerable: true,\n          configurable: true\n      });\n      return BoundElementPropertyAst;\n  }());\n  /**\n   * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n   * `(@trigger.phase)=\"callback($event)\"`).\n   */\n  var BoundEventAst = (function () {\n      function BoundEventAst(name, target, phase, handler, sourceSpan) {\n          this.name = name;\n          this.target = target;\n          this.phase = phase;\n          this.handler = handler;\n          this.sourceSpan = sourceSpan;\n      }\n      BoundEventAst.prototype.visit = function (visitor, context) {\n          return visitor.visitEvent(this, context);\n      };\n      Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n          get: function () {\n              if (this.target) {\n                  return this.target + \":\" + this.name;\n              }\n              else {\n                  return this.name;\n              }\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n          get: function () { return !!this.phase; },\n          enumerable: true,\n          configurable: true\n      });\n      return BoundEventAst;\n  }());\n  /**\n   * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n   */\n  var ReferenceAst = (function () {\n      function ReferenceAst(name, value, sourceSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      ReferenceAst.prototype.visit = function (visitor, context) {\n          return visitor.visitReference(this, context);\n      };\n      return ReferenceAst;\n  }());\n  /**\n   * A variable declaration on a <template> (e.g. `var-someName=\"someLocalName\"`).\n   */\n  var VariableAst = (function () {\n      function VariableAst(name, value, sourceSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      VariableAst.prototype.visit = function (visitor, context) {\n          return visitor.visitVariable(this, context);\n      };\n      return VariableAst;\n  }());\n  /**\n   * An element declaration in a template.\n   */\n  var ElementAst = (function () {\n      function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, children, ngContentIndex, sourceSpan, endSourceSpan) {\n          this.name = name;\n          this.attrs = attrs;\n          this.inputs = inputs;\n          this.outputs = outputs;\n          this.references = references;\n          this.directives = directives;\n          this.providers = providers;\n          this.hasViewContainer = hasViewContainer;\n          this.children = children;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n          this.endSourceSpan = endSourceSpan;\n      }\n      ElementAst.prototype.visit = function (visitor, context) {\n          return visitor.visitElement(this, context);\n      };\n      return ElementAst;\n  }());\n  /**\n   * A `<template>` element included in an Angular template.\n   */\n  var EmbeddedTemplateAst = (function () {\n      function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, children, ngContentIndex, sourceSpan) {\n          this.attrs = attrs;\n          this.outputs = outputs;\n          this.references = references;\n          this.variables = variables;\n          this.directives = directives;\n          this.providers = providers;\n          this.hasViewContainer = hasViewContainer;\n          this.children = children;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n      }\n      EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n          return visitor.visitEmbeddedTemplate(this, context);\n      };\n      return EmbeddedTemplateAst;\n  }());\n  /**\n   * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n   */\n  var BoundDirectivePropertyAst = (function () {\n      function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n          this.directiveName = directiveName;\n          this.templateName = templateName;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n          return visitor.visitDirectiveProperty(this, context);\n      };\n      return BoundDirectivePropertyAst;\n  }());\n  /**\n   * A directive declared on an element.\n   */\n  var DirectiveAst = (function () {\n      function DirectiveAst(directive, inputs, hostProperties, hostEvents, sourceSpan) {\n          this.directive = directive;\n          this.inputs = inputs;\n          this.hostProperties = hostProperties;\n          this.hostEvents = hostEvents;\n          this.sourceSpan = sourceSpan;\n      }\n      DirectiveAst.prototype.visit = function (visitor, context) {\n          return visitor.visitDirective(this, context);\n      };\n      return DirectiveAst;\n  }());\n  /**\n   * A provider declared on an element\n   */\n  var ProviderAst = (function () {\n      function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n          this.token = token;\n          this.multiProvider = multiProvider;\n          this.eager = eager;\n          this.providers = providers;\n          this.providerType = providerType;\n          this.lifecycleHooks = lifecycleHooks;\n          this.sourceSpan = sourceSpan;\n      }\n      ProviderAst.prototype.visit = function (visitor, context) {\n          // No visit method in the visitor for now...\n          return null;\n      };\n      return ProviderAst;\n  }());\n  exports.ProviderAstType;\n  (function (ProviderAstType) {\n      ProviderAstType[ProviderAstType[\"PublicService\"] = 0] = \"PublicService\";\n      ProviderAstType[ProviderAstType[\"PrivateService\"] = 1] = \"PrivateService\";\n      ProviderAstType[ProviderAstType[\"Component\"] = 2] = \"Component\";\n      ProviderAstType[ProviderAstType[\"Directive\"] = 3] = \"Directive\";\n      ProviderAstType[ProviderAstType[\"Builtin\"] = 4] = \"Builtin\";\n  })(exports.ProviderAstType || (exports.ProviderAstType = {}));\n  /**\n   * Position where content is to be projected (instance of `<ng-content>` in a template).\n   */\n  var NgContentAst = (function () {\n      function NgContentAst(index, ngContentIndex, sourceSpan) {\n          this.index = index;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n      }\n      NgContentAst.prototype.visit = function (visitor, context) {\n          return visitor.visitNgContent(this, context);\n      };\n      return NgContentAst;\n  }());\n  /**\n   * Enumeration of types of property bindings.\n   */\n  exports.PropertyBindingType;\n  (function (PropertyBindingType) {\n      /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Property\"] = 0] = \"Property\";\n      /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Attribute\"] = 1] = \"Attribute\";\n      /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Class\"] = 2] = \"Class\";\n      /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Style\"] = 3] = \"Style\";\n      /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Animation\"] = 4] = \"Animation\";\n  })(exports.PropertyBindingType || (exports.PropertyBindingType = {}));\n  /**\n   * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.\n   */\n  function templateVisitAll(visitor, asts, context) {\n      if (context === void 0) { context = null; }\n      var result = [];\n      var visit = visitor.visit ?\n          function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n          function (ast) { return ast.visit(visitor, context); };\n      asts.forEach(function (ast) {\n          var astResult = visit(ast);\n          if (astResult) {\n              result.push(astResult);\n          }\n      });\n      return result;\n  }\n\n  function isPresent(obj) {\n      return obj != null;\n  }\n  function isBlank(obj) {\n      return obj == null;\n  }\n  var STRING_MAP_PROTO = Object.getPrototypeOf({});\n  function isStrictStringMap(obj) {\n      return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n  }\n  function stringify(token) {\n      if (typeof token === 'string') {\n          return token;\n      }\n      if (token === undefined || token === null) {\n          return '' + token;\n      }\n      if (token.overriddenName) {\n          return token.overriddenName;\n      }\n      if (token.name) {\n          return token.name;\n      }\n      var res = token.toString();\n      var newLineIndex = res.indexOf('\\n');\n      return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n  }\n  var NumberWrapper = (function () {\n      function NumberWrapper() {\n      }\n      NumberWrapper.parseIntAutoRadix = function (text) {\n          var result = parseInt(text);\n          if (isNaN(result)) {\n              throw new Error('Invalid integer literal when parsing ' + text);\n          }\n          return result;\n      };\n      NumberWrapper.parseInt = function (text, radix) {\n          if (radix == 10) {\n              if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n                  return parseInt(text, radix);\n              }\n          }\n          else if (radix == 16) {\n              if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n                  return parseInt(text, radix);\n              }\n          }\n          else {\n              var result = parseInt(text, radix);\n              if (!isNaN(result)) {\n                  return result;\n              }\n          }\n          throw new Error('Invalid integer literal when parsing ' + text + ' in base ' + radix);\n      };\n      NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n      return NumberWrapper;\n  }());\n  function isJsObject(o) {\n      return o !== null && (typeof o === 'function' || typeof o === 'object');\n  }\n  function isPrimitive(obj) {\n      return !isJsObject(obj);\n  }\n  function escapeRegExp(s) {\n      return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n\n  // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n  // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n  var _arrayFromMap = (function () {\n      try {\n          if ((new Map()).values().next) {\n              return function createArrayFromMap(m, getValues) {\n                  return getValues ? Array.from(m.values()) : Array.from(m.keys());\n              };\n          }\n      }\n      catch (e) {\n      }\n      return function createArrayFromMapWithForeach(m, getValues) {\n          var res = new Array(m.size), i = 0;\n          m.forEach(function (v, k) {\n              res[i] = getValues ? v : k;\n              i++;\n          });\n          return res;\n      };\n  })();\n  var MapWrapper = (function () {\n      function MapWrapper() {\n      }\n      MapWrapper.createFromStringMap = function (stringMap) {\n          var result = new Map();\n          for (var prop in stringMap) {\n              result.set(prop, stringMap[prop]);\n          }\n          return result;\n      };\n      MapWrapper.keys = function (m) { return _arrayFromMap(m, false); };\n      MapWrapper.values = function (m) { return _arrayFromMap(m, true); };\n      return MapWrapper;\n  }());\n  /**\n   * Wraps Javascript Objects\n   */\n  var StringMapWrapper = (function () {\n      function StringMapWrapper() {\n      }\n      StringMapWrapper.merge = function (m1, m2) {\n          var m = {};\n          for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n              var k = _a[_i];\n              m[k] = m1[k];\n          }\n          for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n              var k = _c[_b];\n              m[k] = m2[k];\n          }\n          return m;\n      };\n      StringMapWrapper.equals = function (m1, m2) {\n          var k1 = Object.keys(m1);\n          var k2 = Object.keys(m2);\n          if (k1.length != k2.length) {\n              return false;\n          }\n          for (var i = 0; i < k1.length; i++) {\n              var key = k1[i];\n              if (m1[key] !== m2[key]) {\n                  return false;\n              }\n          }\n          return true;\n      };\n      return StringMapWrapper;\n  }());\n  var ListWrapper = (function () {\n      function ListWrapper() {\n      }\n      ListWrapper.removeAll = function (list, items) {\n          for (var i = 0; i < items.length; ++i) {\n              var index = list.indexOf(items[i]);\n              list.splice(index, 1);\n          }\n      };\n      ListWrapper.remove = function (list, el) {\n          var index = list.indexOf(el);\n          if (index > -1) {\n              list.splice(index, 1);\n              return true;\n          }\n          return false;\n      };\n      ListWrapper.equals = function (a, b) {\n          if (a.length != b.length)\n              return false;\n          for (var i = 0; i < a.length; ++i) {\n              if (a[i] !== b[i])\n                  return false;\n          }\n          return true;\n      };\n      ListWrapper.maximum = function (list, predicate) {\n          if (list.length == 0) {\n              return null;\n          }\n          var solution = null;\n          var maxValue = -Infinity;\n          for (var index = 0; index < list.length; index++) {\n              var candidate = list[index];\n              if (candidate == null) {\n                  continue;\n              }\n              var candidateValue = predicate(candidate);\n              if (candidateValue > maxValue) {\n                  solution = candidate;\n                  maxValue = candidateValue;\n              }\n          }\n          return solution;\n      };\n      ListWrapper.flatten = function (list) {\n          var target = [];\n          _flattenArray(list, target);\n          return target;\n      };\n      return ListWrapper;\n  }());\n  function _flattenArray(source, target) {\n      if (isPresent(source)) {\n          for (var i = 0; i < source.length; i++) {\n              var item = source[i];\n              if (Array.isArray(item)) {\n                  _flattenArray(item, target);\n              }\n              else {\n                  target.push(item);\n              }\n          }\n      }\n      return target;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var TagContentType;\n  (function (TagContentType) {\n      TagContentType[TagContentType[\"RAW_TEXT\"] = 0] = \"RAW_TEXT\";\n      TagContentType[TagContentType[\"ESCAPABLE_RAW_TEXT\"] = 1] = \"ESCAPABLE_RAW_TEXT\";\n      TagContentType[TagContentType[\"PARSABLE_DATA\"] = 2] = \"PARSABLE_DATA\";\n  })(TagContentType || (TagContentType = {}));\n  function splitNsName(elementName) {\n      if (elementName[0] != ':') {\n          return [null, elementName];\n      }\n      var colonIndex = elementName.indexOf(':', 1);\n      if (colonIndex == -1) {\n          throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n      }\n      return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n  }\n  function getNsPrefix(fullName) {\n      return fullName === null ? null : splitNsName(fullName)[0];\n  }\n  function mergeNsAndName(prefix, localName) {\n      return prefix ? \":\" + prefix + \":\" + localName : localName;\n  }\n  // see http://www.w3.org/TR/html51/syntax.html#named-character-references\n  // see https://html.spec.whatwg.org/multipage/entities.json\n  // This list is not exhaustive to keep the compiler footprint low.\n  // The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.\n  var NAMED_ENTITIES = {\n      'Aacute': '\\u00C1',\n      'aacute': '\\u00E1',\n      'Acirc': '\\u00C2',\n      'acirc': '\\u00E2',\n      'acute': '\\u00B4',\n      'AElig': '\\u00C6',\n      'aelig': '\\u00E6',\n      'Agrave': '\\u00C0',\n      'agrave': '\\u00E0',\n      'alefsym': '\\u2135',\n      'Alpha': '\\u0391',\n      'alpha': '\\u03B1',\n      'amp': '&',\n      'and': '\\u2227',\n      'ang': '\\u2220',\n      'apos': '\\u0027',\n      'Aring': '\\u00C5',\n      'aring': '\\u00E5',\n      'asymp': '\\u2248',\n      'Atilde': '\\u00C3',\n      'atilde': '\\u00E3',\n      'Auml': '\\u00C4',\n      'auml': '\\u00E4',\n      'bdquo': '\\u201E',\n      'Beta': '\\u0392',\n      'beta': '\\u03B2',\n      'brvbar': '\\u00A6',\n      'bull': '\\u2022',\n      'cap': '\\u2229',\n      'Ccedil': '\\u00C7',\n      'ccedil': '\\u00E7',\n      'cedil': '\\u00B8',\n      'cent': '\\u00A2',\n      'Chi': '\\u03A7',\n      'chi': '\\u03C7',\n      'circ': '\\u02C6',\n      'clubs': '\\u2663',\n      'cong': '\\u2245',\n      'copy': '\\u00A9',\n      'crarr': '\\u21B5',\n      'cup': '\\u222A',\n      'curren': '\\u00A4',\n      'dagger': '\\u2020',\n      'Dagger': '\\u2021',\n      'darr': '\\u2193',\n      'dArr': '\\u21D3',\n      'deg': '\\u00B0',\n      'Delta': '\\u0394',\n      'delta': '\\u03B4',\n      'diams': '\\u2666',\n      'divide': '\\u00F7',\n      'Eacute': '\\u00C9',\n      'eacute': '\\u00E9',\n      'Ecirc': '\\u00CA',\n      'ecirc': '\\u00EA',\n      'Egrave': '\\u00C8',\n      'egrave': '\\u00E8',\n      'empty': '\\u2205',\n      'emsp': '\\u2003',\n      'ensp': '\\u2002',\n      'Epsilon': '\\u0395',\n      'epsilon': '\\u03B5',\n      'equiv': '\\u2261',\n      'Eta': '\\u0397',\n      'eta': '\\u03B7',\n      'ETH': '\\u00D0',\n      'eth': '\\u00F0',\n      'Euml': '\\u00CB',\n      'euml': '\\u00EB',\n      'euro': '\\u20AC',\n      'exist': '\\u2203',\n      'fnof': '\\u0192',\n      'forall': '\\u2200',\n      'frac12': '\\u00BD',\n      'frac14': '\\u00BC',\n      'frac34': '\\u00BE',\n      'frasl': '\\u2044',\n      'Gamma': '\\u0393',\n      'gamma': '\\u03B3',\n      'ge': '\\u2265',\n      'gt': '>',\n      'harr': '\\u2194',\n      'hArr': '\\u21D4',\n      'hearts': '\\u2665',\n      'hellip': '\\u2026',\n      'Iacute': '\\u00CD',\n      'iacute': '\\u00ED',\n      'Icirc': '\\u00CE',\n      'icirc': '\\u00EE',\n      'iexcl': '\\u00A1',\n      'Igrave': '\\u00CC',\n      'igrave': '\\u00EC',\n      'image': '\\u2111',\n      'infin': '\\u221E',\n      'int': '\\u222B',\n      'Iota': '\\u0399',\n      'iota': '\\u03B9',\n      'iquest': '\\u00BF',\n      'isin': '\\u2208',\n      'Iuml': '\\u00CF',\n      'iuml': '\\u00EF',\n      'Kappa': '\\u039A',\n      'kappa': '\\u03BA',\n      'Lambda': '\\u039B',\n      'lambda': '\\u03BB',\n      'lang': '\\u27E8',\n      'laquo': '\\u00AB',\n      'larr': '\\u2190',\n      'lArr': '\\u21D0',\n      'lceil': '\\u2308',\n      'ldquo': '\\u201C',\n      'le': '\\u2264',\n      'lfloor': '\\u230A',\n      'lowast': '\\u2217',\n      'loz': '\\u25CA',\n      'lrm': '\\u200E',\n      'lsaquo': '\\u2039',\n      'lsquo': '\\u2018',\n      'lt': '<',\n      'macr': '\\u00AF',\n      'mdash': '\\u2014',\n      'micro': '\\u00B5',\n      'middot': '\\u00B7',\n      'minus': '\\u2212',\n      'Mu': '\\u039C',\n      'mu': '\\u03BC',\n      'nabla': '\\u2207',\n      'nbsp': '\\u00A0',\n      'ndash': '\\u2013',\n      'ne': '\\u2260',\n      'ni': '\\u220B',\n      'not': '\\u00AC',\n      'notin': '\\u2209',\n      'nsub': '\\u2284',\n      'Ntilde': '\\u00D1',\n      'ntilde': '\\u00F1',\n      'Nu': '\\u039D',\n      'nu': '\\u03BD',\n      'Oacute': '\\u00D3',\n      'oacute': '\\u00F3',\n      'Ocirc': '\\u00D4',\n      'ocirc': '\\u00F4',\n      'OElig': '\\u0152',\n      'oelig': '\\u0153',\n      'Ograve': '\\u00D2',\n      'ograve': '\\u00F2',\n      'oline': '\\u203E',\n      'Omega': '\\u03A9',\n      'omega': '\\u03C9',\n      'Omicron': '\\u039F',\n      'omicron': '\\u03BF',\n      'oplus': '\\u2295',\n      'or': '\\u2228',\n      'ordf': '\\u00AA',\n      'ordm': '\\u00BA',\n      'Oslash': '\\u00D8',\n      'oslash': '\\u00F8',\n      'Otilde': '\\u00D5',\n      'otilde': '\\u00F5',\n      'otimes': '\\u2297',\n      'Ouml': '\\u00D6',\n      'ouml': '\\u00F6',\n      'para': '\\u00B6',\n      'permil': '\\u2030',\n      'perp': '\\u22A5',\n      'Phi': '\\u03A6',\n      'phi': '\\u03C6',\n      'Pi': '\\u03A0',\n      'pi': '\\u03C0',\n      'piv': '\\u03D6',\n      'plusmn': '\\u00B1',\n      'pound': '\\u00A3',\n      'prime': '\\u2032',\n      'Prime': '\\u2033',\n      'prod': '\\u220F',\n      'prop': '\\u221D',\n      'Psi': '\\u03A8',\n      'psi': '\\u03C8',\n      'quot': '\\u0022',\n      'radic': '\\u221A',\n      'rang': '\\u27E9',\n      'raquo': '\\u00BB',\n      'rarr': '\\u2192',\n      'rArr': '\\u21D2',\n      'rceil': '\\u2309',\n      'rdquo': '\\u201D',\n      'real': '\\u211C',\n      'reg': '\\u00AE',\n      'rfloor': '\\u230B',\n      'Rho': '\\u03A1',\n      'rho': '\\u03C1',\n      'rlm': '\\u200F',\n      'rsaquo': '\\u203A',\n      'rsquo': '\\u2019',\n      'sbquo': '\\u201A',\n      'Scaron': '\\u0160',\n      'scaron': '\\u0161',\n      'sdot': '\\u22C5',\n      'sect': '\\u00A7',\n      'shy': '\\u00AD',\n      'Sigma': '\\u03A3',\n      'sigma': '\\u03C3',\n      'sigmaf': '\\u03C2',\n      'sim': '\\u223C',\n      'spades': '\\u2660',\n      'sub': '\\u2282',\n      'sube': '\\u2286',\n      'sum': '\\u2211',\n      'sup': '\\u2283',\n      'sup1': '\\u00B9',\n      'sup2': '\\u00B2',\n      'sup3': '\\u00B3',\n      'supe': '\\u2287',\n      'szlig': '\\u00DF',\n      'Tau': '\\u03A4',\n      'tau': '\\u03C4',\n      'there4': '\\u2234',\n      'Theta': '\\u0398',\n      'theta': '\\u03B8',\n      'thetasym': '\\u03D1',\n      'thinsp': '\\u2009',\n      'THORN': '\\u00DE',\n      'thorn': '\\u00FE',\n      'tilde': '\\u02DC',\n      'times': '\\u00D7',\n      'trade': '\\u2122',\n      'Uacute': '\\u00DA',\n      'uacute': '\\u00FA',\n      'uarr': '\\u2191',\n      'uArr': '\\u21D1',\n      'Ucirc': '\\u00DB',\n      'ucirc': '\\u00FB',\n      'Ugrave': '\\u00D9',\n      'ugrave': '\\u00F9',\n      'uml': '\\u00A8',\n      'upsih': '\\u03D2',\n      'Upsilon': '\\u03A5',\n      'upsilon': '\\u03C5',\n      'Uuml': '\\u00DC',\n      'uuml': '\\u00FC',\n      'weierp': '\\u2118',\n      'Xi': '\\u039E',\n      'xi': '\\u03BE',\n      'Yacute': '\\u00DD',\n      'yacute': '\\u00FD',\n      'yen': '\\u00A5',\n      'yuml': '\\u00FF',\n      'Yuml': '\\u0178',\n      'Zeta': '\\u0396',\n      'zeta': '\\u03B6',\n      'zwj': '\\u200D',\n      'zwnj': '\\u200C',\n  };\n\n  var HtmlTagDefinition = (function () {\n      function HtmlTagDefinition(_a) {\n          var _this = this;\n          var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n          this.closedByChildren = {};\n          this.closedByParent = false;\n          this.canSelfClose = false;\n          if (closedByChildren && closedByChildren.length > 0) {\n              closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n          }\n          this.isVoid = isVoid;\n          this.closedByParent = closedByParent || isVoid;\n          if (requiredParents && requiredParents.length > 0) {\n              this.requiredParents = {};\n              // The first parent is the list is automatically when none of the listed parents are present\n              this.parentToAdd = requiredParents[0];\n              requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n          }\n          this.implicitNamespacePrefix = implicitNamespacePrefix;\n          this.contentType = contentType;\n          this.ignoreFirstLf = ignoreFirstLf;\n      }\n      HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n          if (!this.requiredParents) {\n              return false;\n          }\n          if (!currentParent) {\n              return true;\n          }\n          var lcParent = currentParent.toLowerCase();\n          return this.requiredParents[lcParent] != true && lcParent != 'template';\n      };\n      HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n          return this.isVoid || name.toLowerCase() in this.closedByChildren;\n      };\n      return HtmlTagDefinition;\n  }());\n  // see http://www.w3.org/TR/html51/syntax.html#optional-tags\n  // This implementation does not fully conform to the HTML5 spec.\n  var TAG_DEFINITIONS = {\n      'base': new HtmlTagDefinition({ isVoid: true }),\n      'meta': new HtmlTagDefinition({ isVoid: true }),\n      'area': new HtmlTagDefinition({ isVoid: true }),\n      'embed': new HtmlTagDefinition({ isVoid: true }),\n      'link': new HtmlTagDefinition({ isVoid: true }),\n      'img': new HtmlTagDefinition({ isVoid: true }),\n      'input': new HtmlTagDefinition({ isVoid: true }),\n      'param': new HtmlTagDefinition({ isVoid: true }),\n      'hr': new HtmlTagDefinition({ isVoid: true }),\n      'br': new HtmlTagDefinition({ isVoid: true }),\n      'source': new HtmlTagDefinition({ isVoid: true }),\n      'track': new HtmlTagDefinition({ isVoid: true }),\n      'wbr': new HtmlTagDefinition({ isVoid: true }),\n      'p': new HtmlTagDefinition({\n          closedByChildren: [\n              'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n              'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n              'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n          ],\n          closedByParent: true\n      }),\n      'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n      'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n      'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n      'tr': new HtmlTagDefinition({\n          closedByChildren: ['tr'],\n          requiredParents: ['tbody', 'tfoot', 'thead'],\n          closedByParent: true\n      }),\n      'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n      'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n      'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n      'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n      'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n      'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n      'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n      'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n      'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n      'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n      'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n      'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n      'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n      'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n      'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n      'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n      'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n      'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n      'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n      'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n  };\n  var _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n  function getHtmlTagDefinition(tagName) {\n      return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n  }\n\n  var _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n      '([-\\\\w]+)|' +\n      '(?:\\\\.([-\\\\w]+))|' +\n      '(?:\\\\[([-\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +\n      '(\\\\))|' +\n      '(\\\\s*,\\\\s*)', // \",\"\n  'g');\n  /**\n   * A css selector contains an element name,\n   * css classes and attribute/value pairs with the purpose\n   * of selecting subsets out of them.\n   */\n  var CssSelector = (function () {\n      function CssSelector() {\n          this.element = null;\n          this.classNames = [];\n          this.attrs = [];\n          this.notSelectors = [];\n      }\n      CssSelector.parse = function (selector) {\n          var results = [];\n          var _addResult = function (res, cssSel) {\n              if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                  cssSel.attrs.length == 0) {\n                  cssSel.element = '*';\n              }\n              res.push(cssSel);\n          };\n          var cssSelector = new CssSelector();\n          var match;\n          var current = cssSelector;\n          var inNot = false;\n          _SELECTOR_REGEXP.lastIndex = 0;\n          while (match = _SELECTOR_REGEXP.exec(selector)) {\n              if (match[1]) {\n                  if (inNot) {\n                      throw new Error('Nesting :not is not allowed in a selector');\n                  }\n                  inNot = true;\n                  current = new CssSelector();\n                  cssSelector.notSelectors.push(current);\n              }\n              if (match[2]) {\n                  current.setElement(match[2]);\n              }\n              if (match[3]) {\n                  current.addClassName(match[3]);\n              }\n              if (match[4]) {\n                  current.addAttribute(match[4], match[5]);\n              }\n              if (match[6]) {\n                  inNot = false;\n                  current = cssSelector;\n              }\n              if (match[7]) {\n                  if (inNot) {\n                      throw new Error('Multiple selectors in :not are not supported');\n                  }\n                  _addResult(results, cssSelector);\n                  cssSelector = current = new CssSelector();\n              }\n          }\n          _addResult(results, cssSelector);\n          return results;\n      };\n      CssSelector.prototype.isElementSelector = function () {\n          return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n              this.notSelectors.length === 0;\n      };\n      CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n      CssSelector.prototype.setElement = function (element) {\n          if (element === void 0) { element = null; }\n          this.element = element;\n      };\n      /** Gets a template string for an element that matches the selector. */\n      CssSelector.prototype.getMatchingElementTemplate = function () {\n          var tagName = this.element || 'div';\n          var classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n          var attrs = '';\n          for (var i = 0; i < this.attrs.length; i += 2) {\n              var attrName = this.attrs[i];\n              var attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n              attrs += \" \" + attrName + attrValue;\n          }\n          return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n              \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n      };\n      CssSelector.prototype.addAttribute = function (name, value) {\n          if (value === void 0) { value = ''; }\n          this.attrs.push(name, value && value.toLowerCase() || '');\n      };\n      CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n      CssSelector.prototype.toString = function () {\n          var res = this.element || '';\n          if (this.classNames) {\n              this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n          }\n          if (this.attrs) {\n              for (var i = 0; i < this.attrs.length; i += 2) {\n                  var name_1 = this.attrs[i];\n                  var value = this.attrs[i + 1];\n                  res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n              }\n          }\n          this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n          return res;\n      };\n      return CssSelector;\n  }());\n  /**\n   * Reads a list of CssSelectors and allows to calculate which ones\n   * are contained in a given CssSelector.\n   */\n  var SelectorMatcher = (function () {\n      function SelectorMatcher() {\n          this._elementMap = new Map();\n          this._elementPartialMap = new Map();\n          this._classMap = new Map();\n          this._classPartialMap = new Map();\n          this._attrValueMap = new Map();\n          this._attrValuePartialMap = new Map();\n          this._listContexts = [];\n      }\n      SelectorMatcher.createNotMatcher = function (notSelectors) {\n          var notMatcher = new SelectorMatcher();\n          notMatcher.addSelectables(notSelectors, null);\n          return notMatcher;\n      };\n      SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n          var listContext = null;\n          if (cssSelectors.length > 1) {\n              listContext = new SelectorListContext(cssSelectors);\n              this._listContexts.push(listContext);\n          }\n          for (var i = 0; i < cssSelectors.length; i++) {\n              this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n          }\n      };\n      /**\n       * Add an object that can be found later on by calling `match`.\n       * @param cssSelector A css selector\n       * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n       */\n      SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n          var matcher = this;\n          var element = cssSelector.element;\n          var classNames = cssSelector.classNames;\n          var attrs = cssSelector.attrs;\n          var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n          if (element) {\n              var isTerminal = attrs.length === 0 && classNames.length === 0;\n              if (isTerminal) {\n                  this._addTerminal(matcher._elementMap, element, selectable);\n              }\n              else {\n                  matcher = this._addPartial(matcher._elementPartialMap, element);\n              }\n          }\n          if (classNames) {\n              for (var i = 0; i < classNames.length; i++) {\n                  var isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                  var className = classNames[i];\n                  if (isTerminal) {\n                      this._addTerminal(matcher._classMap, className, selectable);\n                  }\n                  else {\n                      matcher = this._addPartial(matcher._classPartialMap, className);\n                  }\n              }\n          }\n          if (attrs) {\n              for (var i = 0; i < attrs.length; i += 2) {\n                  var isTerminal = i === attrs.length - 2;\n                  var name_2 = attrs[i];\n                  var value = attrs[i + 1];\n                  if (isTerminal) {\n                      var terminalMap = matcher._attrValueMap;\n                      var terminalValuesMap = terminalMap.get(name_2);\n                      if (!terminalValuesMap) {\n                          terminalValuesMap = new Map();\n                          terminalMap.set(name_2, terminalValuesMap);\n                      }\n                      this._addTerminal(terminalValuesMap, value, selectable);\n                  }\n                  else {\n                      var partialMap = matcher._attrValuePartialMap;\n                      var partialValuesMap = partialMap.get(name_2);\n                      if (!partialValuesMap) {\n                          partialValuesMap = new Map();\n                          partialMap.set(name_2, partialValuesMap);\n                      }\n                      matcher = this._addPartial(partialValuesMap, value);\n                  }\n              }\n          }\n      };\n      SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n          var terminalList = map.get(name);\n          if (!terminalList) {\n              terminalList = [];\n              map.set(name, terminalList);\n          }\n          terminalList.push(selectable);\n      };\n      SelectorMatcher.prototype._addPartial = function (map, name) {\n          var matcher = map.get(name);\n          if (!matcher) {\n              matcher = new SelectorMatcher();\n              map.set(name, matcher);\n          }\n          return matcher;\n      };\n      /**\n       * Find the objects that have been added via `addSelectable`\n       * whose css selector is contained in the given css selector.\n       * @param cssSelector A css selector\n       * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n       * @return boolean true if a match was found\n      */\n      SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n          var result = false;\n          var element = cssSelector.element;\n          var classNames = cssSelector.classNames;\n          var attrs = cssSelector.attrs;\n          for (var i = 0; i < this._listContexts.length; i++) {\n              this._listContexts[i].alreadyMatched = false;\n          }\n          result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n          result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n              result;\n          if (classNames) {\n              for (var i = 0; i < classNames.length; i++) {\n                  var className = classNames[i];\n                  result =\n                      this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                  result =\n                      this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                          result;\n              }\n          }\n          if (attrs) {\n              for (var i = 0; i < attrs.length; i += 2) {\n                  var name_3 = attrs[i];\n                  var value = attrs[i + 1];\n                  var terminalValuesMap = this._attrValueMap.get(name_3);\n                  if (value) {\n                      result =\n                          this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                  }\n                  result =\n                      this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                  var partialValuesMap = this._attrValuePartialMap.get(name_3);\n                  if (value) {\n                      result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                  }\n                  result =\n                      this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n              }\n          }\n          return result;\n      };\n      /** @internal */\n      SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n          if (!map || typeof name !== 'string') {\n              return false;\n          }\n          var selectables = map.get(name);\n          var starSelectables = map.get('*');\n          if (starSelectables) {\n              selectables = selectables.concat(starSelectables);\n          }\n          if (!selectables) {\n              return false;\n          }\n          var selectable;\n          var result = false;\n          for (var i = 0; i < selectables.length; i++) {\n              selectable = selectables[i];\n              result = selectable.finalize(cssSelector, matchedCallback) || result;\n          }\n          return result;\n      };\n      /** @internal */\n      SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n          if (!map || typeof name !== 'string') {\n              return false;\n          }\n          var nestedSelector = map.get(name);\n          if (!nestedSelector) {\n              return false;\n          }\n          // TODO(perf): get rid of recursion and measure again\n          // TODO(perf): don't pass the whole selector into the recursion,\n          // but only the not processed parts\n          return nestedSelector.match(cssSelector, matchedCallback);\n      };\n      return SelectorMatcher;\n  }());\n  var SelectorListContext = (function () {\n      function SelectorListContext(selectors) {\n          this.selectors = selectors;\n          this.alreadyMatched = false;\n      }\n      return SelectorListContext;\n  }());\n  // Store context to pass back selector and context when a selector is matched\n  var SelectorContext = (function () {\n      function SelectorContext(selector, cbContext, listContext) {\n          this.selector = selector;\n          this.cbContext = cbContext;\n          this.listContext = listContext;\n          this.notSelectors = selector.notSelectors;\n      }\n      SelectorContext.prototype.finalize = function (cssSelector, callback) {\n          var result = true;\n          if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n              var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n              result = !notMatcher.match(cssSelector, null);\n          }\n          if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n              if (this.listContext) {\n                  this.listContext.alreadyMatched = true;\n              }\n              callback(this.selector, this.cbContext);\n          }\n          return result;\n      };\n      return SelectorContext;\n  }());\n\n  var MODULE_SUFFIX = '';\n  function splitAtColon(input, defaultValues) {\n      return _splitAt(input, ':', defaultValues);\n  }\n  function splitAtPeriod(input, defaultValues) {\n      return _splitAt(input, '.', defaultValues);\n  }\n  function _splitAt(input, character, defaultValues) {\n      var characterIndex = input.indexOf(character);\n      if (characterIndex == -1)\n          return defaultValues;\n      return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n  }\n  function sanitizeIdentifier(name) {\n      return name.replace(/\\W/g, '_');\n  }\n  function visitValue(value, visitor, context) {\n      if (Array.isArray(value)) {\n          return visitor.visitArray(value, context);\n      }\n      if (isStrictStringMap(value)) {\n          return visitor.visitStringMap(value, context);\n      }\n      if (isBlank(value) || isPrimitive(value)) {\n          return visitor.visitPrimitive(value, context);\n      }\n      return visitor.visitOther(value, context);\n  }\n  var ValueTransformer = (function () {\n      function ValueTransformer() {\n      }\n      ValueTransformer.prototype.visitArray = function (arr, context) {\n          var _this = this;\n          return arr.map(function (value) { return visitValue(value, _this, context); });\n      };\n      ValueTransformer.prototype.visitStringMap = function (map, context) {\n          var _this = this;\n          var result = {};\n          Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n          return result;\n      };\n      ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n      ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n      return ValueTransformer;\n  }());\n  var SyncAsyncResult = (function () {\n      function SyncAsyncResult(syncResult, asyncResult) {\n          if (asyncResult === void 0) { asyncResult = null; }\n          this.syncResult = syncResult;\n          this.asyncResult = asyncResult;\n          if (!asyncResult) {\n              this.asyncResult = Promise.resolve(syncResult);\n          }\n      }\n      return SyncAsyncResult;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$1 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  function unimplemented() {\n      throw new Error('unimplemented');\n  }\n  // group 0: \"[prop] or (event) or @trigger\"\n  // group 1: \"prop\" from \"[prop]\"\n  // group 2: \"event\" from \"(event)\"\n  // group 3: \"@trigger\" from \"@trigger\"\n  var HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n  var CompileMetadataWithIdentifier = (function () {\n      function CompileMetadataWithIdentifier() {\n      }\n      Object.defineProperty(CompileMetadataWithIdentifier.prototype, \"identifier\", {\n          get: function () { return unimplemented(); },\n          enumerable: true,\n          configurable: true\n      });\n      return CompileMetadataWithIdentifier;\n  }());\n  var CompileAnimationEntryMetadata = (function () {\n      function CompileAnimationEntryMetadata(name, definitions) {\n          if (name === void 0) { name = null; }\n          if (definitions === void 0) { definitions = null; }\n          this.name = name;\n          this.definitions = definitions;\n      }\n      return CompileAnimationEntryMetadata;\n  }());\n  var CompileAnimationStateMetadata = (function () {\n      function CompileAnimationStateMetadata() {\n      }\n      return CompileAnimationStateMetadata;\n  }());\n  var CompileAnimationStateDeclarationMetadata = (function (_super) {\n      __extends$1(CompileAnimationStateDeclarationMetadata, _super);\n      function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n          _super.call(this);\n          this.stateNameExpr = stateNameExpr;\n          this.styles = styles;\n      }\n      return CompileAnimationStateDeclarationMetadata;\n  }(CompileAnimationStateMetadata));\n  var CompileAnimationStateTransitionMetadata = (function (_super) {\n      __extends$1(CompileAnimationStateTransitionMetadata, _super);\n      function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n          _super.call(this);\n          this.stateChangeExpr = stateChangeExpr;\n          this.steps = steps;\n      }\n      return CompileAnimationStateTransitionMetadata;\n  }(CompileAnimationStateMetadata));\n  var CompileAnimationMetadata = (function () {\n      function CompileAnimationMetadata() {\n      }\n      return CompileAnimationMetadata;\n  }());\n  var CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n      __extends$1(CompileAnimationKeyframesSequenceMetadata, _super);\n      function CompileAnimationKeyframesSequenceMetadata(steps) {\n          if (steps === void 0) { steps = []; }\n          _super.call(this);\n          this.steps = steps;\n      }\n      return CompileAnimationKeyframesSequenceMetadata;\n  }(CompileAnimationMetadata));\n  var CompileAnimationStyleMetadata = (function (_super) {\n      __extends$1(CompileAnimationStyleMetadata, _super);\n      function CompileAnimationStyleMetadata(offset, styles) {\n          if (styles === void 0) { styles = null; }\n          _super.call(this);\n          this.offset = offset;\n          this.styles = styles;\n      }\n      return CompileAnimationStyleMetadata;\n  }(CompileAnimationMetadata));\n  var CompileAnimationAnimateMetadata = (function (_super) {\n      __extends$1(CompileAnimationAnimateMetadata, _super);\n      function CompileAnimationAnimateMetadata(timings, styles) {\n          if (timings === void 0) { timings = 0; }\n          if (styles === void 0) { styles = null; }\n          _super.call(this);\n          this.timings = timings;\n          this.styles = styles;\n      }\n      return CompileAnimationAnimateMetadata;\n  }(CompileAnimationMetadata));\n  var CompileAnimationWithStepsMetadata = (function (_super) {\n      __extends$1(CompileAnimationWithStepsMetadata, _super);\n      function CompileAnimationWithStepsMetadata(steps) {\n          if (steps === void 0) { steps = null; }\n          _super.call(this);\n          this.steps = steps;\n      }\n      return CompileAnimationWithStepsMetadata;\n  }(CompileAnimationMetadata));\n  var CompileAnimationSequenceMetadata = (function (_super) {\n      __extends$1(CompileAnimationSequenceMetadata, _super);\n      function CompileAnimationSequenceMetadata(steps) {\n          if (steps === void 0) { steps = null; }\n          _super.call(this, steps);\n      }\n      return CompileAnimationSequenceMetadata;\n  }(CompileAnimationWithStepsMetadata));\n  var CompileAnimationGroupMetadata = (function (_super) {\n      __extends$1(CompileAnimationGroupMetadata, _super);\n      function CompileAnimationGroupMetadata(steps) {\n          if (steps === void 0) { steps = null; }\n          _super.call(this, steps);\n      }\n      return CompileAnimationGroupMetadata;\n  }(CompileAnimationWithStepsMetadata));\n  var CompileIdentifierMetadata = (function () {\n      function CompileIdentifierMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, reference = _b.reference, name = _b.name, moduleUrl = _b.moduleUrl, prefix = _b.prefix, value = _b.value;\n          this.reference = reference;\n          this.name = name;\n          this.prefix = prefix;\n          this.moduleUrl = moduleUrl;\n          this.value = value;\n      }\n      Object.defineProperty(CompileIdentifierMetadata.prototype, \"identifier\", {\n          get: function () { return this; },\n          enumerable: true,\n          configurable: true\n      });\n      return CompileIdentifierMetadata;\n  }());\n  var CompileDiDependencyMetadata = (function () {\n      function CompileDiDependencyMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, isAttribute = _b.isAttribute, isSelf = _b.isSelf, isHost = _b.isHost, isSkipSelf = _b.isSkipSelf, isOptional = _b.isOptional, isValue = _b.isValue, query = _b.query, viewQuery = _b.viewQuery, token = _b.token, value = _b.value;\n          this.isAttribute = !!isAttribute;\n          this.isSelf = !!isSelf;\n          this.isHost = !!isHost;\n          this.isSkipSelf = !!isSkipSelf;\n          this.isOptional = !!isOptional;\n          this.isValue = !!isValue;\n          this.query = query;\n          this.viewQuery = viewQuery;\n          this.token = token;\n          this.value = value;\n      }\n      return CompileDiDependencyMetadata;\n  }());\n  var CompileProviderMetadata = (function () {\n      function CompileProviderMetadata(_a) {\n          var token = _a.token, useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n          this.token = token;\n          this.useClass = useClass;\n          this.useValue = useValue;\n          this.useExisting = useExisting;\n          this.useFactory = useFactory;\n          this.deps = deps || null;\n          this.multi = !!multi;\n      }\n      return CompileProviderMetadata;\n  }());\n  var CompileFactoryMetadata = (function (_super) {\n      __extends$1(CompileFactoryMetadata, _super);\n      function CompileFactoryMetadata(_a) {\n          var reference = _a.reference, name = _a.name, moduleUrl = _a.moduleUrl, prefix = _a.prefix, diDeps = _a.diDeps, value = _a.value;\n          _super.call(this, { reference: reference, name: name, prefix: prefix, moduleUrl: moduleUrl, value: value });\n          this.diDeps = _normalizeArray(diDeps);\n      }\n      return CompileFactoryMetadata;\n  }(CompileIdentifierMetadata));\n  var CompileTokenMetadata = (function () {\n      function CompileTokenMetadata(_a) {\n          var value = _a.value, identifier = _a.identifier, identifierIsInstance = _a.identifierIsInstance;\n          this.value = value;\n          this.identifier = identifier;\n          this.identifierIsInstance = !!identifierIsInstance;\n      }\n      Object.defineProperty(CompileTokenMetadata.prototype, \"reference\", {\n          get: function () {\n              if (isPresent(this.identifier)) {\n                  return this.identifier.reference;\n              }\n              else {\n                  return this.value;\n              }\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(CompileTokenMetadata.prototype, \"name\", {\n          get: function () {\n              return isPresent(this.value) ? sanitizeIdentifier(this.value) : this.identifier.name;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      return CompileTokenMetadata;\n  }());\n  /**\n   * Metadata regarding compilation of a type.\n   */\n  var CompileTypeMetadata = (function (_super) {\n      __extends$1(CompileTypeMetadata, _super);\n      function CompileTypeMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, reference = _b.reference, name = _b.name, moduleUrl = _b.moduleUrl, prefix = _b.prefix, isHost = _b.isHost, value = _b.value, diDeps = _b.diDeps, lifecycleHooks = _b.lifecycleHooks;\n          _super.call(this, { reference: reference, name: name, moduleUrl: moduleUrl, prefix: prefix, value: value });\n          this.isHost = !!isHost;\n          this.diDeps = _normalizeArray(diDeps);\n          this.lifecycleHooks = _normalizeArray(lifecycleHooks);\n      }\n      return CompileTypeMetadata;\n  }(CompileIdentifierMetadata));\n  var CompileQueryMetadata = (function () {\n      function CompileQueryMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, selectors = _b.selectors, descendants = _b.descendants, first = _b.first, propertyName = _b.propertyName, read = _b.read;\n          this.selectors = selectors;\n          this.descendants = !!descendants;\n          this.first = !!first;\n          this.propertyName = propertyName;\n          this.read = read;\n      }\n      return CompileQueryMetadata;\n  }());\n  /**\n   * Metadata about a stylesheet\n   */\n  var CompileStylesheetMetadata = (function () {\n      function CompileStylesheetMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n          this.moduleUrl = moduleUrl;\n          this.styles = _normalizeArray(styles);\n          this.styleUrls = _normalizeArray(styleUrls);\n      }\n      return CompileStylesheetMetadata;\n  }());\n  /**\n   * Metadata regarding compilation of a template.\n   */\n  var CompileTemplateMetadata = (function () {\n      function CompileTemplateMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, encapsulation = _b.encapsulation, template = _b.template, templateUrl = _b.templateUrl, styles = _b.styles, styleUrls = _b.styleUrls, externalStylesheets = _b.externalStylesheets, animations = _b.animations, ngContentSelectors = _b.ngContentSelectors, interpolation = _b.interpolation;\n          this.encapsulation = encapsulation;\n          this.template = template;\n          this.templateUrl = templateUrl;\n          this.styles = _normalizeArray(styles);\n          this.styleUrls = _normalizeArray(styleUrls);\n          this.externalStylesheets = _normalizeArray(externalStylesheets);\n          this.animations = animations ? ListWrapper.flatten(animations) : [];\n          this.ngContentSelectors = ngContentSelectors || [];\n          if (interpolation && interpolation.length != 2) {\n              throw new Error(\"'interpolation' should have a start and an end symbol.\");\n          }\n          this.interpolation = interpolation;\n      }\n      return CompileTemplateMetadata;\n  }());\n  /**\n   * Metadata regarding compilation of a directive.\n   */\n  var CompileDirectiveMetadata = (function () {\n      function CompileDirectiveMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, hostListeners = _b.hostListeners, hostProperties = _b.hostProperties, hostAttributes = _b.hostAttributes, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template;\n          this.type = type;\n          this.isComponent = isComponent;\n          this.selector = selector;\n          this.exportAs = exportAs;\n          this.changeDetection = changeDetection;\n          this.inputs = inputs;\n          this.outputs = outputs;\n          this.hostListeners = hostListeners;\n          this.hostProperties = hostProperties;\n          this.hostAttributes = hostAttributes;\n          this.providers = _normalizeArray(providers);\n          this.viewProviders = _normalizeArray(viewProviders);\n          this.queries = _normalizeArray(queries);\n          this.viewQueries = _normalizeArray(viewQueries);\n          this.entryComponents = _normalizeArray(entryComponents);\n          this.template = template;\n      }\n      CompileDirectiveMetadata.create = function (_a) {\n          var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, host = _b.host, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template;\n          var hostListeners = {};\n          var hostProperties = {};\n          var hostAttributes = {};\n          if (isPresent(host)) {\n              Object.keys(host).forEach(function (key) {\n                  var value = host[key];\n                  var matches = key.match(HOST_REG_EXP);\n                  if (matches === null) {\n                      hostAttributes[key] = value;\n                  }\n                  else if (isPresent(matches[1])) {\n                      hostProperties[matches[1]] = value;\n                  }\n                  else if (isPresent(matches[2])) {\n                      hostListeners[matches[2]] = value;\n                  }\n              });\n          }\n          var inputsMap = {};\n          if (isPresent(inputs)) {\n              inputs.forEach(function (bindConfig) {\n                  // canonical syntax: `dirProp: elProp`\n                  // if there is no `:`, use dirProp = elProp\n                  var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                  inputsMap[parts[0]] = parts[1];\n              });\n          }\n          var outputsMap = {};\n          if (isPresent(outputs)) {\n              outputs.forEach(function (bindConfig) {\n                  // canonical syntax: `dirProp: elProp`\n                  // if there is no `:`, use dirProp = elProp\n                  var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                  outputsMap[parts[0]] = parts[1];\n              });\n          }\n          return new CompileDirectiveMetadata({\n              type: type,\n              isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n              inputs: inputsMap,\n              outputs: outputsMap,\n              hostListeners: hostListeners,\n              hostProperties: hostProperties,\n              hostAttributes: hostAttributes,\n              providers: providers,\n              viewProviders: viewProviders,\n              queries: queries,\n              viewQueries: viewQueries,\n              entryComponents: entryComponents,\n              template: template,\n          });\n      };\n      Object.defineProperty(CompileDirectiveMetadata.prototype, \"identifier\", {\n          get: function () { return this.type; },\n          enumerable: true,\n          configurable: true\n      });\n      return CompileDirectiveMetadata;\n  }());\n  /**\n   * Construct {@link CompileDirectiveMetadata} from {@link ComponentTypeMetadata} and a selector.\n   */\n  function createHostComponentMeta(compMeta) {\n      var template = CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();\n      return CompileDirectiveMetadata.create({\n          type: new CompileTypeMetadata({\n              reference: Object,\n              name: compMeta.type.name + \"_Host\",\n              moduleUrl: compMeta.type.moduleUrl,\n              isHost: true\n          }),\n          template: new CompileTemplateMetadata({\n              encapsulation: _angular_core.ViewEncapsulation.None,\n              template: template,\n              templateUrl: '',\n              styles: [],\n              styleUrls: [],\n              ngContentSelectors: [],\n              animations: []\n          }),\n          changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n          inputs: [],\n          outputs: [],\n          host: {},\n          isComponent: true,\n          selector: '*',\n          providers: [],\n          viewProviders: [],\n          queries: [],\n          viewQueries: []\n      });\n  }\n  var CompilePipeMetadata = (function () {\n      function CompilePipeMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, type = _b.type, name = _b.name, pure = _b.pure;\n          this.type = type;\n          this.name = name;\n          this.pure = !!pure;\n      }\n      Object.defineProperty(CompilePipeMetadata.prototype, \"identifier\", {\n          get: function () { return this.type; },\n          enumerable: true,\n          configurable: true\n      });\n      return CompilePipeMetadata;\n  }());\n  /**\n   * Metadata regarding compilation of a module.\n   */\n  var CompileNgModuleMetadata = (function () {\n      function CompileNgModuleMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, type = _b.type, providers = _b.providers, declaredDirectives = _b.declaredDirectives, exportedDirectives = _b.exportedDirectives, declaredPipes = _b.declaredPipes, exportedPipes = _b.exportedPipes, entryComponents = _b.entryComponents, bootstrapComponents = _b.bootstrapComponents, importedModules = _b.importedModules, exportedModules = _b.exportedModules, schemas = _b.schemas, transitiveModule = _b.transitiveModule, id = _b.id;\n          this.type = type;\n          this.declaredDirectives = _normalizeArray(declaredDirectives);\n          this.exportedDirectives = _normalizeArray(exportedDirectives);\n          this.declaredPipes = _normalizeArray(declaredPipes);\n          this.exportedPipes = _normalizeArray(exportedPipes);\n          this.providers = _normalizeArray(providers);\n          this.entryComponents = _normalizeArray(entryComponents);\n          this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n          this.importedModules = _normalizeArray(importedModules);\n          this.exportedModules = _normalizeArray(exportedModules);\n          this.schemas = _normalizeArray(schemas);\n          this.id = id;\n          this.transitiveModule = transitiveModule;\n      }\n      Object.defineProperty(CompileNgModuleMetadata.prototype, \"identifier\", {\n          get: function () { return this.type; },\n          enumerable: true,\n          configurable: true\n      });\n      return CompileNgModuleMetadata;\n  }());\n  var TransitiveCompileNgModuleMetadata = (function () {\n      function TransitiveCompileNgModuleMetadata(modules, providers, entryComponents, directives, pipes) {\n          var _this = this;\n          this.modules = modules;\n          this.providers = providers;\n          this.entryComponents = entryComponents;\n          this.directives = directives;\n          this.pipes = pipes;\n          this.directivesSet = new Set();\n          this.pipesSet = new Set();\n          directives.forEach(function (dir) { return _this.directivesSet.add(dir.type.reference); });\n          pipes.forEach(function (pipe) { return _this.pipesSet.add(pipe.type.reference); });\n      }\n      return TransitiveCompileNgModuleMetadata;\n  }());\n  function removeIdentifierDuplicates(items) {\n      var map = new Map();\n      items.forEach(function (item) {\n          if (!map.get(item.identifier.reference)) {\n              map.set(item.identifier.reference, item);\n          }\n      });\n      return MapWrapper.values(map);\n  }\n  function _normalizeArray(obj) {\n      return obj || [];\n  }\n  function isStaticSymbol(value) {\n      return typeof value === 'object' && value !== null && value['name'] && value['filePath'];\n  }\n  var ProviderMeta = (function () {\n      function ProviderMeta(token, _a) {\n          var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n          this.token = token;\n          this.useClass = useClass;\n          this.useValue = useValue;\n          this.useExisting = useExisting;\n          this.useFactory = useFactory;\n          this.dependencies = deps;\n          this.multi = !!multi;\n      }\n      return ProviderMeta;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var $EOF = 0;\n  var $TAB = 9;\n  var $LF = 10;\n  var $VTAB = 11;\n  var $FF = 12;\n  var $CR = 13;\n  var $SPACE = 32;\n  var $BANG = 33;\n  var $DQ = 34;\n  var $HASH = 35;\n  var $$ = 36;\n  var $PERCENT = 37;\n  var $AMPERSAND = 38;\n  var $SQ = 39;\n  var $LPAREN = 40;\n  var $RPAREN = 41;\n  var $STAR = 42;\n  var $PLUS = 43;\n  var $COMMA = 44;\n  var $MINUS = 45;\n  var $PERIOD = 46;\n  var $SLASH = 47;\n  var $COLON = 58;\n  var $SEMICOLON = 59;\n  var $LT = 60;\n  var $EQ = 61;\n  var $GT = 62;\n  var $QUESTION = 63;\n  var $0 = 48;\n  var $9 = 57;\n  var $A = 65;\n  var $E = 69;\n  var $F = 70;\n  var $X = 88;\n  var $Z = 90;\n  var $LBRACKET = 91;\n  var $BACKSLASH = 92;\n  var $RBRACKET = 93;\n  var $CARET = 94;\n  var $_ = 95;\n  var $a = 97;\n  var $e = 101;\n  var $f = 102;\n  var $n = 110;\n  var $r = 114;\n  var $t = 116;\n  var $u = 117;\n  var $v = 118;\n  var $x = 120;\n  var $z = 122;\n  var $LBRACE = 123;\n  var $BAR = 124;\n  var $RBRACE = 125;\n  var $NBSP = 160;\n  var $BT = 96;\n  function isWhitespace(code) {\n      return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n  }\n  function isDigit(code) {\n      return $0 <= code && code <= $9;\n  }\n  function isAsciiLetter(code) {\n      return code >= $a && code <= $z || code >= $A && code <= $Z;\n  }\n  function isAsciiHexDigit(code) {\n      return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n  }\n\n  function assertArrayOfStrings(identifier, value) {\n      if (!_angular_core.isDevMode() || isBlank(value)) {\n          return;\n      }\n      if (!Array.isArray(value)) {\n          throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n      }\n      for (var i = 0; i < value.length; i += 1) {\n          if (typeof value[i] !== 'string') {\n              throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n          }\n      }\n  }\n  var INTERPOLATION_BLACKLIST_REGEXPS = [\n      /^\\s*$/,\n      /[<>]/,\n      /^[{}]$/,\n      /&(#|[a-z])/i,\n      /^\\/\\//,\n  ];\n  function assertInterpolationSymbols(identifier, value) {\n      if (isPresent(value) && !(Array.isArray(value) && value.length == 2)) {\n          throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n      }\n      else if (_angular_core.isDevMode() && !isBlank(value)) {\n          var start_1 = value[0];\n          var end_1 = value[1];\n          // black list checking\n          INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n              if (regexp.test(start_1) || regexp.test(end_1)) {\n                  throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n              }\n          });\n      }\n  }\n\n  var InterpolationConfig = (function () {\n      function InterpolationConfig(start, end) {\n          this.start = start;\n          this.end = end;\n      }\n      InterpolationConfig.fromArray = function (markers) {\n          if (!markers) {\n              return DEFAULT_INTERPOLATION_CONFIG;\n          }\n          assertInterpolationSymbols('interpolation', markers);\n          return new InterpolationConfig(markers[0], markers[1]);\n      };\n      ;\n      return InterpolationConfig;\n  }());\n  var DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$2 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var ParserError = (function () {\n      function ParserError(message, input, errLocation, ctxLocation) {\n          this.input = input;\n          this.errLocation = errLocation;\n          this.ctxLocation = ctxLocation;\n          this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n      }\n      return ParserError;\n  }());\n  var ParseSpan = (function () {\n      function ParseSpan(start, end) {\n          this.start = start;\n          this.end = end;\n      }\n      return ParseSpan;\n  }());\n  var AST = (function () {\n      function AST(span) {\n          this.span = span;\n      }\n      AST.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return null;\n      };\n      AST.prototype.toString = function () { return 'AST'; };\n      return AST;\n  }());\n  /**\n   * Represents a quoted expression of the form:\n   *\n   * quote = prefix `:` uninterpretedExpression\n   * prefix = identifier\n   * uninterpretedExpression = arbitrary string\n   *\n   * A quoted expression is meant to be pre-processed by an AST transformer that\n   * converts it into another AST that no longer contains quoted expressions.\n   * It is meant to allow third-party developers to extend Angular template\n   * expression language. The `uninterpretedExpression` part of the quote is\n   * therefore not interpreted by the Angular's own expression parser.\n   */\n  var Quote = (function (_super) {\n      __extends$2(Quote, _super);\n      function Quote(span, prefix, uninterpretedExpression, location) {\n          _super.call(this, span);\n          this.prefix = prefix;\n          this.uninterpretedExpression = uninterpretedExpression;\n          this.location = location;\n      }\n      Quote.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitQuote(this, context);\n      };\n      Quote.prototype.toString = function () { return 'Quote'; };\n      return Quote;\n  }(AST));\n  var EmptyExpr = (function (_super) {\n      __extends$2(EmptyExpr, _super);\n      function EmptyExpr() {\n          _super.apply(this, arguments);\n      }\n      EmptyExpr.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          // do nothing\n      };\n      return EmptyExpr;\n  }(AST));\n  var ImplicitReceiver = (function (_super) {\n      __extends$2(ImplicitReceiver, _super);\n      function ImplicitReceiver() {\n          _super.apply(this, arguments);\n      }\n      ImplicitReceiver.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitImplicitReceiver(this, context);\n      };\n      return ImplicitReceiver;\n  }(AST));\n  /**\n   * Multiple expressions separated by a semicolon.\n   */\n  var Chain = (function (_super) {\n      __extends$2(Chain, _super);\n      function Chain(span, expressions) {\n          _super.call(this, span);\n          this.expressions = expressions;\n      }\n      Chain.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitChain(this, context);\n      };\n      return Chain;\n  }(AST));\n  var Conditional = (function (_super) {\n      __extends$2(Conditional, _super);\n      function Conditional(span, condition, trueExp, falseExp) {\n          _super.call(this, span);\n          this.condition = condition;\n          this.trueExp = trueExp;\n          this.falseExp = falseExp;\n      }\n      Conditional.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitConditional(this, context);\n      };\n      return Conditional;\n  }(AST));\n  var PropertyRead = (function (_super) {\n      __extends$2(PropertyRead, _super);\n      function PropertyRead(span, receiver, name) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n      }\n      PropertyRead.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitPropertyRead(this, context);\n      };\n      return PropertyRead;\n  }(AST));\n  var PropertyWrite = (function (_super) {\n      __extends$2(PropertyWrite, _super);\n      function PropertyWrite(span, receiver, name, value) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n          this.value = value;\n      }\n      PropertyWrite.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitPropertyWrite(this, context);\n      };\n      return PropertyWrite;\n  }(AST));\n  var SafePropertyRead = (function (_super) {\n      __extends$2(SafePropertyRead, _super);\n      function SafePropertyRead(span, receiver, name) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n      }\n      SafePropertyRead.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitSafePropertyRead(this, context);\n      };\n      return SafePropertyRead;\n  }(AST));\n  var KeyedRead = (function (_super) {\n      __extends$2(KeyedRead, _super);\n      function KeyedRead(span, obj, key) {\n          _super.call(this, span);\n          this.obj = obj;\n          this.key = key;\n      }\n      KeyedRead.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitKeyedRead(this, context);\n      };\n      return KeyedRead;\n  }(AST));\n  var KeyedWrite = (function (_super) {\n      __extends$2(KeyedWrite, _super);\n      function KeyedWrite(span, obj, key, value) {\n          _super.call(this, span);\n          this.obj = obj;\n          this.key = key;\n          this.value = value;\n      }\n      KeyedWrite.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitKeyedWrite(this, context);\n      };\n      return KeyedWrite;\n  }(AST));\n  var BindingPipe = (function (_super) {\n      __extends$2(BindingPipe, _super);\n      function BindingPipe(span, exp, name, args) {\n          _super.call(this, span);\n          this.exp = exp;\n          this.name = name;\n          this.args = args;\n      }\n      BindingPipe.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitPipe(this, context);\n      };\n      return BindingPipe;\n  }(AST));\n  var LiteralPrimitive = (function (_super) {\n      __extends$2(LiteralPrimitive, _super);\n      function LiteralPrimitive(span, value) {\n          _super.call(this, span);\n          this.value = value;\n      }\n      LiteralPrimitive.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitLiteralPrimitive(this, context);\n      };\n      return LiteralPrimitive;\n  }(AST));\n  var LiteralArray = (function (_super) {\n      __extends$2(LiteralArray, _super);\n      function LiteralArray(span, expressions) {\n          _super.call(this, span);\n          this.expressions = expressions;\n      }\n      LiteralArray.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitLiteralArray(this, context);\n      };\n      return LiteralArray;\n  }(AST));\n  var LiteralMap = (function (_super) {\n      __extends$2(LiteralMap, _super);\n      function LiteralMap(span, keys, values) {\n          _super.call(this, span);\n          this.keys = keys;\n          this.values = values;\n      }\n      LiteralMap.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitLiteralMap(this, context);\n      };\n      return LiteralMap;\n  }(AST));\n  var Interpolation = (function (_super) {\n      __extends$2(Interpolation, _super);\n      function Interpolation(span, strings, expressions) {\n          _super.call(this, span);\n          this.strings = strings;\n          this.expressions = expressions;\n      }\n      Interpolation.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitInterpolation(this, context);\n      };\n      return Interpolation;\n  }(AST));\n  var Binary = (function (_super) {\n      __extends$2(Binary, _super);\n      function Binary(span, operation, left, right) {\n          _super.call(this, span);\n          this.operation = operation;\n          this.left = left;\n          this.right = right;\n      }\n      Binary.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitBinary(this, context);\n      };\n      return Binary;\n  }(AST));\n  var PrefixNot = (function (_super) {\n      __extends$2(PrefixNot, _super);\n      function PrefixNot(span, expression) {\n          _super.call(this, span);\n          this.expression = expression;\n      }\n      PrefixNot.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitPrefixNot(this, context);\n      };\n      return PrefixNot;\n  }(AST));\n  var MethodCall = (function (_super) {\n      __extends$2(MethodCall, _super);\n      function MethodCall(span, receiver, name, args) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n          this.args = args;\n      }\n      MethodCall.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitMethodCall(this, context);\n      };\n      return MethodCall;\n  }(AST));\n  var SafeMethodCall = (function (_super) {\n      __extends$2(SafeMethodCall, _super);\n      function SafeMethodCall(span, receiver, name, args) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n          this.args = args;\n      }\n      SafeMethodCall.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitSafeMethodCall(this, context);\n      };\n      return SafeMethodCall;\n  }(AST));\n  var FunctionCall = (function (_super) {\n      __extends$2(FunctionCall, _super);\n      function FunctionCall(span, target, args) {\n          _super.call(this, span);\n          this.target = target;\n          this.args = args;\n      }\n      FunctionCall.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitFunctionCall(this, context);\n      };\n      return FunctionCall;\n  }(AST));\n  var ASTWithSource = (function (_super) {\n      __extends$2(ASTWithSource, _super);\n      function ASTWithSource(ast, source, location, errors) {\n          _super.call(this, new ParseSpan(0, isBlank(source) ? 0 : source.length));\n          this.ast = ast;\n          this.source = source;\n          this.location = location;\n          this.errors = errors;\n      }\n      ASTWithSource.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return this.ast.visit(visitor, context);\n      };\n      ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n      return ASTWithSource;\n  }(AST));\n  var TemplateBinding = (function () {\n      function TemplateBinding(key, keyIsVar, name, expression) {\n          this.key = key;\n          this.keyIsVar = keyIsVar;\n          this.name = name;\n          this.expression = expression;\n      }\n      return TemplateBinding;\n  }());\n  var RecursiveAstVisitor = (function () {\n      function RecursiveAstVisitor() {\n      }\n      RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n          ast.left.visit(this);\n          ast.right.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n      RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n          ast.condition.visit(this);\n          ast.trueExp.visit(this);\n          ast.falseExp.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n          ast.exp.visit(this);\n          this.visitAll(ast.args, context);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n          ast.target.visit(this);\n          this.visitAll(ast.args, context);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n      RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n          return this.visitAll(ast.expressions, context);\n      };\n      RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n          ast.obj.visit(this);\n          ast.key.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n          ast.obj.visit(this);\n          ast.key.visit(this);\n          ast.value.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n          return this.visitAll(ast.expressions, context);\n      };\n      RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n      RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n      RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n          ast.receiver.visit(this);\n          return this.visitAll(ast.args, context);\n      };\n      RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n          ast.expression.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n          ast.receiver.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n          ast.receiver.visit(this);\n          ast.value.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n          ast.receiver.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n          ast.receiver.visit(this);\n          return this.visitAll(ast.args, context);\n      };\n      RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n          var _this = this;\n          asts.forEach(function (ast) { return ast.visit(_this, context); });\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n      return RecursiveAstVisitor;\n  }());\n\n  exports.TokenType;\n  (function (TokenType) {\n      TokenType[TokenType[\"Character\"] = 0] = \"Character\";\n      TokenType[TokenType[\"Identifier\"] = 1] = \"Identifier\";\n      TokenType[TokenType[\"Keyword\"] = 2] = \"Keyword\";\n      TokenType[TokenType[\"String\"] = 3] = \"String\";\n      TokenType[TokenType[\"Operator\"] = 4] = \"Operator\";\n      TokenType[TokenType[\"Number\"] = 5] = \"Number\";\n      TokenType[TokenType[\"Error\"] = 6] = \"Error\";\n  })(exports.TokenType || (exports.TokenType = {}));\n  var KEYWORDS = ['var', 'let', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\n  var Lexer = (function () {\n      function Lexer() {\n      }\n      Lexer.prototype.tokenize = function (text) {\n          var scanner = new _Scanner(text);\n          var tokens = [];\n          var token = scanner.scanToken();\n          while (token != null) {\n              tokens.push(token);\n              token = scanner.scanToken();\n          }\n          return tokens;\n      };\n      Lexer.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      Lexer.ctorParameters = [];\n      return Lexer;\n  }());\n  var Token = (function () {\n      function Token(index, type, numValue, strValue) {\n          this.index = index;\n          this.type = type;\n          this.numValue = numValue;\n          this.strValue = strValue;\n      }\n      Token.prototype.isCharacter = function (code) {\n          return this.type == exports.TokenType.Character && this.numValue == code;\n      };\n      Token.prototype.isNumber = function () { return this.type == exports.TokenType.Number; };\n      Token.prototype.isString = function () { return this.type == exports.TokenType.String; };\n      Token.prototype.isOperator = function (operater) {\n          return this.type == exports.TokenType.Operator && this.strValue == operater;\n      };\n      Token.prototype.isIdentifier = function () { return this.type == exports.TokenType.Identifier; };\n      Token.prototype.isKeyword = function () { return this.type == exports.TokenType.Keyword; };\n      Token.prototype.isKeywordLet = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'let'; };\n      Token.prototype.isKeywordNull = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'null'; };\n      Token.prototype.isKeywordUndefined = function () {\n          return this.type == exports.TokenType.Keyword && this.strValue == 'undefined';\n      };\n      Token.prototype.isKeywordTrue = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'true'; };\n      Token.prototype.isKeywordFalse = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'false'; };\n      Token.prototype.isKeywordThis = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'this'; };\n      Token.prototype.isError = function () { return this.type == exports.TokenType.Error; };\n      Token.prototype.toNumber = function () { return this.type == exports.TokenType.Number ? this.numValue : -1; };\n      Token.prototype.toString = function () {\n          switch (this.type) {\n              case exports.TokenType.Character:\n              case exports.TokenType.Identifier:\n              case exports.TokenType.Keyword:\n              case exports.TokenType.Operator:\n              case exports.TokenType.String:\n              case exports.TokenType.Error:\n                  return this.strValue;\n              case exports.TokenType.Number:\n                  return this.numValue.toString();\n              default:\n                  return null;\n          }\n      };\n      return Token;\n  }());\n  function newCharacterToken(index, code) {\n      return new Token(index, exports.TokenType.Character, code, String.fromCharCode(code));\n  }\n  function newIdentifierToken(index, text) {\n      return new Token(index, exports.TokenType.Identifier, 0, text);\n  }\n  function newKeywordToken(index, text) {\n      return new Token(index, exports.TokenType.Keyword, 0, text);\n  }\n  function newOperatorToken(index, text) {\n      return new Token(index, exports.TokenType.Operator, 0, text);\n  }\n  function newStringToken(index, text) {\n      return new Token(index, exports.TokenType.String, 0, text);\n  }\n  function newNumberToken(index, n) {\n      return new Token(index, exports.TokenType.Number, n, '');\n  }\n  function newErrorToken(index, message) {\n      return new Token(index, exports.TokenType.Error, 0, message);\n  }\n  var EOF = new Token(-1, exports.TokenType.Character, 0, '');\n  var _Scanner = (function () {\n      function _Scanner(input) {\n          this.input = input;\n          this.peek = 0;\n          this.index = -1;\n          this.length = input.length;\n          this.advance();\n      }\n      _Scanner.prototype.advance = function () {\n          this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n      };\n      _Scanner.prototype.scanToken = function () {\n          var input = this.input, length = this.length, peek = this.peek, index = this.index;\n          // Skip whitespace.\n          while (peek <= $SPACE) {\n              if (++index >= length) {\n                  peek = $EOF;\n                  break;\n              }\n              else {\n                  peek = input.charCodeAt(index);\n              }\n          }\n          this.peek = peek;\n          this.index = index;\n          if (index >= length) {\n              return null;\n          }\n          // Handle identifiers and numbers.\n          if (isIdentifierStart(peek))\n              return this.scanIdentifier();\n          if (isDigit(peek))\n              return this.scanNumber(index);\n          var start = index;\n          switch (peek) {\n              case $PERIOD:\n                  this.advance();\n                  return isDigit(this.peek) ? this.scanNumber(start) :\n                      newCharacterToken(start, $PERIOD);\n              case $LPAREN:\n              case $RPAREN:\n              case $LBRACE:\n              case $RBRACE:\n              case $LBRACKET:\n              case $RBRACKET:\n              case $COMMA:\n              case $COLON:\n              case $SEMICOLON:\n                  return this.scanCharacter(start, peek);\n              case $SQ:\n              case $DQ:\n                  return this.scanString();\n              case $HASH:\n              case $PLUS:\n              case $MINUS:\n              case $STAR:\n              case $SLASH:\n              case $PERCENT:\n              case $CARET:\n                  return this.scanOperator(start, String.fromCharCode(peek));\n              case $QUESTION:\n                  return this.scanComplexOperator(start, '?', $PERIOD, '.');\n              case $LT:\n              case $GT:\n                  return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n              case $BANG:\n              case $EQ:\n                  return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n              case $AMPERSAND:\n                  return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n              case $BAR:\n                  return this.scanComplexOperator(start, '|', $BAR, '|');\n              case $NBSP:\n                  while (isWhitespace(this.peek))\n                      this.advance();\n                  return this.scanToken();\n          }\n          this.advance();\n          return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n      };\n      _Scanner.prototype.scanCharacter = function (start, code) {\n          this.advance();\n          return newCharacterToken(start, code);\n      };\n      _Scanner.prototype.scanOperator = function (start, str) {\n          this.advance();\n          return newOperatorToken(start, str);\n      };\n      /**\n       * Tokenize a 2/3 char long operator\n       *\n       * @param start start index in the expression\n       * @param one first symbol (always part of the operator)\n       * @param twoCode code point for the second symbol\n       * @param two second symbol (part of the operator when the second code point matches)\n       * @param threeCode code point for the third symbol\n       * @param three third symbol (part of the operator when provided and matches source expression)\n       * @returns {Token}\n       */\n      _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n          this.advance();\n          var str = one;\n          if (this.peek == twoCode) {\n              this.advance();\n              str += two;\n          }\n          if (isPresent(threeCode) && this.peek == threeCode) {\n              this.advance();\n              str += three;\n          }\n          return newOperatorToken(start, str);\n      };\n      _Scanner.prototype.scanIdentifier = function () {\n          var start = this.index;\n          this.advance();\n          while (isIdentifierPart(this.peek))\n              this.advance();\n          var str = this.input.substring(start, this.index);\n          return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n              newIdentifierToken(start, str);\n      };\n      _Scanner.prototype.scanNumber = function (start) {\n          var simple = (this.index === start);\n          this.advance(); // Skip initial digit.\n          while (true) {\n              if (isDigit(this.peek)) {\n              }\n              else if (this.peek == $PERIOD) {\n                  simple = false;\n              }\n              else if (isExponentStart(this.peek)) {\n                  this.advance();\n                  if (isExponentSign(this.peek))\n                      this.advance();\n                  if (!isDigit(this.peek))\n                      return this.error('Invalid exponent', -1);\n                  simple = false;\n              }\n              else {\n                  break;\n              }\n              this.advance();\n          }\n          var str = this.input.substring(start, this.index);\n          var value = simple ? NumberWrapper.parseIntAutoRadix(str) : parseFloat(str);\n          return newNumberToken(start, value);\n      };\n      _Scanner.prototype.scanString = function () {\n          var start = this.index;\n          var quote = this.peek;\n          this.advance(); // Skip initial quote.\n          var buffer = '';\n          var marker = this.index;\n          var input = this.input;\n          while (this.peek != quote) {\n              if (this.peek == $BACKSLASH) {\n                  buffer += input.substring(marker, this.index);\n                  this.advance();\n                  var unescapedCode = void 0;\n                  if (this.peek == $u) {\n                      // 4 character hex code for unicode character.\n                      var hex = input.substring(this.index + 1, this.index + 5);\n                      try {\n                          unescapedCode = NumberWrapper.parseInt(hex, 16);\n                      }\n                      catch (e) {\n                          return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                      }\n                      for (var i = 0; i < 5; i++) {\n                          this.advance();\n                      }\n                  }\n                  else {\n                      unescapedCode = unescape(this.peek);\n                      this.advance();\n                  }\n                  buffer += String.fromCharCode(unescapedCode);\n                  marker = this.index;\n              }\n              else if (this.peek == $EOF) {\n                  return this.error('Unterminated quote', 0);\n              }\n              else {\n                  this.advance();\n              }\n          }\n          var last = input.substring(marker, this.index);\n          this.advance(); // Skip terminating quote.\n          return newStringToken(start, buffer + last);\n      };\n      _Scanner.prototype.error = function (message, offset) {\n          var position = this.index + offset;\n          return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n      };\n      return _Scanner;\n  }());\n  function isIdentifierStart(code) {\n      return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n          (code == $_) || (code == $$);\n  }\n  function isIdentifier(input) {\n      if (input.length == 0)\n          return false;\n      var scanner = new _Scanner(input);\n      if (!isIdentifierStart(scanner.peek))\n          return false;\n      scanner.advance();\n      while (scanner.peek !== $EOF) {\n          if (!isIdentifierPart(scanner.peek))\n              return false;\n          scanner.advance();\n      }\n      return true;\n  }\n  function isIdentifierPart(code) {\n      return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n          (code == $$);\n  }\n  function isExponentStart(code) {\n      return code == $e || code == $E;\n  }\n  function isExponentSign(code) {\n      return code == $MINUS || code == $PLUS;\n  }\n  function isQuote(code) {\n      return code === $SQ || code === $DQ || code === $BT;\n  }\n  function unescape(code) {\n      switch (code) {\n          case $n:\n              return $LF;\n          case $f:\n              return $FF;\n          case $r:\n              return $CR;\n          case $t:\n              return $TAB;\n          case $v:\n              return $VTAB;\n          default:\n              return code;\n      }\n  }\n\n  var SplitInterpolation = (function () {\n      function SplitInterpolation(strings, expressions, offsets) {\n          this.strings = strings;\n          this.expressions = expressions;\n          this.offsets = offsets;\n      }\n      return SplitInterpolation;\n  }());\n  var TemplateBindingParseResult = (function () {\n      function TemplateBindingParseResult(templateBindings, warnings, errors) {\n          this.templateBindings = templateBindings;\n          this.warnings = warnings;\n          this.errors = errors;\n      }\n      return TemplateBindingParseResult;\n  }());\n  function _createInterpolateRegExp(config) {\n      var pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n      return new RegExp(pattern, 'g');\n  }\n  var Parser = (function () {\n      function Parser(_lexer) {\n          this._lexer = _lexer;\n          this.errors = [];\n      }\n      Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          this._checkNoInterpolation(input, location, interpolationConfig);\n          var sourceToLex = this._stripComments(input);\n          var tokens = this._lexer.tokenize(this._stripComments(input));\n          var ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n              .parseChain();\n          return new ASTWithSource(ast, input, location, this.errors);\n      };\n      Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var ast = this._parseBindingAst(input, location, interpolationConfig);\n          return new ASTWithSource(ast, input, location, this.errors);\n      };\n      Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var ast = this._parseBindingAst(input, location, interpolationConfig);\n          var errors = SimpleExpressionChecker.check(ast);\n          if (errors.length > 0) {\n              this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n          }\n          return new ASTWithSource(ast, input, location, this.errors);\n      };\n      Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n          this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n      };\n      Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n          // Quotes expressions use 3rd-party expression language. We don't want to use\n          // our lexer or parser for that, so we check for that ahead of time.\n          var quote = this._parseQuote(input, location);\n          if (isPresent(quote)) {\n              return quote;\n          }\n          this._checkNoInterpolation(input, location, interpolationConfig);\n          var sourceToLex = this._stripComments(input);\n          var tokens = this._lexer.tokenize(sourceToLex);\n          return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n              .parseChain();\n      };\n      Parser.prototype._parseQuote = function (input, location) {\n          if (isBlank(input))\n              return null;\n          var prefixSeparatorIndex = input.indexOf(':');\n          if (prefixSeparatorIndex == -1)\n              return null;\n          var prefix = input.substring(0, prefixSeparatorIndex).trim();\n          if (!isIdentifier(prefix))\n              return null;\n          var uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n          return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n      };\n      Parser.prototype.parseTemplateBindings = function (input, location) {\n          var tokens = this._lexer.tokenize(input);\n          return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n              .parseTemplateBindings();\n      };\n      Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var split = this.splitInterpolation(input, location, interpolationConfig);\n          if (split == null)\n              return null;\n          var expressions = [];\n          for (var i = 0; i < split.expressions.length; ++i) {\n              var expressionText = split.expressions[i];\n              var sourceToLex = this._stripComments(expressionText);\n              var tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));\n              var ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                  .parseChain();\n              expressions.push(ast);\n          }\n          return new ASTWithSource(new Interpolation(new ParseSpan(0, isBlank(input) ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n      };\n      Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var regexp = _createInterpolateRegExp(interpolationConfig);\n          var parts = input.split(regexp);\n          if (parts.length <= 1) {\n              return null;\n          }\n          var strings = [];\n          var expressions = [];\n          var offsets = [];\n          var offset = 0;\n          for (var i = 0; i < parts.length; i++) {\n              var part = parts[i];\n              if (i % 2 === 0) {\n                  // fixed string\n                  strings.push(part);\n                  offset += part.length;\n              }\n              else if (part.trim().length > 0) {\n                  offset += interpolationConfig.start.length;\n                  expressions.push(part);\n                  offsets.push(offset);\n                  offset += part.length + interpolationConfig.end.length;\n              }\n              else {\n                  this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n              }\n          }\n          return new SplitInterpolation(strings, expressions, offsets);\n      };\n      Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n          return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, isBlank(input) ? 0 : input.length), input), input, location, this.errors);\n      };\n      Parser.prototype._stripComments = function (input) {\n          var i = this._commentStart(input);\n          return isPresent(i) ? input.substring(0, i).trim() : input;\n      };\n      Parser.prototype._commentStart = function (input) {\n          var outerQuote = null;\n          for (var i = 0; i < input.length - 1; i++) {\n              var char = input.charCodeAt(i);\n              var nextChar = input.charCodeAt(i + 1);\n              if (char === $SLASH && nextChar == $SLASH && isBlank(outerQuote))\n                  return i;\n              if (outerQuote === char) {\n                  outerQuote = null;\n              }\n              else if (isBlank(outerQuote) && isQuote(char)) {\n                  outerQuote = char;\n              }\n          }\n          return null;\n      };\n      Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n          var regexp = _createInterpolateRegExp(interpolationConfig);\n          var parts = input.split(regexp);\n          if (parts.length > 1) {\n              this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n          }\n      };\n      Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n          var errLocation = '';\n          for (var j = 0; j < partInErrIdx; j++) {\n              errLocation += j % 2 === 0 ?\n                  parts[j] :\n                  \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n          }\n          return errLocation.length;\n      };\n      Parser.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      Parser.ctorParameters = [\n          { type: Lexer, },\n      ];\n      return Parser;\n  }());\n  var _ParseAST = (function () {\n      function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n          this.input = input;\n          this.location = location;\n          this.tokens = tokens;\n          this.inputLength = inputLength;\n          this.parseAction = parseAction;\n          this.errors = errors;\n          this.offset = offset;\n          this.rparensExpected = 0;\n          this.rbracketsExpected = 0;\n          this.rbracesExpected = 0;\n          this.index = 0;\n      }\n      _ParseAST.prototype.peek = function (offset) {\n          var i = this.index + offset;\n          return i < this.tokens.length ? this.tokens[i] : EOF;\n      };\n      Object.defineProperty(_ParseAST.prototype, \"next\", {\n          get: function () { return this.peek(0); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n          get: function () {\n              return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                  this.inputLength + this.offset;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n      _ParseAST.prototype.advance = function () { this.index++; };\n      _ParseAST.prototype.optionalCharacter = function (code) {\n          if (this.next.isCharacter(code)) {\n              this.advance();\n              return true;\n          }\n          else {\n              return false;\n          }\n      };\n      _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n      _ParseAST.prototype.expectCharacter = function (code) {\n          if (this.optionalCharacter(code))\n              return;\n          this.error(\"Missing expected \" + String.fromCharCode(code));\n      };\n      _ParseAST.prototype.optionalOperator = function (op) {\n          if (this.next.isOperator(op)) {\n              this.advance();\n              return true;\n          }\n          else {\n              return false;\n          }\n      };\n      _ParseAST.prototype.expectOperator = function (operator) {\n          if (this.optionalOperator(operator))\n              return;\n          this.error(\"Missing expected operator \" + operator);\n      };\n      _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n          var n = this.next;\n          if (!n.isIdentifier() && !n.isKeyword()) {\n              this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n              return '';\n          }\n          this.advance();\n          return n.toString();\n      };\n      _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n          var n = this.next;\n          if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n              this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n              return '';\n          }\n          this.advance();\n          return n.toString();\n      };\n      _ParseAST.prototype.parseChain = function () {\n          var exprs = [];\n          var start = this.inputIndex;\n          while (this.index < this.tokens.length) {\n              var expr = this.parsePipe();\n              exprs.push(expr);\n              if (this.optionalCharacter($SEMICOLON)) {\n                  if (!this.parseAction) {\n                      this.error('Binding expression cannot contain chained expression');\n                  }\n                  while (this.optionalCharacter($SEMICOLON)) {\n                  } // read all semicolons\n              }\n              else if (this.index < this.tokens.length) {\n                  this.error(\"Unexpected token '\" + this.next + \"'\");\n              }\n          }\n          if (exprs.length == 0)\n              return new EmptyExpr(this.span(start));\n          if (exprs.length == 1)\n              return exprs[0];\n          return new Chain(this.span(start), exprs);\n      };\n      _ParseAST.prototype.parsePipe = function () {\n          var result = this.parseExpression();\n          if (this.optionalOperator('|')) {\n              if (this.parseAction) {\n                  this.error('Cannot have a pipe in an action expression');\n              }\n              do {\n                  var name = this.expectIdentifierOrKeyword();\n                  var args = [];\n                  while (this.optionalCharacter($COLON)) {\n                      args.push(this.parseExpression());\n                  }\n                  result = new BindingPipe(this.span(result.span.start - this.offset), result, name, args);\n              } while (this.optionalOperator('|'));\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n      _ParseAST.prototype.parseConditional = function () {\n          var start = this.inputIndex;\n          var result = this.parseLogicalOr();\n          if (this.optionalOperator('?')) {\n              var yes = this.parsePipe();\n              var no = void 0;\n              if (!this.optionalCharacter($COLON)) {\n                  var end = this.inputIndex;\n                  var expression = this.input.substring(start, end);\n                  this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                  no = new EmptyExpr(this.span(start));\n              }\n              else {\n                  no = this.parsePipe();\n              }\n              return new Conditional(this.span(start), result, yes, no);\n          }\n          else {\n              return result;\n          }\n      };\n      _ParseAST.prototype.parseLogicalOr = function () {\n          // '||'\n          var result = this.parseLogicalAnd();\n          while (this.optionalOperator('||')) {\n              var right = this.parseLogicalAnd();\n              result = new Binary(this.span(result.span.start), '||', result, right);\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseLogicalAnd = function () {\n          // '&&'\n          var result = this.parseEquality();\n          while (this.optionalOperator('&&')) {\n              var right = this.parseEquality();\n              result = new Binary(this.span(result.span.start), '&&', result, right);\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseEquality = function () {\n          // '==','!=','===','!=='\n          var result = this.parseRelational();\n          while (this.next.type == exports.TokenType.Operator) {\n              var operator = this.next.strValue;\n              switch (operator) {\n                  case '==':\n                  case '===':\n                  case '!=':\n                  case '!==':\n                      this.advance();\n                      var right = this.parseRelational();\n                      result = new Binary(this.span(result.span.start), operator, result, right);\n                      continue;\n              }\n              break;\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseRelational = function () {\n          // '<', '>', '<=', '>='\n          var result = this.parseAdditive();\n          while (this.next.type == exports.TokenType.Operator) {\n              var operator = this.next.strValue;\n              switch (operator) {\n                  case '<':\n                  case '>':\n                  case '<=':\n                  case '>=':\n                      this.advance();\n                      var right = this.parseAdditive();\n                      result = new Binary(this.span(result.span.start), operator, result, right);\n                      continue;\n              }\n              break;\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseAdditive = function () {\n          // '+', '-'\n          var result = this.parseMultiplicative();\n          while (this.next.type == exports.TokenType.Operator) {\n              var operator = this.next.strValue;\n              switch (operator) {\n                  case '+':\n                  case '-':\n                      this.advance();\n                      var right = this.parseMultiplicative();\n                      result = new Binary(this.span(result.span.start), operator, result, right);\n                      continue;\n              }\n              break;\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseMultiplicative = function () {\n          // '*', '%', '/'\n          var result = this.parsePrefix();\n          while (this.next.type == exports.TokenType.Operator) {\n              var operator = this.next.strValue;\n              switch (operator) {\n                  case '*':\n                  case '%':\n                  case '/':\n                      this.advance();\n                      var right = this.parsePrefix();\n                      result = new Binary(this.span(result.span.start), operator, result, right);\n                      continue;\n              }\n              break;\n          }\n          return result;\n      };\n      _ParseAST.prototype.parsePrefix = function () {\n          if (this.next.type == exports.TokenType.Operator) {\n              var start = this.inputIndex;\n              var operator = this.next.strValue;\n              var result = void 0;\n              switch (operator) {\n                  case '+':\n                      this.advance();\n                      return this.parsePrefix();\n                  case '-':\n                      this.advance();\n                      result = this.parsePrefix();\n                      return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                  case '!':\n                      this.advance();\n                      result = this.parsePrefix();\n                      return new PrefixNot(this.span(start), result);\n              }\n          }\n          return this.parseCallChain();\n      };\n      _ParseAST.prototype.parseCallChain = function () {\n          var result = this.parsePrimary();\n          while (true) {\n              if (this.optionalCharacter($PERIOD)) {\n                  result = this.parseAccessMemberOrMethodCall(result, false);\n              }\n              else if (this.optionalOperator('?.')) {\n                  result = this.parseAccessMemberOrMethodCall(result, true);\n              }\n              else if (this.optionalCharacter($LBRACKET)) {\n                  this.rbracketsExpected++;\n                  var key = this.parsePipe();\n                  this.rbracketsExpected--;\n                  this.expectCharacter($RBRACKET);\n                  if (this.optionalOperator('=')) {\n                      var value = this.parseConditional();\n                      result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                  }\n                  else {\n                      result = new KeyedRead(this.span(result.span.start), result, key);\n                  }\n              }\n              else if (this.optionalCharacter($LPAREN)) {\n                  this.rparensExpected++;\n                  var args = this.parseCallArguments();\n                  this.rparensExpected--;\n                  this.expectCharacter($RPAREN);\n                  result = new FunctionCall(this.span(result.span.start), result, args);\n              }\n              else {\n                  return result;\n              }\n          }\n      };\n      _ParseAST.prototype.parsePrimary = function () {\n          var start = this.inputIndex;\n          if (this.optionalCharacter($LPAREN)) {\n              this.rparensExpected++;\n              var result = this.parsePipe();\n              this.rparensExpected--;\n              this.expectCharacter($RPAREN);\n              return result;\n          }\n          else if (this.next.isKeywordNull()) {\n              this.advance();\n              return new LiteralPrimitive(this.span(start), null);\n          }\n          else if (this.next.isKeywordUndefined()) {\n              this.advance();\n              return new LiteralPrimitive(this.span(start), void 0);\n          }\n          else if (this.next.isKeywordTrue()) {\n              this.advance();\n              return new LiteralPrimitive(this.span(start), true);\n          }\n          else if (this.next.isKeywordFalse()) {\n              this.advance();\n              return new LiteralPrimitive(this.span(start), false);\n          }\n          else if (this.next.isKeywordThis()) {\n              this.advance();\n              return new ImplicitReceiver(this.span(start));\n          }\n          else if (this.optionalCharacter($LBRACKET)) {\n              this.rbracketsExpected++;\n              var elements = this.parseExpressionList($RBRACKET);\n              this.rbracketsExpected--;\n              this.expectCharacter($RBRACKET);\n              return new LiteralArray(this.span(start), elements);\n          }\n          else if (this.next.isCharacter($LBRACE)) {\n              return this.parseLiteralMap();\n          }\n          else if (this.next.isIdentifier()) {\n              return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n          }\n          else if (this.next.isNumber()) {\n              var value = this.next.toNumber();\n              this.advance();\n              return new LiteralPrimitive(this.span(start), value);\n          }\n          else if (this.next.isString()) {\n              var literalValue = this.next.toString();\n              this.advance();\n              return new LiteralPrimitive(this.span(start), literalValue);\n          }\n          else if (this.index >= this.tokens.length) {\n              this.error(\"Unexpected end of expression: \" + this.input);\n              return new EmptyExpr(this.span(start));\n          }\n          else {\n              this.error(\"Unexpected token \" + this.next);\n              return new EmptyExpr(this.span(start));\n          }\n      };\n      _ParseAST.prototype.parseExpressionList = function (terminator) {\n          var result = [];\n          if (!this.next.isCharacter(terminator)) {\n              do {\n                  result.push(this.parsePipe());\n              } while (this.optionalCharacter($COMMA));\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseLiteralMap = function () {\n          var keys = [];\n          var values = [];\n          var start = this.inputIndex;\n          this.expectCharacter($LBRACE);\n          if (!this.optionalCharacter($RBRACE)) {\n              this.rbracesExpected++;\n              do {\n                  var key = this.expectIdentifierOrKeywordOrString();\n                  keys.push(key);\n                  this.expectCharacter($COLON);\n                  values.push(this.parsePipe());\n              } while (this.optionalCharacter($COMMA));\n              this.rbracesExpected--;\n              this.expectCharacter($RBRACE);\n          }\n          return new LiteralMap(this.span(start), keys, values);\n      };\n      _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n          if (isSafe === void 0) { isSafe = false; }\n          var start = receiver.span.start;\n          var id = this.expectIdentifierOrKeyword();\n          if (this.optionalCharacter($LPAREN)) {\n              this.rparensExpected++;\n              var args = this.parseCallArguments();\n              this.expectCharacter($RPAREN);\n              this.rparensExpected--;\n              var span = this.span(start);\n              return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                  new MethodCall(span, receiver, id, args);\n          }\n          else {\n              if (isSafe) {\n                  if (this.optionalOperator('=')) {\n                      this.error('The \\'?.\\' operator cannot be used in the assignment');\n                      return new EmptyExpr(this.span(start));\n                  }\n                  else {\n                      return new SafePropertyRead(this.span(start), receiver, id);\n                  }\n              }\n              else {\n                  if (this.optionalOperator('=')) {\n                      if (!this.parseAction) {\n                          this.error('Bindings cannot contain assignments');\n                          return new EmptyExpr(this.span(start));\n                      }\n                      var value = this.parseConditional();\n                      return new PropertyWrite(this.span(start), receiver, id, value);\n                  }\n                  else {\n                      return new PropertyRead(this.span(start), receiver, id);\n                  }\n              }\n          }\n      };\n      _ParseAST.prototype.parseCallArguments = function () {\n          if (this.next.isCharacter($RPAREN))\n              return [];\n          var positionals = [];\n          do {\n              positionals.push(this.parsePipe());\n          } while (this.optionalCharacter($COMMA));\n          return positionals;\n      };\n      /**\n       * An identifier, a keyword, a string with an optional `-` inbetween.\n       */\n      _ParseAST.prototype.expectTemplateBindingKey = function () {\n          var result = '';\n          var operatorFound = false;\n          do {\n              result += this.expectIdentifierOrKeywordOrString();\n              operatorFound = this.optionalOperator('-');\n              if (operatorFound) {\n                  result += '-';\n              }\n          } while (operatorFound);\n          return result.toString();\n      };\n      _ParseAST.prototype.parseTemplateBindings = function () {\n          var bindings = [];\n          var prefix = null;\n          var warnings = [];\n          while (this.index < this.tokens.length) {\n              var keyIsVar = this.peekKeywordLet();\n              if (keyIsVar) {\n                  this.advance();\n              }\n              var key = this.expectTemplateBindingKey();\n              if (!keyIsVar) {\n                  if (prefix == null) {\n                      prefix = key;\n                  }\n                  else {\n                      key = prefix + key[0].toUpperCase() + key.substring(1);\n                  }\n              }\n              this.optionalCharacter($COLON);\n              var name = null;\n              var expression = null;\n              if (keyIsVar) {\n                  if (this.optionalOperator('=')) {\n                      name = this.expectTemplateBindingKey();\n                  }\n                  else {\n                      name = '\\$implicit';\n                  }\n              }\n              else if (this.next !== EOF && !this.peekKeywordLet()) {\n                  var start = this.inputIndex;\n                  var ast = this.parsePipe();\n                  var source = this.input.substring(start, this.inputIndex);\n                  expression = new ASTWithSource(ast, source, this.location, this.errors);\n              }\n              bindings.push(new TemplateBinding(key, keyIsVar, name, expression));\n              if (!this.optionalCharacter($SEMICOLON)) {\n                  this.optionalCharacter($COMMA);\n              }\n          }\n          return new TemplateBindingParseResult(bindings, warnings, this.errors);\n      };\n      _ParseAST.prototype.error = function (message, index) {\n          if (index === void 0) { index = null; }\n          this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n          this.skip();\n      };\n      _ParseAST.prototype.locationText = function (index) {\n          if (index === void 0) { index = null; }\n          if (isBlank(index))\n              index = this.index;\n          return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n              \"at the end of the expression\";\n      };\n      // Error recovery should skip tokens until it encounters a recovery point. skip() treats\n      // the end of input and a ';' as unconditionally a recovery point. It also treats ')',\n      // '}' and ']' as conditional recovery points if one of calling productions is expecting\n      // one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing\n      // more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because\n      // of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols\n      // must be conditional as they must be skipped if none of the calling productions are not\n      // expecting the closing token else we will never make progress in the case of an\n      // extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because\n      // parseChain() is always the root production and it expects a ';'.\n      // If a production expects one of these token it increments the corresponding nesting count,\n      // and then decrements it just prior to checking if the token is in the input.\n      _ParseAST.prototype.skip = function () {\n          var n = this.next;\n          while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n              (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n              (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n              (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n              if (this.next.isError()) {\n                  this.errors.push(new ParserError(this.next.toString(), this.input, this.locationText(), this.location));\n              }\n              this.advance();\n              n = this.next;\n          }\n      };\n      return _ParseAST;\n  }());\n  var SimpleExpressionChecker = (function () {\n      function SimpleExpressionChecker() {\n          this.errors = [];\n      }\n      SimpleExpressionChecker.check = function (ast) {\n          var s = new SimpleExpressionChecker();\n          ast.visit(s);\n          return s.errors;\n      };\n      SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n      SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n      SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n      SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitAll = function (asts) {\n          var _this = this;\n          return asts.map(function (node) { return node.visit(_this); });\n      };\n      SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n      return SimpleExpressionChecker;\n  }());\n\n  var ParseLocation = (function () {\n      function ParseLocation(file, offset, line, col) {\n          this.file = file;\n          this.offset = offset;\n          this.line = line;\n          this.col = col;\n      }\n      ParseLocation.prototype.toString = function () {\n          return isPresent(this.offset) ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n      };\n      return ParseLocation;\n  }());\n  var ParseSourceFile = (function () {\n      function ParseSourceFile(content, url) {\n          this.content = content;\n          this.url = url;\n      }\n      return ParseSourceFile;\n  }());\n  var ParseSourceSpan = (function () {\n      function ParseSourceSpan(start, end, details) {\n          if (details === void 0) { details = null; }\n          this.start = start;\n          this.end = end;\n          this.details = details;\n      }\n      ParseSourceSpan.prototype.toString = function () {\n          return this.start.file.content.substring(this.start.offset, this.end.offset);\n      };\n      return ParseSourceSpan;\n  }());\n  exports.ParseErrorLevel;\n  (function (ParseErrorLevel) {\n      ParseErrorLevel[ParseErrorLevel[\"WARNING\"] = 0] = \"WARNING\";\n      ParseErrorLevel[ParseErrorLevel[\"FATAL\"] = 1] = \"FATAL\";\n  })(exports.ParseErrorLevel || (exports.ParseErrorLevel = {}));\n  var ParseError = (function () {\n      function ParseError(span, msg, level) {\n          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n          this.span = span;\n          this.msg = msg;\n          this.level = level;\n      }\n      ParseError.prototype.toString = function () {\n          var source = this.span.start.file.content;\n          var ctxStart = this.span.start.offset;\n          var contextStr = '';\n          var details = '';\n          if (isPresent(ctxStart)) {\n              if (ctxStart > source.length - 1) {\n                  ctxStart = source.length - 1;\n              }\n              var ctxEnd = ctxStart;\n              var ctxLen = 0;\n              var ctxLines = 0;\n              while (ctxLen < 100 && ctxStart > 0) {\n                  ctxStart--;\n                  ctxLen++;\n                  if (source[ctxStart] == '\\n') {\n                      if (++ctxLines == 3) {\n                          break;\n                      }\n                  }\n              }\n              ctxLen = 0;\n              ctxLines = 0;\n              while (ctxLen < 100 && ctxEnd < source.length - 1) {\n                  ctxEnd++;\n                  ctxLen++;\n                  if (source[ctxEnd] == '\\n') {\n                      if (++ctxLines == 3) {\n                          break;\n                      }\n                  }\n              }\n              var context = source.substring(ctxStart, this.span.start.offset) + '[ERROR ->]' +\n                  source.substring(this.span.start.offset, ctxEnd + 1);\n              contextStr = \" (\\\"\" + context + \"\\\")\";\n          }\n          if (this.span.details) {\n              details = \", \" + this.span.details;\n          }\n          return \"\" + this.msg + contextStr + \": \" + this.span.start + details;\n      };\n      return ParseError;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var Text = (function () {\n      function Text(value, sourceSpan) {\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n      return Text;\n  }());\n  var Expansion = (function () {\n      function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n          this.switchValue = switchValue;\n          this.type = type;\n          this.cases = cases;\n          this.sourceSpan = sourceSpan;\n          this.switchValueSourceSpan = switchValueSourceSpan;\n      }\n      Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n      return Expansion;\n  }());\n  var ExpansionCase = (function () {\n      function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n          this.value = value;\n          this.expression = expression;\n          this.sourceSpan = sourceSpan;\n          this.valueSourceSpan = valueSourceSpan;\n          this.expSourceSpan = expSourceSpan;\n      }\n      ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n      return ExpansionCase;\n  }());\n  var Attribute$1 = (function () {\n      function Attribute(name, value, sourceSpan, valueSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n          this.valueSpan = valueSpan;\n      }\n      Attribute.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n      return Attribute;\n  }());\n  var Element = (function () {\n      function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n          this.name = name;\n          this.attrs = attrs;\n          this.children = children;\n          this.sourceSpan = sourceSpan;\n          this.startSourceSpan = startSourceSpan;\n          this.endSourceSpan = endSourceSpan;\n      }\n      Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n      return Element;\n  }());\n  var Comment = (function () {\n      function Comment(value, sourceSpan) {\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n      return Comment;\n  }());\n  function visitAll(visitor, nodes, context) {\n      if (context === void 0) { context = null; }\n      var result = [];\n      var visit = visitor.visit ?\n          function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n          function (ast) { return ast.visit(visitor, context); };\n      nodes.forEach(function (ast) {\n          var astResult = visit(ast);\n          if (astResult) {\n              result.push(astResult);\n          }\n      });\n      return result;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$4 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var TokenType$1;\n  (function (TokenType) {\n      TokenType[TokenType[\"TAG_OPEN_START\"] = 0] = \"TAG_OPEN_START\";\n      TokenType[TokenType[\"TAG_OPEN_END\"] = 1] = \"TAG_OPEN_END\";\n      TokenType[TokenType[\"TAG_OPEN_END_VOID\"] = 2] = \"TAG_OPEN_END_VOID\";\n      TokenType[TokenType[\"TAG_CLOSE\"] = 3] = \"TAG_CLOSE\";\n      TokenType[TokenType[\"TEXT\"] = 4] = \"TEXT\";\n      TokenType[TokenType[\"ESCAPABLE_RAW_TEXT\"] = 5] = \"ESCAPABLE_RAW_TEXT\";\n      TokenType[TokenType[\"RAW_TEXT\"] = 6] = \"RAW_TEXT\";\n      TokenType[TokenType[\"COMMENT_START\"] = 7] = \"COMMENT_START\";\n      TokenType[TokenType[\"COMMENT_END\"] = 8] = \"COMMENT_END\";\n      TokenType[TokenType[\"CDATA_START\"] = 9] = \"CDATA_START\";\n      TokenType[TokenType[\"CDATA_END\"] = 10] = \"CDATA_END\";\n      TokenType[TokenType[\"ATTR_NAME\"] = 11] = \"ATTR_NAME\";\n      TokenType[TokenType[\"ATTR_VALUE\"] = 12] = \"ATTR_VALUE\";\n      TokenType[TokenType[\"DOC_TYPE\"] = 13] = \"DOC_TYPE\";\n      TokenType[TokenType[\"EXPANSION_FORM_START\"] = 14] = \"EXPANSION_FORM_START\";\n      TokenType[TokenType[\"EXPANSION_CASE_VALUE\"] = 15] = \"EXPANSION_CASE_VALUE\";\n      TokenType[TokenType[\"EXPANSION_CASE_EXP_START\"] = 16] = \"EXPANSION_CASE_EXP_START\";\n      TokenType[TokenType[\"EXPANSION_CASE_EXP_END\"] = 17] = \"EXPANSION_CASE_EXP_END\";\n      TokenType[TokenType[\"EXPANSION_FORM_END\"] = 18] = \"EXPANSION_FORM_END\";\n      TokenType[TokenType[\"EOF\"] = 19] = \"EOF\";\n  })(TokenType$1 || (TokenType$1 = {}));\n  var Token$1 = (function () {\n      function Token(type, parts, sourceSpan) {\n          this.type = type;\n          this.parts = parts;\n          this.sourceSpan = sourceSpan;\n      }\n      return Token;\n  }());\n  var TokenError = (function (_super) {\n      __extends$4(TokenError, _super);\n      function TokenError(errorMsg, tokenType, span) {\n          _super.call(this, span, errorMsg);\n          this.tokenType = tokenType;\n      }\n      return TokenError;\n  }(ParseError));\n  var TokenizeResult = (function () {\n      function TokenizeResult(tokens, errors) {\n          this.tokens = tokens;\n          this.errors = errors;\n      }\n      return TokenizeResult;\n  }());\n  function tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n      if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n      if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n      return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n          .tokenize();\n  }\n  var _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n  function _unexpectedCharacterErrorMsg(charCode) {\n      var char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n      return \"Unexpected character \\\"\" + char + \"\\\"\";\n  }\n  function _unknownEntityErrorMsg(entitySrc) {\n      return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n  }\n  var _ControlFlowError = (function () {\n      function _ControlFlowError(error) {\n          this.error = error;\n      }\n      return _ControlFlowError;\n  }());\n  // See http://www.w3.org/TR/html51/syntax.html#writing\n  var _Tokenizer = (function () {\n      /**\n       * @param _file The html source\n       * @param _getTagDefinition\n       * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n       * @param _interpolationConfig\n       */\n      function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n          if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          this._file = _file;\n          this._getTagDefinition = _getTagDefinition;\n          this._tokenizeIcu = _tokenizeIcu;\n          this._interpolationConfig = _interpolationConfig;\n          // Note: this is always lowercase!\n          this._peek = -1;\n          this._nextPeek = -1;\n          this._index = -1;\n          this._line = 0;\n          this._column = -1;\n          this._expansionCaseStack = [];\n          this._inInterpolation = false;\n          this.tokens = [];\n          this.errors = [];\n          this._input = _file.content;\n          this._length = _file.content.length;\n          this._advance();\n      }\n      _Tokenizer.prototype._processCarriageReturns = function (content) {\n          // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n          // In order to keep the original position in the source, we can not\n          // pre-process it.\n          // Instead CRs are processed right before instantiating the tokens.\n          return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n      };\n      _Tokenizer.prototype.tokenize = function () {\n          while (this._peek !== $EOF) {\n              var start = this._getLocation();\n              try {\n                  if (this._attemptCharCode($LT)) {\n                      if (this._attemptCharCode($BANG)) {\n                          if (this._attemptCharCode($LBRACKET)) {\n                              this._consumeCdata(start);\n                          }\n                          else if (this._attemptCharCode($MINUS)) {\n                              this._consumeComment(start);\n                          }\n                          else {\n                              this._consumeDocType(start);\n                          }\n                      }\n                      else if (this._attemptCharCode($SLASH)) {\n                          this._consumeTagClose(start);\n                      }\n                      else {\n                          this._consumeTagOpen(start);\n                      }\n                  }\n                  else if (!this._tokenizeIcu || !this._tokenizeExpansionForm()) {\n                      this._consumeText();\n                  }\n              }\n              catch (e) {\n                  if (e instanceof _ControlFlowError) {\n                      this.errors.push(e.error);\n                  }\n                  else {\n                      throw e;\n                  }\n              }\n          }\n          this._beginToken(TokenType$1.EOF);\n          this._endToken([]);\n          return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n      };\n      /**\n       * @returns {boolean} whether an ICU token has been created\n       * @internal\n       */\n      _Tokenizer.prototype._tokenizeExpansionForm = function () {\n          if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n              this._consumeExpansionFormStart();\n              return true;\n          }\n          if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n              this._consumeExpansionCaseStart();\n              return true;\n          }\n          if (this._peek === $RBRACE) {\n              if (this._isInExpansionCase()) {\n                  this._consumeExpansionCaseEnd();\n                  return true;\n              }\n              if (this._isInExpansionForm()) {\n                  this._consumeExpansionFormEnd();\n                  return true;\n              }\n          }\n          return false;\n      };\n      _Tokenizer.prototype._getLocation = function () {\n          return new ParseLocation(this._file, this._index, this._line, this._column);\n      };\n      _Tokenizer.prototype._getSpan = function (start, end) {\n          if (start === void 0) { start = this._getLocation(); }\n          if (end === void 0) { end = this._getLocation(); }\n          return new ParseSourceSpan(start, end);\n      };\n      _Tokenizer.prototype._beginToken = function (type, start) {\n          if (start === void 0) { start = this._getLocation(); }\n          this._currentTokenStart = start;\n          this._currentTokenType = type;\n      };\n      _Tokenizer.prototype._endToken = function (parts, end) {\n          if (end === void 0) { end = this._getLocation(); }\n          var token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n          this.tokens.push(token);\n          this._currentTokenStart = null;\n          this._currentTokenType = null;\n          return token;\n      };\n      _Tokenizer.prototype._createError = function (msg, span) {\n          if (this._isInExpansionForm()) {\n              msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n          }\n          var error = new TokenError(msg, this._currentTokenType, span);\n          this._currentTokenStart = null;\n          this._currentTokenType = null;\n          return new _ControlFlowError(error);\n      };\n      _Tokenizer.prototype._advance = function () {\n          if (this._index >= this._length) {\n              throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n          }\n          if (this._peek === $LF) {\n              this._line++;\n              this._column = 0;\n          }\n          else if (this._peek !== $LF && this._peek !== $CR) {\n              this._column++;\n          }\n          this._index++;\n          this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n          this._nextPeek =\n              this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n      };\n      _Tokenizer.prototype._attemptCharCode = function (charCode) {\n          if (this._peek === charCode) {\n              this._advance();\n              return true;\n          }\n          return false;\n      };\n      _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n          if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n              this._advance();\n              return true;\n          }\n          return false;\n      };\n      _Tokenizer.prototype._requireCharCode = function (charCode) {\n          var location = this._getLocation();\n          if (!this._attemptCharCode(charCode)) {\n              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n          }\n      };\n      _Tokenizer.prototype._attemptStr = function (chars) {\n          var len = chars.length;\n          if (this._index + len > this._length) {\n              return false;\n          }\n          var initialPosition = this._savePosition();\n          for (var i = 0; i < len; i++) {\n              if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                  // If attempting to parse the string fails, we want to reset the parser\n                  // to where it was before the attempt\n                  this._restorePosition(initialPosition);\n                  return false;\n              }\n          }\n          return true;\n      };\n      _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n          for (var i = 0; i < chars.length; i++) {\n              if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                  return false;\n              }\n          }\n          return true;\n      };\n      _Tokenizer.prototype._requireStr = function (chars) {\n          var location = this._getLocation();\n          if (!this._attemptStr(chars)) {\n              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n          }\n      };\n      _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n          while (!predicate(this._peek)) {\n              this._advance();\n          }\n      };\n      _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n          var start = this._getLocation();\n          this._attemptCharCodeUntilFn(predicate);\n          if (this._index - start.offset < len) {\n              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n          }\n      };\n      _Tokenizer.prototype._attemptUntilChar = function (char) {\n          while (this._peek !== char) {\n              this._advance();\n          }\n      };\n      _Tokenizer.prototype._readChar = function (decodeEntities) {\n          if (decodeEntities && this._peek === $AMPERSAND) {\n              return this._decodeEntity();\n          }\n          else {\n              var index = this._index;\n              this._advance();\n              return this._input[index];\n          }\n      };\n      _Tokenizer.prototype._decodeEntity = function () {\n          var start = this._getLocation();\n          this._advance();\n          if (this._attemptCharCode($HASH)) {\n              var isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n              var numberStart = this._getLocation().offset;\n              this._attemptCharCodeUntilFn(isDigitEntityEnd);\n              if (this._peek != $SEMICOLON) {\n                  throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n              }\n              this._advance();\n              var strNum = this._input.substring(numberStart, this._index - 1);\n              try {\n                  var charCode = parseInt(strNum, isHex ? 16 : 10);\n                  return String.fromCharCode(charCode);\n              }\n              catch (e) {\n                  var entity = this._input.substring(start.offset + 1, this._index - 1);\n                  throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n              }\n          }\n          else {\n              var startPosition = this._savePosition();\n              this._attemptCharCodeUntilFn(isNamedEntityEnd);\n              if (this._peek != $SEMICOLON) {\n                  this._restorePosition(startPosition);\n                  return '&';\n              }\n              this._advance();\n              var name_1 = this._input.substring(start.offset + 1, this._index - 1);\n              var char = NAMED_ENTITIES[name_1];\n              if (!char) {\n                  throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n              }\n              return char;\n          }\n      };\n      _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n          var tagCloseStart;\n          var textStart = this._getLocation();\n          this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n          var parts = [];\n          while (true) {\n              tagCloseStart = this._getLocation();\n              if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                  break;\n              }\n              if (this._index > tagCloseStart.offset) {\n                  // add the characters consumed by the previous if statement to the output\n                  parts.push(this._input.substring(tagCloseStart.offset, this._index));\n              }\n              while (this._peek !== firstCharOfEnd) {\n                  parts.push(this._readChar(decodeEntities));\n              }\n          }\n          return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n      };\n      _Tokenizer.prototype._consumeComment = function (start) {\n          var _this = this;\n          this._beginToken(TokenType$1.COMMENT_START, start);\n          this._requireCharCode($MINUS);\n          this._endToken([]);\n          var textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n          this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n          this._endToken([]);\n      };\n      _Tokenizer.prototype._consumeCdata = function (start) {\n          var _this = this;\n          this._beginToken(TokenType$1.CDATA_START, start);\n          this._requireStr('CDATA[');\n          this._endToken([]);\n          var textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n          this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n          this._endToken([]);\n      };\n      _Tokenizer.prototype._consumeDocType = function (start) {\n          this._beginToken(TokenType$1.DOC_TYPE, start);\n          this._attemptUntilChar($GT);\n          this._advance();\n          this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n      };\n      _Tokenizer.prototype._consumePrefixAndName = function () {\n          var nameOrPrefixStart = this._index;\n          var prefix = null;\n          while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n              this._advance();\n          }\n          var nameStart;\n          if (this._peek === $COLON) {\n              this._advance();\n              prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n              nameStart = this._index;\n          }\n          else {\n              nameStart = nameOrPrefixStart;\n          }\n          this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n          var name = this._input.substring(nameStart, this._index);\n          return [prefix, name];\n      };\n      _Tokenizer.prototype._consumeTagOpen = function (start) {\n          var savedPos = this._savePosition();\n          var tagName;\n          var lowercaseTagName;\n          try {\n              if (!isAsciiLetter(this._peek)) {\n                  throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n              }\n              var nameStart = this._index;\n              this._consumeTagOpenStart(start);\n              tagName = this._input.substring(nameStart, this._index);\n              lowercaseTagName = tagName.toLowerCase();\n              this._attemptCharCodeUntilFn(isNotWhitespace);\n              while (this._peek !== $SLASH && this._peek !== $GT) {\n                  this._consumeAttributeName();\n                  this._attemptCharCodeUntilFn(isNotWhitespace);\n                  if (this._attemptCharCode($EQ)) {\n                      this._attemptCharCodeUntilFn(isNotWhitespace);\n                      this._consumeAttributeValue();\n                  }\n                  this._attemptCharCodeUntilFn(isNotWhitespace);\n              }\n              this._consumeTagOpenEnd();\n          }\n          catch (e) {\n              if (e instanceof _ControlFlowError) {\n                  // When the start tag is invalid, assume we want a \"<\"\n                  this._restorePosition(savedPos);\n                  // Back to back text tokens are merged at the end\n                  this._beginToken(TokenType$1.TEXT, start);\n                  this._endToken(['<']);\n                  return;\n              }\n              throw e;\n          }\n          var contentTokenType = this._getTagDefinition(tagName).contentType;\n          if (contentTokenType === TagContentType.RAW_TEXT) {\n              this._consumeRawTextWithTagClose(lowercaseTagName, false);\n          }\n          else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n              this._consumeRawTextWithTagClose(lowercaseTagName, true);\n          }\n      };\n      _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n          var _this = this;\n          var textToken = this._consumeRawText(decodeEntities, $LT, function () {\n              if (!_this._attemptCharCode($SLASH))\n                  return false;\n              _this._attemptCharCodeUntilFn(isNotWhitespace);\n              if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                  return false;\n              _this._attemptCharCodeUntilFn(isNotWhitespace);\n              return _this._attemptCharCode($GT);\n          });\n          this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n          this._endToken([null, lowercaseTagName]);\n      };\n      _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n          this._beginToken(TokenType$1.TAG_OPEN_START, start);\n          var parts = this._consumePrefixAndName();\n          this._endToken(parts);\n      };\n      _Tokenizer.prototype._consumeAttributeName = function () {\n          this._beginToken(TokenType$1.ATTR_NAME);\n          var prefixAndName = this._consumePrefixAndName();\n          this._endToken(prefixAndName);\n      };\n      _Tokenizer.prototype._consumeAttributeValue = function () {\n          this._beginToken(TokenType$1.ATTR_VALUE);\n          var value;\n          if (this._peek === $SQ || this._peek === $DQ) {\n              var quoteChar = this._peek;\n              this._advance();\n              var parts = [];\n              while (this._peek !== quoteChar) {\n                  parts.push(this._readChar(true));\n              }\n              value = parts.join('');\n              this._advance();\n          }\n          else {\n              var valueStart = this._index;\n              this._requireCharCodeUntilFn(isNameEnd, 1);\n              value = this._input.substring(valueStart, this._index);\n          }\n          this._endToken([this._processCarriageReturns(value)]);\n      };\n      _Tokenizer.prototype._consumeTagOpenEnd = function () {\n          var tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n          this._beginToken(tokenType);\n          this._requireCharCode($GT);\n          this._endToken([]);\n      };\n      _Tokenizer.prototype._consumeTagClose = function (start) {\n          this._beginToken(TokenType$1.TAG_CLOSE, start);\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          var prefixAndName = this._consumePrefixAndName();\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._requireCharCode($GT);\n          this._endToken(prefixAndName);\n      };\n      _Tokenizer.prototype._consumeExpansionFormStart = function () {\n          this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n          this._requireCharCode($LBRACE);\n          this._endToken([]);\n          this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n          this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n          var condition = this._readUntil($COMMA);\n          this._endToken([condition], this._getLocation());\n          this._requireCharCode($COMMA);\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n          var type = this._readUntil($COMMA);\n          this._endToken([type], this._getLocation());\n          this._requireCharCode($COMMA);\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n      };\n      _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n          this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n          var value = this._readUntil($LBRACE).trim();\n          this._endToken([value], this._getLocation());\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n          this._requireCharCode($LBRACE);\n          this._endToken([], this._getLocation());\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n      };\n      _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n          this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n          this._requireCharCode($RBRACE);\n          this._endToken([], this._getLocation());\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._expansionCaseStack.pop();\n      };\n      _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n          this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n          this._requireCharCode($RBRACE);\n          this._endToken([]);\n          this._expansionCaseStack.pop();\n      };\n      _Tokenizer.prototype._consumeText = function () {\n          var start = this._getLocation();\n          this._beginToken(TokenType$1.TEXT, start);\n          var parts = [];\n          do {\n              if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                  parts.push(this._interpolationConfig.start);\n                  this._inInterpolation = true;\n              }\n              else if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.end) &&\n                  this._inInterpolation) {\n                  parts.push(this._interpolationConfig.end);\n                  this._inInterpolation = false;\n              }\n              else {\n                  parts.push(this._readChar(true));\n              }\n          } while (!this._isTextEnd());\n          this._endToken([this._processCarriageReturns(parts.join(''))]);\n      };\n      _Tokenizer.prototype._isTextEnd = function () {\n          if (this._peek === $LT || this._peek === $EOF) {\n              return true;\n          }\n          if (this._tokenizeIcu && !this._inInterpolation) {\n              if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                  // start of an expansion form\n                  return true;\n              }\n              if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                  // end of and expansion case\n                  return true;\n              }\n          }\n          return false;\n      };\n      _Tokenizer.prototype._savePosition = function () {\n          return [this._peek, this._index, this._column, this._line, this.tokens.length];\n      };\n      _Tokenizer.prototype._readUntil = function (char) {\n          var start = this._index;\n          this._attemptUntilChar(char);\n          return this._input.substring(start, this._index);\n      };\n      _Tokenizer.prototype._restorePosition = function (position) {\n          this._peek = position[0];\n          this._index = position[1];\n          this._column = position[2];\n          this._line = position[3];\n          var nbTokens = position[4];\n          if (nbTokens < this.tokens.length) {\n              // remove any extra tokens\n              this.tokens = this.tokens.slice(0, nbTokens);\n          }\n      };\n      _Tokenizer.prototype._isInExpansionCase = function () {\n          return this._expansionCaseStack.length > 0 &&\n              this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                  TokenType$1.EXPANSION_CASE_EXP_START;\n      };\n      _Tokenizer.prototype._isInExpansionForm = function () {\n          return this._expansionCaseStack.length > 0 &&\n              this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                  TokenType$1.EXPANSION_FORM_START;\n      };\n      return _Tokenizer;\n  }());\n  function isNotWhitespace(code) {\n      return !isWhitespace(code) || code === $EOF;\n  }\n  function isNameEnd(code) {\n      return isWhitespace(code) || code === $GT || code === $SLASH ||\n          code === $SQ || code === $DQ || code === $EQ;\n  }\n  function isPrefixEnd(code) {\n      return (code < $a || $z < code) && (code < $A || $Z < code) &&\n          (code < $0 || code > $9);\n  }\n  function isDigitEntityEnd(code) {\n      return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n  }\n  function isNamedEntityEnd(code) {\n      return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n  }\n  function isExpansionFormStart(input, offset, interpolationConfig) {\n      var isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n      return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n  }\n  function isExpansionCaseStart(peek) {\n      return peek === $EQ || isAsciiLetter(peek);\n  }\n  function compareCharCodeCaseInsensitive(code1, code2) {\n      return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n  }\n  function toUpperCaseCharCode(code) {\n      return code >= $a && code <= $z ? code - $a + $A : code;\n  }\n  function mergeTextTokens(srcTokens) {\n      var dstTokens = [];\n      var lastDstToken;\n      for (var i = 0; i < srcTokens.length; i++) {\n          var token = srcTokens[i];\n          if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n              lastDstToken.parts[0] += token.parts[0];\n              lastDstToken.sourceSpan.end = token.sourceSpan.end;\n          }\n          else {\n              lastDstToken = token;\n              dstTokens.push(lastDstToken);\n          }\n      }\n      return dstTokens;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$3 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var TreeError = (function (_super) {\n      __extends$3(TreeError, _super);\n      function TreeError(elementName, span, msg) {\n          _super.call(this, span, msg);\n          this.elementName = elementName;\n      }\n      TreeError.create = function (elementName, span, msg) {\n          return new TreeError(elementName, span, msg);\n      };\n      return TreeError;\n  }(ParseError));\n  var ParseTreeResult = (function () {\n      function ParseTreeResult(rootNodes, errors) {\n          this.rootNodes = rootNodes;\n          this.errors = errors;\n      }\n      return ParseTreeResult;\n  }());\n  var Parser$1 = (function () {\n      function Parser(getTagDefinition) {\n          this.getTagDefinition = getTagDefinition;\n      }\n      Parser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n          var treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n          return new ParseTreeResult(treeAndErrors.rootNodes, tokensAndErrors.errors.concat(treeAndErrors.errors));\n      };\n      return Parser;\n  }());\n  var _TreeBuilder = (function () {\n      function _TreeBuilder(tokens, getTagDefinition) {\n          this.tokens = tokens;\n          this.getTagDefinition = getTagDefinition;\n          this._index = -1;\n          this._rootNodes = [];\n          this._errors = [];\n          this._elementStack = [];\n          this._advance();\n      }\n      _TreeBuilder.prototype.build = function () {\n          while (this._peek.type !== TokenType$1.EOF) {\n              if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                  this._consumeStartTag(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                  this._consumeEndTag(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.CDATA_START) {\n                  this._closeVoidElement();\n                  this._consumeCdata(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.COMMENT_START) {\n                  this._closeVoidElement();\n                  this._consumeComment(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                  this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                  this._closeVoidElement();\n                  this._consumeText(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                  this._consumeExpansion(this._advance());\n              }\n              else {\n                  // Skip all other tokens...\n                  this._advance();\n              }\n          }\n          return new ParseTreeResult(this._rootNodes, this._errors);\n      };\n      _TreeBuilder.prototype._advance = function () {\n          var prev = this._peek;\n          if (this._index < this.tokens.length - 1) {\n              // Note: there is always an EOF token at the end\n              this._index++;\n          }\n          this._peek = this.tokens[this._index];\n          return prev;\n      };\n      _TreeBuilder.prototype._advanceIf = function (type) {\n          if (this._peek.type === type) {\n              return this._advance();\n          }\n          return null;\n      };\n      _TreeBuilder.prototype._consumeCdata = function (startToken) {\n          this._consumeText(this._advance());\n          this._advanceIf(TokenType$1.CDATA_END);\n      };\n      _TreeBuilder.prototype._consumeComment = function (token) {\n          var text = this._advanceIf(TokenType$1.RAW_TEXT);\n          this._advanceIf(TokenType$1.COMMENT_END);\n          var value = isPresent(text) ? text.parts[0].trim() : null;\n          this._addToParent(new Comment(value, token.sourceSpan));\n      };\n      _TreeBuilder.prototype._consumeExpansion = function (token) {\n          var switchValue = this._advance();\n          var type = this._advance();\n          var cases = [];\n          // read =\n          while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n              var expCase = this._parseExpansionCase();\n              if (!expCase)\n                  return; // error\n              cases.push(expCase);\n          }\n          // read the final }\n          if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n              this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n              return;\n          }\n          var sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n          this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n          this._advance();\n      };\n      _TreeBuilder.prototype._parseExpansionCase = function () {\n          var value = this._advance();\n          // read {\n          if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n              this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n              return null;\n          }\n          // read until }\n          var start = this._advance();\n          var exp = this._collectExpansionExpTokens(start);\n          if (!exp)\n              return null;\n          var end = this._advance();\n          exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n          // parse everything in between { and }\n          var parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n          if (parsedExp.errors.length > 0) {\n              this._errors = this._errors.concat(parsedExp.errors);\n              return null;\n          }\n          var sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n          var expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n          return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n      };\n      _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n          var exp = [];\n          var expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n          while (true) {\n              if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                  this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                  expansionFormStack.push(this._peek.type);\n              }\n              if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                  if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                      expansionFormStack.pop();\n                      if (expansionFormStack.length == 0)\n                          return exp;\n                  }\n                  else {\n                      this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                      return null;\n                  }\n              }\n              if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                  if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                      expansionFormStack.pop();\n                  }\n                  else {\n                      this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                      return null;\n                  }\n              }\n              if (this._peek.type === TokenType$1.EOF) {\n                  this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                  return null;\n              }\n              exp.push(this._advance());\n          }\n      };\n      _TreeBuilder.prototype._consumeText = function (token) {\n          var text = token.parts[0];\n          if (text.length > 0 && text[0] == '\\n') {\n              var parent_1 = this._getParentElement();\n              if (isPresent(parent_1) && parent_1.children.length == 0 &&\n                  this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                  text = text.substring(1);\n              }\n          }\n          if (text.length > 0) {\n              this._addToParent(new Text(text, token.sourceSpan));\n          }\n      };\n      _TreeBuilder.prototype._closeVoidElement = function () {\n          if (this._elementStack.length > 0) {\n              var el = this._elementStack[this._elementStack.length - 1];\n              if (this.getTagDefinition(el.name).isVoid) {\n                  this._elementStack.pop();\n              }\n          }\n      };\n      _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n          var prefix = startTagToken.parts[0];\n          var name = startTagToken.parts[1];\n          var attrs = [];\n          while (this._peek.type === TokenType$1.ATTR_NAME) {\n              attrs.push(this._consumeAttr(this._advance()));\n          }\n          var fullName = this._getElementFullName(prefix, name, this._getParentElement());\n          var selfClosing = false;\n          // Note: There could have been a tokenizer error\n          // so that we don't get a token for the end tag...\n          if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n              this._advance();\n              selfClosing = true;\n              var tagDef = this.getTagDefinition(fullName);\n              if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                  this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n              }\n          }\n          else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n              this._advance();\n              selfClosing = false;\n          }\n          var end = this._peek.sourceSpan.start;\n          var span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n          var el = new Element(fullName, attrs, [], span, span, null);\n          this._pushElement(el);\n          if (selfClosing) {\n              this._popElement(fullName);\n              el.endSourceSpan = span;\n          }\n      };\n      _TreeBuilder.prototype._pushElement = function (el) {\n          if (this._elementStack.length > 0) {\n              var parentEl = this._elementStack[this._elementStack.length - 1];\n              if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n                  this._elementStack.pop();\n              }\n          }\n          var tagDef = this.getTagDefinition(el.name);\n          var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n          if (isPresent(parent) && tagDef.requireExtraParent(parent.name)) {\n              var newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n              this._insertBeforeContainer(parent, container, newParent);\n          }\n          this._addToParent(el);\n          this._elementStack.push(el);\n      };\n      _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n          var fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n          if (this._getParentElement()) {\n              this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n          }\n          if (this.getTagDefinition(fullName).isVoid) {\n              this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n          }\n          else if (!this._popElement(fullName)) {\n              this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Unexpected closing tag \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n          }\n      };\n      _TreeBuilder.prototype._popElement = function (fullName) {\n          for (var stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n              var el = this._elementStack[stackIndex];\n              if (el.name == fullName) {\n                  this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                  return true;\n              }\n              if (!this.getTagDefinition(el.name).closedByParent) {\n                  return false;\n              }\n          }\n          return false;\n      };\n      _TreeBuilder.prototype._consumeAttr = function (attrName) {\n          var fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n          var end = attrName.sourceSpan.end;\n          var value = '';\n          var valueSpan;\n          if (this._peek.type === TokenType$1.ATTR_VALUE) {\n              var valueToken = this._advance();\n              value = valueToken.parts[0];\n              end = valueToken.sourceSpan.end;\n              valueSpan = valueToken.sourceSpan;\n          }\n          return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n      };\n      _TreeBuilder.prototype._getParentElement = function () {\n          return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n      };\n      /**\n       * Returns the parent in the DOM and the container.\n       *\n       * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n       */\n      _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n          var container = null;\n          for (var i = this._elementStack.length - 1; i >= 0; i--) {\n              if (this._elementStack[i].name !== 'ng-container') {\n                  return { parent: this._elementStack[i], container: container };\n              }\n              container = this._elementStack[i];\n          }\n          return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n      };\n      _TreeBuilder.prototype._addToParent = function (node) {\n          var parent = this._getParentElement();\n          if (isPresent(parent)) {\n              parent.children.push(node);\n          }\n          else {\n              this._rootNodes.push(node);\n          }\n      };\n      /**\n       * Insert a node between the parent and the container.\n       * When no container is given, the node is appended as a child of the parent.\n       * Also updates the element stack accordingly.\n       *\n       * @internal\n       */\n      _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n          if (!container) {\n              this._addToParent(node);\n              this._elementStack.push(node);\n          }\n          else {\n              if (parent) {\n                  // replace the container with the new node in the children\n                  var index = parent.children.indexOf(container);\n                  parent.children[index] = node;\n              }\n              else {\n                  this._rootNodes.push(node);\n              }\n              node.children.push(container);\n              this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n          }\n      };\n      _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n          if (isBlank(prefix)) {\n              prefix = this.getTagDefinition(localName).implicitNamespacePrefix;\n              if (isBlank(prefix) && isPresent(parentElement)) {\n                  prefix = getNsPrefix(parentElement.name);\n              }\n          }\n          return mergeNsAndName(prefix, localName);\n      };\n      return _TreeBuilder;\n  }());\n  function lastOnStack(stack, element) {\n      return stack.length > 0 && stack[stack.length - 1] === element;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  function digestMessage(message) {\n      return sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n  }\n  /**\n   * Serialize the i18n ast to something xml-like in order to generate an UID.\n   *\n   * The visitor is also used in the i18n parser tests\n   *\n   * @internal\n   */\n  var _SerializerVisitor = (function () {\n      function _SerializerVisitor() {\n      }\n      _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n      _SerializerVisitor.prototype.visitContainer = function (container, context) {\n          var _this = this;\n          return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n      };\n      _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n          var _this = this;\n          var strCases = Object.keys(icu.cases).map(function (k) { return (k + \" {\" + icu.cases[k].visit(_this) + \"}\"); });\n          return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n      };\n      _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n          var _this = this;\n          return ph.isVoid ?\n              \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n              \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n      };\n      _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n          return \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\";\n      };\n      _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n          return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n      };\n      return _SerializerVisitor;\n  }());\n  var serializerVisitor = new _SerializerVisitor();\n  function serializeNodes(nodes) {\n      return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n  }\n  /**\n   * Compute the SHA1 of the given string\n   *\n   * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n   *\n   * WARNING: this function has not been designed not tested with security in mind.\n   *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n   */\n  function sha1(str) {\n      var utf8 = utf8Encode(str);\n      var words32 = stringToWords32(utf8);\n      var len = utf8.length * 8;\n      var w = new Array(80);\n      var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n      words32[len >> 5] |= 0x80 << (24 - len % 32);\n      words32[((len + 64 >> 9) << 4) + 15] = len;\n      for (var i = 0; i < words32.length; i += 16) {\n          var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n          for (var j = 0; j < 80; j++) {\n              if (j < 16) {\n                  w[j] = words32[i + j];\n              }\n              else {\n                  w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n              }\n              var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n              var temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n              _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n          }\n          _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n      }\n      var sha1 = words32ToString([a, b, c, d, e]);\n      var hex = '';\n      for (var i = 0; i < sha1.length; i++) {\n          var b_1 = sha1.charCodeAt(i);\n          hex += (b_1 >>> 4 & 0x0f).toString(16) + (b_1 & 0x0f).toString(16);\n      }\n      return hex.toLowerCase();\n      var _d, _e;\n  }\n  function utf8Encode(str) {\n      var encoded = '';\n      for (var index = 0; index < str.length; index++) {\n          var codePoint = decodeSurrogatePairs(str, index);\n          if (codePoint <= 0x7f) {\n              encoded += String.fromCharCode(codePoint);\n          }\n          else if (codePoint <= 0x7ff) {\n              encoded += String.fromCharCode(0xc0 | codePoint >>> 6, 0x80 | codePoint & 0x3f);\n          }\n          else if (codePoint <= 0xffff) {\n              encoded += String.fromCharCode(0xe0 | codePoint >>> 12, 0x80 | codePoint >>> 6 & 0x3f, 0x80 | codePoint & 0x3f);\n          }\n          else if (codePoint <= 0x1fffff) {\n              encoded += String.fromCharCode(0xf0 | codePoint >>> 18, 0x80 | codePoint >>> 12 & 0x3f, 0x80 | codePoint >>> 6 & 0x3f, 0x80 | codePoint & 0x3f);\n          }\n      }\n      return encoded;\n  }\n  // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n  function decodeSurrogatePairs(str, index) {\n      if (index < 0 || index >= str.length) {\n          throw new Error(\"index=\" + index + \" is out of range in \\\"\" + str + \"\\\"\");\n      }\n      var high = str.charCodeAt(index);\n      var low;\n      if (high >= 0xd800 && high <= 0xdfff && str.length > index + 1) {\n          low = str.charCodeAt(index + 1);\n          if (low >= 0xdc00 && low <= 0xdfff) {\n              return (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\n          }\n      }\n      return high;\n  }\n  function stringToWords32(str) {\n      var words32 = Array(str.length >>> 2);\n      for (var i = 0; i < words32.length; i++) {\n          words32[i] = 0;\n      }\n      for (var i = 0; i < str.length; i++) {\n          words32[i >>> 2] |= (str.charCodeAt(i) & 0xff) << 8 * (3 - i & 0x3);\n      }\n      return words32;\n  }\n  function words32ToString(words32) {\n      var str = '';\n      for (var i = 0; i < words32.length * 4; i++) {\n          str += String.fromCharCode((words32[i >>> 2] >>> 8 * (3 - i & 0x3)) & 0xff);\n      }\n      return str;\n  }\n  function fk(index, b, c, d) {\n      if (index < 20) {\n          return [(b & c) | (~b & d), 0x5a827999];\n      }\n      if (index < 40) {\n          return [b ^ c ^ d, 0x6ed9eba1];\n      }\n      if (index < 60) {\n          return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n      }\n      return [b ^ c ^ d, 0xca62c1d6];\n  }\n  function add32(a, b) {\n      var low = (a & 0xffff) + (b & 0xffff);\n      var high = (a >> 16) + (b >> 16) + (low >> 16);\n      return (high << 16) | (low & 0xffff);\n  }\n  function rol32(a, count) {\n      return (a << count) | (a >>> (32 - count));\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var Message = (function () {\n      /**\n       * @param nodes message AST\n       * @param placeholders maps placeholder names to static content\n       * @param placeholderToMsgIds maps placeholder names to translatable message IDs (used for ICU\n       *                            messages)\n       * @param meaning\n       * @param description\n       */\n      function Message(nodes, placeholders, placeholderToMsgIds, meaning, description) {\n          this.nodes = nodes;\n          this.placeholders = placeholders;\n          this.placeholderToMsgIds = placeholderToMsgIds;\n          this.meaning = meaning;\n          this.description = description;\n      }\n      return Message;\n  }());\n  var Text$1 = (function () {\n      function Text(value, sourceSpan) {\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n      return Text;\n  }());\n  var Container = (function () {\n      function Container(children, sourceSpan) {\n          this.children = children;\n          this.sourceSpan = sourceSpan;\n      }\n      Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n      return Container;\n  }());\n  var Icu = (function () {\n      function Icu(expression, type, cases, sourceSpan) {\n          this.expression = expression;\n          this.type = type;\n          this.cases = cases;\n          this.sourceSpan = sourceSpan;\n      }\n      Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n      return Icu;\n  }());\n  var TagPlaceholder = (function () {\n      function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n          this.tag = tag;\n          this.attrs = attrs;\n          this.startName = startName;\n          this.closeName = closeName;\n          this.children = children;\n          this.isVoid = isVoid;\n          this.sourceSpan = sourceSpan;\n      }\n      TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n      return TagPlaceholder;\n  }());\n  var Placeholder = (function () {\n      function Placeholder(value, name, sourceSpan) {\n          if (name === void 0) { name = ''; }\n          this.value = value;\n          this.name = name;\n          this.sourceSpan = sourceSpan;\n      }\n      Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n      return Placeholder;\n  }());\n  var IcuPlaceholder = (function () {\n      function IcuPlaceholder(value, name, sourceSpan) {\n          if (name === void 0) { name = ''; }\n          this.value = value;\n          this.name = name;\n          this.sourceSpan = sourceSpan;\n      }\n      IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n      return IcuPlaceholder;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var TAG_TO_PLACEHOLDER_NAMES = {\n      'A': 'LINK',\n      'B': 'BOLD_TEXT',\n      'BR': 'LINE_BREAK',\n      'EM': 'EMPHASISED_TEXT',\n      'H1': 'HEADING_LEVEL1',\n      'H2': 'HEADING_LEVEL2',\n      'H3': 'HEADING_LEVEL3',\n      'H4': 'HEADING_LEVEL4',\n      'H5': 'HEADING_LEVEL5',\n      'H6': 'HEADING_LEVEL6',\n      'HR': 'HORIZONTAL_RULE',\n      'I': 'ITALIC_TEXT',\n      'LI': 'LIST_ITEM',\n      'LINK': 'MEDIA_LINK',\n      'OL': 'ORDERED_LIST',\n      'P': 'PARAGRAPH',\n      'Q': 'QUOTATION',\n      'S': 'STRIKETHROUGH_TEXT',\n      'SMALL': 'SMALL_TEXT',\n      'SUB': 'SUBSTRIPT',\n      'SUP': 'SUPERSCRIPT',\n      'TBODY': 'TABLE_BODY',\n      'TD': 'TABLE_CELL',\n      'TFOOT': 'TABLE_FOOTER',\n      'TH': 'TABLE_HEADER_CELL',\n      'THEAD': 'TABLE_HEADER',\n      'TR': 'TABLE_ROW',\n      'TT': 'MONOSPACED_TEXT',\n      'U': 'UNDERLINED_TEXT',\n      'UL': 'UNORDERED_LIST',\n  };\n  /**\n   * Creates unique names for placeholder with different content\n   *\n   * @internal\n   */\n  var PlaceholderRegistry = (function () {\n      function PlaceholderRegistry() {\n          // Count the occurrence of the base name top generate a unique name\n          this._placeHolderNameCounts = {};\n          // Maps signature to placeholder names\n          this._signatureToName = {};\n      }\n      PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n          var signature = this._hashTag(tag, attrs, isVoid);\n          if (this._signatureToName[signature]) {\n              return this._signatureToName[signature];\n          }\n          var upperTag = tag.toUpperCase();\n          var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n          var name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n          this._signatureToName[signature] = name;\n          return name;\n      };\n      PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n          var signature = this._hashClosingTag(tag);\n          if (this._signatureToName[signature]) {\n              return this._signatureToName[signature];\n          }\n          var upperTag = tag.toUpperCase();\n          var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n          var name = this._generateUniqueName(\"CLOSE_\" + baseName);\n          this._signatureToName[signature] = name;\n          return name;\n      };\n      PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n          var upperName = name.toUpperCase();\n          var signature = \"PH: \" + upperName + \"=\" + content;\n          if (this._signatureToName[signature]) {\n              return this._signatureToName[signature];\n          }\n          var uniqueName = this._generateUniqueName(upperName);\n          this._signatureToName[signature] = uniqueName;\n          return uniqueName;\n      };\n      // Generate a hash for a tag - does not take attribute order into account\n      PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n          var start = \"<\" + tag;\n          var strAttrs = Object.keys(attrs).sort().map(function (name) { return (\" \" + name + \"=\" + attrs[name]); }).join('');\n          var end = isVoid ? '/>' : \"></\" + tag + \">\";\n          return start + strAttrs + end;\n      };\n      PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n      PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n          var name = base;\n          var next = this._placeHolderNameCounts[name];\n          if (!next) {\n              next = 1;\n          }\n          else {\n              name += \"_\" + next;\n              next++;\n          }\n          this._placeHolderNameCounts[base] = next;\n          return name;\n      };\n      return PlaceholderRegistry;\n  }());\n\n  var _expParser = new Parser(new Lexer());\n  /**\n   * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n   */\n  function createI18nMessageFactory(interpolationConfig) {\n      var visitor = new _I18nVisitor(_expParser, interpolationConfig);\n      return function (nodes, meaning, description) {\n          return visitor.toI18nMessage(nodes, meaning, description);\n      };\n  }\n  var _I18nVisitor = (function () {\n      function _I18nVisitor(_expressionParser, _interpolationConfig) {\n          this._expressionParser = _expressionParser;\n          this._interpolationConfig = _interpolationConfig;\n      }\n      _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description) {\n          this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n          this._icuDepth = 0;\n          this._placeholderRegistry = new PlaceholderRegistry();\n          this._placeholderToContent = {};\n          this._placeholderToIds = {};\n          var i18nodes = visitAll(this, nodes, {});\n          return new Message(i18nodes, this._placeholderToContent, this._placeholderToIds, meaning, description);\n      };\n      _I18nVisitor.prototype.visitElement = function (el, context) {\n          var children = visitAll(this, el.children);\n          var attrs = {};\n          el.attrs.forEach(function (attr) {\n              // Do not visit the attributes, translatable ones are top-level ASTs\n              attrs[attr.name] = attr.value;\n          });\n          var isVoid = getHtmlTagDefinition(el.name).isVoid;\n          var startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n          this._placeholderToContent[startPhName] = el.sourceSpan.toString();\n          var closePhName = '';\n          if (!isVoid) {\n              closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n              this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n          }\n          return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, el.sourceSpan);\n      };\n      _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n          return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n      };\n      _I18nVisitor.prototype.visitText = function (text, context) {\n          return this._visitTextWithInterpolation(text.value, text.sourceSpan);\n      };\n      _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n      _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n          var _this = this;\n          this._icuDepth++;\n          var i18nIcuCases = {};\n          var i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n          icu.cases.forEach(function (caze) {\n              i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n          });\n          this._icuDepth--;\n          if (this._isIcu || this._icuDepth > 0) {\n              // If the message (vs a part of the message) is an ICU message returns it\n              return i18nIcu;\n          }\n          // Else returns a placeholder\n          // ICU placeholders should not be replaced with their original content but with the their\n          // translations. We need to create a new visitor (they are not re-entrant) to compute the\n          // message id.\n          // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n          var phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n          var visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n          this._placeholderToIds[phName] = digestMessage(visitor.toI18nMessage([icu], '', ''));\n          return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n      };\n      _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n          throw new Error('Unreachable code');\n      };\n      _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n          var splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n          if (!splitInterpolation) {\n              // No expression, return a single text\n              return new Text$1(text, sourceSpan);\n          }\n          // Return a group of text + expressions\n          var nodes = [];\n          var container = new Container(nodes, sourceSpan);\n          var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n          for (var i = 0; i < splitInterpolation.strings.length - 1; i++) {\n              var expression = splitInterpolation.expressions[i];\n              var baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n              var phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n              if (splitInterpolation.strings[i].length) {\n                  // No need to add empty strings\n                  nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n              }\n              nodes.push(new Placeholder(expression, phName, sourceSpan));\n              this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n          }\n          // The last index contains no expression\n          var lastStringIdx = splitInterpolation.strings.length - 1;\n          if (splitInterpolation.strings[lastStringIdx].length) {\n              nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n          }\n          return container;\n      };\n      return _I18nVisitor;\n  }());\n  var _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*\"([\\s\\S]*?)\"[\\s\\S]*\\)/g;\n  function _extractPlaceholderName(input) {\n      return input.split(_CUSTOM_PH_EXP)[1];\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$5 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  /**\n   * An i18n error.\n   */\n  var I18nError = (function (_super) {\n      __extends$5(I18nError, _super);\n      function I18nError(span, msg) {\n          _super.call(this, span, msg);\n      }\n      return I18nError;\n  }(ParseError));\n\n  var _I18N_ATTR = 'i18n';\n  var _I18N_ATTR_PREFIX = 'i18n-';\n  var _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\n  /**\n   * Extract translatable messages from an html AST\n   */\n  function extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n      var visitor = new _Visitor(implicitTags, implicitAttrs);\n      return visitor.extract(nodes, interpolationConfig);\n  }\n  function mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n      var visitor = new _Visitor(implicitTags, implicitAttrs);\n      return visitor.merge(nodes, translations, interpolationConfig);\n  }\n  var ExtractionResult = (function () {\n      function ExtractionResult(messages, errors) {\n          this.messages = messages;\n          this.errors = errors;\n      }\n      return ExtractionResult;\n  }());\n  var _VisitorMode;\n  (function (_VisitorMode) {\n      _VisitorMode[_VisitorMode[\"Extract\"] = 0] = \"Extract\";\n      _VisitorMode[_VisitorMode[\"Merge\"] = 1] = \"Merge\";\n  })(_VisitorMode || (_VisitorMode = {}));\n  /**\n   * This Visitor is used:\n   * 1. to extract all the translatable strings from an html AST (see `extract()`),\n   * 2. to replace the translatable strings with the actual translations (see `merge()`)\n   *\n   * @internal\n   */\n  var _Visitor = (function () {\n      function _Visitor(_implicitTags, _implicitAttrs) {\n          this._implicitTags = _implicitTags;\n          this._implicitAttrs = _implicitAttrs;\n      }\n      /**\n       * Extracts the messages from the tree\n       */\n      _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n          var _this = this;\n          this._init(_VisitorMode.Extract, interpolationConfig);\n          nodes.forEach(function (node) { return node.visit(_this, null); });\n          if (this._inI18nBlock) {\n              this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n          }\n          return new ExtractionResult(this._messages, this._errors);\n      };\n      /**\n       * Returns a tree where all translatable nodes are translated\n       */\n      _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n          this._init(_VisitorMode.Merge, interpolationConfig);\n          this._translations = translations;\n          // Construct a single fake root element\n          var wrapper = new Element('wrapper', [], nodes, null, null, null);\n          var translatedNode = wrapper.visit(this, null);\n          if (this._inI18nBlock) {\n              this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n          }\n          return new ParseTreeResult(translatedNode.children, this._errors);\n      };\n      _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n          // Parse cases for translatable html attributes\n          var expression = visitAll(this, icuCase.expression, context);\n          if (this._mode === _VisitorMode.Merge) {\n              return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n          }\n      };\n      _Visitor.prototype.visitExpansion = function (icu, context) {\n          this._mayBeAddBlockChildren(icu);\n          var wasInIcu = this._inIcu;\n          if (!this._inIcu) {\n              // nested ICU messages should not be extracted but top-level translated as a whole\n              if (this._isInTranslatableSection) {\n                  this._addMessage([icu]);\n              }\n              this._inIcu = true;\n          }\n          var cases = visitAll(this, icu.cases, context);\n          if (this._mode === _VisitorMode.Merge) {\n              icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n          }\n          this._inIcu = wasInIcu;\n          return icu;\n      };\n      _Visitor.prototype.visitComment = function (comment, context) {\n          var isOpening = _isOpeningComment(comment);\n          if (isOpening && this._isInTranslatableSection) {\n              this._reportError(comment, 'Could not start a block inside a translatable section');\n              return;\n          }\n          var isClosing = _isClosingComment(comment);\n          if (isClosing && !this._inI18nBlock) {\n              this._reportError(comment, 'Trying to close an unopened block');\n              return;\n          }\n          if (!this._inI18nNode && !this._inIcu) {\n              if (!this._inI18nBlock) {\n                  if (isOpening) {\n                      this._inI18nBlock = true;\n                      this._blockStartDepth = this._depth;\n                      this._blockChildren = [];\n                      this._blockMeaningAndDesc = comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                      this._openTranslatableSection(comment);\n                  }\n              }\n              else {\n                  if (isClosing) {\n                      if (this._depth == this._blockStartDepth) {\n                          this._closeTranslatableSection(comment, this._blockChildren);\n                          this._inI18nBlock = false;\n                          var message = this._addMessage(this._blockChildren, this._blockMeaningAndDesc);\n                          // merge attributes in sections\n                          var nodes = this._translateMessage(comment, message);\n                          return visitAll(this, nodes);\n                      }\n                      else {\n                          this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                          return;\n                      }\n                  }\n              }\n          }\n      };\n      _Visitor.prototype.visitText = function (text, context) {\n          if (this._isInTranslatableSection) {\n              this._mayBeAddBlockChildren(text);\n          }\n          return text;\n      };\n      _Visitor.prototype.visitElement = function (el, context) {\n          var _this = this;\n          this._mayBeAddBlockChildren(el);\n          this._depth++;\n          var wasInI18nNode = this._inI18nNode;\n          var wasInImplicitNode = this._inImplicitNode;\n          var childNodes;\n          // Extract only top level nodes with the (implicit) \"i18n\" attribute if not in a block or an ICU\n          // message\n          var i18nAttr = _getI18nAttr(el);\n          var isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) &&\n              !this._inIcu && !this._isInTranslatableSection;\n          var isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n          this._inImplicitNode = this._inImplicitNode || isImplicit;\n          if (!this._isInTranslatableSection && !this._inIcu) {\n              if (i18nAttr) {\n                  // explicit translation\n                  this._inI18nNode = true;\n                  var message = this._addMessage(el.children, i18nAttr.value);\n                  childNodes = this._translateMessage(el, message);\n              }\n              else if (isTopLevelImplicit) {\n                  // implicit translation\n                  this._inI18nNode = true;\n                  var message = this._addMessage(el.children);\n                  childNodes = this._translateMessage(el, message);\n              }\n              if (this._mode == _VisitorMode.Extract) {\n                  var isTranslatable = i18nAttr || isTopLevelImplicit;\n                  if (isTranslatable) {\n                      this._openTranslatableSection(el);\n                  }\n                  visitAll(this, el.children);\n                  if (isTranslatable) {\n                      this._closeTranslatableSection(el, el.children);\n                  }\n              }\n              if (this._mode === _VisitorMode.Merge && !i18nAttr && !isTopLevelImplicit) {\n                  childNodes = [];\n                  el.children.forEach(function (child) {\n                      var visited = child.visit(_this, context);\n                      if (visited && !_this._isInTranslatableSection) {\n                          // Do not add the children from translatable sections (= i18n blocks here)\n                          // They will be added when the section is close (i.e. on `<!-- /i18n -->`)\n                          childNodes = childNodes.concat(visited);\n                      }\n                  });\n              }\n          }\n          else {\n              if (i18nAttr || isTopLevelImplicit) {\n                  this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n              }\n              if (this._mode == _VisitorMode.Extract) {\n                  // Descend into child nodes for extraction\n                  visitAll(this, el.children);\n              }\n              if (this._mode == _VisitorMode.Merge) {\n                  // Translate attributes in ICU messages\n                  childNodes = [];\n                  el.children.forEach(function (child) {\n                      var visited = child.visit(_this, context);\n                      if (visited && !_this._isInTranslatableSection) {\n                          // Do not add the children from translatable sections (= i18n blocks here)\n                          // They will be added when the section is close (i.e. on `<!-- /i18n -->`)\n                          childNodes = childNodes.concat(visited);\n                      }\n                  });\n              }\n          }\n          this._visitAttributesOf(el);\n          this._depth--;\n          this._inI18nNode = wasInI18nNode;\n          this._inImplicitNode = wasInImplicitNode;\n          if (this._mode === _VisitorMode.Merge) {\n              // There are no childNodes in translatable sections - those nodes will be replace anyway\n              var translatedAttrs = this._translateAttributes(el);\n              return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n          }\n      };\n      _Visitor.prototype.visitAttribute = function (attribute, context) {\n          throw new Error('unreachable code');\n      };\n      _Visitor.prototype._init = function (mode, interpolationConfig) {\n          this._mode = mode;\n          this._inI18nBlock = false;\n          this._inI18nNode = false;\n          this._depth = 0;\n          this._inIcu = false;\n          this._msgCountAtSectionStart = void 0;\n          this._errors = [];\n          this._messages = [];\n          this._inImplicitNode = false;\n          this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n      };\n      // looks for translatable attributes\n      _Visitor.prototype._visitAttributesOf = function (el) {\n          var _this = this;\n          var explicitAttrNameToValue = {};\n          var implicitAttrNames = this._implicitAttrs[el.name] || [];\n          el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n              .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n              attr.value; });\n          el.attrs.forEach(function (attr) {\n              if (attr.name in explicitAttrNameToValue) {\n                  _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n              }\n              else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                  _this._addMessage([attr]);\n              }\n          });\n      };\n      // add a translatable message\n      _Visitor.prototype._addMessage = function (ast, meaningAndDesc) {\n          if (ast.length == 0 ||\n              ast.length == 1 && ast[0] instanceof Attribute$1 && !ast[0].value) {\n              // Do not create empty messages\n              return;\n          }\n          var _a = _splitMeaningAndDesc(meaningAndDesc), meaning = _a[0], description = _a[1];\n          var message = this._createI18nMessage(ast, meaning, description);\n          this._messages.push(message);\n          return message;\n      };\n      // Translates the given message given the `TranslationBundle`\n      // no-op when called in extraction mode (returns [])\n      _Visitor.prototype._translateMessage = function (el, message) {\n          if (message && this._mode === _VisitorMode.Merge) {\n              var id = digestMessage(message);\n              var nodes = this._translations.get(id);\n              if (nodes) {\n                  return nodes;\n              }\n              this._reportError(el, \"Translation unavailable for message id=\\\"\" + id + \"\\\"\");\n          }\n          return [];\n      };\n      // translate the attributes of an element and remove i18n specific attributes\n      _Visitor.prototype._translateAttributes = function (el) {\n          var _this = this;\n          var attributes = el.attrs;\n          var i18nAttributeMeanings = {};\n          attributes.forEach(function (attr) {\n              if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                  i18nAttributeMeanings[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                      _splitMeaningAndDesc(attr.value)[0];\n              }\n          });\n          var translatedAttributes = [];\n          attributes.forEach(function (attr) {\n              if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                  // strip i18n specific attributes\n                  return;\n              }\n              if (attr.value && attr.value != '' && i18nAttributeMeanings.hasOwnProperty(attr.name)) {\n                  var meaning = i18nAttributeMeanings[attr.name];\n                  var message = _this._createI18nMessage([attr], meaning, '');\n                  var id = digestMessage(message);\n                  var nodes = _this._translations.get(id);\n                  if (nodes) {\n                      if (nodes[0] instanceof Text) {\n                          var value = nodes[0].value;\n                          translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                      }\n                      else {\n                          _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + id + \"\\\")\");\n                      }\n                  }\n                  else {\n                      _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + id + \"\\\")\");\n                  }\n              }\n              else {\n                  translatedAttributes.push(attr);\n              }\n          });\n          return translatedAttributes;\n      };\n      /**\n       * Add the node as a child of the block when:\n       * - we are in a block,\n       * - we are not inside a ICU message (those are handled separately),\n       * - the node is a \"direct child\" of the block\n       */\n      _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n          if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n              this._blockChildren.push(node);\n          }\n      };\n      /**\n       * Marks the start of a section, see `_endSection`\n       */\n      _Visitor.prototype._openTranslatableSection = function (node) {\n          if (this._isInTranslatableSection) {\n              this._reportError(node, 'Unexpected section start');\n          }\n          else {\n              this._msgCountAtSectionStart = this._messages.length;\n          }\n      };\n      Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n          /**\n           * A translatable section could be:\n           * - a translatable element,\n           * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n           */\n          get: function () {\n              return this._msgCountAtSectionStart !== void 0;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      /**\n       * Terminates a section.\n       *\n       * If a section has only one significant children (comments not significant) then we should not\n       * keep the message from this children:\n       *\n       * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n       * - one for the <p> content with meaning and description,\n       * - another one for the ICU message.\n       *\n       * In this case the last message is discarded as it contains less information (the AST is\n       * otherwise identical).\n       *\n       * Note that we should still keep messages extracted from attributes inside the section (ie in the\n       * ICU message here)\n       */\n      _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n          if (!this._isInTranslatableSection) {\n              this._reportError(node, 'Unexpected section end');\n              return;\n          }\n          var startIndex = this._msgCountAtSectionStart;\n          var significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n          if (significantChildren == 1) {\n              for (var i = this._messages.length - 1; i >= startIndex; i--) {\n                  var ast = this._messages[i].nodes;\n                  if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                      this._messages.splice(i, 1);\n                      break;\n                  }\n              }\n          }\n          this._msgCountAtSectionStart = void 0;\n      };\n      _Visitor.prototype._reportError = function (node, msg) {\n          this._errors.push(new I18nError(node.sourceSpan, msg));\n      };\n      return _Visitor;\n  }());\n  function _isOpeningComment(n) {\n      return n instanceof Comment && n.value && n.value.startsWith('i18n');\n  }\n  function _isClosingComment(n) {\n      return n instanceof Comment && n.value && n.value === '/i18n';\n  }\n  function _getI18nAttr(p) {\n      return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n  }\n  function _splitMeaningAndDesc(i18n) {\n      if (!i18n)\n          return ['', ''];\n      var pipeIndex = i18n.indexOf('|');\n      return pipeIndex == -1 ? ['', i18n] : [i18n.slice(0, pipeIndex), i18n.slice(pipeIndex + 1)];\n  }\n\n  /**\n   * A container for message extracted from the templates.\n   */\n  var MessageBundle = (function () {\n      function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs) {\n          this._htmlParser = _htmlParser;\n          this._implicitTags = _implicitTags;\n          this._implicitAttrs = _implicitAttrs;\n          this._messageMap = {};\n      }\n      MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n          var _this = this;\n          var htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n          if (htmlParserResult.errors.length) {\n              return htmlParserResult.errors;\n          }\n          var i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n          if (i18nParserResult.errors.length) {\n              return i18nParserResult.errors;\n          }\n          i18nParserResult.messages.forEach(function (message) { _this._messageMap[digestMessage(message)] = message; });\n      };\n      MessageBundle.prototype.getMessageMap = function () { return this._messageMap; };\n      MessageBundle.prototype.write = function (serializer) { return serializer.write(this._messageMap); };\n      return MessageBundle;\n  }());\n\n  var XmlTagDefinition = (function () {\n      function XmlTagDefinition() {\n          this.closedByParent = false;\n          this.contentType = TagContentType.PARSABLE_DATA;\n          this.isVoid = false;\n          this.ignoreFirstLf = false;\n          this.canSelfClose = true;\n      }\n      XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n      XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n      return XmlTagDefinition;\n  }());\n  var _TAG_DEFINITION = new XmlTagDefinition();\n  function getXmlTagDefinition(tagName) {\n      return _TAG_DEFINITION;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$6 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var XmlParser = (function (_super) {\n      __extends$6(XmlParser, _super);\n      function XmlParser() {\n          _super.call(this, getXmlTagDefinition);\n      }\n      XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n          return _super.prototype.parse.call(this, source, url, parseExpansionForms, null);\n      };\n      return XmlParser;\n  }(Parser$1));\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  // Generate a map of placeholder to content indexed by message ids\n  function extractPlaceholders(messageBundle) {\n      var messageMap = messageBundle.getMessageMap();\n      var placeholders = {};\n      Object.keys(messageMap).forEach(function (msgId) {\n          placeholders[msgId] = messageMap[msgId].placeholders;\n      });\n      return placeholders;\n  }\n  // Generate a map of placeholder to message ids indexed by message ids\n  function extractPlaceholderToIds(messageBundle) {\n      var messageMap = messageBundle.getMessageMap();\n      var placeholderToIds = {};\n      Object.keys(messageMap).forEach(function (msgId) {\n          placeholderToIds[msgId] = messageMap[msgId].placeholderToMsgIds;\n      });\n      return placeholderToIds;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$7 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var _Visitor$1 = (function () {\n      function _Visitor() {\n      }\n      _Visitor.prototype.visitTag = function (tag) {\n          var _this = this;\n          var strAttrs = this._serializeAttributes(tag.attrs);\n          if (tag.children.length == 0) {\n              return \"<\" + tag.name + strAttrs + \"/>\";\n          }\n          var strChildren = tag.children.map(function (node) { return node.visit(_this); });\n          return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n      };\n      _Visitor.prototype.visitText = function (text) { return text.value; };\n      _Visitor.prototype.visitDeclaration = function (decl) {\n          return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n      };\n      _Visitor.prototype._serializeAttributes = function (attrs) {\n          var strAttrs = Object.keys(attrs).map(function (name) { return (name + \"=\\\"\" + attrs[name] + \"\\\"\"); }).join(' ');\n          return strAttrs.length > 0 ? ' ' + strAttrs : '';\n      };\n      _Visitor.prototype.visitDoctype = function (doctype) {\n          return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n      };\n      return _Visitor;\n  }());\n  var _visitor = new _Visitor$1();\n  function serialize(nodes) {\n      return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n  }\n  var Declaration = (function () {\n      function Declaration(unescapedAttrs) {\n          var _this = this;\n          this.attrs = {};\n          Object.keys(unescapedAttrs).forEach(function (k) {\n              _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n          });\n      }\n      Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n      return Declaration;\n  }());\n  var Doctype = (function () {\n      function Doctype(rootTag, dtd) {\n          this.rootTag = rootTag;\n          this.dtd = dtd;\n      }\n      ;\n      Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n      return Doctype;\n  }());\n  var Tag = (function () {\n      function Tag(name, unescapedAttrs, children) {\n          var _this = this;\n          if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n          if (children === void 0) { children = []; }\n          this.name = name;\n          this.children = children;\n          this.attrs = {};\n          Object.keys(unescapedAttrs).forEach(function (k) {\n              _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n          });\n      }\n      Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n      return Tag;\n  }());\n  var Text$2 = (function () {\n      function Text(unescapedValue) {\n          this.value = _escapeXml(unescapedValue);\n      }\n      ;\n      Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n      return Text;\n  }());\n  var CR = (function (_super) {\n      __extends$7(CR, _super);\n      function CR(ws) {\n          if (ws === void 0) { ws = 0; }\n          _super.call(this, \"\\n\" + new Array(ws + 1).join(' '));\n      }\n      return CR;\n  }(Text$2));\n  var _ESCAPED_CHARS = [\n      [/&/g, '&amp;'],\n      [/\"/g, '&quot;'],\n      [/'/g, '&apos;'],\n      [/</g, '&lt;'],\n      [/>/g, '&gt;'],\n  ];\n  function _escapeXml(text) {\n      return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n  }\n\n  var _VERSION = '1.2';\n  var _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n  // TODO(vicb): make this a param (s/_/-/)\n  var _SOURCE_LANG = 'en';\n  var _PLACEHOLDER_TAG = 'x';\n  var _SOURCE_TAG = 'source';\n  var _TARGET_TAG = 'target';\n  var _UNIT_TAG = 'trans-unit';\n  // http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n  // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\n  var Xliff = (function () {\n      function Xliff(_htmlParser, _interpolationConfig) {\n          this._htmlParser = _htmlParser;\n          this._interpolationConfig = _interpolationConfig;\n      }\n      Xliff.prototype.write = function (messageMap) {\n          var visitor = new _WriteVisitor();\n          var transUnits = [];\n          Object.keys(messageMap).forEach(function (id) {\n              var message = messageMap[id];\n              var transUnit = new Tag(_UNIT_TAG, { id: id, datatype: 'html' });\n              transUnit.children.push(new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new CR(8), new Tag(_TARGET_TAG));\n              if (message.description) {\n                  transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n              }\n              if (message.meaning) {\n                  transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n              }\n              transUnit.children.push(new CR(6));\n              transUnits.push(new CR(6), transUnit);\n          });\n          var body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n          var file = new Tag('file', { 'source-language': _SOURCE_LANG, datatype: 'plaintext', original: 'ng2.template' }, [new CR(4), body, new CR(2)]);\n          var xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n          return serialize([\n              new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n          ]);\n      };\n      Xliff.prototype.load = function (content, url, messageBundle) {\n          var _this = this;\n          // Parse the xtb file into xml nodes\n          var result = new XmlParser().parse(content, url);\n          if (result.errors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + result.errors.join('\\n'));\n          }\n          // Replace the placeholders, messages are now string\n          var _a = new _LoadVisitor().parse(result.rootNodes, messageBundle), messages = _a.messages, errors = _a.errors;\n          if (errors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n          }\n          // Convert the string messages to html ast\n          // TODO(vicb): map error message back to the original message in xtb\n          var messageMap = {};\n          var parseErrors = [];\n          Object.keys(messages).forEach(function (id) {\n              var res = _this._htmlParser.parse(messages[id], url, true, _this._interpolationConfig);\n              parseErrors.push.apply(parseErrors, res.errors);\n              messageMap[id] = res.rootNodes;\n          });\n          if (parseErrors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + parseErrors.join('\\n'));\n          }\n          return messageMap;\n      };\n      return Xliff;\n  }());\n  var _WriteVisitor = (function () {\n      function _WriteVisitor() {\n      }\n      _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n      _WriteVisitor.prototype.visitContainer = function (container, context) {\n          var _this = this;\n          var nodes = [];\n          container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n          return nodes;\n      };\n      _WriteVisitor.prototype.visitIcu = function (icu, context) {\n          if (this._isInIcu) {\n              // nested ICU is not supported\n              throw new Error('xliff does not support nested ICU messages');\n          }\n          this._isInIcu = true;\n          // TODO(vicb): support ICU messages\n          // https://lists.oasis-open.org/archives/xliff/201201/msg00028.html\n          // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-po/xliff-profile-po-1.2-cd02.html\n          var nodes = [];\n          this._isInIcu = false;\n          return nodes;\n      };\n      _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n          var ctype = getCtypeForTag(ph.tag);\n          var startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n          if (ph.isVoid) {\n              // void tags have no children nor closing tags\n              return [startTagPh];\n          }\n          var closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n          return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n      };\n      _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n          return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n      };\n      _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n          return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n      };\n      _WriteVisitor.prototype.serialize = function (nodes) {\n          var _this = this;\n          this._isInIcu = false;\n          return ListWrapper.flatten(nodes.map(function (node) { return node.visit(_this); }));\n      };\n      return _WriteVisitor;\n  }());\n  // TODO(vicb): add error management (structure)\n  // TODO(vicb): factorize (xtb) ?\n  var _LoadVisitor = (function () {\n      function _LoadVisitor() {\n      }\n      _LoadVisitor.prototype.parse = function (nodes, messageBundle) {\n          var _this = this;\n          this._messageNodes = [];\n          this._translatedMessages = {};\n          this._msgId = '';\n          this._target = [];\n          this._errors = [];\n          // Find all messages\n          visitAll(this, nodes, null);\n          var messageMap = messageBundle.getMessageMap();\n          var placeholders = extractPlaceholders(messageBundle);\n          var placeholderToIds = extractPlaceholderToIds(messageBundle);\n          this._messageNodes\n              .filter(function (message) {\n              // Remove any messages that is not present in the source message bundle.\n              return messageMap.hasOwnProperty(message[0]);\n          })\n              .sort(function (a, b) {\n              // Because there could be no ICU placeholders inside an ICU message,\n              // we do not need to take into account the `placeholderToMsgIds` of the referenced\n              // messages, those would always be empty\n              // TODO(vicb): overkill - create 2 buckets and [...woDeps, ...wDeps].process()\n              if (Object.keys(messageMap[a[0]].placeholderToMsgIds).length == 0) {\n                  return -1;\n              }\n              if (Object.keys(messageMap[b[0]].placeholderToMsgIds).length == 0) {\n                  return 1;\n              }\n              return 0;\n          })\n              .forEach(function (message) {\n              var id = message[0];\n              _this._placeholders = placeholders[id] || {};\n              _this._placeholderToIds = placeholderToIds[id] || {};\n              // TODO(vicb): make sure there is no `_TRANSLATIONS_TAG` nor `_TRANSLATION_TAG`\n              _this._translatedMessages[id] = visitAll(_this, message[1]).join('');\n          });\n          return { messages: this._translatedMessages, errors: this._errors };\n      };\n      _LoadVisitor.prototype.visitElement = function (element, context) {\n          switch (element.name) {\n              case _UNIT_TAG:\n                  this._target = null;\n                  var msgId = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                  if (!msgId) {\n                      this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                  }\n                  else {\n                      this._msgId = msgId.value;\n                  }\n                  visitAll(this, element.children, null);\n                  if (this._msgId !== null) {\n                      this._messageNodes.push([this._msgId, this._target]);\n                  }\n                  break;\n              case _SOURCE_TAG:\n                  // ignore source message\n                  break;\n              case _TARGET_TAG:\n                  this._target = element.children;\n                  break;\n              case _PLACEHOLDER_TAG:\n                  var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                  if (!idAttr) {\n                      this._addError(element, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n                  }\n                  else {\n                      var id = idAttr.value;\n                      if (this._placeholders.hasOwnProperty(id)) {\n                          return this._placeholders[id];\n                      }\n                      if (this._placeholderToIds.hasOwnProperty(id) &&\n                          this._translatedMessages.hasOwnProperty(this._placeholderToIds[id])) {\n                          return this._translatedMessages[this._placeholderToIds[id]];\n                      }\n                      // TODO(vicb): better error message for when\n                      // !this._translatedMessages.hasOwnProperty(this._placeholderToIds[id])\n                      this._addError(element, \"The placeholder \\\"\" + id + \"\\\" does not exists in the source message\");\n                  }\n                  break;\n              default:\n                  visitAll(this, element.children, null);\n          }\n      };\n      _LoadVisitor.prototype.visitAttribute = function (attribute, context) {\n          throw new Error('unreachable code');\n      };\n      _LoadVisitor.prototype.visitText = function (text, context) { return text.value; };\n      _LoadVisitor.prototype.visitComment = function (comment, context) { return ''; };\n      _LoadVisitor.prototype.visitExpansion = function (expansion, context) {\n          throw new Error('unreachable code');\n      };\n      _LoadVisitor.prototype.visitExpansionCase = function (expansionCase, context) {\n          throw new Error('unreachable code');\n      };\n      _LoadVisitor.prototype._addError = function (node, message) {\n          this._errors.push(new I18nError(node.sourceSpan, message));\n      };\n      return _LoadVisitor;\n  }());\n  function getCtypeForTag(tag) {\n      switch (tag.toLowerCase()) {\n          case 'br':\n              return 'lb';\n          case 'img':\n              return 'image';\n          default:\n              return \"x-\" + tag;\n      }\n  }\n\n  var _MESSAGES_TAG = 'messagebundle';\n  var _MESSAGE_TAG = 'msg';\n  var _PLACEHOLDER_TAG$1 = 'ph';\n  var _EXEMPLE_TAG = 'ex';\n  var _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\n  var Xmb = (function () {\n      function Xmb() {\n      }\n      Xmb.prototype.write = function (messageMap) {\n          var visitor = new _Visitor$2();\n          var rootNode = new Tag(_MESSAGES_TAG);\n          Object.keys(messageMap).forEach(function (id) {\n              var message = messageMap[id];\n              var attrs = { id: id };\n              if (message.description) {\n                  attrs['desc'] = message.description;\n              }\n              if (message.meaning) {\n                  attrs['meaning'] = message.meaning;\n              }\n              rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, visitor.serialize(message.nodes)));\n          });\n          rootNode.children.push(new CR());\n          return serialize([\n              new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n              new CR(),\n              new Doctype(_MESSAGES_TAG, _DOCTYPE),\n              new CR(),\n              rootNode,\n              new CR(),\n          ]);\n      };\n      Xmb.prototype.load = function (content, url, messageBundle) {\n          throw new Error('Unsupported');\n      };\n      return Xmb;\n  }());\n  var _Visitor$2 = (function () {\n      function _Visitor() {\n      }\n      _Visitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n      _Visitor.prototype.visitContainer = function (container, context) {\n          var _this = this;\n          var nodes = [];\n          container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n          return nodes;\n      };\n      _Visitor.prototype.visitIcu = function (icu, context) {\n          var _this = this;\n          var nodes = [new Text$2(\"{\" + icu.expression + \", \" + icu.type + \", \")];\n          Object.keys(icu.cases).forEach(function (c) {\n              nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n          });\n          nodes.push(new Text$2(\"}\"));\n          return nodes;\n      };\n      _Visitor.prototype.visitTagPlaceholder = function (ph, context) {\n          var startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n          var startTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.startName }, [startEx]);\n          if (ph.isVoid) {\n              // void tags have no children nor closing tags\n              return [startTagPh];\n          }\n          var closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n          var closeTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.closeName }, [closeEx]);\n          return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n      };\n      _Visitor.prototype.visitPlaceholder = function (ph, context) {\n          return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n      };\n      _Visitor.prototype.visitIcuPlaceholder = function (ph, context) {\n          return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n      };\n      _Visitor.prototype.serialize = function (nodes) {\n          var _this = this;\n          return ListWrapper.flatten(nodes.map(function (node) { return node.visit(_this); }));\n      };\n      return _Visitor;\n  }());\n\n  var _TRANSLATIONS_TAG = 'translationbundle';\n  var _TRANSLATION_TAG = 'translation';\n  var _PLACEHOLDER_TAG$2 = 'ph';\n  var Xtb = (function () {\n      function Xtb(_htmlParser, _interpolationConfig) {\n          this._htmlParser = _htmlParser;\n          this._interpolationConfig = _interpolationConfig;\n      }\n      Xtb.prototype.write = function (messageMap) { throw new Error('Unsupported'); };\n      Xtb.prototype.load = function (content, url, messageBundle) {\n          var _this = this;\n          // Parse the xtb file into xml nodes\n          var result = new XmlParser().parse(content, url);\n          if (result.errors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + result.errors.join('\\n'));\n          }\n          // Replace the placeholders, messages are now string\n          var _a = new _Visitor$3().parse(result.rootNodes, messageBundle), messages = _a.messages, errors = _a.errors;\n          if (errors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n          }\n          // Convert the string messages to html ast\n          // TODO(vicb): map error message back to the original message in xtb\n          var messageMap = {};\n          var parseErrors = [];\n          Object.keys(messages).forEach(function (id) {\n              var res = _this._htmlParser.parse(messages[id], url, true, _this._interpolationConfig);\n              parseErrors.push.apply(parseErrors, res.errors);\n              messageMap[id] = res.rootNodes;\n          });\n          if (parseErrors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + parseErrors.join('\\n'));\n          }\n          return messageMap;\n      };\n      return Xtb;\n  }());\n  var _Visitor$3 = (function () {\n      function _Visitor() {\n      }\n      _Visitor.prototype.parse = function (nodes, messageBundle) {\n          var _this = this;\n          this._messageNodes = [];\n          this._translatedMessages = {};\n          this._bundleDepth = 0;\n          this._translationDepth = 0;\n          this._errors = [];\n          // Find all messages\n          visitAll(this, nodes, null);\n          var messageMap = messageBundle.getMessageMap();\n          var placeholders = extractPlaceholders(messageBundle);\n          var placeholderToIds = extractPlaceholderToIds(messageBundle);\n          this._messageNodes\n              .filter(function (message) {\n              // Remove any messages that is not present in the source message bundle.\n              return messageMap.hasOwnProperty(message[0]);\n          })\n              .sort(function (a, b) {\n              // Because there could be no ICU placeholders inside an ICU message,\n              // we do not need to take into account the `placeholderToMsgIds` of the referenced\n              // messages, those would always be empty\n              // TODO(vicb): overkill - create 2 buckets and [...woDeps, ...wDeps].process()\n              if (Object.keys(messageMap[a[0]].placeholderToMsgIds).length == 0) {\n                  return -1;\n              }\n              if (Object.keys(messageMap[b[0]].placeholderToMsgIds).length == 0) {\n                  return 1;\n              }\n              return 0;\n          })\n              .forEach(function (message) {\n              var id = message[0];\n              _this._placeholders = placeholders[id] || {};\n              _this._placeholderToIds = placeholderToIds[id] || {};\n              // TODO(vicb): make sure there is no `_TRANSLATIONS_TAG` nor `_TRANSLATION_TAG`\n              _this._translatedMessages[id] = visitAll(_this, message[1]).join('');\n          });\n          return { messages: this._translatedMessages, errors: this._errors };\n      };\n      _Visitor.prototype.visitElement = function (element, context) {\n          switch (element.name) {\n              case _TRANSLATIONS_TAG:\n                  this._bundleDepth++;\n                  if (this._bundleDepth > 1) {\n                      this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                  }\n                  visitAll(this, element.children, null);\n                  this._bundleDepth--;\n                  break;\n              case _TRANSLATION_TAG:\n                  this._translationDepth++;\n                  if (this._translationDepth > 1) {\n                      this._addError(element, \"<\" + _TRANSLATION_TAG + \"> elements can not be nested\");\n                  }\n                  var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                  if (!idAttr) {\n                      this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                  }\n                  else {\n                      // ICU placeholders are reference to other messages.\n                      // The referenced message might not have been decoded yet.\n                      // We need to have all messages available to make sure deps are decoded first.\n                      // TODO(vicb): report an error on duplicate id\n                      this._messageNodes.push([idAttr.value, element.children]);\n                  }\n                  this._translationDepth--;\n                  break;\n              case _PLACEHOLDER_TAG$2:\n                  var nameAttr = element.attrs.find(function (attr) { return attr.name === 'name'; });\n                  if (!nameAttr) {\n                      this._addError(element, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"name\\\" attribute\");\n                  }\n                  else {\n                      var name_1 = nameAttr.value;\n                      if (this._placeholders.hasOwnProperty(name_1)) {\n                          return this._placeholders[name_1];\n                      }\n                      if (this._placeholderToIds.hasOwnProperty(name_1) &&\n                          this._translatedMessages.hasOwnProperty(this._placeholderToIds[name_1])) {\n                          return this._translatedMessages[this._placeholderToIds[name_1]];\n                      }\n                      // TODO(vicb): better error message for when\n                      // !this._translatedMessages.hasOwnProperty(this._placeholderToIds[name])\n                      this._addError(element, \"The placeholder \\\"\" + name_1 + \"\\\" does not exists in the source message\");\n                  }\n                  break;\n              default:\n                  this._addError(element, 'Unexpected tag');\n          }\n      };\n      _Visitor.prototype.visitAttribute = function (attribute, context) {\n          throw new Error('unreachable code');\n      };\n      _Visitor.prototype.visitText = function (text, context) { return text.value; };\n      _Visitor.prototype.visitComment = function (comment, context) { return ''; };\n      _Visitor.prototype.visitExpansion = function (expansion, context) {\n          var _this = this;\n          var strCases = expansion.cases.map(function (c) { return c.visit(_this, null); });\n          return \"{\" + expansion.switchValue + \", \" + expansion.type + \", strCases.join(' ')}\";\n      };\n      _Visitor.prototype.visitExpansionCase = function (expansionCase, context) {\n          return expansionCase.value + \" {\" + visitAll(this, expansionCase.expression, null) + \"}\";\n      };\n      _Visitor.prototype._addError = function (node, message) {\n          this._errors.push(new I18nError(node.sourceSpan, message));\n      };\n      return _Visitor;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * A container for translated messages\n   */\n  var TranslationBundle = (function () {\n      function TranslationBundle(_messageMap) {\n          if (_messageMap === void 0) { _messageMap = {}; }\n          this._messageMap = _messageMap;\n      }\n      TranslationBundle.load = function (content, url, messageBundle, serializer) {\n          return new TranslationBundle(serializer.load(content, url, messageBundle));\n      };\n      TranslationBundle.prototype.get = function (id) { return this._messageMap[id]; };\n      TranslationBundle.prototype.has = function (id) { return id in this._messageMap; };\n      return TranslationBundle;\n  }());\n\n  var I18NHtmlParser = (function () {\n      // TODO(vicb): transB.load() should not need a msgB & add transB.resolve(msgB,\n      // interpolationConfig)\n      // TODO(vicb): remove the interpolationConfig from the Xtb serializer\n      function I18NHtmlParser(_htmlParser, _translations, _translationsFormat) {\n          this._htmlParser = _htmlParser;\n          this._translations = _translations;\n          this._translationsFormat = _translationsFormat;\n      }\n      I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n          if (!this._translations || this._translations === '') {\n              // Do not enable i18n when no translation bundle is provided\n              return parseResult;\n          }\n          // TODO(vicb): add support for implicit tags / attributes\n          var messageBundle = new MessageBundle(this._htmlParser, [], {});\n          var errors = messageBundle.updateFromTemplate(source, url, interpolationConfig);\n          if (errors && errors.length) {\n              return new ParseTreeResult(parseResult.rootNodes, parseResult.errors.concat(errors));\n          }\n          var serializer = this._createSerializer(interpolationConfig);\n          var translationBundle = TranslationBundle.load(this._translations, url, messageBundle, serializer);\n          return mergeTranslations(parseResult.rootNodes, translationBundle, interpolationConfig, [], {});\n      };\n      I18NHtmlParser.prototype._createSerializer = function (interpolationConfig) {\n          var format = (this._translationsFormat || 'xlf').toLowerCase();\n          switch (format) {\n              case 'xmb':\n                  return new Xmb();\n              case 'xtb':\n                  return new Xtb(this._htmlParser, interpolationConfig);\n              case 'xliff':\n              case 'xlf':\n              default:\n                  return new Xliff(this._htmlParser, interpolationConfig);\n          }\n      };\n      return I18NHtmlParser;\n  }());\n\n  var isDefaultChangeDetectionStrategy = _angular_core.__core_private__.isDefaultChangeDetectionStrategy;\n  var ChangeDetectorStatus = _angular_core.__core_private__.ChangeDetectorStatus;\n  var LifecycleHooks = _angular_core.__core_private__.LifecycleHooks;\n  var LIFECYCLE_HOOKS_VALUES = _angular_core.__core_private__.LIFECYCLE_HOOKS_VALUES;\n  var ReflectorReader = _angular_core.__core_private__.ReflectorReader;\n  var AppElement = _angular_core.__core_private__.AppElement;\n  var CodegenComponentFactoryResolver = _angular_core.__core_private__.CodegenComponentFactoryResolver;\n  var AppView = _angular_core.__core_private__.AppView;\n  var DebugAppView = _angular_core.__core_private__.DebugAppView;\n  var NgModuleInjector = _angular_core.__core_private__.NgModuleInjector;\n  var registerModuleFactory = _angular_core.__core_private__.registerModuleFactory;\n  var ViewType = _angular_core.__core_private__.ViewType;\n  var view_utils = _angular_core.__core_private__.view_utils;\n  var DebugContext = _angular_core.__core_private__.DebugContext;\n  var StaticNodeDebugInfo = _angular_core.__core_private__.StaticNodeDebugInfo;\n  var devModeEqual = _angular_core.__core_private__.devModeEqual;\n  var UNINITIALIZED = _angular_core.__core_private__.UNINITIALIZED;\n  var ValueUnwrapper = _angular_core.__core_private__.ValueUnwrapper;\n  var TemplateRef_ = _angular_core.__core_private__.TemplateRef_;\n  var Console = _angular_core.__core_private__.Console;\n  var reflector = _angular_core.__core_private__.reflector;\n  var Reflector = _angular_core.__core_private__.Reflector;\n  var ReflectionCapabilities = _angular_core.__core_private__.ReflectionCapabilities;\n  var NoOpAnimationPlayer = _angular_core.__core_private__.NoOpAnimationPlayer;\n  var AnimationSequencePlayer = _angular_core.__core_private__.AnimationSequencePlayer;\n  var AnimationGroupPlayer = _angular_core.__core_private__.AnimationGroupPlayer;\n  var AnimationKeyframe = _angular_core.__core_private__.AnimationKeyframe;\n  var AnimationStyles = _angular_core.__core_private__.AnimationStyles;\n  var ANY_STATE = _angular_core.__core_private__.ANY_STATE;\n  var DEFAULT_STATE = _angular_core.__core_private__.DEFAULT_STATE;\n  var EMPTY_ANIMATION_STATE = _angular_core.__core_private__.EMPTY_STATE;\n  var FILL_STYLE_FLAG = _angular_core.__core_private__.FILL_STYLE_FLAG;\n  var prepareFinalAnimationStyles = _angular_core.__core_private__.prepareFinalAnimationStyles;\n  var balanceAnimationKeyframes = _angular_core.__core_private__.balanceAnimationKeyframes;\n  var clearStyles = _angular_core.__core_private__.clearStyles;\n  var collectAndResolveStyles = _angular_core.__core_private__.collectAndResolveStyles;\n  var renderStyles = _angular_core.__core_private__.renderStyles;\n  var ComponentStillLoadingError = _angular_core.__core_private__.ComponentStillLoadingError;\n  var AnimationTransition = _angular_core.__core_private__.AnimationTransition;\n\n  var APP_VIEW_MODULE_URL = assetUrl('core', 'linker/view');\n  var VIEW_UTILS_MODULE_URL = assetUrl('core', 'linker/view_utils');\n  var CD_MODULE_URL = assetUrl('core', 'change_detection/change_detection');\n  var ANIMATION_STYLE_UTIL_ASSET_URL = assetUrl('core', 'animation/animation_style_util');\n  var Identifiers = (function () {\n      function Identifiers() {\n      }\n      Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n          name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n          moduleUrl: assetUrl('core', 'metadata/di'),\n          runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n      };\n      Identifiers.ViewUtils = {\n          name: 'ViewUtils',\n          moduleUrl: assetUrl('core', 'linker/view_utils'),\n          runtime: view_utils.ViewUtils\n      };\n      Identifiers.AppView = { name: 'AppView', moduleUrl: APP_VIEW_MODULE_URL, runtime: AppView };\n      Identifiers.DebugAppView = {\n          name: 'DebugAppView',\n          moduleUrl: APP_VIEW_MODULE_URL,\n          runtime: DebugAppView\n      };\n      Identifiers.AppElement = {\n          name: 'AppElement',\n          moduleUrl: assetUrl('core', 'linker/element'),\n          runtime: AppElement\n      };\n      Identifiers.ElementRef = {\n          name: 'ElementRef',\n          moduleUrl: assetUrl('core', 'linker/element_ref'),\n          runtime: _angular_core.ElementRef\n      };\n      Identifiers.ViewContainerRef = {\n          name: 'ViewContainerRef',\n          moduleUrl: assetUrl('core', 'linker/view_container_ref'),\n          runtime: _angular_core.ViewContainerRef\n      };\n      Identifiers.ChangeDetectorRef = {\n          name: 'ChangeDetectorRef',\n          moduleUrl: assetUrl('core', 'change_detection/change_detector_ref'),\n          runtime: _angular_core.ChangeDetectorRef\n      };\n      Identifiers.RenderComponentType = {\n          name: 'RenderComponentType',\n          moduleUrl: assetUrl('core', 'render/api'),\n          runtime: _angular_core.RenderComponentType\n      };\n      Identifiers.QueryList = {\n          name: 'QueryList',\n          moduleUrl: assetUrl('core', 'linker/query_list'),\n          runtime: _angular_core.QueryList\n      };\n      Identifiers.TemplateRef = {\n          name: 'TemplateRef',\n          moduleUrl: assetUrl('core', 'linker/template_ref'),\n          runtime: _angular_core.TemplateRef\n      };\n      Identifiers.TemplateRef_ = {\n          name: 'TemplateRef_',\n          moduleUrl: assetUrl('core', 'linker/template_ref'),\n          runtime: TemplateRef_\n      };\n      Identifiers.CodegenComponentFactoryResolver = {\n          name: 'CodegenComponentFactoryResolver',\n          moduleUrl: assetUrl('core', 'linker/component_factory_resolver'),\n          runtime: CodegenComponentFactoryResolver\n      };\n      Identifiers.ComponentFactoryResolver = {\n          name: 'ComponentFactoryResolver',\n          moduleUrl: assetUrl('core', 'linker/component_factory_resolver'),\n          runtime: _angular_core.ComponentFactoryResolver\n      };\n      Identifiers.ComponentFactory = {\n          name: 'ComponentFactory',\n          runtime: _angular_core.ComponentFactory,\n          moduleUrl: assetUrl('core', 'linker/component_factory')\n      };\n      Identifiers.NgModuleFactory = {\n          name: 'NgModuleFactory',\n          runtime: _angular_core.NgModuleFactory,\n          moduleUrl: assetUrl('core', 'linker/ng_module_factory')\n      };\n      Identifiers.NgModuleInjector = {\n          name: 'NgModuleInjector',\n          runtime: NgModuleInjector,\n          moduleUrl: assetUrl('core', 'linker/ng_module_factory')\n      };\n      Identifiers.RegisterModuleFactoryFn = {\n          name: 'registerModuleFactory',\n          runtime: registerModuleFactory,\n          moduleUrl: assetUrl('core', 'linker/ng_module_factory_loader')\n      };\n      Identifiers.ValueUnwrapper = { name: 'ValueUnwrapper', moduleUrl: CD_MODULE_URL, runtime: ValueUnwrapper };\n      Identifiers.Injector = {\n          name: 'Injector',\n          moduleUrl: assetUrl('core', 'di/injector'),\n          runtime: _angular_core.Injector\n      };\n      Identifiers.ViewEncapsulation = {\n          name: 'ViewEncapsulation',\n          moduleUrl: assetUrl('core', 'metadata/view'),\n          runtime: _angular_core.ViewEncapsulation\n      };\n      Identifiers.ViewType = {\n          name: 'ViewType',\n          moduleUrl: assetUrl('core', 'linker/view_type'),\n          runtime: ViewType\n      };\n      Identifiers.ChangeDetectionStrategy = {\n          name: 'ChangeDetectionStrategy',\n          moduleUrl: CD_MODULE_URL,\n          runtime: _angular_core.ChangeDetectionStrategy\n      };\n      Identifiers.StaticNodeDebugInfo = {\n          name: 'StaticNodeDebugInfo',\n          moduleUrl: assetUrl('core', 'linker/debug_context'),\n          runtime: StaticNodeDebugInfo\n      };\n      Identifiers.DebugContext = {\n          name: 'DebugContext',\n          moduleUrl: assetUrl('core', 'linker/debug_context'),\n          runtime: DebugContext\n      };\n      Identifiers.Renderer = {\n          name: 'Renderer',\n          moduleUrl: assetUrl('core', 'render/api'),\n          runtime: _angular_core.Renderer\n      };\n      Identifiers.SimpleChange = { name: 'SimpleChange', moduleUrl: CD_MODULE_URL, runtime: _angular_core.SimpleChange };\n      Identifiers.UNINITIALIZED = { name: 'UNINITIALIZED', moduleUrl: CD_MODULE_URL, runtime: UNINITIALIZED };\n      Identifiers.ChangeDetectorStatus = {\n          name: 'ChangeDetectorStatus',\n          moduleUrl: CD_MODULE_URL,\n          runtime: ChangeDetectorStatus\n      };\n      Identifiers.checkBinding = {\n          name: 'checkBinding',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.checkBinding\n      };\n      Identifiers.flattenNestedViewRenderNodes = {\n          name: 'flattenNestedViewRenderNodes',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.flattenNestedViewRenderNodes\n      };\n      Identifiers.devModeEqual = { name: 'devModeEqual', moduleUrl: CD_MODULE_URL, runtime: devModeEqual };\n      Identifiers.interpolate = {\n          name: 'interpolate',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.interpolate\n      };\n      Identifiers.castByValue = {\n          name: 'castByValue',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.castByValue\n      };\n      Identifiers.EMPTY_ARRAY = {\n          name: 'EMPTY_ARRAY',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.EMPTY_ARRAY\n      };\n      Identifiers.EMPTY_MAP = {\n          name: 'EMPTY_MAP',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.EMPTY_MAP\n      };\n      Identifiers.createRenderElement = {\n          name: 'createRenderElement',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.createRenderElement\n      };\n      Identifiers.selectOrCreateRenderHostElement = {\n          name: 'selectOrCreateRenderHostElement',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.selectOrCreateRenderHostElement\n      };\n      Identifiers.pureProxies = [\n          null,\n          { name: 'pureProxy1', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy1 },\n          { name: 'pureProxy2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy2 },\n          { name: 'pureProxy3', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy3 },\n          { name: 'pureProxy4', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy4 },\n          { name: 'pureProxy5', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy5 },\n          { name: 'pureProxy6', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy6 },\n          { name: 'pureProxy7', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy7 },\n          { name: 'pureProxy8', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy8 },\n          { name: 'pureProxy9', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy9 },\n          { name: 'pureProxy10', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy10 },\n      ];\n      Identifiers.SecurityContext = {\n          name: 'SecurityContext',\n          moduleUrl: assetUrl('core', 'security'),\n          runtime: _angular_core.SecurityContext,\n      };\n      Identifiers.AnimationKeyframe = {\n          name: 'AnimationKeyframe',\n          moduleUrl: assetUrl('core', 'animation/animation_keyframe'),\n          runtime: AnimationKeyframe\n      };\n      Identifiers.AnimationStyles = {\n          name: 'AnimationStyles',\n          moduleUrl: assetUrl('core', 'animation/animation_styles'),\n          runtime: AnimationStyles\n      };\n      Identifiers.NoOpAnimationPlayer = {\n          name: 'NoOpAnimationPlayer',\n          moduleUrl: assetUrl('core', 'animation/animation_player'),\n          runtime: NoOpAnimationPlayer\n      };\n      Identifiers.AnimationGroupPlayer = {\n          name: 'AnimationGroupPlayer',\n          moduleUrl: assetUrl('core', 'animation/animation_group_player'),\n          runtime: AnimationGroupPlayer\n      };\n      Identifiers.AnimationSequencePlayer = {\n          name: 'AnimationSequencePlayer',\n          moduleUrl: assetUrl('core', 'animation/animation_sequence_player'),\n          runtime: AnimationSequencePlayer\n      };\n      Identifiers.prepareFinalAnimationStyles = {\n          name: 'prepareFinalAnimationStyles',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: prepareFinalAnimationStyles\n      };\n      Identifiers.balanceAnimationKeyframes = {\n          name: 'balanceAnimationKeyframes',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: balanceAnimationKeyframes\n      };\n      Identifiers.clearStyles = {\n          name: 'clearStyles',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: clearStyles\n      };\n      Identifiers.renderStyles = {\n          name: 'renderStyles',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: renderStyles\n      };\n      Identifiers.collectAndResolveStyles = {\n          name: 'collectAndResolveStyles',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: collectAndResolveStyles\n      };\n      Identifiers.LOCALE_ID = {\n          name: 'LOCALE_ID',\n          moduleUrl: assetUrl('core', 'i18n/tokens'),\n          runtime: _angular_core.LOCALE_ID\n      };\n      Identifiers.TRANSLATIONS_FORMAT = {\n          name: 'TRANSLATIONS_FORMAT',\n          moduleUrl: assetUrl('core', 'i18n/tokens'),\n          runtime: _angular_core.TRANSLATIONS_FORMAT\n      };\n      Identifiers.setBindingDebugInfo = {\n          name: 'setBindingDebugInfo',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.setBindingDebugInfo\n      };\n      Identifiers.setBindingDebugInfoForChanges = {\n          name: 'setBindingDebugInfoForChanges',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.setBindingDebugInfoForChanges\n      };\n      Identifiers.AnimationTransition = {\n          name: 'AnimationTransition',\n          moduleUrl: assetUrl('core', 'animation/animation_transition'),\n          runtime: AnimationTransition\n      };\n      // This is just the interface!\n      Identifiers.InlineArray = { name: 'InlineArray', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: null };\n      Identifiers.inlineArrays = [\n          { name: 'InlineArray2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray2 },\n          { name: 'InlineArray2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray2 },\n          { name: 'InlineArray4', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray4 },\n          { name: 'InlineArray8', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray8 },\n          { name: 'InlineArray16', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray16 },\n      ];\n      Identifiers.EMPTY_INLINE_ARRAY = {\n          name: 'EMPTY_INLINE_ARRAY',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.EMPTY_INLINE_ARRAY\n      };\n      Identifiers.InlineArrayDynamic = {\n          name: 'InlineArrayDynamic',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.InlineArrayDynamic\n      };\n      return Identifiers;\n  }());\n  function assetUrl(pkg, path, type) {\n      if (path === void 0) { path = null; }\n      if (type === void 0) { type = 'src'; }\n      if (path == null) {\n          return \"asset:@angular/lib/\" + pkg + \"/index\";\n      }\n      else {\n          return \"asset:@angular/lib/\" + pkg + \"/src/\" + path;\n      }\n  }\n  function resolveIdentifier(identifier) {\n      return new CompileIdentifierMetadata({\n          name: identifier.name,\n          moduleUrl: identifier.moduleUrl,\n          reference: reflector.resolveIdentifier(identifier.name, identifier.moduleUrl, identifier.runtime)\n      });\n  }\n  function identifierToken(identifier) {\n      return new CompileTokenMetadata({ identifier: identifier });\n  }\n  function resolveIdentifierToken(identifier) {\n      return identifierToken(resolveIdentifier(identifier));\n  }\n  function resolveEnumIdentifier(enumType, name) {\n      var resolvedEnum = reflector.resolveEnum(enumType.reference, name);\n      return new CompileIdentifierMetadata({ name: enumType.name + \".\" + name, moduleUrl: enumType.moduleUrl, reference: resolvedEnum });\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$8 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var HtmlParser = (function (_super) {\n      __extends$8(HtmlParser, _super);\n      function HtmlParser() {\n          _super.call(this, getHtmlTagDefinition);\n      }\n      HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n      };\n      HtmlParser.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      HtmlParser.ctorParameters = [];\n      return HtmlParser;\n  }(Parser$1));\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$9 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  // http://cldr.unicode.org/index/cldr-spec/plural-rules\n  var PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n  /**\n   * Expands special forms into elements.\n   *\n   * For example,\n   *\n   * ```\n   * { messages.length, plural,\n   *   =0 {zero}\n   *   =1 {one}\n   *   other {more than one}\n   * }\n   * ```\n   *\n   * will be expanded into\n   *\n   * ```\n   * <ng-container [ngPlural]=\"messages.length\">\n   *   <template ngPluralCase=\"=0\">zero</ng-container>\n   *   <template ngPluralCase=\"=1\">one</ng-container>\n   *   <template ngPluralCase=\"other\">more than one</ng-container>\n   * </ng-container>\n   * ```\n   */\n  function expandNodes(nodes) {\n      var expander = new _Expander();\n      return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n  }\n  var ExpansionResult = (function () {\n      function ExpansionResult(nodes, expanded, errors) {\n          this.nodes = nodes;\n          this.expanded = expanded;\n          this.errors = errors;\n      }\n      return ExpansionResult;\n  }());\n  var ExpansionError = (function (_super) {\n      __extends$9(ExpansionError, _super);\n      function ExpansionError(span, errorMsg) {\n          _super.call(this, span, errorMsg);\n      }\n      return ExpansionError;\n  }(ParseError));\n  /**\n   * Expand expansion forms (plural, select) to directives\n   *\n   * @internal\n   */\n  var _Expander = (function () {\n      function _Expander() {\n          this.isExpanded = false;\n          this.errors = [];\n      }\n      _Expander.prototype.visitElement = function (element, context) {\n          return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n      };\n      _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n      _Expander.prototype.visitText = function (text, context) { return text; };\n      _Expander.prototype.visitComment = function (comment, context) { return comment; };\n      _Expander.prototype.visitExpansion = function (icu, context) {\n          this.isExpanded = true;\n          return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n              _expandDefaultForm(icu, this.errors);\n      };\n      _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n          throw new Error('Should not be reached');\n      };\n      return _Expander;\n  }());\n  function _expandPluralForm(ast, errors) {\n      var children = ast.cases.map(function (c) {\n          if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n              errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n          }\n          var expansionResult = expandNodes(c.expression);\n          errors.push.apply(errors, expansionResult.errors);\n          return new Element(\"template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n      });\n      var switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n      return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n  }\n  function _expandDefaultForm(ast, errors) {\n      var children = ast.cases.map(function (c) {\n          var expansionResult = expandNodes(c.expression);\n          errors.push.apply(errors, expansionResult.errors);\n          return new Element(\"template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n      });\n      var switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n      return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$10 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var ProviderError = (function (_super) {\n      __extends$10(ProviderError, _super);\n      function ProviderError(message, span) {\n          _super.call(this, span, message);\n      }\n      return ProviderError;\n  }(ParseError));\n  var ProviderViewContext = (function () {\n      function ProviderViewContext(component, sourceSpan) {\n          var _this = this;\n          this.component = component;\n          this.sourceSpan = sourceSpan;\n          this.errors = [];\n          this.viewQueries = _getViewQueries(component);\n          this.viewProviders = new Map();\n          _normalizeProviders(component.viewProviders, sourceSpan, this.errors).forEach(function (provider) {\n              if (isBlank(_this.viewProviders.get(provider.token.reference))) {\n                  _this.viewProviders.set(provider.token.reference, true);\n              }\n          });\n      }\n      return ProviderViewContext;\n  }());\n  var ProviderElementContext = (function () {\n      function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, _sourceSpan) {\n          var _this = this;\n          this.viewContext = viewContext;\n          this._parent = _parent;\n          this._isViewRoot = _isViewRoot;\n          this._directiveAsts = _directiveAsts;\n          this._sourceSpan = _sourceSpan;\n          this._transformedProviders = new Map();\n          this._seenProviders = new Map();\n          this._hasViewContainer = false;\n          this._attrs = {};\n          attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n          var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n          this._allProviders =\n              _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n          this._contentQueries = _getContentQueries(directivesMeta);\n          var queriedTokens = new Map();\n          MapWrapper.values(this._allProviders).forEach(function (provider) {\n              _this._addQueryReadsTo(provider.token, queriedTokens);\n          });\n          refs.forEach(function (refAst) {\n              _this._addQueryReadsTo(new CompileTokenMetadata({ value: refAst.name }), queriedTokens);\n          });\n          if (isPresent(queriedTokens.get(resolveIdentifierToken(Identifiers.ViewContainerRef).reference))) {\n              this._hasViewContainer = true;\n          }\n          // create the providers that we know are eager first\n          MapWrapper.values(this._allProviders).forEach(function (provider) {\n              var eager = provider.eager || isPresent(queriedTokens.get(provider.token.reference));\n              if (eager) {\n                  _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n              }\n          });\n      }\n      ProviderElementContext.prototype.afterElement = function () {\n          var _this = this;\n          // collect lazy providers\n          MapWrapper.values(this._allProviders).forEach(function (provider) {\n              _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n          });\n      };\n      Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n          get: function () { return MapWrapper.values(this._transformedProviders); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n          get: function () {\n              var sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n              var sortedDirectives = this._directiveAsts.slice();\n              sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                  sortedProviderTypes.indexOf(dir2.directive.type); });\n              return sortedDirectives;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n          get: function () { return this._hasViewContainer; },\n          enumerable: true,\n          configurable: true\n      });\n      ProviderElementContext.prototype._addQueryReadsTo = function (token, queryReadTokens) {\n          this._getQueriesFor(token).forEach(function (query) {\n              var queryReadToken = query.read || token;\n              if (isBlank(queryReadTokens.get(queryReadToken.reference))) {\n                  queryReadTokens.set(queryReadToken.reference, true);\n              }\n          });\n      };\n      ProviderElementContext.prototype._getQueriesFor = function (token) {\n          var result = [];\n          var currentEl = this;\n          var distance = 0;\n          var queries;\n          while (currentEl !== null) {\n              queries = currentEl._contentQueries.get(token.reference);\n              if (isPresent(queries)) {\n                  result.push.apply(result, queries.filter(function (query) { return query.descendants || distance <= 1; }));\n              }\n              if (currentEl._directiveAsts.length > 0) {\n                  distance++;\n              }\n              currentEl = currentEl._parent;\n          }\n          queries = this.viewContext.viewQueries.get(token.reference);\n          if (isPresent(queries)) {\n              result.push.apply(result, queries);\n          }\n          return result;\n      };\n      ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n          var _this = this;\n          var resolvedProvider = this._allProviders.get(token.reference);\n          if (!resolvedProvider || ((requestingProviderType === exports.ProviderAstType.Directive ||\n              requestingProviderType === exports.ProviderAstType.PublicService) &&\n              resolvedProvider.providerType === exports.ProviderAstType.PrivateService) ||\n              ((requestingProviderType === exports.ProviderAstType.PrivateService ||\n                  requestingProviderType === exports.ProviderAstType.PublicService) &&\n                  resolvedProvider.providerType === exports.ProviderAstType.Builtin)) {\n              return null;\n          }\n          var transformedProviderAst = this._transformedProviders.get(token.reference);\n          if (isPresent(transformedProviderAst)) {\n              return transformedProviderAst;\n          }\n          if (isPresent(this._seenProviders.get(token.reference))) {\n              this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + token.name, this._sourceSpan));\n              return null;\n          }\n          this._seenProviders.set(token.reference, true);\n          var transformedProviders = resolvedProvider.providers.map(function (provider) {\n              var transformedUseValue = provider.useValue;\n              var transformedUseExisting = provider.useExisting;\n              var transformedDeps;\n              if (isPresent(provider.useExisting)) {\n                  var existingDiDep = _this._getDependency(resolvedProvider.providerType, new CompileDiDependencyMetadata({ token: provider.useExisting }), eager);\n                  if (isPresent(existingDiDep.token)) {\n                      transformedUseExisting = existingDiDep.token;\n                  }\n                  else {\n                      transformedUseExisting = null;\n                      transformedUseValue = existingDiDep.value;\n                  }\n              }\n              else if (isPresent(provider.useFactory)) {\n                  var deps = provider.deps || provider.useFactory.diDeps;\n                  transformedDeps =\n                      deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n              }\n              else if (isPresent(provider.useClass)) {\n                  var deps = provider.deps || provider.useClass.diDeps;\n                  transformedDeps =\n                      deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n              }\n              return _transformProvider(provider, {\n                  useExisting: transformedUseExisting,\n                  useValue: transformedUseValue,\n                  deps: transformedDeps\n              });\n          });\n          transformedProviderAst =\n              _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n          this._transformedProviders.set(token.reference, transformedProviderAst);\n          return transformedProviderAst;\n      };\n      ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n          if (eager === void 0) { eager = null; }\n          if (dep.isAttribute) {\n              var attrValue = this._attrs[dep.token.value];\n              return new CompileDiDependencyMetadata({ isValue: true, value: attrValue == null ? null : attrValue });\n          }\n          if (isPresent(dep.query) || isPresent(dep.viewQuery)) {\n              return dep;\n          }\n          if (isPresent(dep.token)) {\n              // access builtints\n              if ((requestingProviderType === exports.ProviderAstType.Directive ||\n                  requestingProviderType === exports.ProviderAstType.Component)) {\n                  if (dep.token.reference === resolveIdentifierToken(Identifiers.Renderer).reference ||\n                      dep.token.reference === resolveIdentifierToken(Identifiers.ElementRef).reference ||\n                      dep.token.reference ===\n                          resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference ||\n                      dep.token.reference === resolveIdentifierToken(Identifiers.TemplateRef).reference) {\n                      return dep;\n                  }\n                  if (dep.token.reference ===\n                      resolveIdentifierToken(Identifiers.ViewContainerRef).reference) {\n                      this._hasViewContainer = true;\n                  }\n              }\n              // access the injector\n              if (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference) {\n                  return dep;\n              }\n              // access providers\n              if (isPresent(this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager))) {\n                  return dep;\n              }\n          }\n          return null;\n      };\n      ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n          if (eager === void 0) { eager = null; }\n          var currElement = this;\n          var currEager = eager;\n          var result = null;\n          if (!dep.isSkipSelf) {\n              result = this._getLocalDependency(requestingProviderType, dep, eager);\n          }\n          if (dep.isSelf) {\n              if (!result && dep.isOptional) {\n                  result = new CompileDiDependencyMetadata({ isValue: true, value: null });\n              }\n          }\n          else {\n              // check parent elements\n              while (!result && isPresent(currElement._parent)) {\n                  var prevElement = currElement;\n                  currElement = currElement._parent;\n                  if (prevElement._isViewRoot) {\n                      currEager = false;\n                  }\n                  result = currElement._getLocalDependency(exports.ProviderAstType.PublicService, dep, currEager);\n              }\n              // check @Host restriction\n              if (!result) {\n                  if (!dep.isHost || this.viewContext.component.type.isHost ||\n                      this.viewContext.component.type.reference === dep.token.reference ||\n                      isPresent(this.viewContext.viewProviders.get(dep.token.reference))) {\n                      result = dep;\n                  }\n                  else {\n                      result = dep.isOptional ?\n                          result = new CompileDiDependencyMetadata({ isValue: true, value: null }) :\n                          null;\n                  }\n              }\n          }\n          if (!result) {\n              this.viewContext.errors.push(new ProviderError(\"No provider for \" + dep.token.name, this._sourceSpan));\n          }\n          return result;\n      };\n      return ProviderElementContext;\n  }());\n  var NgModuleProviderAnalyzer = (function () {\n      function NgModuleProviderAnalyzer(ngModule, extraProviders, sourceSpan) {\n          var _this = this;\n          this._transformedProviders = new Map();\n          this._seenProviders = new Map();\n          this._errors = [];\n          this._allProviders = new Map();\n          var ngModuleTypes = ngModule.transitiveModule.modules.map(function (moduleMeta) { return moduleMeta.type; });\n          ngModuleTypes.forEach(function (ngModuleType) {\n              var ngModuleProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: ngModuleType }), useClass: ngModuleType });\n              _resolveProviders([ngModuleProvider], exports.ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n          });\n          _resolveProviders(_normalizeProviders(ngModule.transitiveModule.providers.concat(extraProviders), sourceSpan, this._errors), exports.ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n      }\n      NgModuleProviderAnalyzer.prototype.parse = function () {\n          var _this = this;\n          MapWrapper.values(this._allProviders).forEach(function (provider) {\n              _this._getOrCreateLocalProvider(provider.token, provider.eager);\n          });\n          if (this._errors.length > 0) {\n              var errorString = this._errors.join('\\n');\n              throw new Error(\"Provider parse errors:\\n\" + errorString);\n          }\n          return MapWrapper.values(this._transformedProviders);\n      };\n      NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n          var _this = this;\n          var resolvedProvider = this._allProviders.get(token.reference);\n          if (!resolvedProvider) {\n              return null;\n          }\n          var transformedProviderAst = this._transformedProviders.get(token.reference);\n          if (isPresent(transformedProviderAst)) {\n              return transformedProviderAst;\n          }\n          if (isPresent(this._seenProviders.get(token.reference))) {\n              this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + token.name, resolvedProvider.sourceSpan));\n              return null;\n          }\n          this._seenProviders.set(token.reference, true);\n          var transformedProviders = resolvedProvider.providers.map(function (provider) {\n              var transformedUseValue = provider.useValue;\n              var transformedUseExisting = provider.useExisting;\n              var transformedDeps;\n              if (isPresent(provider.useExisting)) {\n                  var existingDiDep = _this._getDependency(new CompileDiDependencyMetadata({ token: provider.useExisting }), eager, resolvedProvider.sourceSpan);\n                  if (isPresent(existingDiDep.token)) {\n                      transformedUseExisting = existingDiDep.token;\n                  }\n                  else {\n                      transformedUseExisting = null;\n                      transformedUseValue = existingDiDep.value;\n                  }\n              }\n              else if (isPresent(provider.useFactory)) {\n                  var deps = provider.deps || provider.useFactory.diDeps;\n                  transformedDeps =\n                      deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n              }\n              else if (isPresent(provider.useClass)) {\n                  var deps = provider.deps || provider.useClass.diDeps;\n                  transformedDeps =\n                      deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n              }\n              return _transformProvider(provider, {\n                  useExisting: transformedUseExisting,\n                  useValue: transformedUseValue,\n                  deps: transformedDeps\n              });\n          });\n          transformedProviderAst =\n              _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n          this._transformedProviders.set(token.reference, transformedProviderAst);\n          return transformedProviderAst;\n      };\n      NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n          if (eager === void 0) { eager = null; }\n          var foundLocal = false;\n          if (!dep.isSkipSelf && isPresent(dep.token)) {\n              // access the injector\n              if (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference ||\n                  dep.token.reference ===\n                      resolveIdentifierToken(Identifiers.ComponentFactoryResolver).reference) {\n                  foundLocal = true;\n              }\n              else if (isPresent(this._getOrCreateLocalProvider(dep.token, eager))) {\n                  foundLocal = true;\n              }\n          }\n          var result = dep;\n          if (dep.isSelf && !foundLocal) {\n              if (dep.isOptional) {\n                  result = new CompileDiDependencyMetadata({ isValue: true, value: null });\n              }\n              else {\n                  this._errors.push(new ProviderError(\"No provider for \" + dep.token.name, requestorSourceSpan));\n              }\n          }\n          return result;\n      };\n      return NgModuleProviderAnalyzer;\n  }());\n  function _transformProvider(provider, _a) {\n      var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n      return new CompileProviderMetadata({\n          token: provider.token,\n          useClass: provider.useClass,\n          useExisting: useExisting,\n          useFactory: provider.useFactory,\n          useValue: useValue,\n          deps: deps,\n          multi: provider.multi\n      });\n  }\n  function _transformProviderAst(provider, _a) {\n      var eager = _a.eager, providers = _a.providers;\n      return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n  }\n  function _normalizeProviders(providers, sourceSpan, targetErrors, targetProviders) {\n      if (targetProviders === void 0) { targetProviders = null; }\n      if (!targetProviders) {\n          targetProviders = [];\n      }\n      if (isPresent(providers)) {\n          providers.forEach(function (provider) {\n              if (Array.isArray(provider)) {\n                  _normalizeProviders(provider, sourceSpan, targetErrors, targetProviders);\n              }\n              else {\n                  var normalizeProvider = void 0;\n                  if (provider instanceof CompileProviderMetadata) {\n                      normalizeProvider = provider;\n                  }\n                  else if (provider instanceof CompileTypeMetadata) {\n                      normalizeProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: provider }), useClass: provider });\n                  }\n                  else {\n                      targetErrors.push(new ProviderError(\"Unknown provider type \" + provider, sourceSpan));\n                  }\n                  if (isPresent(normalizeProvider)) {\n                      targetProviders.push(normalizeProvider);\n                  }\n              }\n          });\n      }\n      return targetProviders;\n  }\n  function _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n      var providersByToken = new Map();\n      directives.forEach(function (directive) {\n          var dirProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: directive.type }), useClass: directive.type });\n          _resolveProviders([dirProvider], directive.isComponent ? exports.ProviderAstType.Component : exports.ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n      });\n      // Note: directives need to be able to overwrite providers of a component!\n      var directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n      directivesWithComponentFirst.forEach(function (directive) {\n          _resolveProviders(_normalizeProviders(directive.providers, sourceSpan, targetErrors), exports.ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n          _resolveProviders(_normalizeProviders(directive.viewProviders, sourceSpan, targetErrors), exports.ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n      });\n      return providersByToken;\n  }\n  function _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n      providers.forEach(function (provider) {\n          var resolvedProvider = targetProvidersByToken.get(provider.token.reference);\n          if (isPresent(resolvedProvider) && resolvedProvider.multiProvider !== provider.multi) {\n              targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + resolvedProvider.token.name, sourceSpan));\n          }\n          if (!resolvedProvider) {\n              var lifecycleHooks = provider.token.identifier && provider.token.identifier instanceof CompileTypeMetadata ?\n                  provider.token.identifier.lifecycleHooks :\n                  [];\n              resolvedProvider = new ProviderAst(provider.token, provider.multi, eager || lifecycleHooks.length > 0, [provider], providerType, lifecycleHooks, sourceSpan);\n              targetProvidersByToken.set(provider.token.reference, resolvedProvider);\n          }\n          else {\n              if (!provider.multi) {\n                  resolvedProvider.providers.length = 0;\n              }\n              resolvedProvider.providers.push(provider);\n          }\n      });\n  }\n  function _getViewQueries(component) {\n      var viewQueries = new Map();\n      if (isPresent(component.viewQueries)) {\n          component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, query); });\n      }\n      component.type.diDeps.forEach(function (dep) {\n          if (isPresent(dep.viewQuery)) {\n              _addQueryToTokenMap(viewQueries, dep.viewQuery);\n          }\n      });\n      return viewQueries;\n  }\n  function _getContentQueries(directives) {\n      var contentQueries = new Map();\n      directives.forEach(function (directive) {\n          if (isPresent(directive.queries)) {\n              directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, query); });\n          }\n          directive.type.diDeps.forEach(function (dep) {\n              if (isPresent(dep.query)) {\n                  _addQueryToTokenMap(contentQueries, dep.query);\n              }\n          });\n      });\n      return contentQueries;\n  }\n  function _addQueryToTokenMap(map, query) {\n      query.selectors.forEach(function (token) {\n          var entry = map.get(token.reference);\n          if (!entry) {\n              entry = [];\n              map.set(token.reference, entry);\n          }\n          entry.push(query);\n      });\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var ElementSchemaRegistry = (function () {\n      function ElementSchemaRegistry() {\n      }\n      return ElementSchemaRegistry;\n  }());\n\n  var StyleWithImports = (function () {\n      function StyleWithImports(style, styleUrls) {\n          this.style = style;\n          this.styleUrls = styleUrls;\n      }\n      return StyleWithImports;\n  }());\n  function isStyleUrlResolvable(url) {\n      if (isBlank(url) || url.length === 0 || url[0] == '/')\n          return false;\n      var schemeMatch = url.match(_urlWithSchemaRe);\n      return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n  }\n  /**\n   * Rewrites stylesheets by resolving and removing the @import urls that\n   * are either relative or don't have a `package:` scheme\n   */\n  function extractStyleUrls(resolver, baseUrl, cssText) {\n      var foundUrls = [];\n      var modifiedCssText = cssText.replace(_cssImportRe, function () {\n          var m = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              m[_i - 0] = arguments[_i];\n          }\n          var url = m[1] || m[2];\n          if (!isStyleUrlResolvable(url)) {\n              // Do not attempt to resolve non-package absolute URLs with URI scheme\n              return m[0];\n          }\n          foundUrls.push(resolver.resolve(baseUrl, url));\n          return '';\n      });\n      return new StyleWithImports(modifiedCssText, foundUrls);\n  }\n  var _cssImportRe = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\n  var _urlWithSchemaRe = /^([^:/?#]+):/;\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$11 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var PROPERTY_PARTS_SEPARATOR = '.';\n  var ATTRIBUTE_PREFIX = 'attr';\n  var CLASS_PREFIX = 'class';\n  var STYLE_PREFIX = 'style';\n  var ANIMATE_PROP_PREFIX = 'animate-';\n  var BoundPropertyType;\n  (function (BoundPropertyType) {\n      BoundPropertyType[BoundPropertyType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n      BoundPropertyType[BoundPropertyType[\"LITERAL_ATTR\"] = 1] = \"LITERAL_ATTR\";\n      BoundPropertyType[BoundPropertyType[\"ANIMATION\"] = 2] = \"ANIMATION\";\n  })(BoundPropertyType || (BoundPropertyType = {}));\n  /**\n   * Represents a parsed property.\n   */\n  var BoundProperty = (function () {\n      function BoundProperty(name, expression, type, sourceSpan) {\n          this.name = name;\n          this.expression = expression;\n          this.type = type;\n          this.sourceSpan = sourceSpan;\n      }\n      Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n          get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n          get: function () { return this.type === BoundPropertyType.ANIMATION; },\n          enumerable: true,\n          configurable: true\n      });\n      return BoundProperty;\n  }());\n  /**\n   * Parses bindings in templates and in the directive host area.\n   */\n  var BindingParser = (function () {\n      function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n          var _this = this;\n          this._exprParser = _exprParser;\n          this._interpolationConfig = _interpolationConfig;\n          this._schemaRegistry = _schemaRegistry;\n          this._targetErrors = _targetErrors;\n          this.pipesByName = new Map();\n          pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n      }\n      BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, sourceSpan) {\n          var _this = this;\n          if (dirMeta.hostProperties) {\n              var boundProps_1 = [];\n              Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                  var expression = dirMeta.hostProperties[propName];\n                  if (typeof expression === 'string') {\n                      _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                  }\n                  else {\n                      _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                  }\n              });\n              return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(dirMeta.selector, prop); });\n          }\n      };\n      BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n          var _this = this;\n          if (dirMeta.hostListeners) {\n              var targetEventAsts_1 = [];\n              Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                  var expression = dirMeta.hostListeners[propName];\n                  if (typeof expression === 'string') {\n                      _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                  }\n                  else {\n                      _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                  }\n              });\n              return targetEventAsts_1;\n          }\n      };\n      BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n          var sourceInfo = sourceSpan.start.toString();\n          try {\n              var ast = this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig);\n              if (ast)\n                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n              this._checkPipes(ast, sourceSpan);\n              if (ast &&\n                  ast.ast.expressions.length > view_utils.MAX_INTERPOLATION_VALUES) {\n                  throw new Error(\"Only support at most \" + view_utils.MAX_INTERPOLATION_VALUES + \" interpolation values!\");\n              }\n              return ast;\n          }\n          catch (e) {\n              this._reportError(\"\" + e, sourceSpan);\n              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n          }\n      };\n      BindingParser.prototype.parseInlineTemplateBinding = function (name, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n          var bindings = this._parseTemplateBindings(value, sourceSpan);\n          for (var i = 0; i < bindings.length; i++) {\n              var binding = bindings[i];\n              if (binding.keyIsVar) {\n                  targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n              }\n              else if (isPresent(binding.expression)) {\n                  this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n              }\n              else {\n                  targetMatchableAttrs.push([binding.key, '']);\n                  this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n              }\n          }\n      };\n      BindingParser.prototype._parseTemplateBindings = function (value, sourceSpan) {\n          var _this = this;\n          var sourceInfo = sourceSpan.start.toString();\n          try {\n              var bindingsResult = this._exprParser.parseTemplateBindings(value, sourceInfo);\n              this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n              bindingsResult.templateBindings.forEach(function (binding) {\n                  if (isPresent(binding.expression)) {\n                      _this._checkPipes(binding.expression, sourceSpan);\n                  }\n              });\n              bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, exports.ParseErrorLevel.WARNING); });\n              return bindingsResult.templateBindings;\n          }\n          catch (e) {\n              this._reportError(\"\" + e, sourceSpan);\n              return [];\n          }\n      };\n      BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n          if (_isAnimationLabel(name)) {\n              name = name.substring(1);\n              if (value) {\n                  this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                      \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, exports.ParseErrorLevel.FATAL);\n              }\n              this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n          }\n          else {\n              targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n          }\n      };\n      BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n          var isAnimationProp = false;\n          if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n              isAnimationProp = true;\n              name = name.substring(ANIMATE_PROP_PREFIX.length);\n          }\n          else if (_isAnimationLabel(name)) {\n              isAnimationProp = true;\n              name = name.substring(1);\n          }\n          if (isAnimationProp) {\n              this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n          }\n          else {\n              this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n          }\n      };\n      BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n          var expr = this.parseInterpolation(value, sourceSpan);\n          if (isPresent(expr)) {\n              this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n              return true;\n          }\n          return false;\n      };\n      BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n          targetMatchableAttrs.push([name, ast.source]);\n          targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n      };\n      BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n          // This will occur when a @trigger is not paired with an expression.\n          // For animations it is valid to not have an expression since */void\n          // states will be applied by angular when the element is attached/detached\n          var ast = this._parseBinding(expression || 'null', false, sourceSpan);\n          targetMatchableAttrs.push([name, ast.source]);\n          targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n      };\n      BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n          var sourceInfo = sourceSpan.start.toString();\n          try {\n              var ast = isHostBinding ?\n                  this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                  this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n              if (ast)\n                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n              this._checkPipes(ast, sourceSpan);\n              return ast;\n          }\n          catch (e) {\n              this._reportError(\"\" + e, sourceSpan);\n              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n          }\n      };\n      BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n          if (boundProp.isAnimation) {\n              return new BoundElementPropertyAst(boundProp.name, exports.PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, false, boundProp.expression, null, boundProp.sourceSpan);\n          }\n          var unit = null;\n          var bindingType;\n          var boundPropertyName;\n          var parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n          var securityContexts;\n          if (parts.length === 1) {\n              var partValue = parts[0];\n              boundPropertyName = this._schemaRegistry.getMappedPropName(partValue);\n              securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n              bindingType = exports.PropertyBindingType.Property;\n              this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n          }\n          else {\n              if (parts[0] == ATTRIBUTE_PREFIX) {\n                  boundPropertyName = parts[1];\n                  this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                  securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                  var nsSeparatorIdx = boundPropertyName.indexOf(':');\n                  if (nsSeparatorIdx > -1) {\n                      var ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                      var name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                      boundPropertyName = mergeNsAndName(ns, name_1);\n                  }\n                  bindingType = exports.PropertyBindingType.Attribute;\n              }\n              else if (parts[0] == CLASS_PREFIX) {\n                  boundPropertyName = parts[1];\n                  bindingType = exports.PropertyBindingType.Class;\n                  securityContexts = [_angular_core.SecurityContext.NONE];\n              }\n              else if (parts[0] == STYLE_PREFIX) {\n                  unit = parts.length > 2 ? parts[2] : null;\n                  boundPropertyName = parts[1];\n                  bindingType = exports.PropertyBindingType.Style;\n                  securityContexts = [_angular_core.SecurityContext.STYLE];\n              }\n              else {\n                  this._reportError(\"Invalid property name '\" + boundProp.name + \"'\", boundProp.sourceSpan);\n                  bindingType = null;\n                  securityContexts = [];\n              }\n          }\n          return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts.length === 1 ? securityContexts[0] : null, securityContexts.length > 1, boundProp.expression, unit, boundProp.sourceSpan);\n      };\n      BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n          if (_isAnimationLabel(name)) {\n              name = name.substr(1);\n              this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n          }\n          else {\n              this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n          }\n      };\n      BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n          var matches = splitAtPeriod(name, [name, '']);\n          var eventName = matches[0];\n          var phase = matches[1].toLowerCase();\n          if (phase) {\n              switch (phase) {\n                  case 'start':\n                  case 'done':\n                      var ast = this._parseAction(expression, sourceSpan);\n                      targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                      break;\n                  default:\n                      this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                      break;\n              }\n          }\n          else {\n              this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n          }\n      };\n      BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n          // long format: 'target: eventName'\n          var _a = splitAtColon(name, [null, name]), target = _a[0], eventName = _a[1];\n          var ast = this._parseAction(expression, sourceSpan);\n          targetMatchableAttrs.push([name, ast.source]);\n          targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n          // Don't detect directives for event names for now,\n          // so don't add the event name to the matchableAttrs\n      };\n      BindingParser.prototype._parseAction = function (value, sourceSpan) {\n          var sourceInfo = sourceSpan.start.toString();\n          try {\n              var ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n              if (ast) {\n                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n              }\n              if (!ast || ast.ast instanceof EmptyExpr) {\n                  this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                  return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n              }\n              this._checkPipes(ast, sourceSpan);\n              return ast;\n          }\n          catch (e) {\n              this._reportError(\"\" + e, sourceSpan);\n              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n          }\n      };\n      BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n          this._targetErrors.push(new ParseError(sourceSpan, message, level));\n      };\n      BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n          for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n              var error = errors_1[_i];\n              this._reportError(error.message, sourceSpan);\n          }\n      };\n      BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n          var _this = this;\n          if (isPresent(ast)) {\n              var collector = new PipeCollector();\n              ast.visit(collector);\n              collector.pipes.forEach(function (pipeName) {\n                  if (!_this.pipesByName.has(pipeName)) {\n                      _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", sourceSpan);\n                  }\n              });\n          }\n      };\n      /**\n       * @param propName the name of the property / attribute\n       * @param sourceSpan\n       * @param isAttr true when binding to an attribute\n       * @private\n       */\n      BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n          var report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n              this._schemaRegistry.validateProperty(propName);\n          if (report.error) {\n              this._reportError(report.msg, sourceSpan, exports.ParseErrorLevel.FATAL);\n          }\n      };\n      return BindingParser;\n  }());\n  var PipeCollector = (function (_super) {\n      __extends$11(PipeCollector, _super);\n      function PipeCollector() {\n          _super.apply(this, arguments);\n          this.pipes = new Set();\n      }\n      PipeCollector.prototype.visitPipe = function (ast, context) {\n          this.pipes.add(ast.name);\n          ast.exp.visit(this);\n          this.visitAll(ast.args, context);\n          return null;\n      };\n      return PipeCollector;\n  }(RecursiveAstVisitor));\n  function _isAnimationLabel(name) {\n      return name[0] == '@';\n  }\n  function calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n      var ctxs = [];\n      CssSelector.parse(selector).forEach(function (selector) {\n          var elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n          var notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n              .map(function (selector) { return selector.element; }));\n          var possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n          ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n      });\n      return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n  }\n\n  var NG_CONTENT_SELECT_ATTR = 'select';\n  var NG_CONTENT_ELEMENT = 'ng-content';\n  var LINK_ELEMENT = 'link';\n  var LINK_STYLE_REL_ATTR = 'rel';\n  var LINK_STYLE_HREF_ATTR = 'href';\n  var LINK_STYLE_REL_VALUE = 'stylesheet';\n  var STYLE_ELEMENT = 'style';\n  var SCRIPT_ELEMENT = 'script';\n  var NG_NON_BINDABLE_ATTR = 'ngNonBindable';\n  var NG_PROJECT_AS = 'ngProjectAs';\n  function preparseElement(ast) {\n      var selectAttr = null;\n      var hrefAttr = null;\n      var relAttr = null;\n      var nonBindable = false;\n      var projectAs = null;\n      ast.attrs.forEach(function (attr) {\n          var lcAttrName = attr.name.toLowerCase();\n          if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n              selectAttr = attr.value;\n          }\n          else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n              hrefAttr = attr.value;\n          }\n          else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n              relAttr = attr.value;\n          }\n          else if (attr.name == NG_NON_BINDABLE_ATTR) {\n              nonBindable = true;\n          }\n          else if (attr.name == NG_PROJECT_AS) {\n              if (attr.value.length > 0) {\n                  projectAs = attr.value;\n              }\n          }\n      });\n      selectAttr = normalizeNgContentSelect(selectAttr);\n      var nodeName = ast.name.toLowerCase();\n      var type = PreparsedElementType.OTHER;\n      if (splitNsName(nodeName)[1] == NG_CONTENT_ELEMENT) {\n          type = PreparsedElementType.NG_CONTENT;\n      }\n      else if (nodeName == STYLE_ELEMENT) {\n          type = PreparsedElementType.STYLE;\n      }\n      else if (nodeName == SCRIPT_ELEMENT) {\n          type = PreparsedElementType.SCRIPT;\n      }\n      else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n          type = PreparsedElementType.STYLESHEET;\n      }\n      return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n  }\n  var PreparsedElementType;\n  (function (PreparsedElementType) {\n      PreparsedElementType[PreparsedElementType[\"NG_CONTENT\"] = 0] = \"NG_CONTENT\";\n      PreparsedElementType[PreparsedElementType[\"STYLE\"] = 1] = \"STYLE\";\n      PreparsedElementType[PreparsedElementType[\"STYLESHEET\"] = 2] = \"STYLESHEET\";\n      PreparsedElementType[PreparsedElementType[\"SCRIPT\"] = 3] = \"SCRIPT\";\n      PreparsedElementType[PreparsedElementType[\"OTHER\"] = 4] = \"OTHER\";\n  })(PreparsedElementType || (PreparsedElementType = {}));\n  var PreparsedElement = (function () {\n      function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n          this.type = type;\n          this.selectAttr = selectAttr;\n          this.hrefAttr = hrefAttr;\n          this.nonBindable = nonBindable;\n          this.projectAs = projectAs;\n      }\n      return PreparsedElement;\n  }());\n  function normalizeNgContentSelect(selectAttr) {\n      if (selectAttr === null || selectAttr.length === 0) {\n          return '*';\n      }\n      return selectAttr;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  // Group 1 = \"bind-\"\n  // Group 2 = \"let-\"\n  // Group 3 = \"ref-/#\"\n  // Group 4 = \"on-\"\n  // Group 5 = \"bindon-\"\n  // Group 6 = \"@\"\n  // Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\n  // Group 8 = identifier inside [()]\n  // Group 9 = identifier inside []\n  // Group 10 = identifier inside ()\n  var BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n  var KW_BIND_IDX = 1;\n  var KW_LET_IDX = 2;\n  var KW_REF_IDX = 3;\n  var KW_ON_IDX = 4;\n  var KW_BINDON_IDX = 5;\n  var KW_AT_IDX = 6;\n  var IDENT_KW_IDX = 7;\n  var IDENT_BANANA_BOX_IDX = 8;\n  var IDENT_PROPERTY_IDX = 9;\n  var IDENT_EVENT_IDX = 10;\n  var TEMPLATE_ELEMENT = 'template';\n  var TEMPLATE_ATTR = 'template';\n  var TEMPLATE_ATTR_PREFIX = '*';\n  var CLASS_ATTR = 'class';\n  var TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n  /**\n   * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n   * parsed templates before compilation is invoked, allowing custom expression syntax\n   * and other advanced transformations.\n   *\n   * This is currently an internal-only feature and not meant for general use.\n   */\n  var TEMPLATE_TRANSFORMS = new _angular_core.OpaqueToken('TemplateTransforms');\n  var TemplateParseError = (function (_super) {\n      __extends(TemplateParseError, _super);\n      function TemplateParseError(message, span, level) {\n          _super.call(this, span, message, level);\n      }\n      return TemplateParseError;\n  }(ParseError));\n  var TemplateParseResult = (function () {\n      function TemplateParseResult(templateAst, errors) {\n          this.templateAst = templateAst;\n          this.errors = errors;\n      }\n      return TemplateParseResult;\n  }());\n  var TemplateParser = (function () {\n      function TemplateParser(_exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n          this._exprParser = _exprParser;\n          this._schemaRegistry = _schemaRegistry;\n          this._htmlParser = _htmlParser;\n          this._console = _console;\n          this.transforms = transforms;\n      }\n      TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n          var result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n          var warnings = result.errors.filter(function (error) { return error.level === exports.ParseErrorLevel.WARNING; });\n          var errors = result.errors.filter(function (error) { return error.level === exports.ParseErrorLevel.FATAL; });\n          if (warnings.length > 0) {\n              this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n          }\n          if (errors.length > 0) {\n              var errorString = errors.join('\\n');\n              throw new Error(\"Template parse errors:\\n\" + errorString);\n          }\n          return result.templateAst;\n      };\n      TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n          return this.tryParseHtml(this.expandHtml(this._htmlParser.parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, template, directives, pipes, schemas, templateUrl);\n      };\n      TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, template, directives, pipes, schemas, templateUrl) {\n          var result;\n          var errors = htmlAstWithErrors.errors;\n          if (htmlAstWithErrors.rootNodes.length > 0) {\n              var uniqDirectives = removeIdentifierDuplicates(directives);\n              var uniqPipes = removeIdentifierDuplicates(pipes);\n              var providerViewContext = new ProviderViewContext(component, htmlAstWithErrors.rootNodes[0].sourceSpan);\n              var interpolationConfig = void 0;\n              if (component.template && component.template.interpolation) {\n                  interpolationConfig = {\n                      start: component.template.interpolation[0],\n                      end: component.template.interpolation[1]\n                  };\n              }\n              var bindingParser = new BindingParser(this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n              var parseVisitor = new TemplateParseVisitor(providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n              result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n              errors.push.apply(errors, providerViewContext.errors);\n          }\n          else {\n              result = [];\n          }\n          this._assertNoReferenceDuplicationOnTemplate(result, errors);\n          if (errors.length > 0) {\n              return new TemplateParseResult(result, errors);\n          }\n          if (isPresent(this.transforms)) {\n              this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n          }\n          return new TemplateParseResult(result, errors);\n      };\n      TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n          if (forced === void 0) { forced = false; }\n          var errors = htmlAstWithErrors.errors;\n          if (errors.length == 0 || forced) {\n              // Transform ICU messages to angular directives\n              var expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n              errors.push.apply(errors, expandedHtmlAst.errors);\n              htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n          }\n          return htmlAstWithErrors;\n      };\n      TemplateParser.prototype.getInterpolationConfig = function (component) {\n          if (component.template) {\n              return InterpolationConfig.fromArray(component.template.interpolation);\n          }\n      };\n      /** @internal */\n      TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n          var existingReferences = [];\n          result.filter(function (element) { return !!element.references; })\n              .forEach(function (element) { return element.references.forEach(function (reference) {\n              var name = reference.name;\n              if (existingReferences.indexOf(name) < 0) {\n                  existingReferences.push(name);\n              }\n              else {\n                  var error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, exports.ParseErrorLevel.FATAL);\n                  errors.push(error);\n              }\n          }); });\n      };\n      TemplateParser.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      TemplateParser.ctorParameters = [\n          { type: Parser, },\n          { type: ElementSchemaRegistry, },\n          { type: I18NHtmlParser, },\n          { type: Console, },\n          { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n      ];\n      return TemplateParser;\n  }());\n  var TemplateParseVisitor = (function () {\n      function TemplateParseVisitor(providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n          var _this = this;\n          this.providerViewContext = providerViewContext;\n          this._bindingParser = _bindingParser;\n          this._schemaRegistry = _schemaRegistry;\n          this._schemas = _schemas;\n          this._targetErrors = _targetErrors;\n          this.selectorMatcher = new SelectorMatcher();\n          this.directivesIndex = new Map();\n          this.ngContentCount = 0;\n          directives.forEach(function (directive, index) {\n              var selector = CssSelector.parse(directive.selector);\n              _this.selectorMatcher.addSelectables(selector, directive);\n              _this.directivesIndex.set(directive, index);\n          });\n      }\n      TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n      TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n      TemplateParseVisitor.prototype.visitText = function (text, parent) {\n          var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n          var expr = this._bindingParser.parseInterpolation(text.value, text.sourceSpan);\n          if (isPresent(expr)) {\n              return new BoundTextAst(expr, ngContentIndex, text.sourceSpan);\n          }\n          else {\n              return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n          }\n      };\n      TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n          return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n      };\n      TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n      TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n          var _this = this;\n          var nodeName = element.name;\n          var preparsedElement = preparseElement(element);\n          if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n              preparsedElement.type === PreparsedElementType.STYLE) {\n              // Skipping <script> for security reasons\n              // Skipping <style> as we already processed them\n              // in the StyleCompiler\n              return null;\n          }\n          if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n              isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n              // Skipping stylesheets with either relative urls or package scheme as we already processed\n              // them in the StyleCompiler\n              return null;\n          }\n          var matchableAttrs = [];\n          var elementOrDirectiveProps = [];\n          var elementOrDirectiveRefs = [];\n          var elementVars = [];\n          var events = [];\n          var templateElementOrDirectiveProps = [];\n          var templateMatchableAttrs = [];\n          var templateElementVars = [];\n          var hasInlineTemplates = false;\n          var attrs = [];\n          var lcElName = splitNsName(nodeName.toLowerCase())[1];\n          var isTemplateElement = lcElName == TEMPLATE_ELEMENT;\n          element.attrs.forEach(function (attr) {\n              var hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n              var templateBindingsSource;\n              if (_this._normalizeAttributeName(attr.name) == TEMPLATE_ATTR) {\n                  templateBindingsSource = attr.value;\n              }\n              else if (attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                  var key = attr.name.substring(TEMPLATE_ATTR_PREFIX.length); // remove the star\n                  templateBindingsSource = (attr.value.length == 0) ? key : key + ' ' + attr.value;\n              }\n              var hasTemplateBinding = isPresent(templateBindingsSource);\n              if (hasTemplateBinding) {\n                  if (hasInlineTemplates) {\n                      _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                  }\n                  hasInlineTemplates = true;\n                  _this._bindingParser.parseInlineTemplateBinding(attr.name, templateBindingsSource, attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n              }\n              if (!hasBinding && !hasTemplateBinding) {\n                  // don't include the bindings as attributes as well in the AST\n                  attrs.push(_this.visitAttribute(attr, null));\n                  matchableAttrs.push([attr.name, attr.value]);\n              }\n          });\n          var elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n          var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n          var references = [];\n          var directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, element.sourceSpan, references);\n          var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directiveAsts);\n          var isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n          var providerContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs, references, element.sourceSpan);\n          var children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? parent.providerContext : providerContext));\n          providerContext.afterElement();\n          // Override the actual selector when the `ngProjectAs` attribute is provided\n          var projectionSelector = isPresent(preparsedElement.projectAs) ?\n              CssSelector.parse(preparsedElement.projectAs)[0] :\n              elementCssSelector;\n          var ngContentIndex = parent.findNgContentIndex(projectionSelector);\n          var parsedElement;\n          if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n              if (element.children && !element.children.every(_isEmptyTextNode)) {\n                  this._reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n              }\n              parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n          }\n          else if (isTemplateElement) {\n              this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n              this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, element.sourceSpan);\n              parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n          }\n          else {\n              this._assertElementExists(matchElement, element);\n              this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n              var ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n              parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan);\n              this._findComponentDirectives(directiveAsts)\n                  .forEach(function (componentDirectiveAst) { return _this._validateElementAnimationInputOutputs(componentDirectiveAst.hostProperties, componentDirectiveAst.hostEvents, componentDirectiveAst.directive.template); });\n              var componentTemplate = providerContext.viewContext.component.template;\n              this._validateElementAnimationInputOutputs(elementProps, events, componentTemplate);\n          }\n          if (hasInlineTemplates) {\n              var templateCssSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n              var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateCssSelector).directives;\n              var templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], element.sourceSpan, []);\n              var templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateDirectiveAsts);\n              this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, element.sourceSpan);\n              var templateProviderContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, parent.isTemplateElement, templateDirectiveAsts, [], [], element.sourceSpan);\n              templateProviderContext.afterElement();\n              parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, [parsedElement], ngContentIndex, element.sourceSpan);\n          }\n          return parsedElement;\n      };\n      TemplateParseVisitor.prototype._validateElementAnimationInputOutputs = function (inputs, outputs, template) {\n          var _this = this;\n          var triggerLookup = new Set();\n          template.animations.forEach(function (entry) { triggerLookup.add(entry.name); });\n          var animationInputs = inputs.filter(function (input) { return input.isAnimation; });\n          animationInputs.forEach(function (input) {\n              var name = input.name;\n              if (!triggerLookup.has(name)) {\n                  _this._reportError(\"Couldn't find an animation entry for \\\"\" + name + \"\\\"\", input.sourceSpan);\n              }\n          });\n          outputs.forEach(function (output) {\n              if (output.isAnimation) {\n                  var found = animationInputs.find(function (input) { return input.name == output.name; });\n                  if (!found) {\n                      _this._reportError(\"Unable to listen on (@\" + output.name + \".\" + output.phase + \") because the animation trigger [@\" + output.name + \"] isn't being used on the same element\", output.sourceSpan);\n                  }\n              }\n          });\n      };\n      TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n          var name = this._normalizeAttributeName(attr.name);\n          var value = attr.value;\n          var srcSpan = attr.sourceSpan;\n          var bindParts = name.match(BIND_NAME_REGEXP);\n          var hasBinding = false;\n          if (bindParts !== null) {\n              hasBinding = true;\n              if (isPresent(bindParts[KW_BIND_IDX])) {\n                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n              }\n              else if (bindParts[KW_LET_IDX]) {\n                  if (isTemplateElement) {\n                      var identifier = bindParts[IDENT_KW_IDX];\n                      this._parseVariable(identifier, value, srcSpan, targetVars);\n                  }\n                  else {\n                      this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                  }\n              }\n              else if (bindParts[KW_REF_IDX]) {\n                  var identifier = bindParts[IDENT_KW_IDX];\n                  this._parseReference(identifier, value, srcSpan, targetRefs);\n              }\n              else if (bindParts[KW_ON_IDX]) {\n                  this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n              }\n              else if (bindParts[KW_BINDON_IDX]) {\n                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                  this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n              }\n              else if (bindParts[KW_AT_IDX]) {\n                  this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n              }\n              else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                  this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n              }\n              else if (bindParts[IDENT_PROPERTY_IDX]) {\n                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n              }\n              else if (bindParts[IDENT_EVENT_IDX]) {\n                  this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n              }\n          }\n          else {\n              hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n          }\n          if (!hasBinding) {\n              this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n          }\n          return hasBinding;\n      };\n      TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n          return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n      };\n      TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n          if (identifier.indexOf('-') > -1) {\n              this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n          }\n          targetVars.push(new VariableAst(identifier, value, sourceSpan));\n      };\n      TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n          if (identifier.indexOf('-') > -1) {\n              this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n          }\n          targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n      };\n      TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n          this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n      };\n      TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n          var _this = this;\n          // Need to sort the directives so that we get consistent results throughout,\n          // as selectorMatcher uses Maps inside.\n          // Also deduplicate directives as they might match more than one time!\n          var directives = new Array(this.directivesIndex.size);\n          // Whether any directive selector matches on the element name\n          var matchElement = false;\n          selectorMatcher.match(elementCssSelector, function (selector, directive) {\n              directives[_this.directivesIndex.get(directive)] = directive;\n              matchElement = matchElement || selector.hasElementSelector();\n          });\n          return {\n              directives: directives.filter(function (dir) { return !!dir; }),\n              matchElement: matchElement,\n          };\n      };\n      TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences) {\n          var _this = this;\n          var matchedReferences = new Set();\n          var component = null;\n          var directiveAsts = directives.map(function (directive) {\n              var sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + directive.type.name);\n              if (directive.isComponent) {\n                  component = directive;\n              }\n              var directiveProperties = [];\n              var hostProperties = _this._bindingParser.createDirectiveHostPropertyAsts(directive, sourceSpan);\n              // Note: We need to check the host properties here as well,\n              // as we don't know the element name in the DirectiveWrapperCompiler yet.\n              _this._checkPropertiesInSchema(elementName, hostProperties);\n              var hostEvents = _this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n              _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);\n              elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                  if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                      (directive.exportAs == elOrDirRef.value)) {\n                      targetReferences.push(new ReferenceAst(elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n                      matchedReferences.add(elOrDirRef.name);\n                  }\n              });\n              return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, sourceSpan);\n          });\n          elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n              if (elOrDirRef.value.length > 0) {\n                  if (!matchedReferences.has(elOrDirRef.name)) {\n                      _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                  }\n              }\n              else if (!component) {\n                  var refToken = null;\n                  if (isTemplateElement) {\n                      refToken = resolveIdentifierToken(Identifiers.TemplateRef);\n                  }\n                  targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n              }\n          }); // fix syntax highlighting issue: `\n          return directiveAsts;\n      };\n      TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps) {\n          if (directiveProperties) {\n              var boundPropsByName_1 = new Map();\n              boundProps.forEach(function (boundProp) {\n                  var prevValue = boundPropsByName_1.get(boundProp.name);\n                  if (!prevValue || prevValue.isLiteral) {\n                      // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                      boundPropsByName_1.set(boundProp.name, boundProp);\n                  }\n              });\n              Object.keys(directiveProperties).forEach(function (dirProp) {\n                  var elProp = directiveProperties[dirProp];\n                  var boundProp = boundPropsByName_1.get(elProp);\n                  // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                  if (boundProp) {\n                      targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                  }\n              });\n          }\n      };\n      TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, directives) {\n          var _this = this;\n          var boundElementProps = [];\n          var boundDirectivePropsIndex = new Map();\n          directives.forEach(function (directive) {\n              directive.inputs.forEach(function (prop) {\n                  boundDirectivePropsIndex.set(prop.templateName, prop);\n              });\n          });\n          props.forEach(function (prop) {\n              if (!prop.isLiteral && !boundDirectivePropsIndex.get(prop.name)) {\n                  boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n              }\n          });\n          this._checkPropertiesInSchema(elementName, boundElementProps);\n          return boundElementProps;\n      };\n      TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n          return directives.filter(function (directive) { return directive.directive.isComponent; });\n      };\n      TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n          return this._findComponentDirectives(directives)\n              .map(function (directive) { return directive.directive.type.name; });\n      };\n      TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n          var componentTypeNames = this._findComponentDirectiveNames(directives);\n          if (componentTypeNames.length > 1) {\n              this._reportError(\"More than one component: \" + componentTypeNames.join(','), sourceSpan);\n          }\n      };\n      /**\n       * Make sure that non-angular tags conform to the schemas.\n       *\n       * Note: An element is considered an angular tag when at least one directive selector matches the\n       * tag name.\n       *\n       * @param matchElement Whether any directive has matched on the tag name\n       * @param element the html element\n       */\n      TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n          var elName = element.name.replace(/^:xhtml:/, '');\n          if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n              var errorMsg = (\"'\" + elName + \"' is not a known element:\\n\") +\n                  (\"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\") +\n                  (\"2. If '\" + elName + \"' is a Web Component then add \\\"CUSTOM_ELEMENTS_SCHEMA\\\" to the '@NgModule.schemas' of this component to suppress this message.\");\n              this._reportError(errorMsg, element.sourceSpan);\n          }\n      };\n      TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n          var _this = this;\n          var componentTypeNames = this._findComponentDirectiveNames(directives);\n          if (componentTypeNames.length > 0) {\n              this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n          }\n          elementProps.forEach(function (prop) {\n              _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"directives\\\" section.\", sourceSpan);\n          });\n      };\n      TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n          var _this = this;\n          var allDirectiveEvents = new Set();\n          directives.forEach(function (directive) {\n              Object.keys(directive.directive.outputs).forEach(function (k) {\n                  var eventName = directive.directive.outputs[k];\n                  allDirectiveEvents.add(eventName);\n              });\n          });\n          events.forEach(function (event) {\n              if (isPresent(event.target) || !allDirectiveEvents.has(event.name)) {\n                  _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"directives\\\" section.\", event.sourceSpan);\n              }\n          });\n      };\n      TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n          var _this = this;\n          boundProps.forEach(function (boundProp) {\n              if (boundProp.type === exports.PropertyBindingType.Property &&\n                  !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                  var errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                  if (elementName.indexOf('-') > -1) {\n                      errorMsg +=\n                          (\"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\") +\n                              (\"\\n2. If '\" + elementName + \"' is a Web Component then add \\\"CUSTOM_ELEMENTS_SCHEMA\\\" to the '@NgModule.schemas' of this component to suppress this message.\\n\");\n                  }\n                  _this._reportError(errorMsg, boundProp.sourceSpan);\n              }\n          });\n      };\n      TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n          this._targetErrors.push(new ParseError(sourceSpan, message, level));\n      };\n      return TemplateParseVisitor;\n  }());\n  var NonBindableVisitor = (function () {\n      function NonBindableVisitor() {\n      }\n      NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n          var preparsedElement = preparseElement(ast);\n          if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n              preparsedElement.type === PreparsedElementType.STYLE ||\n              preparsedElement.type === PreparsedElementType.STYLESHEET) {\n              // Skipping <script> for security reasons\n              // Skipping <style> and stylesheets as we already processed them\n              // in the StyleCompiler\n              return null;\n          }\n          var attrNameAndValues = ast.attrs.map(function (attrAst) { return [attrAst.name, attrAst.value]; });\n          var selector = createElementCssSelector(ast.name, attrNameAndValues);\n          var ngContentIndex = parent.findNgContentIndex(selector);\n          var children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n          return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n      };\n      NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n      NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n          return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n      };\n      NonBindableVisitor.prototype.visitText = function (text, parent) {\n          var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n          return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n      };\n      NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n      NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n      return NonBindableVisitor;\n  }());\n  var ElementOrDirectiveRef = (function () {\n      function ElementOrDirectiveRef(name, value, sourceSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      return ElementOrDirectiveRef;\n  }());\n  function splitClasses(classAttrValue) {\n      return classAttrValue.trim().split(/\\s+/g);\n  }\n  var ElementContext = (function () {\n      function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n          this.isTemplateElement = isTemplateElement;\n          this._ngContentIndexMatcher = _ngContentIndexMatcher;\n          this._wildcardNgContentIndex = _wildcardNgContentIndex;\n          this.providerContext = providerContext;\n      }\n      ElementContext.create = function (isTemplateElement, directives, providerContext) {\n          var matcher = new SelectorMatcher();\n          var wildcardNgContentIndex = null;\n          var component = directives.find(function (directive) { return directive.directive.isComponent; });\n          if (component) {\n              var ngContentSelectors = component.directive.template.ngContentSelectors;\n              for (var i = 0; i < ngContentSelectors.length; i++) {\n                  var selector = ngContentSelectors[i];\n                  if (selector === '*') {\n                      wildcardNgContentIndex = i;\n                  }\n                  else {\n                      matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                  }\n              }\n          }\n          return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n      };\n      ElementContext.prototype.findNgContentIndex = function (selector) {\n          var ngContentIndices = [];\n          this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n          ngContentIndices.sort();\n          if (isPresent(this._wildcardNgContentIndex)) {\n              ngContentIndices.push(this._wildcardNgContentIndex);\n          }\n          return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n      };\n      return ElementContext;\n  }());\n  function createElementCssSelector(elementName, matchableAttrs) {\n      var cssSelector = new CssSelector();\n      var elNameNoNs = splitNsName(elementName)[1];\n      cssSelector.setElement(elNameNoNs);\n      for (var i = 0; i < matchableAttrs.length; i++) {\n          var attrName = matchableAttrs[i][0];\n          var attrNameNoNs = splitNsName(attrName)[1];\n          var attrValue = matchableAttrs[i][1];\n          cssSelector.addAttribute(attrNameNoNs, attrValue);\n          if (attrName.toLowerCase() == CLASS_ATTR) {\n              var classes = splitClasses(attrValue);\n              classes.forEach(function (className) { return cssSelector.addClassName(className); });\n          }\n      }\n      return cssSelector;\n  }\n  var EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\n  var NON_BINDABLE_VISITOR = new NonBindableVisitor();\n  function _isEmptyTextNode(node) {\n      return node instanceof Text && node.value.trim().length == 0;\n  }\n\n  function unimplemented$1() {\n      throw new Error('unimplemented');\n  }\n  var CompilerConfig = (function () {\n      function CompilerConfig(_a) {\n          var _b = _a === void 0 ? {} : _a, _c = _b.renderTypes, renderTypes = _c === void 0 ? new DefaultRenderTypes() : _c, _d = _b.defaultEncapsulation, defaultEncapsulation = _d === void 0 ? _angular_core.ViewEncapsulation.Emulated : _d, genDebugInfo = _b.genDebugInfo, logBindingUpdate = _b.logBindingUpdate, _e = _b.useJit, useJit = _e === void 0 ? true : _e;\n          this.renderTypes = renderTypes;\n          this.defaultEncapsulation = defaultEncapsulation;\n          this._genDebugInfo = genDebugInfo;\n          this._logBindingUpdate = logBindingUpdate;\n          this.useJit = useJit;\n      }\n      Object.defineProperty(CompilerConfig.prototype, \"genDebugInfo\", {\n          get: function () {\n              return this._genDebugInfo === void 0 ? _angular_core.isDevMode() : this._genDebugInfo;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(CompilerConfig.prototype, \"logBindingUpdate\", {\n          get: function () {\n              return this._logBindingUpdate === void 0 ? _angular_core.isDevMode() : this._logBindingUpdate;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      return CompilerConfig;\n  }());\n  /**\n   * Types used for the renderer.\n   * Can be replaced to specialize the generated output to a specific renderer\n   * to help tree shaking.\n   */\n  var RenderTypes = (function () {\n      function RenderTypes() {\n      }\n      Object.defineProperty(RenderTypes.prototype, \"renderer\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderText\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderElement\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderComment\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderNode\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderEvent\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      return RenderTypes;\n  }());\n  var DefaultRenderTypes = (function () {\n      function DefaultRenderTypes() {\n          this.renderText = null;\n          this.renderElement = null;\n          this.renderComment = null;\n          this.renderNode = null;\n          this.renderEvent = null;\n      }\n      Object.defineProperty(DefaultRenderTypes.prototype, \"renderer\", {\n          get: function () { return resolveIdentifier(Identifiers.Renderer); },\n          enumerable: true,\n          configurable: true\n      });\n      ;\n      return DefaultRenderTypes;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$12 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  //// Types\n  var TypeModifier;\n  (function (TypeModifier) {\n      TypeModifier[TypeModifier[\"Const\"] = 0] = \"Const\";\n  })(TypeModifier || (TypeModifier = {}));\n  var Type$1 = (function () {\n      function Type(modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          this.modifiers = modifiers;\n          if (!modifiers) {\n              this.modifiers = [];\n          }\n      }\n      Type.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n      return Type;\n  }());\n  var BuiltinTypeName;\n  (function (BuiltinTypeName) {\n      BuiltinTypeName[BuiltinTypeName[\"Dynamic\"] = 0] = \"Dynamic\";\n      BuiltinTypeName[BuiltinTypeName[\"Bool\"] = 1] = \"Bool\";\n      BuiltinTypeName[BuiltinTypeName[\"String\"] = 2] = \"String\";\n      BuiltinTypeName[BuiltinTypeName[\"Int\"] = 3] = \"Int\";\n      BuiltinTypeName[BuiltinTypeName[\"Number\"] = 4] = \"Number\";\n      BuiltinTypeName[BuiltinTypeName[\"Function\"] = 5] = \"Function\";\n  })(BuiltinTypeName || (BuiltinTypeName = {}));\n  var BuiltinType = (function (_super) {\n      __extends$12(BuiltinType, _super);\n      function BuiltinType(name, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.name = name;\n      }\n      BuiltinType.prototype.visitType = function (visitor, context) {\n          return visitor.visitBuiltintType(this, context);\n      };\n      return BuiltinType;\n  }(Type$1));\n  var ExternalType = (function (_super) {\n      __extends$12(ExternalType, _super);\n      function ExternalType(value, typeParams, modifiers) {\n          if (typeParams === void 0) { typeParams = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.value = value;\n          this.typeParams = typeParams;\n      }\n      ExternalType.prototype.visitType = function (visitor, context) {\n          return visitor.visitExternalType(this, context);\n      };\n      return ExternalType;\n  }(Type$1));\n  var ArrayType = (function (_super) {\n      __extends$12(ArrayType, _super);\n      function ArrayType(of, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.of = of;\n      }\n      ArrayType.prototype.visitType = function (visitor, context) {\n          return visitor.visitArrayType(this, context);\n      };\n      return ArrayType;\n  }(Type$1));\n  var MapType = (function (_super) {\n      __extends$12(MapType, _super);\n      function MapType(valueType, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.valueType = valueType;\n      }\n      MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n      return MapType;\n  }(Type$1));\n  var DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\n  var BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\n  var INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\n  var NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\n  var STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\n  var FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n  ///// Expressions\n  var BinaryOperator;\n  (function (BinaryOperator) {\n      BinaryOperator[BinaryOperator[\"Equals\"] = 0] = \"Equals\";\n      BinaryOperator[BinaryOperator[\"NotEquals\"] = 1] = \"NotEquals\";\n      BinaryOperator[BinaryOperator[\"Identical\"] = 2] = \"Identical\";\n      BinaryOperator[BinaryOperator[\"NotIdentical\"] = 3] = \"NotIdentical\";\n      BinaryOperator[BinaryOperator[\"Minus\"] = 4] = \"Minus\";\n      BinaryOperator[BinaryOperator[\"Plus\"] = 5] = \"Plus\";\n      BinaryOperator[BinaryOperator[\"Divide\"] = 6] = \"Divide\";\n      BinaryOperator[BinaryOperator[\"Multiply\"] = 7] = \"Multiply\";\n      BinaryOperator[BinaryOperator[\"Modulo\"] = 8] = \"Modulo\";\n      BinaryOperator[BinaryOperator[\"And\"] = 9] = \"And\";\n      BinaryOperator[BinaryOperator[\"Or\"] = 10] = \"Or\";\n      BinaryOperator[BinaryOperator[\"Lower\"] = 11] = \"Lower\";\n      BinaryOperator[BinaryOperator[\"LowerEquals\"] = 12] = \"LowerEquals\";\n      BinaryOperator[BinaryOperator[\"Bigger\"] = 13] = \"Bigger\";\n      BinaryOperator[BinaryOperator[\"BiggerEquals\"] = 14] = \"BiggerEquals\";\n  })(BinaryOperator || (BinaryOperator = {}));\n  var Expression = (function () {\n      function Expression(type) {\n          this.type = type;\n      }\n      Expression.prototype.prop = function (name) { return new ReadPropExpr(this, name); };\n      Expression.prototype.key = function (index, type) {\n          if (type === void 0) { type = null; }\n          return new ReadKeyExpr(this, index, type);\n      };\n      Expression.prototype.callMethod = function (name, params) {\n          return new InvokeMethodExpr(this, name, params);\n      };\n      Expression.prototype.callFn = function (params) { return new InvokeFunctionExpr(this, params); };\n      Expression.prototype.instantiate = function (params, type) {\n          if (type === void 0) { type = null; }\n          return new InstantiateExpr(this, params, type);\n      };\n      Expression.prototype.conditional = function (trueCase, falseCase) {\n          if (falseCase === void 0) { falseCase = null; }\n          return new ConditionalExpr(this, trueCase, falseCase);\n      };\n      Expression.prototype.equals = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs);\n      };\n      Expression.prototype.notEquals = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs);\n      };\n      Expression.prototype.identical = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs);\n      };\n      Expression.prototype.notIdentical = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs);\n      };\n      Expression.prototype.minus = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs);\n      };\n      Expression.prototype.plus = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs);\n      };\n      Expression.prototype.divide = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs);\n      };\n      Expression.prototype.multiply = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs);\n      };\n      Expression.prototype.modulo = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs);\n      };\n      Expression.prototype.and = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.And, this, rhs);\n      };\n      Expression.prototype.or = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs);\n      };\n      Expression.prototype.lower = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs);\n      };\n      Expression.prototype.lowerEquals = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs);\n      };\n      Expression.prototype.bigger = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs);\n      };\n      Expression.prototype.biggerEquals = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs);\n      };\n      Expression.prototype.isBlank = function () {\n          // Note: We use equals by purpose here to compare to null and undefined in JS.\n          return this.equals(NULL_EXPR);\n      };\n      Expression.prototype.cast = function (type) { return new CastExpr(this, type); };\n      Expression.prototype.toStmt = function () { return new ExpressionStatement(this); };\n      return Expression;\n  }());\n  var BuiltinVar;\n  (function (BuiltinVar) {\n      BuiltinVar[BuiltinVar[\"This\"] = 0] = \"This\";\n      BuiltinVar[BuiltinVar[\"Super\"] = 1] = \"Super\";\n      BuiltinVar[BuiltinVar[\"CatchError\"] = 2] = \"CatchError\";\n      BuiltinVar[BuiltinVar[\"CatchStack\"] = 3] = \"CatchStack\";\n  })(BuiltinVar || (BuiltinVar = {}));\n  var ReadVarExpr = (function (_super) {\n      __extends$12(ReadVarExpr, _super);\n      function ReadVarExpr(name, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          if (typeof name === 'string') {\n              this.name = name;\n              this.builtin = null;\n          }\n          else {\n              this.name = null;\n              this.builtin = name;\n          }\n      }\n      ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitReadVarExpr(this, context);\n      };\n      ReadVarExpr.prototype.set = function (value) { return new WriteVarExpr(this.name, value); };\n      return ReadVarExpr;\n  }(Expression));\n  var WriteVarExpr = (function (_super) {\n      __extends$12(WriteVarExpr, _super);\n      function WriteVarExpr(name, value, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type || value.type);\n          this.name = name;\n          this.value = value;\n      }\n      WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitWriteVarExpr(this, context);\n      };\n      WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          return new DeclareVarStmt(this.name, this.value, type, modifiers);\n      };\n      return WriteVarExpr;\n  }(Expression));\n  var WriteKeyExpr = (function (_super) {\n      __extends$12(WriteKeyExpr, _super);\n      function WriteKeyExpr(receiver, index, value, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type || value.type);\n          this.receiver = receiver;\n          this.index = index;\n          this.value = value;\n      }\n      WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitWriteKeyExpr(this, context);\n      };\n      return WriteKeyExpr;\n  }(Expression));\n  var WritePropExpr = (function (_super) {\n      __extends$12(WritePropExpr, _super);\n      function WritePropExpr(receiver, name, value, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type || value.type);\n          this.receiver = receiver;\n          this.name = name;\n          this.value = value;\n      }\n      WritePropExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitWritePropExpr(this, context);\n      };\n      return WritePropExpr;\n  }(Expression));\n  var BuiltinMethod;\n  (function (BuiltinMethod) {\n      BuiltinMethod[BuiltinMethod[\"ConcatArray\"] = 0] = \"ConcatArray\";\n      BuiltinMethod[BuiltinMethod[\"SubscribeObservable\"] = 1] = \"SubscribeObservable\";\n      BuiltinMethod[BuiltinMethod[\"Bind\"] = 2] = \"Bind\";\n  })(BuiltinMethod || (BuiltinMethod = {}));\n  var InvokeMethodExpr = (function (_super) {\n      __extends$12(InvokeMethodExpr, _super);\n      function InvokeMethodExpr(receiver, method, args, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.receiver = receiver;\n          this.args = args;\n          if (typeof method === 'string') {\n              this.name = method;\n              this.builtin = null;\n          }\n          else {\n              this.name = null;\n              this.builtin = method;\n          }\n      }\n      InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitInvokeMethodExpr(this, context);\n      };\n      return InvokeMethodExpr;\n  }(Expression));\n  var InvokeFunctionExpr = (function (_super) {\n      __extends$12(InvokeFunctionExpr, _super);\n      function InvokeFunctionExpr(fn, args, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.fn = fn;\n          this.args = args;\n      }\n      InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitInvokeFunctionExpr(this, context);\n      };\n      return InvokeFunctionExpr;\n  }(Expression));\n  var InstantiateExpr = (function (_super) {\n      __extends$12(InstantiateExpr, _super);\n      function InstantiateExpr(classExpr, args, type) {\n          _super.call(this, type);\n          this.classExpr = classExpr;\n          this.args = args;\n      }\n      InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitInstantiateExpr(this, context);\n      };\n      return InstantiateExpr;\n  }(Expression));\n  var LiteralExpr = (function (_super) {\n      __extends$12(LiteralExpr, _super);\n      function LiteralExpr(value, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.value = value;\n      }\n      LiteralExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitLiteralExpr(this, context);\n      };\n      return LiteralExpr;\n  }(Expression));\n  var ExternalExpr = (function (_super) {\n      __extends$12(ExternalExpr, _super);\n      function ExternalExpr(value, type, typeParams) {\n          if (type === void 0) { type = null; }\n          if (typeParams === void 0) { typeParams = null; }\n          _super.call(this, type);\n          this.value = value;\n          this.typeParams = typeParams;\n      }\n      ExternalExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitExternalExpr(this, context);\n      };\n      return ExternalExpr;\n  }(Expression));\n  var ConditionalExpr = (function (_super) {\n      __extends$12(ConditionalExpr, _super);\n      function ConditionalExpr(condition, trueCase, falseCase, type) {\n          if (falseCase === void 0) { falseCase = null; }\n          if (type === void 0) { type = null; }\n          _super.call(this, type || trueCase.type);\n          this.condition = condition;\n          this.falseCase = falseCase;\n          this.trueCase = trueCase;\n      }\n      ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitConditionalExpr(this, context);\n      };\n      return ConditionalExpr;\n  }(Expression));\n  var NotExpr = (function (_super) {\n      __extends$12(NotExpr, _super);\n      function NotExpr(condition) {\n          _super.call(this, BOOL_TYPE);\n          this.condition = condition;\n      }\n      NotExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitNotExpr(this, context);\n      };\n      return NotExpr;\n  }(Expression));\n  var CastExpr = (function (_super) {\n      __extends$12(CastExpr, _super);\n      function CastExpr(value, type) {\n          _super.call(this, type);\n          this.value = value;\n      }\n      CastExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitCastExpr(this, context);\n      };\n      return CastExpr;\n  }(Expression));\n  var FnParam = (function () {\n      function FnParam(name, type) {\n          if (type === void 0) { type = null; }\n          this.name = name;\n          this.type = type;\n      }\n      return FnParam;\n  }());\n  var FunctionExpr = (function (_super) {\n      __extends$12(FunctionExpr, _super);\n      function FunctionExpr(params, statements, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.params = params;\n          this.statements = statements;\n      }\n      FunctionExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitFunctionExpr(this, context);\n      };\n      FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers);\n      };\n      return FunctionExpr;\n  }(Expression));\n  var BinaryOperatorExpr = (function (_super) {\n      __extends$12(BinaryOperatorExpr, _super);\n      function BinaryOperatorExpr(operator, lhs, rhs, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type || lhs.type);\n          this.operator = operator;\n          this.rhs = rhs;\n          this.lhs = lhs;\n      }\n      BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitBinaryOperatorExpr(this, context);\n      };\n      return BinaryOperatorExpr;\n  }(Expression));\n  var ReadPropExpr = (function (_super) {\n      __extends$12(ReadPropExpr, _super);\n      function ReadPropExpr(receiver, name, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.receiver = receiver;\n          this.name = name;\n      }\n      ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitReadPropExpr(this, context);\n      };\n      ReadPropExpr.prototype.set = function (value) {\n          return new WritePropExpr(this.receiver, this.name, value);\n      };\n      return ReadPropExpr;\n  }(Expression));\n  var ReadKeyExpr = (function (_super) {\n      __extends$12(ReadKeyExpr, _super);\n      function ReadKeyExpr(receiver, index, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.receiver = receiver;\n          this.index = index;\n      }\n      ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitReadKeyExpr(this, context);\n      };\n      ReadKeyExpr.prototype.set = function (value) {\n          return new WriteKeyExpr(this.receiver, this.index, value);\n      };\n      return ReadKeyExpr;\n  }(Expression));\n  var LiteralArrayExpr = (function (_super) {\n      __extends$12(LiteralArrayExpr, _super);\n      function LiteralArrayExpr(entries, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.entries = entries;\n      }\n      LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitLiteralArrayExpr(this, context);\n      };\n      return LiteralArrayExpr;\n  }(Expression));\n  var LiteralMapExpr = (function (_super) {\n      __extends$12(LiteralMapExpr, _super);\n      function LiteralMapExpr(entries, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.entries = entries;\n          this.valueType = null;\n          if (isPresent(type)) {\n              this.valueType = type.valueType;\n          }\n      }\n      LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitLiteralMapExpr(this, context);\n      };\n      return LiteralMapExpr;\n  }(Expression));\n  var THIS_EXPR = new ReadVarExpr(BuiltinVar.This);\n  var SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super);\n  var CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError);\n  var CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack);\n  var NULL_EXPR = new LiteralExpr(null, null);\n  //// Statements\n  var StmtModifier;\n  (function (StmtModifier) {\n      StmtModifier[StmtModifier[\"Final\"] = 0] = \"Final\";\n      StmtModifier[StmtModifier[\"Private\"] = 1] = \"Private\";\n  })(StmtModifier || (StmtModifier = {}));\n  var Statement = (function () {\n      function Statement(modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          this.modifiers = modifiers;\n          if (!modifiers) {\n              this.modifiers = [];\n          }\n      }\n      Statement.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n      return Statement;\n  }());\n  var DeclareVarStmt = (function (_super) {\n      __extends$12(DeclareVarStmt, _super);\n      function DeclareVarStmt(name, value, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.name = name;\n          this.value = value;\n          this.type = type || value.type;\n      }\n      DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitDeclareVarStmt(this, context);\n      };\n      return DeclareVarStmt;\n  }(Statement));\n  var DeclareFunctionStmt = (function (_super) {\n      __extends$12(DeclareFunctionStmt, _super);\n      function DeclareFunctionStmt(name, params, statements, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.name = name;\n          this.params = params;\n          this.statements = statements;\n          this.type = type;\n      }\n      DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitDeclareFunctionStmt(this, context);\n      };\n      return DeclareFunctionStmt;\n  }(Statement));\n  var ExpressionStatement = (function (_super) {\n      __extends$12(ExpressionStatement, _super);\n      function ExpressionStatement(expr) {\n          _super.call(this);\n          this.expr = expr;\n      }\n      ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitExpressionStmt(this, context);\n      };\n      return ExpressionStatement;\n  }(Statement));\n  var ReturnStatement = (function (_super) {\n      __extends$12(ReturnStatement, _super);\n      function ReturnStatement(value) {\n          _super.call(this);\n          this.value = value;\n      }\n      ReturnStatement.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitReturnStmt(this, context);\n      };\n      return ReturnStatement;\n  }(Statement));\n  var AbstractClassPart = (function () {\n      function AbstractClassPart(type, modifiers) {\n          if (type === void 0) { type = null; }\n          this.type = type;\n          this.modifiers = modifiers;\n          if (!modifiers) {\n              this.modifiers = [];\n          }\n      }\n      AbstractClassPart.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n      return AbstractClassPart;\n  }());\n  var ClassField = (function (_super) {\n      __extends$12(ClassField, _super);\n      function ClassField(name, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, type, modifiers);\n          this.name = name;\n      }\n      return ClassField;\n  }(AbstractClassPart));\n  var ClassMethod = (function (_super) {\n      __extends$12(ClassMethod, _super);\n      function ClassMethod(name, params, body, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, type, modifiers);\n          this.name = name;\n          this.params = params;\n          this.body = body;\n      }\n      return ClassMethod;\n  }(AbstractClassPart));\n  var ClassGetter = (function (_super) {\n      __extends$12(ClassGetter, _super);\n      function ClassGetter(name, body, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, type, modifiers);\n          this.name = name;\n          this.body = body;\n      }\n      return ClassGetter;\n  }(AbstractClassPart));\n  var ClassStmt = (function (_super) {\n      __extends$12(ClassStmt, _super);\n      function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.name = name;\n          this.parent = parent;\n          this.fields = fields;\n          this.getters = getters;\n          this.constructorMethod = constructorMethod;\n          this.methods = methods;\n      }\n      ClassStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitDeclareClassStmt(this, context);\n      };\n      return ClassStmt;\n  }(Statement));\n  var IfStmt = (function (_super) {\n      __extends$12(IfStmt, _super);\n      function IfStmt(condition, trueCase, falseCase) {\n          if (falseCase === void 0) { falseCase = []; }\n          _super.call(this);\n          this.condition = condition;\n          this.trueCase = trueCase;\n          this.falseCase = falseCase;\n      }\n      IfStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitIfStmt(this, context);\n      };\n      return IfStmt;\n  }(Statement));\n  var CommentStmt = (function (_super) {\n      __extends$12(CommentStmt, _super);\n      function CommentStmt(comment) {\n          _super.call(this);\n          this.comment = comment;\n      }\n      CommentStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitCommentStmt(this, context);\n      };\n      return CommentStmt;\n  }(Statement));\n  var TryCatchStmt = (function (_super) {\n      __extends$12(TryCatchStmt, _super);\n      function TryCatchStmt(bodyStmts, catchStmts) {\n          _super.call(this);\n          this.bodyStmts = bodyStmts;\n          this.catchStmts = catchStmts;\n      }\n      TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitTryCatchStmt(this, context);\n      };\n      return TryCatchStmt;\n  }(Statement));\n  var ThrowStmt = (function (_super) {\n      __extends$12(ThrowStmt, _super);\n      function ThrowStmt(error) {\n          _super.call(this);\n          this.error = error;\n      }\n      ThrowStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitThrowStmt(this, context);\n      };\n      return ThrowStmt;\n  }(Statement));\n  var ExpressionTransformer = (function () {\n      function ExpressionTransformer() {\n      }\n      ExpressionTransformer.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n      ExpressionTransformer.prototype.visitWriteVarExpr = function (expr, context) {\n          return new WriteVarExpr(expr.name, expr.value.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitWriteKeyExpr = function (expr, context) {\n          return new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitWritePropExpr = function (expr, context) {\n          return new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitInvokeMethodExpr = function (ast, context) {\n          var method = ast.builtin || ast.name;\n          return new InvokeMethodExpr(ast.receiver.visitExpression(this, context), method, this.visitAllExpressions(ast.args, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitInvokeFunctionExpr = function (ast, context) {\n          return new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitInstantiateExpr = function (ast, context) {\n          return new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n      ExpressionTransformer.prototype.visitExternalExpr = function (ast, context) { return ast; };\n      ExpressionTransformer.prototype.visitConditionalExpr = function (ast, context) {\n          return new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), ast.falseCase.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitNotExpr = function (ast, context) {\n          return new NotExpr(ast.condition.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitCastExpr = function (ast, context) {\n          return new CastExpr(ast.value.visitExpression(this, context), context);\n      };\n      ExpressionTransformer.prototype.visitFunctionExpr = function (ast, context) {\n          // Don't descend into nested functions\n          return ast;\n      };\n      ExpressionTransformer.prototype.visitBinaryOperatorExpr = function (ast, context) {\n          return new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitReadPropExpr = function (ast, context) {\n          return new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type);\n      };\n      ExpressionTransformer.prototype.visitReadKeyExpr = function (ast, context) {\n          return new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitLiteralArrayExpr = function (ast, context) {\n          return new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context));\n      };\n      ExpressionTransformer.prototype.visitLiteralMapExpr = function (ast, context) {\n          var _this = this;\n          var entries = ast.entries.map(function (entry) { return [entry[0], entry[1].visitExpression(_this, context),]; });\n          return new LiteralMapExpr(entries);\n      };\n      ExpressionTransformer.prototype.visitAllExpressions = function (exprs, context) {\n          var _this = this;\n          return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n      };\n      ExpressionTransformer.prototype.visitDeclareVarStmt = function (stmt, context) {\n          return new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers);\n      };\n      ExpressionTransformer.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n          // Don't descend into nested functions\n          return stmt;\n      };\n      ExpressionTransformer.prototype.visitExpressionStmt = function (stmt, context) {\n          return new ExpressionStatement(stmt.expr.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitReturnStmt = function (stmt, context) {\n          return new ReturnStatement(stmt.value.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitDeclareClassStmt = function (stmt, context) {\n          // Don't descend into nested functions\n          return stmt;\n      };\n      ExpressionTransformer.prototype.visitIfStmt = function (stmt, context) {\n          return new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context));\n      };\n      ExpressionTransformer.prototype.visitTryCatchStmt = function (stmt, context) {\n          return new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context));\n      };\n      ExpressionTransformer.prototype.visitThrowStmt = function (stmt, context) {\n          return new ThrowStmt(stmt.error.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n      ExpressionTransformer.prototype.visitAllStatements = function (stmts, context) {\n          var _this = this;\n          return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n      };\n      return ExpressionTransformer;\n  }());\n  var RecursiveExpressionVisitor = (function () {\n      function RecursiveExpressionVisitor() {\n      }\n      RecursiveExpressionVisitor.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n      RecursiveExpressionVisitor.prototype.visitWriteVarExpr = function (expr, context) {\n          expr.value.visitExpression(this, context);\n          return expr;\n      };\n      RecursiveExpressionVisitor.prototype.visitWriteKeyExpr = function (expr, context) {\n          expr.receiver.visitExpression(this, context);\n          expr.index.visitExpression(this, context);\n          expr.value.visitExpression(this, context);\n          return expr;\n      };\n      RecursiveExpressionVisitor.prototype.visitWritePropExpr = function (expr, context) {\n          expr.receiver.visitExpression(this, context);\n          expr.value.visitExpression(this, context);\n          return expr;\n      };\n      RecursiveExpressionVisitor.prototype.visitInvokeMethodExpr = function (ast, context) {\n          ast.receiver.visitExpression(this, context);\n          this.visitAllExpressions(ast.args, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitInvokeFunctionExpr = function (ast, context) {\n          ast.fn.visitExpression(this, context);\n          this.visitAllExpressions(ast.args, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitInstantiateExpr = function (ast, context) {\n          ast.classExpr.visitExpression(this, context);\n          this.visitAllExpressions(ast.args, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n      RecursiveExpressionVisitor.prototype.visitExternalExpr = function (ast, context) { return ast; };\n      RecursiveExpressionVisitor.prototype.visitConditionalExpr = function (ast, context) {\n          ast.condition.visitExpression(this, context);\n          ast.trueCase.visitExpression(this, context);\n          ast.falseCase.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitNotExpr = function (ast, context) {\n          ast.condition.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitCastExpr = function (ast, context) {\n          ast.value.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitFunctionExpr = function (ast, context) { return ast; };\n      RecursiveExpressionVisitor.prototype.visitBinaryOperatorExpr = function (ast, context) {\n          ast.lhs.visitExpression(this, context);\n          ast.rhs.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitReadPropExpr = function (ast, context) {\n          ast.receiver.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitReadKeyExpr = function (ast, context) {\n          ast.receiver.visitExpression(this, context);\n          ast.index.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n          this.visitAllExpressions(ast.entries, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n          var _this = this;\n          ast.entries.forEach(function (entry) { return entry[1].visitExpression(_this, context); });\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitAllExpressions = function (exprs, context) {\n          var _this = this;\n          exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n      };\n      RecursiveExpressionVisitor.prototype.visitDeclareVarStmt = function (stmt, context) {\n          stmt.value.visitExpression(this, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n          // Don't descend into nested functions\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitExpressionStmt = function (stmt, context) {\n          stmt.expr.visitExpression(this, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitReturnStmt = function (stmt, context) {\n          stmt.value.visitExpression(this, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n          // Don't descend into nested functions\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitIfStmt = function (stmt, context) {\n          stmt.condition.visitExpression(this, context);\n          this.visitAllStatements(stmt.trueCase, context);\n          this.visitAllStatements(stmt.falseCase, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitTryCatchStmt = function (stmt, context) {\n          this.visitAllStatements(stmt.bodyStmts, context);\n          this.visitAllStatements(stmt.catchStmts, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitThrowStmt = function (stmt, context) {\n          stmt.error.visitExpression(this, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n      RecursiveExpressionVisitor.prototype.visitAllStatements = function (stmts, context) {\n          var _this = this;\n          stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n      };\n      return RecursiveExpressionVisitor;\n  }());\n  function replaceVarInExpression(varName, newValue, expression) {\n      var transformer = new _ReplaceVariableTransformer(varName, newValue);\n      return expression.visitExpression(transformer, null);\n  }\n  var _ReplaceVariableTransformer = (function (_super) {\n      __extends$12(_ReplaceVariableTransformer, _super);\n      function _ReplaceVariableTransformer(_varName, _newValue) {\n          _super.call(this);\n          this._varName = _varName;\n          this._newValue = _newValue;\n      }\n      _ReplaceVariableTransformer.prototype.visitReadVarExpr = function (ast, context) {\n          return ast.name == this._varName ? this._newValue : ast;\n      };\n      return _ReplaceVariableTransformer;\n  }(ExpressionTransformer));\n  function findReadVarNames(stmts) {\n      var finder = new _VariableFinder();\n      finder.visitAllStatements(stmts, null);\n      return finder.varNames;\n  }\n  var _VariableFinder = (function (_super) {\n      __extends$12(_VariableFinder, _super);\n      function _VariableFinder() {\n          _super.apply(this, arguments);\n          this.varNames = new Set();\n      }\n      _VariableFinder.prototype.visitReadVarExpr = function (ast, context) {\n          this.varNames.add(ast.name);\n          return null;\n      };\n      return _VariableFinder;\n  }(RecursiveExpressionVisitor));\n  function variable(name, type) {\n      if (type === void 0) { type = null; }\n      return new ReadVarExpr(name, type);\n  }\n  function importExpr(id, typeParams) {\n      if (typeParams === void 0) { typeParams = null; }\n      return new ExternalExpr(id, null, typeParams);\n  }\n  function importType(id, typeParams, typeModifiers) {\n      if (typeParams === void 0) { typeParams = null; }\n      if (typeModifiers === void 0) { typeModifiers = null; }\n      return isPresent(id) ? new ExternalType(id, typeParams, typeModifiers) : null;\n  }\n  function literalArr(values, type) {\n      if (type === void 0) { type = null; }\n      return new LiteralArrayExpr(values, type);\n  }\n  function literalMap(values, type) {\n      if (type === void 0) { type = null; }\n      return new LiteralMapExpr(values, type);\n  }\n  function not(expr) {\n      return new NotExpr(expr);\n  }\n  function fn(params, body, type) {\n      if (type === void 0) { type = null; }\n      return new FunctionExpr(params, body, type);\n  }\n  function literal(value, type) {\n      if (type === void 0) { type = null; }\n      return new LiteralExpr(value, type);\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$13 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var AnimationAst = (function () {\n      function AnimationAst() {\n          this.startTime = 0;\n          this.playTime = 0;\n      }\n      return AnimationAst;\n  }());\n  var AnimationStateAst = (function (_super) {\n      __extends$13(AnimationStateAst, _super);\n      function AnimationStateAst() {\n          _super.apply(this, arguments);\n      }\n      return AnimationStateAst;\n  }(AnimationAst));\n  var AnimationEntryAst = (function (_super) {\n      __extends$13(AnimationEntryAst, _super);\n      function AnimationEntryAst(name, stateDeclarations, stateTransitions) {\n          _super.call(this);\n          this.name = name;\n          this.stateDeclarations = stateDeclarations;\n          this.stateTransitions = stateTransitions;\n      }\n      AnimationEntryAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationEntry(this, context);\n      };\n      return AnimationEntryAst;\n  }(AnimationAst));\n  var AnimationStateDeclarationAst = (function (_super) {\n      __extends$13(AnimationStateDeclarationAst, _super);\n      function AnimationStateDeclarationAst(stateName, styles) {\n          _super.call(this);\n          this.stateName = stateName;\n          this.styles = styles;\n      }\n      AnimationStateDeclarationAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationStateDeclaration(this, context);\n      };\n      return AnimationStateDeclarationAst;\n  }(AnimationStateAst));\n  var AnimationStateTransitionExpression = (function () {\n      function AnimationStateTransitionExpression(fromState, toState) {\n          this.fromState = fromState;\n          this.toState = toState;\n      }\n      return AnimationStateTransitionExpression;\n  }());\n  var AnimationStateTransitionAst = (function (_super) {\n      __extends$13(AnimationStateTransitionAst, _super);\n      function AnimationStateTransitionAst(stateChanges, animation) {\n          _super.call(this);\n          this.stateChanges = stateChanges;\n          this.animation = animation;\n      }\n      AnimationStateTransitionAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationStateTransition(this, context);\n      };\n      return AnimationStateTransitionAst;\n  }(AnimationStateAst));\n  var AnimationStepAst = (function (_super) {\n      __extends$13(AnimationStepAst, _super);\n      function AnimationStepAst(startingStyles, keyframes, duration, delay, easing) {\n          _super.call(this);\n          this.startingStyles = startingStyles;\n          this.keyframes = keyframes;\n          this.duration = duration;\n          this.delay = delay;\n          this.easing = easing;\n      }\n      AnimationStepAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationStep(this, context);\n      };\n      return AnimationStepAst;\n  }(AnimationAst));\n  var AnimationStylesAst = (function (_super) {\n      __extends$13(AnimationStylesAst, _super);\n      function AnimationStylesAst(styles) {\n          _super.call(this);\n          this.styles = styles;\n      }\n      AnimationStylesAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationStyles(this, context);\n      };\n      return AnimationStylesAst;\n  }(AnimationAst));\n  var AnimationKeyframeAst = (function (_super) {\n      __extends$13(AnimationKeyframeAst, _super);\n      function AnimationKeyframeAst(offset, styles) {\n          _super.call(this);\n          this.offset = offset;\n          this.styles = styles;\n      }\n      AnimationKeyframeAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationKeyframe(this, context);\n      };\n      return AnimationKeyframeAst;\n  }(AnimationAst));\n  var AnimationWithStepsAst = (function (_super) {\n      __extends$13(AnimationWithStepsAst, _super);\n      function AnimationWithStepsAst(steps) {\n          _super.call(this);\n          this.steps = steps;\n      }\n      return AnimationWithStepsAst;\n  }(AnimationAst));\n  var AnimationGroupAst = (function (_super) {\n      __extends$13(AnimationGroupAst, _super);\n      function AnimationGroupAst(steps) {\n          _super.call(this, steps);\n      }\n      AnimationGroupAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationGroup(this, context);\n      };\n      return AnimationGroupAst;\n  }(AnimationWithStepsAst));\n  var AnimationSequenceAst = (function (_super) {\n      __extends$13(AnimationSequenceAst, _super);\n      function AnimationSequenceAst(steps) {\n          _super.call(this, steps);\n      }\n      AnimationSequenceAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationSequence(this, context);\n      };\n      return AnimationSequenceAst;\n  }(AnimationWithStepsAst));\n\n  var AnimationEntryCompileResult = (function () {\n      function AnimationEntryCompileResult(name, statements, fnExp) {\n          this.name = name;\n          this.statements = statements;\n          this.fnExp = fnExp;\n      }\n      return AnimationEntryCompileResult;\n  }());\n  var AnimationCompiler = (function () {\n      function AnimationCompiler() {\n      }\n      AnimationCompiler.prototype.compile = function (factoryNamePrefix, parsedAnimations) {\n          return parsedAnimations.map(function (entry) {\n              var factoryName = factoryNamePrefix + \"_\" + entry.name;\n              var visitor = new _AnimationBuilder(entry.name, factoryName);\n              return visitor.build(entry);\n          });\n      };\n      return AnimationCompiler;\n  }());\n  var _ANIMATION_FACTORY_ELEMENT_VAR = variable('element');\n  var _ANIMATION_DEFAULT_STATE_VAR = variable('defaultStateStyles');\n  var _ANIMATION_FACTORY_VIEW_VAR = variable('view');\n  var _ANIMATION_FACTORY_VIEW_CONTEXT = _ANIMATION_FACTORY_VIEW_VAR.prop('animationContext');\n  var _ANIMATION_FACTORY_RENDERER_VAR = _ANIMATION_FACTORY_VIEW_VAR.prop('renderer');\n  var _ANIMATION_CURRENT_STATE_VAR = variable('currentState');\n  var _ANIMATION_NEXT_STATE_VAR = variable('nextState');\n  var _ANIMATION_PLAYER_VAR = variable('player');\n  var _ANIMATION_TIME_VAR = variable('totalTime');\n  var _ANIMATION_START_STATE_STYLES_VAR = variable('startStateStyles');\n  var _ANIMATION_END_STATE_STYLES_VAR = variable('endStateStyles');\n  var _ANIMATION_COLLECTED_STYLES = variable('collectedStyles');\n  var EMPTY_MAP = literalMap([]);\n  var _AnimationBuilder = (function () {\n      function _AnimationBuilder(animationName, factoryName) {\n          this.animationName = animationName;\n          this._fnVarName = factoryName + '_factory';\n          this._statesMapVarName = factoryName + '_states';\n          this._statesMapVar = variable(this._statesMapVarName);\n      }\n      _AnimationBuilder.prototype.visitAnimationStyles = function (ast, context) {\n          var stylesArr = [];\n          if (context.isExpectingFirstStyleStep) {\n              stylesArr.push(_ANIMATION_START_STATE_STYLES_VAR);\n              context.isExpectingFirstStyleStep = false;\n          }\n          ast.styles.forEach(function (entry) {\n              var entries = Object.keys(entry).map(function (key) { return [key, literal(entry[key])]; });\n              stylesArr.push(literalMap(entries));\n          });\n          return importExpr(resolveIdentifier(Identifiers.AnimationStyles)).instantiate([\n              importExpr(resolveIdentifier(Identifiers.collectAndResolveStyles)).callFn([\n                  _ANIMATION_COLLECTED_STYLES, literalArr(stylesArr)\n              ])\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationKeyframe = function (ast, context) {\n          return importExpr(resolveIdentifier(Identifiers.AnimationKeyframe)).instantiate([\n              literal(ast.offset), ast.styles.visit(this, context)\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationStep = function (ast, context) {\n          var _this = this;\n          if (context.endStateAnimateStep === ast) {\n              return this._visitEndStateAnimation(ast, context);\n          }\n          var startingStylesExpr = ast.startingStyles.visit(this, context);\n          var keyframeExpressions = ast.keyframes.map(function (keyframeEntry) { return keyframeEntry.visit(_this, context); });\n          return this._callAnimateMethod(ast, startingStylesExpr, literalArr(keyframeExpressions), context);\n      };\n      /** @internal */\n      _AnimationBuilder.prototype._visitEndStateAnimation = function (ast, context) {\n          var _this = this;\n          var startingStylesExpr = ast.startingStyles.visit(this, context);\n          var keyframeExpressions = ast.keyframes.map(function (keyframe) { return keyframe.visit(_this, context); });\n          var keyframesExpr = importExpr(resolveIdentifier(Identifiers.balanceAnimationKeyframes)).callFn([\n              _ANIMATION_COLLECTED_STYLES, _ANIMATION_END_STATE_STYLES_VAR,\n              literalArr(keyframeExpressions)\n          ]);\n          return this._callAnimateMethod(ast, startingStylesExpr, keyframesExpr, context);\n      };\n      /** @internal */\n      _AnimationBuilder.prototype._callAnimateMethod = function (ast, startingStylesExpr, keyframesExpr, context) {\n          context.totalTransitionTime += ast.duration + ast.delay;\n          return _ANIMATION_FACTORY_RENDERER_VAR.callMethod('animate', [\n              _ANIMATION_FACTORY_ELEMENT_VAR, startingStylesExpr, keyframesExpr, literal(ast.duration),\n              literal(ast.delay), literal(ast.easing)\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationSequence = function (ast, context) {\n          var _this = this;\n          var playerExprs = ast.steps.map(function (step) { return step.visit(_this, context); });\n          return importExpr(resolveIdentifier(Identifiers.AnimationSequencePlayer)).instantiate([\n              literalArr(playerExprs)\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationGroup = function (ast, context) {\n          var _this = this;\n          var playerExprs = ast.steps.map(function (step) { return step.visit(_this, context); });\n          return importExpr(resolveIdentifier(Identifiers.AnimationGroupPlayer)).instantiate([\n              literalArr(playerExprs)\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationStateDeclaration = function (ast, context) {\n          var flatStyles = {};\n          _getStylesArray(ast).forEach(function (entry) { Object.keys(entry).forEach(function (key) { flatStyles[key] = entry[key]; }); });\n          context.stateMap.registerState(ast.stateName, flatStyles);\n      };\n      _AnimationBuilder.prototype.visitAnimationStateTransition = function (ast, context) {\n          var steps = ast.animation.steps;\n          var lastStep = steps[steps.length - 1];\n          if (_isEndStateAnimateStep(lastStep)) {\n              context.endStateAnimateStep = lastStep;\n          }\n          context.totalTransitionTime = 0;\n          context.isExpectingFirstStyleStep = true;\n          var stateChangePreconditions = [];\n          ast.stateChanges.forEach(function (stateChange) {\n              stateChangePreconditions.push(_compareToAnimationStateExpr(_ANIMATION_CURRENT_STATE_VAR, stateChange.fromState)\n                  .and(_compareToAnimationStateExpr(_ANIMATION_NEXT_STATE_VAR, stateChange.toState)));\n              if (stateChange.fromState != ANY_STATE) {\n                  context.stateMap.registerState(stateChange.fromState);\n              }\n              if (stateChange.toState != ANY_STATE) {\n                  context.stateMap.registerState(stateChange.toState);\n              }\n          });\n          var animationPlayerExpr = ast.animation.visit(this, context);\n          var reducedStateChangesPrecondition = stateChangePreconditions.reduce(function (a, b) { return a.or(b); });\n          var precondition = _ANIMATION_PLAYER_VAR.equals(NULL_EXPR).and(reducedStateChangesPrecondition);\n          var animationStmt = _ANIMATION_PLAYER_VAR.set(animationPlayerExpr).toStmt();\n          var totalTimeStmt = _ANIMATION_TIME_VAR.set(literal(context.totalTransitionTime)).toStmt();\n          return new IfStmt(precondition, [animationStmt, totalTimeStmt]);\n      };\n      _AnimationBuilder.prototype.visitAnimationEntry = function (ast, context) {\n          var _this = this;\n          // visit each of the declarations first to build the context state map\n          ast.stateDeclarations.forEach(function (def) { return def.visit(_this, context); });\n          // this should always be defined even if the user overrides it\n          context.stateMap.registerState(DEFAULT_STATE, {});\n          var statements = [];\n          statements.push(_ANIMATION_FACTORY_VIEW_CONTEXT\n              .callMethod('cancelActiveAnimation', [\n              _ANIMATION_FACTORY_ELEMENT_VAR, literal(this.animationName),\n              _ANIMATION_NEXT_STATE_VAR.equals(literal(EMPTY_ANIMATION_STATE))\n          ])\n              .toStmt());\n          statements.push(_ANIMATION_COLLECTED_STYLES.set(EMPTY_MAP).toDeclStmt());\n          statements.push(_ANIMATION_PLAYER_VAR.set(NULL_EXPR).toDeclStmt());\n          statements.push(_ANIMATION_TIME_VAR.set(literal(0)).toDeclStmt());\n          statements.push(_ANIMATION_DEFAULT_STATE_VAR.set(this._statesMapVar.key(literal(DEFAULT_STATE)))\n              .toDeclStmt());\n          statements.push(_ANIMATION_START_STATE_STYLES_VAR.set(this._statesMapVar.key(_ANIMATION_CURRENT_STATE_VAR))\n              .toDeclStmt());\n          statements.push(new IfStmt(_ANIMATION_START_STATE_STYLES_VAR.equals(NULL_EXPR), [_ANIMATION_START_STATE_STYLES_VAR.set(_ANIMATION_DEFAULT_STATE_VAR).toStmt()]));\n          statements.push(_ANIMATION_END_STATE_STYLES_VAR.set(this._statesMapVar.key(_ANIMATION_NEXT_STATE_VAR))\n              .toDeclStmt());\n          statements.push(new IfStmt(_ANIMATION_END_STATE_STYLES_VAR.equals(NULL_EXPR), [_ANIMATION_END_STATE_STYLES_VAR.set(_ANIMATION_DEFAULT_STATE_VAR).toStmt()]));\n          var RENDER_STYLES_FN = importExpr(resolveIdentifier(Identifiers.renderStyles));\n          // before we start any animation we want to clear out the starting\n          // styles from the element's style property (since they were placed\n          // there at the end of the last animation\n          statements.push(RENDER_STYLES_FN\n              .callFn([\n              _ANIMATION_FACTORY_ELEMENT_VAR, _ANIMATION_FACTORY_RENDERER_VAR,\n              importExpr(resolveIdentifier(Identifiers.clearStyles))\n                  .callFn([_ANIMATION_START_STATE_STYLES_VAR])\n          ])\n              .toStmt());\n          ast.stateTransitions.forEach(function (transAst) { return statements.push(transAst.visit(_this, context)); });\n          // this check ensures that the animation factory always returns a player\n          // so that the onDone callback can be used for tracking\n          statements.push(new IfStmt(_ANIMATION_PLAYER_VAR.equals(NULL_EXPR), [_ANIMATION_PLAYER_VAR\n                  .set(importExpr(resolveIdentifier(Identifiers.NoOpAnimationPlayer)).instantiate([]))\n                  .toStmt()]));\n          // once complete we want to apply the styles on the element\n          // since the destination state's values should persist once\n          // the animation sequence has completed.\n          statements.push(_ANIMATION_PLAYER_VAR\n              .callMethod('onDone', [fn([], [RENDER_STYLES_FN\n                      .callFn([\n                      _ANIMATION_FACTORY_ELEMENT_VAR, _ANIMATION_FACTORY_RENDERER_VAR,\n                      importExpr(resolveIdentifier(Identifiers.prepareFinalAnimationStyles))\n                          .callFn([\n                          _ANIMATION_START_STATE_STYLES_VAR, _ANIMATION_END_STATE_STYLES_VAR\n                      ])\n                  ])\n                      .toStmt()])])\n              .toStmt());\n          statements.push(_ANIMATION_FACTORY_VIEW_CONTEXT\n              .callMethod('queueAnimation', [\n              _ANIMATION_FACTORY_ELEMENT_VAR, literal(this.animationName),\n              _ANIMATION_PLAYER_VAR\n          ])\n              .toStmt());\n          statements.push(new ReturnStatement(importExpr(resolveIdentifier(Identifiers.AnimationTransition)).instantiate([\n              _ANIMATION_PLAYER_VAR, _ANIMATION_CURRENT_STATE_VAR, _ANIMATION_NEXT_STATE_VAR,\n              _ANIMATION_TIME_VAR\n          ])));\n          return fn([\n              new FnParam(_ANIMATION_FACTORY_VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n              new FnParam(_ANIMATION_FACTORY_ELEMENT_VAR.name, DYNAMIC_TYPE),\n              new FnParam(_ANIMATION_CURRENT_STATE_VAR.name, DYNAMIC_TYPE),\n              new FnParam(_ANIMATION_NEXT_STATE_VAR.name, DYNAMIC_TYPE)\n          ], statements, importType(resolveIdentifier(Identifiers.AnimationTransition)));\n      };\n      _AnimationBuilder.prototype.build = function (ast) {\n          var context = new _AnimationBuilderContext();\n          var fnStatement = ast.visit(this, context).toDeclStmt(this._fnVarName);\n          var fnVariable = variable(this._fnVarName);\n          var lookupMap = [];\n          Object.keys(context.stateMap.states).forEach(function (stateName) {\n              var value = context.stateMap.states[stateName];\n              var variableValue = EMPTY_MAP;\n              if (isPresent(value)) {\n                  var styleMap_1 = [];\n                  Object.keys(value).forEach(function (key) { styleMap_1.push([key, literal(value[key])]); });\n                  variableValue = literalMap(styleMap_1);\n              }\n              lookupMap.push([stateName, variableValue]);\n          });\n          var compiledStatesMapStmt = this._statesMapVar.set(literalMap(lookupMap)).toDeclStmt();\n          var statements = [compiledStatesMapStmt, fnStatement];\n          return new AnimationEntryCompileResult(this.animationName, statements, fnVariable);\n      };\n      return _AnimationBuilder;\n  }());\n  var _AnimationBuilderContext = (function () {\n      function _AnimationBuilderContext() {\n          this.stateMap = new _AnimationBuilderStateMap();\n          this.endStateAnimateStep = null;\n          this.isExpectingFirstStyleStep = false;\n          this.totalTransitionTime = 0;\n      }\n      return _AnimationBuilderContext;\n  }());\n  var _AnimationBuilderStateMap = (function () {\n      function _AnimationBuilderStateMap() {\n          this._states = {};\n      }\n      Object.defineProperty(_AnimationBuilderStateMap.prototype, \"states\", {\n          get: function () { return this._states; },\n          enumerable: true,\n          configurable: true\n      });\n      _AnimationBuilderStateMap.prototype.registerState = function (name, value) {\n          if (value === void 0) { value = null; }\n          var existingEntry = this._states[name];\n          if (!existingEntry) {\n              this._states[name] = value;\n          }\n      };\n      return _AnimationBuilderStateMap;\n  }());\n  function _compareToAnimationStateExpr(value, animationState) {\n      var emptyStateLiteral = literal(EMPTY_ANIMATION_STATE);\n      switch (animationState) {\n          case EMPTY_ANIMATION_STATE:\n              return value.equals(emptyStateLiteral);\n          case ANY_STATE:\n              return literal(true);\n          default:\n              return value.equals(literal(animationState));\n      }\n  }\n  function _isEndStateAnimateStep(step) {\n      // the final animation step is characterized by having only TWO\n      // keyframe values and it must have zero styles for both keyframes\n      if (step instanceof AnimationStepAst && step.duration > 0 && step.keyframes.length == 2) {\n          var styles1 = _getStylesArray(step.keyframes[0])[0];\n          var styles2 = _getStylesArray(step.keyframes[1])[0];\n          return Object.keys(styles1).length === 0 && Object.keys(styles2).length === 0;\n      }\n      return false;\n  }\n  function _getStylesArray(obj) {\n      return obj.styles.styles;\n  }\n\n  var StylesCollectionEntry = (function () {\n      function StylesCollectionEntry(time, value) {\n          this.time = time;\n          this.value = value;\n      }\n      StylesCollectionEntry.prototype.matches = function (time, value) {\n          return time == this.time && value == this.value;\n      };\n      return StylesCollectionEntry;\n  }());\n  var StylesCollection = (function () {\n      function StylesCollection() {\n          this.styles = {};\n      }\n      StylesCollection.prototype.insertAtTime = function (property, time, value) {\n          var tuple = new StylesCollectionEntry(time, value);\n          var entries = this.styles[property];\n          if (!isPresent(entries)) {\n              entries = this.styles[property] = [];\n          }\n          // insert this at the right stop in the array\n          // this way we can keep it sorted\n          var insertionIndex = 0;\n          for (var i = entries.length - 1; i >= 0; i--) {\n              if (entries[i].time <= time) {\n                  insertionIndex = i + 1;\n                  break;\n              }\n          }\n          entries.splice(insertionIndex, 0, tuple);\n      };\n      StylesCollection.prototype.getByIndex = function (property, index) {\n          var items = this.styles[property];\n          if (isPresent(items)) {\n              return index >= items.length ? null : items[index];\n          }\n          return null;\n      };\n      StylesCollection.prototype.indexOfAtOrBeforeTime = function (property, time) {\n          var entries = this.styles[property];\n          if (isPresent(entries)) {\n              for (var i = entries.length - 1; i >= 0; i--) {\n                  if (entries[i].time <= time)\n                      return i;\n              }\n          }\n          return null;\n      };\n      return StylesCollection;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$14 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var _INITIAL_KEYFRAME = 0;\n  var _TERMINAL_KEYFRAME = 1;\n  var _ONE_SECOND = 1000;\n  var AnimationParseError = (function (_super) {\n      __extends$14(AnimationParseError, _super);\n      function AnimationParseError(message) {\n          _super.call(this, null, message);\n      }\n      AnimationParseError.prototype.toString = function () { return \"\" + this.msg; };\n      return AnimationParseError;\n  }(ParseError));\n  var AnimationEntryParseResult = (function () {\n      function AnimationEntryParseResult(ast, errors) {\n          this.ast = ast;\n          this.errors = errors;\n      }\n      return AnimationEntryParseResult;\n  }());\n  var AnimationParser = (function () {\n      function AnimationParser() {\n      }\n      AnimationParser.prototype.parseComponent = function (component) {\n          var _this = this;\n          var errors = [];\n          var componentName = component.type.name;\n          var animationTriggerNames = new Set();\n          var asts = component.template.animations.map(function (entry) {\n              var result = _this.parseEntry(entry);\n              var ast = result.ast;\n              var triggerName = ast.name;\n              if (animationTriggerNames.has(triggerName)) {\n                  result.errors.push(new AnimationParseError(\"The animation trigger \\\"\" + triggerName + \"\\\" has already been registered for the \" + componentName + \" component\"));\n              }\n              else {\n                  animationTriggerNames.add(triggerName);\n              }\n              if (result.errors.length > 0) {\n                  var errorMessage_1 = \"- Unable to parse the animation sequence for \\\"\" + triggerName + \"\\\" on the \" + componentName + \" component due to the following errors:\";\n                  result.errors.forEach(function (error) { errorMessage_1 += '\\n-- ' + error.msg; });\n                  errors.push(errorMessage_1);\n              }\n              return ast;\n          });\n          if (errors.length > 0) {\n              var errorString = errors.join('\\n');\n              throw new Error(\"Animation parse errors:\\n\" + errorString);\n          }\n          return asts;\n      };\n      AnimationParser.prototype.parseEntry = function (entry) {\n          var errors = [];\n          var stateStyles = {};\n          var transitions = [];\n          var stateDeclarationAsts = [];\n          entry.definitions.forEach(function (def) {\n              if (def instanceof CompileAnimationStateDeclarationMetadata) {\n                  _parseAnimationDeclarationStates(def, errors).forEach(function (ast) {\n                      stateDeclarationAsts.push(ast);\n                      stateStyles[ast.stateName] = ast.styles;\n                  });\n              }\n              else {\n                  transitions.push(def);\n              }\n          });\n          var stateTransitionAsts = transitions.map(function (transDef) { return _parseAnimationStateTransition(transDef, stateStyles, errors); });\n          var ast = new AnimationEntryAst(entry.name, stateDeclarationAsts, stateTransitionAsts);\n          return new AnimationEntryParseResult(ast, errors);\n      };\n      return AnimationParser;\n  }());\n  function _parseAnimationDeclarationStates(stateMetadata, errors) {\n      var styleValues = [];\n      stateMetadata.styles.styles.forEach(function (stylesEntry) {\n          // TODO (matsko): change this when we get CSS class integration support\n          if (typeof stylesEntry === 'object' && stylesEntry !== null) {\n              styleValues.push(stylesEntry);\n          }\n          else {\n              errors.push(new AnimationParseError(\"State based animations cannot contain references to other states\"));\n          }\n      });\n      var defStyles = new AnimationStylesAst(styleValues);\n      var states = stateMetadata.stateNameExpr.split(/\\s*,\\s*/);\n      return states.map(function (state) { return new AnimationStateDeclarationAst(state, defStyles); });\n  }\n  function _parseAnimationStateTransition(transitionStateMetadata, stateStyles, errors) {\n      var styles = new StylesCollection();\n      var transitionExprs = [];\n      var transitionStates = transitionStateMetadata.stateChangeExpr.split(/\\s*,\\s*/);\n      transitionStates.forEach(function (expr) { transitionExprs.push.apply(transitionExprs, _parseAnimationTransitionExpr(expr, errors)); });\n      var entry = _normalizeAnimationEntry(transitionStateMetadata.steps);\n      var animation = _normalizeStyleSteps(entry, stateStyles, errors);\n      var animationAst = _parseTransitionAnimation(animation, 0, styles, stateStyles, errors);\n      if (errors.length == 0) {\n          _fillAnimationAstStartingKeyframes(animationAst, styles, errors);\n      }\n      var stepsAst = (animationAst instanceof AnimationWithStepsAst) ?\n          animationAst :\n          new AnimationSequenceAst([animationAst]);\n      return new AnimationStateTransitionAst(transitionExprs, stepsAst);\n  }\n  function _parseAnimationAlias(alias, errors) {\n      switch (alias) {\n          case ':enter':\n              return 'void => *';\n          case ':leave':\n              return '* => void';\n          default:\n              errors.push(new AnimationParseError(\"the transition alias value \\\"\" + alias + \"\\\" is not supported\"));\n              return '* => *';\n      }\n  }\n  function _parseAnimationTransitionExpr(eventStr, errors) {\n      var expressions = [];\n      if (eventStr[0] == ':') {\n          eventStr = _parseAnimationAlias(eventStr, errors);\n      }\n      var match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n      if (!isPresent(match) || match.length < 4) {\n          errors.push(new AnimationParseError(\"the provided \" + eventStr + \" is not of a supported format\"));\n          return expressions;\n      }\n      var fromState = match[1];\n      var separator = match[2];\n      var toState = match[3];\n      expressions.push(new AnimationStateTransitionExpression(fromState, toState));\n      var isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n      if (separator[0] == '<' && !isFullAnyStateExpr) {\n          expressions.push(new AnimationStateTransitionExpression(toState, fromState));\n      }\n      return expressions;\n  }\n  function _normalizeAnimationEntry(entry) {\n      return Array.isArray(entry) ? new CompileAnimationSequenceMetadata(entry) : entry;\n  }\n  function _normalizeStyleMetadata(entry, stateStyles, errors) {\n      var normalizedStyles = [];\n      entry.styles.forEach(function (styleEntry) {\n          if (typeof styleEntry === 'string') {\n              normalizedStyles.push.apply(normalizedStyles, _resolveStylesFromState(styleEntry, stateStyles, errors));\n          }\n          else {\n              normalizedStyles.push(styleEntry);\n          }\n      });\n      return normalizedStyles;\n  }\n  function _normalizeStyleSteps(entry, stateStyles, errors) {\n      var steps = _normalizeStyleStepEntry(entry, stateStyles, errors);\n      return (entry instanceof CompileAnimationGroupMetadata) ?\n          new CompileAnimationGroupMetadata(steps) :\n          new CompileAnimationSequenceMetadata(steps);\n  }\n  function _mergeAnimationStyles(stylesList, newItem) {\n      if (typeof newItem === 'object' && newItem !== null && stylesList.length > 0) {\n          var lastIndex = stylesList.length - 1;\n          var lastItem = stylesList[lastIndex];\n          if (typeof lastItem === 'object' && lastItem !== null) {\n              stylesList[lastIndex] = StringMapWrapper.merge(lastItem, newItem);\n              return;\n          }\n      }\n      stylesList.push(newItem);\n  }\n  function _normalizeStyleStepEntry(entry, stateStyles, errors) {\n      var steps;\n      if (entry instanceof CompileAnimationWithStepsMetadata) {\n          steps = entry.steps;\n      }\n      else {\n          return [entry];\n      }\n      var newSteps = [];\n      var combinedStyles;\n      steps.forEach(function (step) {\n          if (step instanceof CompileAnimationStyleMetadata) {\n              // this occurs when a style step is followed by a previous style step\n              // or when the first style step is run. We want to concatenate all subsequent\n              // style steps together into a single style step such that we have the correct\n              // starting keyframe data to pass into the animation player.\n              if (!isPresent(combinedStyles)) {\n                  combinedStyles = [];\n              }\n              _normalizeStyleMetadata(step, stateStyles, errors)\n                  .forEach(function (entry) { _mergeAnimationStyles(combinedStyles, entry); });\n          }\n          else {\n              // it is important that we create a metadata entry of the combined styles\n              // before we go on an process the animate, sequence or group metadata steps.\n              // This will ensure that the AST will have the previous styles painted on\n              // screen before any further animations that use the styles take place.\n              if (isPresent(combinedStyles)) {\n                  newSteps.push(new CompileAnimationStyleMetadata(0, combinedStyles));\n                  combinedStyles = null;\n              }\n              if (step instanceof CompileAnimationAnimateMetadata) {\n                  // we do not recurse into CompileAnimationAnimateMetadata since\n                  // those style steps are not going to be squashed\n                  var animateStyleValue = step.styles;\n                  if (animateStyleValue instanceof CompileAnimationStyleMetadata) {\n                      animateStyleValue.styles =\n                          _normalizeStyleMetadata(animateStyleValue, stateStyles, errors);\n                  }\n                  else if (animateStyleValue instanceof CompileAnimationKeyframesSequenceMetadata) {\n                      animateStyleValue.steps.forEach(function (step) { step.styles = _normalizeStyleMetadata(step, stateStyles, errors); });\n                  }\n              }\n              else if (step instanceof CompileAnimationWithStepsMetadata) {\n                  var innerSteps = _normalizeStyleStepEntry(step, stateStyles, errors);\n                  step = step instanceof CompileAnimationGroupMetadata ?\n                      new CompileAnimationGroupMetadata(innerSteps) :\n                      new CompileAnimationSequenceMetadata(innerSteps);\n              }\n              newSteps.push(step);\n          }\n      });\n      // this happens when only styles were animated within the sequence\n      if (isPresent(combinedStyles)) {\n          newSteps.push(new CompileAnimationStyleMetadata(0, combinedStyles));\n      }\n      return newSteps;\n  }\n  function _resolveStylesFromState(stateName, stateStyles, errors) {\n      var styles = [];\n      if (stateName[0] != ':') {\n          errors.push(new AnimationParseError(\"Animation states via styles must be prefixed with a \\\":\\\"\"));\n      }\n      else {\n          var normalizedStateName = stateName.substring(1);\n          var value = stateStyles[normalizedStateName];\n          if (!isPresent(value)) {\n              errors.push(new AnimationParseError(\"Unable to apply styles due to missing a state: \\\"\" + normalizedStateName + \"\\\"\"));\n          }\n          else {\n              value.styles.forEach(function (stylesEntry) {\n                  if (typeof stylesEntry === 'object' && stylesEntry !== null) {\n                      styles.push(stylesEntry);\n                  }\n              });\n          }\n      }\n      return styles;\n  }\n  var _AnimationTimings = (function () {\n      function _AnimationTimings(duration, delay, easing) {\n          this.duration = duration;\n          this.delay = delay;\n          this.easing = easing;\n      }\n      return _AnimationTimings;\n  }());\n  function _parseAnimationKeyframes(keyframeSequence, currentTime, collectedStyles, stateStyles, errors) {\n      var totalEntries = keyframeSequence.steps.length;\n      var totalOffsets = 0;\n      keyframeSequence.steps.forEach(function (step) { return totalOffsets += (isPresent(step.offset) ? 1 : 0); });\n      if (totalOffsets > 0 && totalOffsets < totalEntries) {\n          errors.push(new AnimationParseError(\"Not all style() entries contain an offset for the provided keyframe()\"));\n          totalOffsets = totalEntries;\n      }\n      var limit = totalEntries - 1;\n      var margin = totalOffsets == 0 ? (1 / limit) : 0;\n      var rawKeyframes = [];\n      var index = 0;\n      var doSortKeyframes = false;\n      var lastOffset = 0;\n      keyframeSequence.steps.forEach(function (styleMetadata) {\n          var offset = styleMetadata.offset;\n          var keyframeStyles = {};\n          styleMetadata.styles.forEach(function (entry) {\n              Object.keys(entry).forEach(function (prop) {\n                  if (prop != 'offset') {\n                      keyframeStyles[prop] = entry[prop];\n                  }\n              });\n          });\n          if (isPresent(offset)) {\n              doSortKeyframes = doSortKeyframes || (offset < lastOffset);\n          }\n          else {\n              offset = index == limit ? _TERMINAL_KEYFRAME : (margin * index);\n          }\n          rawKeyframes.push([offset, keyframeStyles]);\n          lastOffset = offset;\n          index++;\n      });\n      if (doSortKeyframes) {\n          rawKeyframes.sort(function (a, b) { return a[0] <= b[0] ? -1 : 1; });\n      }\n      var firstKeyframe = rawKeyframes[0];\n      if (firstKeyframe[0] != _INITIAL_KEYFRAME) {\n          rawKeyframes.splice(0, 0, firstKeyframe = [_INITIAL_KEYFRAME, {}]);\n      }\n      var firstKeyframeStyles = firstKeyframe[1];\n      limit = rawKeyframes.length - 1;\n      var lastKeyframe = rawKeyframes[limit];\n      if (lastKeyframe[0] != _TERMINAL_KEYFRAME) {\n          rawKeyframes.push(lastKeyframe = [_TERMINAL_KEYFRAME, {}]);\n          limit++;\n      }\n      var lastKeyframeStyles = lastKeyframe[1];\n      for (var i = 1; i <= limit; i++) {\n          var entry = rawKeyframes[i];\n          var styles = entry[1];\n          Object.keys(styles).forEach(function (prop) {\n              if (!isPresent(firstKeyframeStyles[prop])) {\n                  firstKeyframeStyles[prop] = FILL_STYLE_FLAG;\n              }\n          });\n      }\n      var _loop_1 = function(i) {\n          var entry = rawKeyframes[i];\n          var styles = entry[1];\n          Object.keys(styles).forEach(function (prop) {\n              if (!isPresent(lastKeyframeStyles[prop])) {\n                  lastKeyframeStyles[prop] = styles[prop];\n              }\n          });\n      };\n      for (var i = limit - 1; i >= 0; i--) {\n          _loop_1(i);\n      }\n      return rawKeyframes.map(function (entry) { return new AnimationKeyframeAst(entry[0], new AnimationStylesAst([entry[1]])); });\n  }\n  function _parseTransitionAnimation(entry, currentTime, collectedStyles, stateStyles, errors) {\n      var ast;\n      var playTime = 0;\n      var startingTime = currentTime;\n      if (entry instanceof CompileAnimationWithStepsMetadata) {\n          var maxDuration = 0;\n          var steps = [];\n          var isGroup = entry instanceof CompileAnimationGroupMetadata;\n          var previousStyles;\n          entry.steps.forEach(function (entry) {\n              // these will get picked up by the next step...\n              var time = isGroup ? startingTime : currentTime;\n              if (entry instanceof CompileAnimationStyleMetadata) {\n                  entry.styles.forEach(function (stylesEntry) {\n                      // by this point we know that we only have stringmap values\n                      var map = stylesEntry;\n                      Object.keys(map).forEach(function (prop) { collectedStyles.insertAtTime(prop, time, map[prop]); });\n                  });\n                  previousStyles = entry.styles;\n                  return;\n              }\n              var innerAst = _parseTransitionAnimation(entry, time, collectedStyles, stateStyles, errors);\n              if (isPresent(previousStyles)) {\n                  if (entry instanceof CompileAnimationWithStepsMetadata) {\n                      var startingStyles = new AnimationStylesAst(previousStyles);\n                      steps.push(new AnimationStepAst(startingStyles, [], 0, 0, ''));\n                  }\n                  else {\n                      var innerStep = innerAst;\n                      (_a = innerStep.startingStyles.styles).push.apply(_a, previousStyles);\n                  }\n                  previousStyles = null;\n              }\n              var astDuration = innerAst.playTime;\n              currentTime += astDuration;\n              playTime += astDuration;\n              maxDuration = Math.max(astDuration, maxDuration);\n              steps.push(innerAst);\n              var _a;\n          });\n          if (isPresent(previousStyles)) {\n              var startingStyles = new AnimationStylesAst(previousStyles);\n              steps.push(new AnimationStepAst(startingStyles, [], 0, 0, ''));\n          }\n          if (isGroup) {\n              ast = new AnimationGroupAst(steps);\n              playTime = maxDuration;\n              currentTime = startingTime + playTime;\n          }\n          else {\n              ast = new AnimationSequenceAst(steps);\n          }\n      }\n      else if (entry instanceof CompileAnimationAnimateMetadata) {\n          var timings = _parseTimeExpression(entry.timings, errors);\n          var styles = entry.styles;\n          var keyframes;\n          if (styles instanceof CompileAnimationKeyframesSequenceMetadata) {\n              keyframes =\n                  _parseAnimationKeyframes(styles, currentTime, collectedStyles, stateStyles, errors);\n          }\n          else {\n              var styleData = styles;\n              var offset = _TERMINAL_KEYFRAME;\n              var styleAst = new AnimationStylesAst(styleData.styles);\n              var keyframe = new AnimationKeyframeAst(offset, styleAst);\n              keyframes = [keyframe];\n          }\n          ast = new AnimationStepAst(new AnimationStylesAst([]), keyframes, timings.duration, timings.delay, timings.easing);\n          playTime = timings.duration + timings.delay;\n          currentTime += playTime;\n          keyframes.forEach(function (keyframe /** TODO #9100 */) { return keyframe.styles.styles.forEach(function (entry /** TODO #9100 */) { return Object.keys(entry).forEach(function (prop) { collectedStyles.insertAtTime(prop, currentTime, entry[prop]); }); }); });\n      }\n      else {\n          // if the code reaches this stage then an error\n          // has already been populated within the _normalizeStyleSteps()\n          // operation...\n          ast = new AnimationStepAst(null, [], 0, 0, '');\n      }\n      ast.playTime = playTime;\n      ast.startTime = startingTime;\n      return ast;\n  }\n  function _fillAnimationAstStartingKeyframes(ast, collectedStyles, errors) {\n      // steps that only contain style will not be filled\n      if ((ast instanceof AnimationStepAst) && ast.keyframes.length > 0) {\n          var keyframes = ast.keyframes;\n          if (keyframes.length == 1) {\n              var endKeyframe = keyframes[0];\n              var startKeyframe = _createStartKeyframeFromEndKeyframe(endKeyframe, ast.startTime, ast.playTime, collectedStyles, errors);\n              ast.keyframes = [startKeyframe, endKeyframe];\n          }\n      }\n      else if (ast instanceof AnimationWithStepsAst) {\n          ast.steps.forEach(function (entry) { return _fillAnimationAstStartingKeyframes(entry, collectedStyles, errors); });\n      }\n  }\n  function _parseTimeExpression(exp, errors) {\n      var regex = /^([\\.\\d]+)(m?s)(?:\\s+([\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?/i;\n      var duration;\n      var delay = 0;\n      var easing = null;\n      if (typeof exp === 'string') {\n          var matches = exp.match(regex);\n          if (matches === null) {\n              errors.push(new AnimationParseError(\"The provided timing value \\\"\" + exp + \"\\\" is invalid.\"));\n              return new _AnimationTimings(0, 0, null);\n          }\n          var durationMatch = parseFloat(matches[1]);\n          var durationUnit = matches[2];\n          if (durationUnit == 's') {\n              durationMatch *= _ONE_SECOND;\n          }\n          duration = Math.floor(durationMatch);\n          var delayMatch = matches[3];\n          var delayUnit = matches[4];\n          if (isPresent(delayMatch)) {\n              var delayVal = parseFloat(delayMatch);\n              if (isPresent(delayUnit) && delayUnit == 's') {\n                  delayVal *= _ONE_SECOND;\n              }\n              delay = Math.floor(delayVal);\n          }\n          var easingVal = matches[5];\n          if (!isBlank(easingVal)) {\n              easing = easingVal;\n          }\n      }\n      else {\n          duration = exp;\n      }\n      return new _AnimationTimings(duration, delay, easing);\n  }\n  function _createStartKeyframeFromEndKeyframe(endKeyframe, startTime, duration, collectedStyles, errors) {\n      var values = {};\n      var endTime = startTime + duration;\n      endKeyframe.styles.styles.forEach(function (styleData) {\n          Object.keys(styleData).forEach(function (prop) {\n              var val = styleData[prop];\n              if (prop == 'offset')\n                  return;\n              var resultIndex = collectedStyles.indexOfAtOrBeforeTime(prop, startTime);\n              var resultEntry /** TODO #9100 */, nextEntry /** TODO #9100 */, value;\n              if (isPresent(resultIndex)) {\n                  resultEntry = collectedStyles.getByIndex(prop, resultIndex);\n                  value = resultEntry.value;\n                  nextEntry = collectedStyles.getByIndex(prop, resultIndex + 1);\n              }\n              else {\n                  // this is a flag that the runtime code uses to pass\n                  // in a value either from the state declaration styles\n                  // or using the AUTO_STYLE value (e.g. getComputedStyle)\n                  value = FILL_STYLE_FLAG;\n              }\n              if (isPresent(nextEntry) && !nextEntry.matches(endTime, val)) {\n                  errors.push(new AnimationParseError(\"The animated CSS property \\\"\" + prop + \"\\\" unexpectedly changes between steps \\\"\" + resultEntry.time + \"ms\\\" and \\\"\" + endTime + \"ms\\\" at \\\"\" + nextEntry.time + \"ms\\\"\"));\n              }\n              values[prop] = value;\n          });\n      });\n      return new AnimationKeyframeAst(_INITIAL_KEYFRAME, new AnimationStylesAst([values]));\n  }\n\n  function createDiTokenExpression(token) {\n      if (isPresent(token.value)) {\n          return literal(token.value);\n      }\n      else if (token.identifierIsInstance) {\n          return importExpr(token.identifier)\n              .instantiate([], importType(token.identifier, [], [TypeModifier.Const]));\n      }\n      else {\n          return importExpr(token.identifier);\n      }\n  }\n  function createInlineArray(values) {\n      if (values.length === 0) {\n          return importExpr(resolveIdentifier(Identifiers.EMPTY_INLINE_ARRAY));\n      }\n      var log2 = Math.log(values.length) / Math.log(2);\n      var index = Math.ceil(log2);\n      var identifierSpec = index < Identifiers.inlineArrays.length ? Identifiers.inlineArrays[index] :\n          Identifiers.InlineArrayDynamic;\n      var identifier = resolveIdentifier(identifierSpec);\n      return importExpr(identifier).instantiate([\n          literal(values.length)\n      ].concat(values));\n  }\n  function createPureProxy(fn, argCount, pureProxyProp, builder) {\n      builder.fields.push(new ClassField(pureProxyProp.name, null));\n      var pureProxyId = argCount < Identifiers.pureProxies.length ? Identifiers.pureProxies[argCount] : null;\n      if (!pureProxyId) {\n          throw new Error(\"Unsupported number of argument for pure functions: \" + argCount);\n      }\n      builder.ctorStmts.push(THIS_EXPR.prop(pureProxyProp.name)\n          .set(importExpr(resolveIdentifier(pureProxyId)).callFn([fn]))\n          .toStmt());\n  }\n  function createEnumExpression(enumType, enumValue) {\n      var enumName = Object.keys(enumType.runtime).find(function (propName) { return enumType.runtime[propName] === enumValue; });\n      if (!enumName) {\n          throw new Error(\"Unknown enum value \" + enumValue + \" in \" + enumType.name);\n      }\n      return importExpr(resolveEnumIdentifier(resolveIdentifier(enumType), enumName));\n  }\n\n  var CheckBindingField = (function () {\n      function CheckBindingField(expression, bindingId) {\n          this.expression = expression;\n          this.bindingId = bindingId;\n      }\n      return CheckBindingField;\n  }());\n  function createCheckBindingField(builder) {\n      var bindingId = \"\" + builder.fields.length;\n      var fieldExpr = createBindFieldExpr(bindingId);\n      // private is fine here as no child view will reference the cached value...\n      builder.fields.push(new ClassField(fieldExpr.name, null, [StmtModifier.Private]));\n      builder.ctorStmts.push(THIS_EXPR.prop(fieldExpr.name)\n          .set(importExpr(resolveIdentifier(Identifiers.UNINITIALIZED)))\n          .toStmt());\n      return new CheckBindingField(fieldExpr, bindingId);\n  }\n  function createCheckBindingStmt(evalResult, fieldExpr, throwOnChangeVar, actions) {\n      var condition = importExpr(resolveIdentifier(Identifiers.checkBinding)).callFn([\n          throwOnChangeVar, fieldExpr, evalResult.currValExpr\n      ]);\n      if (evalResult.forceUpdate) {\n          condition = evalResult.forceUpdate.or(condition);\n      }\n      return evalResult.stmts.concat([\n          new IfStmt(condition, actions.concat([\n              THIS_EXPR.prop(fieldExpr.name).set(evalResult.currValExpr).toStmt()\n          ]))\n      ]);\n  }\n  function createBindFieldExpr(bindingId) {\n      return THIS_EXPR.prop(\"_expr_\" + bindingId);\n  }\n\n  var VAL_UNWRAPPER_VAR = variable(\"valUnwrapper\");\n  var EventHandlerVars = (function () {\n      function EventHandlerVars() {\n      }\n      EventHandlerVars.event = variable('$event');\n      return EventHandlerVars;\n  }());\n  var ConvertPropertyBindingResult = (function () {\n      function ConvertPropertyBindingResult(stmts, currValExpr, forceUpdate) {\n          this.stmts = stmts;\n          this.currValExpr = currValExpr;\n          this.forceUpdate = forceUpdate;\n      }\n      return ConvertPropertyBindingResult;\n  }());\n  /**\n   * Converts the given expression AST into an executable output AST, assuming the expression is\n   * used in a property binding.\n   */\n  function convertPropertyBinding(builder, nameResolver, implicitReceiver, expression, bindingId) {\n      var currValExpr = createCurrValueExpr(bindingId);\n      var stmts = [];\n      if (!nameResolver) {\n          nameResolver = new DefaultNameResolver();\n      }\n      var visitor = new _AstToIrVisitor(builder, nameResolver, implicitReceiver, VAL_UNWRAPPER_VAR, bindingId, false);\n      var outputExpr = expression.visit(visitor, _Mode.Expression);\n      if (!outputExpr) {\n          // e.g. an empty expression was given\n          return null;\n      }\n      if (visitor.temporaryCount) {\n          for (var i = 0; i < visitor.temporaryCount; i++) {\n              stmts.push(temporaryDeclaration(bindingId, i));\n          }\n      }\n      if (visitor.needsValueUnwrapper) {\n          var initValueUnwrapperStmt = VAL_UNWRAPPER_VAR.callMethod('reset', []).toStmt();\n          stmts.push(initValueUnwrapperStmt);\n      }\n      stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n      if (visitor.needsValueUnwrapper) {\n          return new ConvertPropertyBindingResult(stmts, currValExpr, VAL_UNWRAPPER_VAR.prop('hasWrappedValue'));\n      }\n      else {\n          return new ConvertPropertyBindingResult(stmts, currValExpr, null);\n      }\n  }\n  var ConvertActionBindingResult = (function () {\n      function ConvertActionBindingResult(stmts, preventDefault) {\n          this.stmts = stmts;\n          this.preventDefault = preventDefault;\n      }\n      return ConvertActionBindingResult;\n  }());\n  /**\n   * Converts the given expression AST into an executable output AST, assuming the expression is\n   * used in an action binding (e.g. an event handler).\n   */\n  function convertActionBinding(builder, nameResolver, implicitReceiver, action, bindingId) {\n      if (!nameResolver) {\n          nameResolver = new DefaultNameResolver();\n      }\n      var visitor = new _AstToIrVisitor(builder, nameResolver, implicitReceiver, null, bindingId, true);\n      var actionStmts = [];\n      flattenStatements(action.visit(visitor, _Mode.Statement), actionStmts);\n      prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n      var lastIndex = actionStmts.length - 1;\n      var preventDefaultVar = null;\n      if (lastIndex >= 0) {\n          var lastStatement = actionStmts[lastIndex];\n          var returnExpr = convertStmtIntoExpression(lastStatement);\n          if (returnExpr) {\n              // Note: We need to cast the result of the method call to dynamic,\n              // as it might be a void method!\n              preventDefaultVar = createPreventDefaultVar(bindingId);\n              actionStmts[lastIndex] =\n                  preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                      .toDeclStmt(null, [StmtModifier.Final]);\n          }\n      }\n      return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n  }\n  /**\n   * Creates variables that are shared by multiple calls to `convertActionBinding` /\n   * `convertPropertyBinding`\n   */\n  function createSharedBindingVariablesIfNeeded(stmts) {\n      var unwrapperStmts = [];\n      var readVars = findReadVarNames(stmts);\n      if (readVars.has(VAL_UNWRAPPER_VAR.name)) {\n          unwrapperStmts.push(VAL_UNWRAPPER_VAR\n              .set(importExpr(resolveIdentifier(Identifiers.ValueUnwrapper)).instantiate([]))\n              .toDeclStmt(null, [StmtModifier.Final]));\n      }\n      return unwrapperStmts;\n  }\n  function temporaryName(bindingId, temporaryNumber) {\n      return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n  }\n  function temporaryDeclaration(bindingId, temporaryNumber) {\n      return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n  }\n  function prependTemporaryDecls(temporaryCount, bindingId, statements) {\n      for (var i = temporaryCount - 1; i >= 0; i--) {\n          statements.unshift(temporaryDeclaration(bindingId, i));\n      }\n  }\n  var _Mode;\n  (function (_Mode) {\n      _Mode[_Mode[\"Statement\"] = 0] = \"Statement\";\n      _Mode[_Mode[\"Expression\"] = 1] = \"Expression\";\n  })(_Mode || (_Mode = {}));\n  function ensureStatementMode(mode, ast) {\n      if (mode !== _Mode.Statement) {\n          throw new Error(\"Expected a statement, but saw \" + ast);\n      }\n  }\n  function ensureExpressionMode(mode, ast) {\n      if (mode !== _Mode.Expression) {\n          throw new Error(\"Expected an expression, but saw \" + ast);\n      }\n  }\n  function convertToStatementIfNeeded(mode, expr) {\n      if (mode === _Mode.Statement) {\n          return expr.toStmt();\n      }\n      else {\n          return expr;\n      }\n  }\n  var _AstToIrVisitor = (function () {\n      function _AstToIrVisitor(_builder, _nameResolver, _implicitReceiver, _valueUnwrapper, bindingId, isAction) {\n          this._builder = _builder;\n          this._nameResolver = _nameResolver;\n          this._implicitReceiver = _implicitReceiver;\n          this._valueUnwrapper = _valueUnwrapper;\n          this.bindingId = bindingId;\n          this.isAction = isAction;\n          this._nodeMap = new Map();\n          this._resultMap = new Map();\n          this._currentTemporary = 0;\n          this.needsValueUnwrapper = false;\n          this.temporaryCount = 0;\n      }\n      _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n          var op;\n          switch (ast.operation) {\n              case '+':\n                  op = BinaryOperator.Plus;\n                  break;\n              case '-':\n                  op = BinaryOperator.Minus;\n                  break;\n              case '*':\n                  op = BinaryOperator.Multiply;\n                  break;\n              case '/':\n                  op = BinaryOperator.Divide;\n                  break;\n              case '%':\n                  op = BinaryOperator.Modulo;\n                  break;\n              case '&&':\n                  op = BinaryOperator.And;\n                  break;\n              case '||':\n                  op = BinaryOperator.Or;\n                  break;\n              case '==':\n                  op = BinaryOperator.Equals;\n                  break;\n              case '!=':\n                  op = BinaryOperator.NotEquals;\n                  break;\n              case '===':\n                  op = BinaryOperator.Identical;\n                  break;\n              case '!==':\n                  op = BinaryOperator.NotIdentical;\n                  break;\n              case '<':\n                  op = BinaryOperator.Lower;\n                  break;\n              case '>':\n                  op = BinaryOperator.Bigger;\n                  break;\n              case '<=':\n                  op = BinaryOperator.LowerEquals;\n                  break;\n              case '>=':\n                  op = BinaryOperator.BiggerEquals;\n                  break;\n              default:\n                  throw new Error(\"Unsupported operation \" + ast.operation);\n          }\n          return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this.visit(ast.left, _Mode.Expression), this.visit(ast.right, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n          ensureStatementMode(mode, ast);\n          return this.visitAll(ast.expressions, mode);\n      };\n      _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n          var value = this.visit(ast.condition, _Mode.Expression);\n          return convertToStatementIfNeeded(mode, value.conditional(this.visit(ast.trueExp, _Mode.Expression), this.visit(ast.falseExp, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n          var input = this.visit(ast.exp, _Mode.Expression);\n          var args = this.visitAll(ast.args, _Mode.Expression);\n          var value = this._nameResolver.callPipe(ast.name, input, args);\n          if (!value) {\n              throw new Error(\"Illegal state: Pipe \" + ast.name + \" is not allowed here!\");\n          }\n          this.needsValueUnwrapper = true;\n          return convertToStatementIfNeeded(mode, this._valueUnwrapper.callMethod('unwrap', [value]));\n      };\n      _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n          return convertToStatementIfNeeded(mode, this.visit(ast.target, _Mode.Expression).callFn(this.visitAll(ast.args, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n          ensureExpressionMode(mode, ast);\n          return this._implicitReceiver;\n      };\n      _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n          ensureExpressionMode(mode, ast);\n          var args = [literal(ast.expressions.length)];\n          for (var i = 0; i < ast.strings.length - 1; i++) {\n              args.push(literal(ast.strings[i]));\n              args.push(this.visit(ast.expressions[i], _Mode.Expression));\n          }\n          args.push(literal(ast.strings[ast.strings.length - 1]));\n          return importExpr(resolveIdentifier(Identifiers.interpolate)).callFn(args);\n      };\n      _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n          return convertToStatementIfNeeded(mode, this.visit(ast.obj, _Mode.Expression).key(this.visit(ast.key, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n          var obj = this.visit(ast.obj, _Mode.Expression);\n          var key = this.visit(ast.key, _Mode.Expression);\n          var value = this.visit(ast.value, _Mode.Expression);\n          return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n      };\n      _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n          var parts = this.visitAll(ast.expressions, mode);\n          var literalArr$$ = this.isAction ? literalArr(parts) : createCachedLiteralArray(this._builder, parts);\n          return convertToStatementIfNeeded(mode, literalArr$$);\n      };\n      _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n          var parts = [];\n          for (var i = 0; i < ast.keys.length; i++) {\n              parts.push([ast.keys[i], this.visit(ast.values[i], _Mode.Expression)]);\n          }\n          var literalMap$$ = this.isAction ? literalMap(parts) : createCachedLiteralMap(this._builder, parts);\n          return convertToStatementIfNeeded(mode, literalMap$$);\n      };\n      _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n          return convertToStatementIfNeeded(mode, literal(ast.value));\n      };\n      _AstToIrVisitor.prototype._getLocal = function (name) {\n          if (this.isAction && name == EventHandlerVars.event.name) {\n              return EventHandlerVars.event;\n          }\n          return this._nameResolver.getLocal(name);\n      };\n      _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n          var leftMostSafe = this.leftMostSafeNode(ast);\n          if (leftMostSafe) {\n              return this.convertSafeAccess(ast, leftMostSafe, mode);\n          }\n          else {\n              var args = this.visitAll(ast.args, _Mode.Expression);\n              var result = null;\n              var receiver = this.visit(ast.receiver, _Mode.Expression);\n              if (receiver === this._implicitReceiver) {\n                  var varExpr = this._getLocal(ast.name);\n                  if (isPresent(varExpr)) {\n                      result = varExpr.callFn(args);\n                  }\n              }\n              if (isBlank(result)) {\n                  result = receiver.callMethod(ast.name, args);\n              }\n              return convertToStatementIfNeeded(mode, result);\n          }\n      };\n      _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n          return convertToStatementIfNeeded(mode, not(this.visit(ast.expression, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n          var leftMostSafe = this.leftMostSafeNode(ast);\n          if (leftMostSafe) {\n              return this.convertSafeAccess(ast, leftMostSafe, mode);\n          }\n          else {\n              var result = null;\n              var receiver = this.visit(ast.receiver, _Mode.Expression);\n              if (receiver === this._implicitReceiver) {\n                  result = this._getLocal(ast.name);\n              }\n              if (isBlank(result)) {\n                  result = receiver.prop(ast.name);\n              }\n              return convertToStatementIfNeeded(mode, result);\n          }\n      };\n      _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n          var receiver = this.visit(ast.receiver, _Mode.Expression);\n          if (receiver === this._implicitReceiver) {\n              var varExpr = this._getLocal(ast.name);\n              if (isPresent(varExpr)) {\n                  throw new Error('Cannot assign to a reference or variable!');\n              }\n          }\n          return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this.visit(ast.value, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n          return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n      };\n      _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n          return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n      };\n      _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n          var _this = this;\n          return asts.map(function (ast) { return _this.visit(ast, mode); });\n      };\n      _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n          throw new Error('Quotes are not supported for evaluation!');\n      };\n      _AstToIrVisitor.prototype.visit = function (ast, mode) {\n          var result = this._resultMap.get(ast);\n          if (result)\n              return result;\n          return (this._nodeMap.get(ast) || ast).visit(this, mode);\n      };\n      _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n          // If the expression contains a safe access node on the left it needs to be converted to\n          // an expression that guards the access to the member by checking the receiver for blank. As\n          // execution proceeds from left to right, the left most part of the expression must be guarded\n          // first but, because member access is left associative, the right side of the expression is at\n          // the top of the AST. The desired result requires lifting a copy of the the left part of the\n          // expression up to test it for blank before generating the unguarded version.\n          // Consider, for example the following expression: a?.b.c?.d.e\n          // This results in the ast:\n          //         .\n          //        / \\\n          //       ?.   e\n          //      /  \\\n          //     .    d\n          //    / \\\n          //   ?.  c\n          //  /  \\\n          // a    b\n          // The following tree should be generated:\n          //\n          //        /---- ? ----\\\n          //       /      |      \\\n          //     a   /--- ? ---\\  null\n          //        /     |     \\\n          //       .      .     null\n          //      / \\    / \\\n          //     .  c   .   e\n          //    / \\    / \\\n          //   a   b  ,   d\n          //         / \\\n          //        .   c\n          //       / \\\n          //      a   b\n          //\n          // Notice that the first guard condition is the left hand of the left most safe access node\n          // which comes in as leftMostSafe to this routine.\n          var guardedExpression = this.visit(leftMostSafe.receiver, _Mode.Expression);\n          var temporary;\n          if (this.needsTemporary(leftMostSafe.receiver)) {\n              // If the expression has method calls or pipes then we need to save the result into a\n              // temporary variable to avoid calling stateful or impure code more than once.\n              temporary = this.allocateTemporary();\n              // Preserve the result in the temporary variable\n              guardedExpression = temporary.set(guardedExpression);\n              // Ensure all further references to the guarded expression refer to the temporary instead.\n              this._resultMap.set(leftMostSafe.receiver, temporary);\n          }\n          var condition = guardedExpression.isBlank();\n          // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n          // leftMostNode with its unguarded version in the call to `this.visit()`.\n          if (leftMostSafe instanceof SafeMethodCall) {\n              this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n          }\n          else {\n              this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n          }\n          // Recursively convert the node now without the guarded member access.\n          var access = this.visit(ast, _Mode.Expression);\n          // Remove the mapping. This is not strictly required as the converter only traverses each node\n          // once but is safer if the conversion is changed to traverse the nodes more than once.\n          this._nodeMap.delete(leftMostSafe);\n          // If we allcoated a temporary, release it.\n          if (temporary) {\n              this.releaseTemporary(temporary);\n          }\n          // Produce the conditional\n          return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n      };\n      // Given a expression of the form a?.b.c?.d.e the the left most safe node is\n      // the (a?.b). The . and ?. are left associative thus can be rewritten as:\n      // ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or\n      // safe method call as this needs be transform initially to:\n      //   a == null ? null : a.c.b.c?.d.e\n      // then to:\n      //   a == null ? null : a.b.c == null ? null : a.b.c.d.e\n      _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n          var _this = this;\n          var visit = function (visitor, ast) {\n              return (_this._nodeMap.get(ast) || ast).visit(visitor);\n          };\n          return ast.visit({\n              visitBinary: function (ast) { return null; },\n              visitChain: function (ast) { return null; },\n              visitConditional: function (ast) { return null; },\n              visitFunctionCall: function (ast) { return null; },\n              visitImplicitReceiver: function (ast) { return null; },\n              visitInterpolation: function (ast) { return null; },\n              visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n              visitKeyedWrite: function (ast) { return null; },\n              visitLiteralArray: function (ast) { return null; },\n              visitLiteralMap: function (ast) { return null; },\n              visitLiteralPrimitive: function (ast) { return null; },\n              visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n              visitPipe: function (ast) { return null; },\n              visitPrefixNot: function (ast) { return null; },\n              visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n              visitPropertyWrite: function (ast) { return null; },\n              visitQuote: function (ast) { return null; },\n              visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n              visitSafePropertyRead: function (ast) {\n                  return visit(this, ast.receiver) || ast;\n              }\n          });\n      };\n      // Returns true of the AST includes a method or a pipe indicating that, if the\n      // expression is used as the target of a safe property or method access then\n      // the expression should be stored into a temporary variable.\n      _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n          var _this = this;\n          var visit = function (visitor, ast) {\n              return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n          };\n          var visitSome = function (visitor, ast) {\n              return ast.some(function (ast) { return visit(visitor, ast); });\n          };\n          return ast.visit({\n              visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n              visitChain: function (ast) { return false; },\n              visitConditional: function (ast) {\n                  return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                      visit(this, ast.falseExp);\n              },\n              visitFunctionCall: function (ast) { return true; },\n              visitImplicitReceiver: function (ast) { return false; },\n              visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n              visitKeyedRead: function (ast) { return false; },\n              visitKeyedWrite: function (ast) { return false; },\n              visitLiteralArray: function (ast) { return true; },\n              visitLiteralMap: function (ast) { return true; },\n              visitLiteralPrimitive: function (ast) { return false; },\n              visitMethodCall: function (ast) { return true; },\n              visitPipe: function (ast) { return true; },\n              visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n              visitPropertyRead: function (ast) { return false; },\n              visitPropertyWrite: function (ast) { return false; },\n              visitQuote: function (ast) { return false; },\n              visitSafeMethodCall: function (ast) { return true; },\n              visitSafePropertyRead: function (ast) { return false; }\n          });\n      };\n      _AstToIrVisitor.prototype.allocateTemporary = function () {\n          var tempNumber = this._currentTemporary++;\n          this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n          return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n      };\n      _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n          this._currentTemporary--;\n          if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n              throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n          }\n      };\n      return _AstToIrVisitor;\n  }());\n  function flattenStatements(arg, output) {\n      if (Array.isArray(arg)) {\n          arg.forEach(function (entry) { return flattenStatements(entry, output); });\n      }\n      else {\n          output.push(arg);\n      }\n  }\n  function createCachedLiteralArray(builder, values) {\n      if (values.length === 0) {\n          return importExpr(resolveIdentifier(Identifiers.EMPTY_ARRAY));\n      }\n      var proxyExpr = THIS_EXPR.prop(\"_arr_\" + builder.fields.length);\n      var proxyParams = [];\n      var proxyReturnEntries = [];\n      for (var i = 0; i < values.length; i++) {\n          var paramName = \"p\" + i;\n          proxyParams.push(new FnParam(paramName));\n          proxyReturnEntries.push(variable(paramName));\n      }\n      createPureProxy(fn(proxyParams, [new ReturnStatement(literalArr(proxyReturnEntries))], new ArrayType(DYNAMIC_TYPE)), values.length, proxyExpr, builder);\n      return proxyExpr.callFn(values);\n  }\n  function createCachedLiteralMap(builder, entries) {\n      if (entries.length === 0) {\n          return importExpr(resolveIdentifier(Identifiers.EMPTY_MAP));\n      }\n      var proxyExpr = THIS_EXPR.prop(\"_map_\" + builder.fields.length);\n      var proxyParams = [];\n      var proxyReturnEntries = [];\n      var values = [];\n      for (var i = 0; i < entries.length; i++) {\n          var paramName = \"p\" + i;\n          proxyParams.push(new FnParam(paramName));\n          proxyReturnEntries.push([entries[i][0], variable(paramName)]);\n          values.push(entries[i][1]);\n      }\n      createPureProxy(fn(proxyParams, [new ReturnStatement(literalMap(proxyReturnEntries))], new MapType(DYNAMIC_TYPE)), entries.length, proxyExpr, builder);\n      return proxyExpr.callFn(values);\n  }\n  var DefaultNameResolver = (function () {\n      function DefaultNameResolver() {\n      }\n      DefaultNameResolver.prototype.callPipe = function (name, input, args) { return null; };\n      DefaultNameResolver.prototype.getLocal = function (name) { return null; };\n      return DefaultNameResolver;\n  }());\n  function createCurrValueExpr(bindingId) {\n      return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n  }\n  function createPreventDefaultVar(bindingId) {\n      return variable(\"pd_\" + bindingId);\n  }\n  function convertStmtIntoExpression(stmt) {\n      if (stmt instanceof ExpressionStatement) {\n          return stmt.expr;\n      }\n      else if (stmt instanceof ReturnStatement) {\n          return stmt.value;\n      }\n      return null;\n  }\n\n  function writeToRenderer(view, boundProp, renderElement, renderValue, logBindingUpdate, securityContextExpression) {\n      var updateStmts = [];\n      var renderer = view.prop('renderer');\n      renderValue = sanitizedValue(view, boundProp, renderValue, securityContextExpression);\n      switch (boundProp.type) {\n          case exports.PropertyBindingType.Property:\n              if (logBindingUpdate) {\n                  updateStmts.push(importExpr(resolveIdentifier(Identifiers.setBindingDebugInfo))\n                      .callFn([renderer, renderElement, literal(boundProp.name), renderValue])\n                      .toStmt());\n              }\n              updateStmts.push(renderer\n                  .callMethod('setElementProperty', [renderElement, literal(boundProp.name), renderValue])\n                  .toStmt());\n              break;\n          case exports.PropertyBindingType.Attribute:\n              renderValue =\n                  renderValue.isBlank().conditional(NULL_EXPR, renderValue.callMethod('toString', []));\n              updateStmts.push(renderer\n                  .callMethod('setElementAttribute', [renderElement, literal(boundProp.name), renderValue])\n                  .toStmt());\n              break;\n          case exports.PropertyBindingType.Class:\n              updateStmts.push(renderer\n                  .callMethod('setElementClass', [renderElement, literal(boundProp.name), renderValue])\n                  .toStmt());\n              break;\n          case exports.PropertyBindingType.Style:\n              var strValue = renderValue.callMethod('toString', []);\n              if (isPresent(boundProp.unit)) {\n                  strValue = strValue.plus(literal(boundProp.unit));\n              }\n              renderValue = renderValue.isBlank().conditional(NULL_EXPR, strValue);\n              updateStmts.push(renderer\n                  .callMethod('setElementStyle', [renderElement, literal(boundProp.name), renderValue])\n                  .toStmt());\n              break;\n          case exports.PropertyBindingType.Animation:\n              throw new Error('Illegal state: Should not come here!');\n      }\n      return updateStmts;\n  }\n  function sanitizedValue(view, boundProp, renderValue, securityContextExpression) {\n      if (boundProp.securityContext === _angular_core.SecurityContext.NONE) {\n          return renderValue; // No sanitization needed.\n      }\n      if (!boundProp.needsRuntimeSecurityContext) {\n          securityContextExpression =\n              createEnumExpression(Identifiers.SecurityContext, boundProp.securityContext);\n      }\n      if (!securityContextExpression) {\n          throw new Error(\"internal error, no SecurityContext given \" + boundProp.name);\n      }\n      var ctx = view.prop('viewUtils').prop('sanitizer');\n      var args = [securityContextExpression, renderValue];\n      return ctx.callMethod('sanitize', args);\n  }\n\n  /**\n   * Create a new class stmts based on the given data.\n   */\n  function createClassStmt(config) {\n      var parentArgs = config.parentArgs || [];\n      var superCtorStmts = config.parent ? [SUPER_EXPR.callFn(parentArgs).toStmt()] : [];\n      var builder = concatClassBuilderParts(Array.isArray(config.builders) ? config.builders : [config.builders]);\n      var ctor = new ClassMethod(null, config.ctorParams || [], superCtorStmts.concat(builder.ctorStmts));\n      return new ClassStmt(config.name, config.parent, builder.fields, builder.getters, ctor, builder.methods, config.modifiers || []);\n  }\n  function concatClassBuilderParts(builders) {\n      return {\n          fields: (_a = []).concat.apply(_a, builders.map(function (builder) { return builder.fields || []; })),\n          methods: (_b = []).concat.apply(_b, builders.map(function (builder) { return builder.methods || []; })),\n          getters: (_c = []).concat.apply(_c, builders.map(function (builder) { return builder.getters || []; })),\n          ctorStmts: (_d = []).concat.apply(_d, builders.map(function (builder) { return builder.ctorStmts || []; })),\n      };\n      var _a, _b, _c, _d;\n  }\n\n  var DirectiveWrapperCompileResult = (function () {\n      function DirectiveWrapperCompileResult(statements, dirWrapperClassVar) {\n          this.statements = statements;\n          this.dirWrapperClassVar = dirWrapperClassVar;\n      }\n      return DirectiveWrapperCompileResult;\n  }());\n  var CONTEXT_FIELD_NAME = 'context';\n  var CHANGES_FIELD_NAME = 'changes';\n  var CHANGED_FIELD_NAME = 'changed';\n  var CURR_VALUE_VAR = variable('currValue');\n  var THROW_ON_CHANGE_VAR = variable('throwOnChange');\n  var FORCE_UPDATE_VAR = variable('forceUpdate');\n  var VIEW_VAR = variable('view');\n  var RENDER_EL_VAR = variable('el');\n  var RESET_CHANGES_STMT = THIS_EXPR.prop(CHANGES_FIELD_NAME).set(literalMap([])).toStmt();\n  /**\n   * We generate directive wrappers to prevent code bloat when a directive is used.\n   * A directive wrapper encapsulates\n   * the dirty checking for `@Input`, the handling of `@HostListener` / `@HostBinding`\n   * and calling the lifecyclehooks `ngOnInit`, `ngOnChanges`, `ngDoCheck`.\n   *\n   * So far, only `@Input` and the lifecycle hooks have been implemented.\n   */\n  var DirectiveWrapperCompiler = (function () {\n      function DirectiveWrapperCompiler(compilerConfig, _exprParser, _schemaRegistry, _console) {\n          this.compilerConfig = compilerConfig;\n          this._exprParser = _exprParser;\n          this._schemaRegistry = _schemaRegistry;\n          this._console = _console;\n      }\n      DirectiveWrapperCompiler.dirWrapperClassName = function (id) { return \"Wrapper_\" + id.name; };\n      DirectiveWrapperCompiler.prototype.compile = function (dirMeta) {\n          var builder = new DirectiveWrapperBuilder(this.compilerConfig, dirMeta);\n          Object.keys(dirMeta.inputs).forEach(function (inputFieldName) {\n              addCheckInputMethod(inputFieldName, builder);\n          });\n          addDetectChangesInInputPropsMethod(builder);\n          var hostParseResult = parseHostBindings(dirMeta, this._exprParser, this._schemaRegistry);\n          reportParseErrors(hostParseResult.errors, this._console);\n          // host properties are change detected by the DirectiveWrappers,\n          // except for the animation properties as they need close integration with animation events\n          // and DirectiveWrappers don't support\n          // event listeners right now.\n          addDetectChangesInHostPropsMethod(hostParseResult.hostProps.filter(function (hostProp) { return !hostProp.isAnimation; }), builder);\n          // TODO(tbosch): implement hostListeners via DirectiveWrapper as well!\n          var classStmt = builder.build();\n          return new DirectiveWrapperCompileResult([classStmt], classStmt.name);\n      };\n      DirectiveWrapperCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      DirectiveWrapperCompiler.ctorParameters = [\n          { type: CompilerConfig, },\n          { type: Parser, },\n          { type: ElementSchemaRegistry, },\n          { type: Console, },\n      ];\n      return DirectiveWrapperCompiler;\n  }());\n  var DirectiveWrapperBuilder = (function () {\n      function DirectiveWrapperBuilder(compilerConfig, dirMeta) {\n          this.compilerConfig = compilerConfig;\n          this.dirMeta = dirMeta;\n          this.fields = [];\n          this.getters = [];\n          this.methods = [];\n          this.ctorStmts = [];\n          var dirLifecycleHooks = dirMeta.type.lifecycleHooks;\n          this.genChanges = dirLifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1 ||\n              this.compilerConfig.logBindingUpdate;\n          this.ngOnChanges = dirLifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1;\n          this.ngOnInit = dirLifecycleHooks.indexOf(LifecycleHooks.OnInit) !== -1;\n          this.ngDoCheck = dirLifecycleHooks.indexOf(LifecycleHooks.DoCheck) !== -1;\n      }\n      DirectiveWrapperBuilder.prototype.build = function () {\n          var dirDepParamNames = [];\n          for (var i = 0; i < this.dirMeta.type.diDeps.length; i++) {\n              dirDepParamNames.push(\"p\" + i);\n          }\n          var fields = [\n              new ClassField(CONTEXT_FIELD_NAME, importType(this.dirMeta.type)),\n              new ClassField(CHANGED_FIELD_NAME, BOOL_TYPE),\n          ];\n          var ctorStmts = [THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(false)).toStmt()];\n          if (this.genChanges) {\n              fields.push(new ClassField(CHANGES_FIELD_NAME, new MapType(DYNAMIC_TYPE)));\n              ctorStmts.push(RESET_CHANGES_STMT);\n          }\n          ctorStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n              .set(importExpr(this.dirMeta.type)\n              .instantiate(dirDepParamNames.map(function (paramName) { return variable(paramName); })))\n              .toStmt());\n          return createClassStmt({\n              name: DirectiveWrapperCompiler.dirWrapperClassName(this.dirMeta.type),\n              ctorParams: dirDepParamNames.map(function (paramName) { return new FnParam(paramName, DYNAMIC_TYPE); }),\n              builders: [{ fields: fields, ctorStmts: ctorStmts }, this]\n          });\n      };\n      return DirectiveWrapperBuilder;\n  }());\n  function addDetectChangesInInputPropsMethod(builder) {\n      var changedVar = variable('changed');\n      var stmts = [\n          changedVar.set(THIS_EXPR.prop(CHANGED_FIELD_NAME)).toDeclStmt(),\n          THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(false)).toStmt(),\n      ];\n      var lifecycleStmts = [];\n      if (builder.genChanges) {\n          var onChangesStmts = [];\n          if (builder.ngOnChanges) {\n              onChangesStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n                  .callMethod('ngOnChanges', [THIS_EXPR.prop(CHANGES_FIELD_NAME)])\n                  .toStmt());\n          }\n          if (builder.compilerConfig.logBindingUpdate) {\n              onChangesStmts.push(importExpr(resolveIdentifier(Identifiers.setBindingDebugInfoForChanges))\n                  .callFn([VIEW_VAR.prop('renderer'), RENDER_EL_VAR, THIS_EXPR.prop(CHANGES_FIELD_NAME)])\n                  .toStmt());\n          }\n          onChangesStmts.push(RESET_CHANGES_STMT);\n          lifecycleStmts.push(new IfStmt(changedVar, onChangesStmts));\n      }\n      if (builder.ngOnInit) {\n          lifecycleStmts.push(new IfStmt(VIEW_VAR.prop('numberOfChecks').identical(new LiteralExpr(0)), [THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngOnInit', []).toStmt()]));\n      }\n      if (builder.ngDoCheck) {\n          lifecycleStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngDoCheck', []).toStmt());\n      }\n      if (lifecycleStmts.length > 0) {\n          stmts.push(new IfStmt(not(THROW_ON_CHANGE_VAR), lifecycleStmts));\n      }\n      stmts.push(new ReturnStatement(changedVar));\n      builder.methods.push(new ClassMethod('detectChangesInInputProps', [\n          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n          new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n      ], stmts, BOOL_TYPE));\n  }\n  function addCheckInputMethod(input, builder) {\n      var field = createCheckBindingField(builder);\n      var onChangeStatements = [\n          THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(true)).toStmt(),\n          THIS_EXPR.prop(CONTEXT_FIELD_NAME).prop(input).set(CURR_VALUE_VAR).toStmt(),\n      ];\n      if (builder.genChanges) {\n          onChangeStatements.push(THIS_EXPR.prop(CHANGES_FIELD_NAME)\n              .key(literal(input))\n              .set(importExpr(resolveIdentifier(Identifiers.SimpleChange))\n              .instantiate([field.expression, CURR_VALUE_VAR]))\n              .toStmt());\n      }\n      var methodBody = createCheckBindingStmt({ currValExpr: CURR_VALUE_VAR, forceUpdate: FORCE_UPDATE_VAR, stmts: [] }, field.expression, THROW_ON_CHANGE_VAR, onChangeStatements);\n      builder.methods.push(new ClassMethod(\"check_\" + input, [\n          new FnParam(CURR_VALUE_VAR.name, DYNAMIC_TYPE),\n          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n          new FnParam(FORCE_UPDATE_VAR.name, BOOL_TYPE),\n      ], methodBody));\n  }\n  function addDetectChangesInHostPropsMethod(hostProps, builder) {\n      var stmts = [];\n      var methodParams = [\n          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n          new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n      ];\n      hostProps.forEach(function (hostProp) {\n          var field = createCheckBindingField(builder);\n          var evalResult = convertPropertyBinding(builder, null, THIS_EXPR.prop(CONTEXT_FIELD_NAME), hostProp.value, field.bindingId);\n          if (!evalResult) {\n              return;\n          }\n          var securityContextExpr;\n          if (hostProp.needsRuntimeSecurityContext) {\n              securityContextExpr = variable(\"secCtx_\" + methodParams.length);\n              methodParams.push(new FnParam(securityContextExpr.name, importType(resolveIdentifier(Identifiers.SecurityContext))));\n          }\n          stmts.push.apply(stmts, createCheckBindingStmt(evalResult, field.expression, THROW_ON_CHANGE_VAR, writeToRenderer(VIEW_VAR, hostProp, RENDER_EL_VAR, evalResult.currValExpr, builder.compilerConfig.logBindingUpdate, securityContextExpr)));\n      });\n      builder.methods.push(new ClassMethod('detectChangesInHostProps', methodParams, stmts));\n  }\n  var ParseResult = (function () {\n      function ParseResult(hostProps, hostListeners, errors) {\n          this.hostProps = hostProps;\n          this.hostListeners = hostListeners;\n          this.errors = errors;\n      }\n      return ParseResult;\n  }());\n  function parseHostBindings(dirMeta, exprParser, schemaRegistry) {\n      var errors = [];\n      var parser = new BindingParser(exprParser, DEFAULT_INTERPOLATION_CONFIG, schemaRegistry, [], errors);\n      var sourceFileName = dirMeta.type.moduleUrl ?\n          \"in Directive \" + dirMeta.type.name + \" in \" + dirMeta.type.moduleUrl :\n          \"in Directive \" + dirMeta.type.name;\n      var sourceFile = new ParseSourceFile('', sourceFileName);\n      var sourceSpan = new ParseSourceSpan(new ParseLocation(sourceFile, null, null, null), new ParseLocation(sourceFile, null, null, null));\n      var parsedHostProps = parser.createDirectiveHostPropertyAsts(dirMeta, sourceSpan);\n      var parsedHostListeners = parser.createDirectiveHostEventAsts(dirMeta, sourceSpan);\n      return new ParseResult(parsedHostProps, parsedHostListeners, errors);\n  }\n  function reportParseErrors(parseErrors, console) {\n      var warnings = parseErrors.filter(function (error) { return error.level === exports.ParseErrorLevel.WARNING; });\n      var errors = parseErrors.filter(function (error) { return error.level === exports.ParseErrorLevel.FATAL; });\n      if (warnings.length > 0) {\n          this._console.warn(\"Directive parse warnings:\\n\" + warnings.join('\\n'));\n      }\n      if (errors.length > 0) {\n          throw new Error(\"Directive parse errors:\\n\" + errors.join('\\n'));\n      }\n  }\n\n  function convertValueToOutputAst(value, type) {\n      if (type === void 0) { type = null; }\n      return visitValue(value, new _ValueOutputAstTransformer(), type);\n  }\n  var _ValueOutputAstTransformer = (function () {\n      function _ValueOutputAstTransformer() {\n      }\n      _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n          var _this = this;\n          return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n      };\n      _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n          var _this = this;\n          var entries = [];\n          Object.keys(map).forEach(function (key) { entries.push([key, visitValue(map[key], _this, null)]); });\n          return literalMap(entries, type);\n      };\n      _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n      _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n          if (value instanceof CompileIdentifierMetadata) {\n              return importExpr(value);\n          }\n          else if (value instanceof Expression) {\n              return value;\n          }\n          else {\n              throw new Error(\"Illegal state: Don't now how to compile value \" + value);\n          }\n      };\n      return _ValueOutputAstTransformer;\n  }());\n\n  var _DebugState = (function () {\n      function _DebugState(nodeIndex, sourceAst) {\n          this.nodeIndex = nodeIndex;\n          this.sourceAst = sourceAst;\n      }\n      return _DebugState;\n  }());\n  var NULL_DEBUG_STATE = new _DebugState(null, null);\n  var CompileMethod = (function () {\n      function CompileMethod(_view) {\n          this._view = _view;\n          this._newState = NULL_DEBUG_STATE;\n          this._currState = NULL_DEBUG_STATE;\n          this._bodyStatements = [];\n          this._debugEnabled = this._view.genConfig.genDebugInfo;\n      }\n      CompileMethod.prototype._updateDebugContextIfNeeded = function () {\n          if (this._newState.nodeIndex !== this._currState.nodeIndex ||\n              this._newState.sourceAst !== this._currState.sourceAst) {\n              var expr = this._updateDebugContext(this._newState);\n              if (isPresent(expr)) {\n                  this._bodyStatements.push(expr.toStmt());\n              }\n          }\n      };\n      CompileMethod.prototype._updateDebugContext = function (newState) {\n          this._currState = this._newState = newState;\n          if (this._debugEnabled) {\n              var sourceLocation = isPresent(newState.sourceAst) ? newState.sourceAst.sourceSpan.start : null;\n              return THIS_EXPR.callMethod('debug', [\n                  literal(newState.nodeIndex),\n                  isPresent(sourceLocation) ? literal(sourceLocation.line) : NULL_EXPR,\n                  isPresent(sourceLocation) ? literal(sourceLocation.col) : NULL_EXPR\n              ]);\n          }\n          else {\n              return null;\n          }\n      };\n      CompileMethod.prototype.resetDebugInfoExpr = function (nodeIndex, templateAst) {\n          var res = this._updateDebugContext(new _DebugState(nodeIndex, templateAst));\n          return res || NULL_EXPR;\n      };\n      CompileMethod.prototype.resetDebugInfo = function (nodeIndex, templateAst) {\n          this._newState = new _DebugState(nodeIndex, templateAst);\n      };\n      CompileMethod.prototype.push = function () {\n          var stmts = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              stmts[_i - 0] = arguments[_i];\n          }\n          this.addStmts(stmts);\n      };\n      CompileMethod.prototype.addStmt = function (stmt) {\n          this._updateDebugContextIfNeeded();\n          this._bodyStatements.push(stmt);\n      };\n      CompileMethod.prototype.addStmts = function (stmts) {\n          this._updateDebugContextIfNeeded();\n          (_a = this._bodyStatements).push.apply(_a, stmts);\n          var _a;\n      };\n      CompileMethod.prototype.finish = function () { return this._bodyStatements; };\n      CompileMethod.prototype.isEmpty = function () { return this._bodyStatements.length === 0; };\n      return CompileMethod;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$16 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  function getPropertyInView(property, callingView, definedView) {\n      if (callingView === definedView) {\n          return property;\n      }\n      else {\n          var viewProp = THIS_EXPR;\n          var currView = callingView;\n          while (currView !== definedView && isPresent(currView.declarationElement.view)) {\n              currView = currView.declarationElement.view;\n              viewProp = viewProp.prop('parent');\n          }\n          if (currView !== definedView) {\n              throw new Error(\"Internal error: Could not calculate a property in a parent view: \" + property);\n          }\n          return property.visitExpression(new _ReplaceViewTransformer(viewProp, definedView), null);\n      }\n  }\n  var _ReplaceViewTransformer = (function (_super) {\n      __extends$16(_ReplaceViewTransformer, _super);\n      function _ReplaceViewTransformer(_viewExpr, _view) {\n          _super.call(this);\n          this._viewExpr = _viewExpr;\n          this._view = _view;\n      }\n      _ReplaceViewTransformer.prototype._isThis = function (expr) {\n          return expr instanceof ReadVarExpr && expr.builtin === BuiltinVar.This;\n      };\n      _ReplaceViewTransformer.prototype.visitReadVarExpr = function (ast, context) {\n          return this._isThis(ast) ? this._viewExpr : ast;\n      };\n      _ReplaceViewTransformer.prototype.visitReadPropExpr = function (ast, context) {\n          if (this._isThis(ast.receiver)) {\n              // Note: Don't cast for members of the AppView base class...\n              if (this._view.fields.some(function (field) { return field.name == ast.name; }) ||\n                  this._view.getters.some(function (field) { return field.name == ast.name; })) {\n                  return this._viewExpr.cast(this._view.classType).prop(ast.name);\n              }\n          }\n          return _super.prototype.visitReadPropExpr.call(this, ast, context);\n      };\n      return _ReplaceViewTransformer;\n  }(ExpressionTransformer));\n  function injectFromViewParentInjector(token, optional) {\n      var args = [createDiTokenExpression(token)];\n      if (optional) {\n          args.push(NULL_EXPR);\n      }\n      return THIS_EXPR.prop('parentInjector').callMethod('get', args);\n  }\n  function getViewFactoryName(component, embeddedTemplateIndex) {\n      return \"viewFactory_\" + component.type.name + embeddedTemplateIndex;\n  }\n  function createFlatArray(expressions) {\n      var lastNonArrayExpressions = [];\n      var result = literalArr([]);\n      for (var i = 0; i < expressions.length; i++) {\n          var expr = expressions[i];\n          if (expr.type instanceof ArrayType) {\n              if (lastNonArrayExpressions.length > 0) {\n                  result =\n                      result.callMethod(BuiltinMethod.ConcatArray, [literalArr(lastNonArrayExpressions)]);\n                  lastNonArrayExpressions = [];\n              }\n              result = result.callMethod(BuiltinMethod.ConcatArray, [expr]);\n          }\n          else {\n              lastNonArrayExpressions.push(expr);\n          }\n      }\n      if (lastNonArrayExpressions.length > 0) {\n          result =\n              result.callMethod(BuiltinMethod.ConcatArray, [literalArr(lastNonArrayExpressions)]);\n      }\n      return result;\n  }\n\n  var ViewQueryValues = (function () {\n      function ViewQueryValues(view, values) {\n          this.view = view;\n          this.values = values;\n      }\n      return ViewQueryValues;\n  }());\n  var CompileQuery = (function () {\n      function CompileQuery(meta, queryList, ownerDirectiveExpression, view) {\n          this.meta = meta;\n          this.queryList = queryList;\n          this.ownerDirectiveExpression = ownerDirectiveExpression;\n          this.view = view;\n          this._values = new ViewQueryValues(view, []);\n      }\n      CompileQuery.prototype.addValue = function (value, view) {\n          var currentView = view;\n          var elPath = [];\n          while (isPresent(currentView) && currentView !== this.view) {\n              var parentEl = currentView.declarationElement;\n              elPath.unshift(parentEl);\n              currentView = parentEl.view;\n          }\n          var queryListForDirtyExpr = getPropertyInView(this.queryList, view, this.view);\n          var viewValues = this._values;\n          elPath.forEach(function (el) {\n              var last = viewValues.values.length > 0 ? viewValues.values[viewValues.values.length - 1] : null;\n              if (last instanceof ViewQueryValues && last.view === el.embeddedView) {\n                  viewValues = last;\n              }\n              else {\n                  var newViewValues = new ViewQueryValues(el.embeddedView, []);\n                  viewValues.values.push(newViewValues);\n                  viewValues = newViewValues;\n              }\n          });\n          viewValues.values.push(value);\n          if (elPath.length > 0) {\n              view.dirtyParentQueriesMethod.addStmt(queryListForDirtyExpr.callMethod('setDirty', []).toStmt());\n          }\n      };\n      CompileQuery.prototype._isStatic = function () {\n          return !this._values.values.some(function (value) { return value instanceof ViewQueryValues; });\n      };\n      CompileQuery.prototype.afterChildren = function (targetStaticMethod, targetDynamicMethod) {\n          var values = createQueryValues(this._values);\n          var updateStmts = [this.queryList.callMethod('reset', [literalArr(values)]).toStmt()];\n          if (isPresent(this.ownerDirectiveExpression)) {\n              var valueExpr = this.meta.first ? this.queryList.prop('first') : this.queryList;\n              updateStmts.push(this.ownerDirectiveExpression.prop(this.meta.propertyName).set(valueExpr).toStmt());\n          }\n          if (!this.meta.first) {\n              updateStmts.push(this.queryList.callMethod('notifyOnChanges', []).toStmt());\n          }\n          if (this.meta.first && this._isStatic()) {\n              // for queries that don't change and the user asked for a single element,\n              // set it immediately. That is e.g. needed for querying for ViewContainerRefs, ...\n              // we don't do this for QueryLists for now as this would break the timing when\n              // we call QueryList listeners...\n              targetStaticMethod.addStmts(updateStmts);\n          }\n          else {\n              targetDynamicMethod.addStmt(new IfStmt(this.queryList.prop('dirty'), updateStmts));\n          }\n      };\n      return CompileQuery;\n  }());\n  function createQueryValues(viewValues) {\n      return ListWrapper.flatten(viewValues.values.map(function (entry) {\n          if (entry instanceof ViewQueryValues) {\n              return mapNestedViews(entry.view.declarationElement.appElement, entry.view, createQueryValues(entry));\n          }\n          else {\n              return entry;\n          }\n      }));\n  }\n  function mapNestedViews(declarationAppElement, view, expressions) {\n      var adjustedExpressions = expressions.map(function (expr) { return replaceVarInExpression(THIS_EXPR.name, variable('nestedView'), expr); });\n      return declarationAppElement.callMethod('mapNestedViews', [\n          variable(view.className),\n          fn([new FnParam('nestedView', view.classType)], [new ReturnStatement(literalArr(adjustedExpressions))], DYNAMIC_TYPE)\n      ]);\n  }\n  function createQueryList(query, directiveInstance, propertyName, compileView) {\n      compileView.fields.push(new ClassField(propertyName, importType(resolveIdentifier(Identifiers.QueryList), [DYNAMIC_TYPE])));\n      var expr = THIS_EXPR.prop(propertyName);\n      compileView.createMethod.addStmt(THIS_EXPR.prop(propertyName)\n          .set(importExpr(resolveIdentifier(Identifiers.QueryList), [DYNAMIC_TYPE])\n          .instantiate([]))\n          .toStmt());\n      return expr;\n  }\n  function addQueryToTokenMap(map, query) {\n      query.meta.selectors.forEach(function (selector) {\n          var entry = map.get(selector.reference);\n          if (!entry) {\n              entry = [];\n              map.set(selector.reference, entry);\n          }\n          entry.push(query);\n      });\n  }\n\n  var ViewTypeEnum = (function () {\n      function ViewTypeEnum() {\n      }\n      ViewTypeEnum.fromValue = function (value) {\n          return createEnumExpression(Identifiers.ViewType, value);\n      };\n      return ViewTypeEnum;\n  }());\n  var ViewEncapsulationEnum = (function () {\n      function ViewEncapsulationEnum() {\n      }\n      ViewEncapsulationEnum.fromValue = function (value) {\n          return createEnumExpression(Identifiers.ViewEncapsulation, value);\n      };\n      return ViewEncapsulationEnum;\n  }());\n  var ChangeDetectorStatusEnum = (function () {\n      function ChangeDetectorStatusEnum() {\n      }\n      ChangeDetectorStatusEnum.fromValue = function (value) {\n          return createEnumExpression(Identifiers.ChangeDetectorStatus, value);\n      };\n      return ChangeDetectorStatusEnum;\n  }());\n  var ViewConstructorVars = (function () {\n      function ViewConstructorVars() {\n      }\n      ViewConstructorVars.viewUtils = variable('viewUtils');\n      ViewConstructorVars.parentInjector = variable('parentInjector');\n      ViewConstructorVars.declarationEl = variable('declarationEl');\n      return ViewConstructorVars;\n  }());\n  var ViewProperties = (function () {\n      function ViewProperties() {\n      }\n      ViewProperties.renderer = THIS_EXPR.prop('renderer');\n      ViewProperties.projectableNodes = THIS_EXPR.prop('projectableNodes');\n      ViewProperties.viewUtils = THIS_EXPR.prop('viewUtils');\n      return ViewProperties;\n  }());\n  var InjectMethodVars = (function () {\n      function InjectMethodVars() {\n      }\n      InjectMethodVars.token = variable('token');\n      InjectMethodVars.requestNodeIndex = variable('requestNodeIndex');\n      InjectMethodVars.notFoundResult = variable('notFoundResult');\n      return InjectMethodVars;\n  }());\n  var DetectChangesVars = (function () {\n      function DetectChangesVars() {\n      }\n      DetectChangesVars.throwOnChange = variable(\"throwOnChange\");\n      DetectChangesVars.changes = variable(\"changes\");\n      DetectChangesVars.changed = variable(\"changed\");\n      return DetectChangesVars;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var ViewFactoryDependency = (function () {\n      function ViewFactoryDependency(comp, placeholder) {\n          this.comp = comp;\n          this.placeholder = placeholder;\n      }\n      return ViewFactoryDependency;\n  }());\n  var ComponentFactoryDependency = (function () {\n      function ComponentFactoryDependency(comp, placeholder) {\n          this.comp = comp;\n          this.placeholder = placeholder;\n      }\n      return ComponentFactoryDependency;\n  }());\n  var DirectiveWrapperDependency = (function () {\n      function DirectiveWrapperDependency(dir, placeholder) {\n          this.dir = dir;\n          this.placeholder = placeholder;\n      }\n      return DirectiveWrapperDependency;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$15 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var CompileNode = (function () {\n      function CompileNode(parent, view, nodeIndex, renderNode, sourceAst) {\n          this.parent = parent;\n          this.view = view;\n          this.nodeIndex = nodeIndex;\n          this.renderNode = renderNode;\n          this.sourceAst = sourceAst;\n      }\n      CompileNode.prototype.isNull = function () { return !this.renderNode; };\n      CompileNode.prototype.isRootElement = function () { return this.view != this.parent.view; };\n      return CompileNode;\n  }());\n  var CompileElement = (function (_super) {\n      __extends$15(CompileElement, _super);\n      function CompileElement(parent, view, nodeIndex, renderNode, sourceAst, component, _directives, _resolvedProvidersArray, hasViewContainer, hasEmbeddedView, references, _targetDependencies) {\n          var _this = this;\n          _super.call(this, parent, view, nodeIndex, renderNode, sourceAst);\n          this.component = component;\n          this._directives = _directives;\n          this._resolvedProvidersArray = _resolvedProvidersArray;\n          this.hasViewContainer = hasViewContainer;\n          this.hasEmbeddedView = hasEmbeddedView;\n          this._targetDependencies = _targetDependencies;\n          this._compViewExpr = null;\n          this.instances = new Map();\n          this.directiveWrapperInstance = new Map();\n          this._queryCount = 0;\n          this._queries = new Map();\n          this._componentConstructorViewQueryLists = [];\n          this.contentNodesByNgContentIndex = null;\n          this.referenceTokens = {};\n          references.forEach(function (ref) { return _this.referenceTokens[ref.name] = ref.value; });\n          this.elementRef =\n              importExpr(resolveIdentifier(Identifiers.ElementRef)).instantiate([this.renderNode]);\n          this.instances.set(resolveIdentifierToken(Identifiers.ElementRef).reference, this.elementRef);\n          this.injector = THIS_EXPR.callMethod('injector', [literal(this.nodeIndex)]);\n          this.instances.set(resolveIdentifierToken(Identifiers.Injector).reference, this.injector);\n          this.instances.set(resolveIdentifierToken(Identifiers.Renderer).reference, THIS_EXPR.prop('renderer'));\n          if (this.hasViewContainer || this.hasEmbeddedView || isPresent(this.component)) {\n              this._createAppElement();\n          }\n          if (this.component) {\n              this._createComponentFactoryResolver();\n          }\n      }\n      CompileElement.createNull = function () {\n          return new CompileElement(null, null, null, null, null, null, [], [], false, false, [], []);\n      };\n      CompileElement.prototype._createAppElement = function () {\n          var fieldName = \"_appEl_\" + this.nodeIndex;\n          var parentNodeIndex = this.isRootElement() ? null : this.parent.nodeIndex;\n          // private is fine here as no child view will reference an AppElement\n          this.view.fields.push(new ClassField(fieldName, importType(resolveIdentifier(Identifiers.AppElement)), [StmtModifier.Private]));\n          var statement = THIS_EXPR.prop(fieldName)\n              .set(importExpr(resolveIdentifier(Identifiers.AppElement)).instantiate([\n              literal(this.nodeIndex), literal(parentNodeIndex), THIS_EXPR, this.renderNode\n          ]))\n              .toStmt();\n          this.view.createMethod.addStmt(statement);\n          this.appElement = THIS_EXPR.prop(fieldName);\n          this.instances.set(resolveIdentifierToken(Identifiers.AppElement).reference, this.appElement);\n      };\n      CompileElement.prototype._createComponentFactoryResolver = function () {\n          var _this = this;\n          var entryComponents = this.component.entryComponents.map(function (entryComponent) {\n              var id = new CompileIdentifierMetadata({ name: entryComponent.name });\n              _this._targetDependencies.push(new ComponentFactoryDependency(entryComponent, id));\n              return id;\n          });\n          if (!entryComponents || entryComponents.length === 0) {\n              return;\n          }\n          var createComponentFactoryResolverExpr = importExpr(resolveIdentifier(Identifiers.CodegenComponentFactoryResolver)).instantiate([\n              literalArr(entryComponents.map(function (entryComponent) { return importExpr(entryComponent); })),\n              injectFromViewParentInjector(resolveIdentifierToken(Identifiers.ComponentFactoryResolver), false)\n          ]);\n          var provider = new CompileProviderMetadata({\n              token: resolveIdentifierToken(Identifiers.ComponentFactoryResolver),\n              useValue: createComponentFactoryResolverExpr\n          });\n          // Add ComponentFactoryResolver as first provider as it does not have deps on other providers\n          // ProviderAstType.PrivateService as only the component and its view can see it,\n          // but nobody else\n          this._resolvedProvidersArray.unshift(new ProviderAst(provider.token, false, true, [provider], exports.ProviderAstType.PrivateService, [], this.sourceAst.sourceSpan));\n      };\n      CompileElement.prototype.setComponentView = function (compViewExpr) {\n          this._compViewExpr = compViewExpr;\n          this.contentNodesByNgContentIndex =\n              new Array(this.component.template.ngContentSelectors.length);\n          for (var i = 0; i < this.contentNodesByNgContentIndex.length; i++) {\n              this.contentNodesByNgContentIndex[i] = [];\n          }\n      };\n      CompileElement.prototype.setEmbeddedView = function (embeddedView) {\n          this.embeddedView = embeddedView;\n          if (isPresent(embeddedView)) {\n              var createTemplateRefExpr = importExpr(resolveIdentifier(Identifiers.TemplateRef_)).instantiate([\n                  this.appElement, this.embeddedView.viewFactory\n              ]);\n              var provider = new CompileProviderMetadata({\n                  token: resolveIdentifierToken(Identifiers.TemplateRef),\n                  useValue: createTemplateRefExpr\n              });\n              // Add TemplateRef as first provider as it does not have deps on other providers\n              this._resolvedProvidersArray.unshift(new ProviderAst(provider.token, false, true, [provider], exports.ProviderAstType.Builtin, [], this.sourceAst.sourceSpan));\n          }\n      };\n      CompileElement.prototype.beforeChildren = function () {\n          var _this = this;\n          if (this.hasViewContainer) {\n              this.instances.set(resolveIdentifierToken(Identifiers.ViewContainerRef).reference, this.appElement.prop('vcRef'));\n          }\n          this._resolvedProviders = new Map();\n          this._resolvedProvidersArray.forEach(function (provider) { return _this._resolvedProviders.set(provider.token.reference, provider); });\n          // create all the provider instances, some in the view constructor,\n          // some as getters. We rely on the fact that they are already sorted topologically.\n          MapWrapper.values(this._resolvedProviders).forEach(function (resolvedProvider) {\n              var isDirectiveWrapper = resolvedProvider.providerType === exports.ProviderAstType.Component ||\n                  resolvedProvider.providerType === exports.ProviderAstType.Directive;\n              var providerValueExpressions = resolvedProvider.providers.map(function (provider) {\n                  if (isPresent(provider.useExisting)) {\n                      return _this._getDependency(resolvedProvider.providerType, new CompileDiDependencyMetadata({ token: provider.useExisting }));\n                  }\n                  else if (isPresent(provider.useFactory)) {\n                      var deps = provider.deps || provider.useFactory.diDeps;\n                      var depsExpr = deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep); });\n                      return importExpr(provider.useFactory).callFn(depsExpr);\n                  }\n                  else if (isPresent(provider.useClass)) {\n                      var deps = provider.deps || provider.useClass.diDeps;\n                      var depsExpr = deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep); });\n                      if (isDirectiveWrapper) {\n                          var directiveWrapperIdentifier = new CompileIdentifierMetadata({ name: DirectiveWrapperCompiler.dirWrapperClassName(provider.useClass) });\n                          _this._targetDependencies.push(new DirectiveWrapperDependency(provider.useClass, directiveWrapperIdentifier));\n                          return importExpr(directiveWrapperIdentifier)\n                              .instantiate(depsExpr, importType(directiveWrapperIdentifier));\n                      }\n                      else {\n                          return importExpr(provider.useClass)\n                              .instantiate(depsExpr, importType(provider.useClass));\n                      }\n                  }\n                  else {\n                      return convertValueToOutputAst(provider.useValue);\n                  }\n              });\n              var propName = \"_\" + resolvedProvider.token.name + \"_\" + _this.nodeIndex + \"_\" + _this.instances.size;\n              var instance = createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager, _this);\n              if (isDirectiveWrapper) {\n                  _this.directiveWrapperInstance.set(resolvedProvider.token.reference, instance);\n                  _this.instances.set(resolvedProvider.token.reference, instance.prop('context'));\n              }\n              else {\n                  _this.instances.set(resolvedProvider.token.reference, instance);\n              }\n          });\n          for (var i = 0; i < this._directives.length; i++) {\n              var directive = this._directives[i];\n              var directiveInstance = this.instances.get(identifierToken(directive.type).reference);\n              directive.queries.forEach(function (queryMeta) { _this._addQuery(queryMeta, directiveInstance); });\n          }\n          var queriesWithReads = [];\n          MapWrapper.values(this._resolvedProviders).forEach(function (resolvedProvider) {\n              var queriesForProvider = _this._getQueriesFor(resolvedProvider.token);\n              queriesWithReads.push.apply(queriesWithReads, queriesForProvider.map(function (query) { return new _QueryWithRead(query, resolvedProvider.token); }));\n          });\n          Object.keys(this.referenceTokens).forEach(function (varName) {\n              var token = _this.referenceTokens[varName];\n              var varValue;\n              if (isPresent(token)) {\n                  varValue = _this.instances.get(token.reference);\n              }\n              else {\n                  varValue = _this.renderNode;\n              }\n              _this.view.locals.set(varName, varValue);\n              var varToken = new CompileTokenMetadata({ value: varName });\n              queriesWithReads.push.apply(queriesWithReads, _this._getQueriesFor(varToken).map(function (query) { return new _QueryWithRead(query, varToken); }));\n          });\n          queriesWithReads.forEach(function (queryWithRead) {\n              var value;\n              if (isPresent(queryWithRead.read.identifier)) {\n                  // query for an identifier\n                  value = _this.instances.get(queryWithRead.read.reference);\n              }\n              else {\n                  // query for a reference\n                  var token = _this.referenceTokens[queryWithRead.read.value];\n                  if (isPresent(token)) {\n                      value = _this.instances.get(token.reference);\n                  }\n                  else {\n                      value = _this.elementRef;\n                  }\n              }\n              if (isPresent(value)) {\n                  queryWithRead.query.addValue(value, _this.view);\n              }\n          });\n          if (isPresent(this.component)) {\n              var componentConstructorViewQueryList = isPresent(this.component) ?\n                  literalArr(this._componentConstructorViewQueryLists) :\n                  NULL_EXPR;\n              var compExpr = isPresent(this.getComponent()) ? this.getComponent() : NULL_EXPR;\n              this.view.createMethod.addStmt(this.appElement\n                  .callMethod('initComponent', [compExpr, componentConstructorViewQueryList, this._compViewExpr])\n                  .toStmt());\n          }\n      };\n      CompileElement.prototype.afterChildren = function (childNodeCount) {\n          var _this = this;\n          MapWrapper.values(this._resolvedProviders).forEach(function (resolvedProvider) {\n              // Note: afterChildren is called after recursing into children.\n              // This is good so that an injector match in an element that is closer to a requesting element\n              // matches first.\n              var providerExpr = _this.instances.get(resolvedProvider.token.reference);\n              // Note: view providers are only visible on the injector of that element.\n              // This is not fully correct as the rules during codegen don't allow a directive\n              // to get hold of a view provdier on the same element. We still do this semantic\n              // as it simplifies our model to having only one runtime injector per element.\n              var providerChildNodeCount = resolvedProvider.providerType === exports.ProviderAstType.PrivateService ? 0 : childNodeCount;\n              _this.view.injectorGetMethod.addStmt(createInjectInternalCondition(_this.nodeIndex, providerChildNodeCount, resolvedProvider, providerExpr));\n          });\n          MapWrapper.values(this._queries)\n              .forEach(function (queries) { return queries.forEach(function (query) { return query.afterChildren(_this.view.createMethod, _this.view.updateContentQueriesMethod); }); });\n      };\n      CompileElement.prototype.addContentNode = function (ngContentIndex, nodeExpr) {\n          this.contentNodesByNgContentIndex[ngContentIndex].push(nodeExpr);\n      };\n      CompileElement.prototype.getComponent = function () {\n          return isPresent(this.component) ?\n              this.instances.get(identifierToken(this.component.type).reference) :\n              null;\n      };\n      CompileElement.prototype.getProviderTokens = function () {\n          return MapWrapper.values(this._resolvedProviders)\n              .map(function (resolvedProvider) { return createDiTokenExpression(resolvedProvider.token); });\n      };\n      CompileElement.prototype._getQueriesFor = function (token) {\n          var result = [];\n          var currentEl = this;\n          var distance = 0;\n          var queries;\n          while (!currentEl.isNull()) {\n              queries = currentEl._queries.get(token.reference);\n              if (isPresent(queries)) {\n                  result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n              }\n              if (currentEl._directives.length > 0) {\n                  distance++;\n              }\n              currentEl = currentEl.parent;\n          }\n          queries = this.view.componentView.viewQueries.get(token.reference);\n          if (isPresent(queries)) {\n              result.push.apply(result, queries);\n          }\n          return result;\n      };\n      CompileElement.prototype._addQuery = function (queryMeta, directiveInstance) {\n          var propName = \"_query_\" + queryMeta.selectors[0].name + \"_\" + this.nodeIndex + \"_\" + this._queryCount++;\n          var queryList = createQueryList(queryMeta, directiveInstance, propName, this.view);\n          var query = new CompileQuery(queryMeta, queryList, directiveInstance, this.view);\n          addQueryToTokenMap(this._queries, query);\n          return query;\n      };\n      CompileElement.prototype._getLocalDependency = function (requestingProviderType, dep) {\n          var result = null;\n          // constructor content query\n          if (!result && isPresent(dep.query)) {\n              result = this._addQuery(dep.query, null).queryList;\n          }\n          // constructor view query\n          if (!result && isPresent(dep.viewQuery)) {\n              result = createQueryList(dep.viewQuery, null, \"_viewQuery_\" + dep.viewQuery.selectors[0].name + \"_\" + this.nodeIndex + \"_\" + this._componentConstructorViewQueryLists.length, this.view);\n              this._componentConstructorViewQueryLists.push(result);\n          }\n          if (isPresent(dep.token)) {\n              // access builtins with special visibility\n              if (!result) {\n                  if (dep.token.reference ===\n                      resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference) {\n                      if (requestingProviderType === exports.ProviderAstType.Component) {\n                          return this._compViewExpr.prop('ref');\n                      }\n                      else {\n                          return getPropertyInView(THIS_EXPR.prop('ref'), this.view, this.view.componentView);\n                      }\n                  }\n              }\n              // access regular providers on the element\n              if (!result) {\n                  var resolvedProvider = this._resolvedProviders.get(dep.token.reference);\n                  // don't allow directives / public services to access private services.\n                  // only components and private services can access private services.\n                  if (resolvedProvider && (requestingProviderType === exports.ProviderAstType.Directive ||\n                      requestingProviderType === exports.ProviderAstType.PublicService) &&\n                      resolvedProvider.providerType === exports.ProviderAstType.PrivateService) {\n                      return null;\n                  }\n                  result = this.instances.get(dep.token.reference);\n              }\n          }\n          return result;\n      };\n      CompileElement.prototype._getDependency = function (requestingProviderType, dep) {\n          var currElement = this;\n          var result = null;\n          if (dep.isValue) {\n              result = literal(dep.value);\n          }\n          if (!result && !dep.isSkipSelf) {\n              result = this._getLocalDependency(requestingProviderType, dep);\n          }\n          // check parent elements\n          while (!result && !currElement.parent.isNull()) {\n              currElement = currElement.parent;\n              result = currElement._getLocalDependency(exports.ProviderAstType.PublicService, new CompileDiDependencyMetadata({ token: dep.token }));\n          }\n          if (!result) {\n              result = injectFromViewParentInjector(dep.token, dep.isOptional);\n          }\n          if (!result) {\n              result = NULL_EXPR;\n          }\n          return getPropertyInView(result, this.view, currElement.view);\n      };\n      return CompileElement;\n  }(CompileNode));\n  function createInjectInternalCondition(nodeIndex, childNodeCount, provider, providerExpr) {\n      var indexCondition;\n      if (childNodeCount > 0) {\n          indexCondition = literal(nodeIndex)\n              .lowerEquals(InjectMethodVars.requestNodeIndex)\n              .and(InjectMethodVars.requestNodeIndex.lowerEquals(literal(nodeIndex + childNodeCount)));\n      }\n      else {\n          indexCondition = literal(nodeIndex).identical(InjectMethodVars.requestNodeIndex);\n      }\n      return new IfStmt(InjectMethodVars.token.identical(createDiTokenExpression(provider.token)).and(indexCondition), [new ReturnStatement(providerExpr)]);\n  }\n  function createProviderProperty(propName, provider, providerValueExpressions, isMulti, isEager, compileElement) {\n      var view = compileElement.view;\n      var resolvedProviderValueExpr;\n      var type;\n      if (isMulti) {\n          resolvedProviderValueExpr = literalArr(providerValueExpressions);\n          type = new ArrayType(DYNAMIC_TYPE);\n      }\n      else {\n          resolvedProviderValueExpr = providerValueExpressions[0];\n          type = providerValueExpressions[0].type;\n      }\n      if (!type) {\n          type = DYNAMIC_TYPE;\n      }\n      if (isEager) {\n          view.fields.push(new ClassField(propName, type));\n          view.createMethod.addStmt(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n      }\n      else {\n          var internalField = \"_\" + propName;\n          view.fields.push(new ClassField(internalField, type));\n          var getter = new CompileMethod(view);\n          getter.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n          // Note: Equals is important for JS so that it also checks the undefined case!\n          getter.addStmt(new IfStmt(THIS_EXPR.prop(internalField).isBlank(), [THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]));\n          getter.addStmt(new ReturnStatement(THIS_EXPR.prop(internalField)));\n          view.getters.push(new ClassGetter(propName, getter.finish(), type));\n      }\n      return THIS_EXPR.prop(propName);\n  }\n  var _QueryWithRead = (function () {\n      function _QueryWithRead(query, match) {\n          this.query = query;\n          this.read = query.meta.read || match;\n      }\n      return _QueryWithRead;\n  }());\n\n  var CompilePipe = (function () {\n      function CompilePipe(view, meta) {\n          var _this = this;\n          this.view = view;\n          this.meta = meta;\n          this._purePipeProxyCount = 0;\n          this.instance = THIS_EXPR.prop(\"_pipe_\" + meta.name + \"_\" + view.pipeCount++);\n          var deps = this.meta.type.diDeps.map(function (diDep) {\n              if (diDep.token.reference ===\n                  resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference) {\n                  return getPropertyInView(THIS_EXPR.prop('ref'), _this.view, _this.view.componentView);\n              }\n              return injectFromViewParentInjector(diDep.token, false);\n          });\n          this.view.fields.push(new ClassField(this.instance.name, importType(this.meta.type)));\n          this.view.createMethod.resetDebugInfo(null, null);\n          this.view.createMethod.addStmt(THIS_EXPR.prop(this.instance.name)\n              .set(importExpr(this.meta.type).instantiate(deps))\n              .toStmt());\n      }\n      CompilePipe.call = function (view, name, args) {\n          var compView = view.componentView;\n          var meta = _findPipeMeta(compView, name);\n          var pipe;\n          if (meta.pure) {\n              // pure pipes live on the component view\n              pipe = compView.purePipes.get(name);\n              if (!pipe) {\n                  pipe = new CompilePipe(compView, meta);\n                  compView.purePipes.set(name, pipe);\n                  compView.pipes.push(pipe);\n              }\n          }\n          else {\n              // Non pure pipes live on the view that called it\n              pipe = new CompilePipe(view, meta);\n              view.pipes.push(pipe);\n          }\n          return pipe._call(view, args);\n      };\n      Object.defineProperty(CompilePipe.prototype, \"pure\", {\n          get: function () { return this.meta.pure; },\n          enumerable: true,\n          configurable: true\n      });\n      CompilePipe.prototype._call = function (callingView, args) {\n          if (this.meta.pure) {\n              // PurePipeProxies live on the view that called them.\n              var purePipeProxyInstance = THIS_EXPR.prop(this.instance.name + \"_\" + this._purePipeProxyCount++);\n              var pipeInstanceSeenFromPureProxy = getPropertyInView(this.instance, callingView, this.view);\n              createPureProxy(pipeInstanceSeenFromPureProxy.prop('transform')\n                  .callMethod(BuiltinMethod.Bind, [pipeInstanceSeenFromPureProxy]), args.length, purePipeProxyInstance, { fields: callingView.fields, ctorStmts: callingView.createMethod });\n              return importExpr(resolveIdentifier(Identifiers.castByValue))\n                  .callFn([purePipeProxyInstance, pipeInstanceSeenFromPureProxy.prop('transform')])\n                  .callFn(args);\n          }\n          else {\n              return getPropertyInView(this.instance, callingView, this.view).callMethod('transform', args);\n          }\n      };\n      return CompilePipe;\n  }());\n  function _findPipeMeta(view, name) {\n      var pipeMeta = null;\n      for (var i = view.pipeMetas.length - 1; i >= 0; i--) {\n          var localPipeMeta = view.pipeMetas[i];\n          if (localPipeMeta.name == name) {\n              pipeMeta = localPipeMeta;\n              break;\n          }\n      }\n      if (!pipeMeta) {\n          throw new Error(\"Illegal state: Could not find pipe \" + name + \" although the parser should have detected this error!\");\n      }\n      return pipeMeta;\n  }\n\n  var CompileView = (function () {\n      function CompileView(component, genConfig, pipeMetas, styles, animations, viewIndex, declarationElement, templateVariableBindings) {\n          var _this = this;\n          this.component = component;\n          this.genConfig = genConfig;\n          this.pipeMetas = pipeMetas;\n          this.styles = styles;\n          this.animations = animations;\n          this.viewIndex = viewIndex;\n          this.declarationElement = declarationElement;\n          this.templateVariableBindings = templateVariableBindings;\n          this.nodes = [];\n          // root nodes or AppElements for ViewContainers\n          this.rootNodesOrAppElements = [];\n          this.methods = [];\n          this.ctorStmts = [];\n          this.fields = [];\n          this.getters = [];\n          this.disposables = [];\n          this.subscriptions = [];\n          this.purePipes = new Map();\n          this.pipes = [];\n          this.locals = new Map();\n          this.literalArrayCount = 0;\n          this.literalMapCount = 0;\n          this.pipeCount = 0;\n          this.createMethod = new CompileMethod(this);\n          this.animationBindingsMethod = new CompileMethod(this);\n          this.injectorGetMethod = new CompileMethod(this);\n          this.updateContentQueriesMethod = new CompileMethod(this);\n          this.dirtyParentQueriesMethod = new CompileMethod(this);\n          this.updateViewQueriesMethod = new CompileMethod(this);\n          this.detectChangesInInputsMethod = new CompileMethod(this);\n          this.detectChangesRenderPropertiesMethod = new CompileMethod(this);\n          this.afterContentLifecycleCallbacksMethod = new CompileMethod(this);\n          this.afterViewLifecycleCallbacksMethod = new CompileMethod(this);\n          this.destroyMethod = new CompileMethod(this);\n          this.detachMethod = new CompileMethod(this);\n          this.viewType = getViewType(component, viewIndex);\n          this.className = \"_View_\" + component.type.name + viewIndex;\n          this.classType = importType(new CompileIdentifierMetadata({ name: this.className }));\n          this.viewFactory = variable(getViewFactoryName(component, viewIndex));\n          if (this.viewType === ViewType.COMPONENT || this.viewType === ViewType.HOST) {\n              this.componentView = this;\n          }\n          else {\n              this.componentView = this.declarationElement.view.componentView;\n          }\n          this.componentContext =\n              getPropertyInView(THIS_EXPR.prop('context'), this, this.componentView);\n          var viewQueries = new Map();\n          if (this.viewType === ViewType.COMPONENT) {\n              var directiveInstance = THIS_EXPR.prop('context');\n              this.component.viewQueries.forEach(function (queryMeta, queryIndex) {\n                  var propName = \"_viewQuery_\" + queryMeta.selectors[0].name + \"_\" + queryIndex;\n                  var queryList = createQueryList(queryMeta, directiveInstance, propName, _this);\n                  var query = new CompileQuery(queryMeta, queryList, directiveInstance, _this);\n                  addQueryToTokenMap(viewQueries, query);\n              });\n              var constructorViewQueryCount = 0;\n              this.component.type.diDeps.forEach(function (dep) {\n                  if (isPresent(dep.viewQuery)) {\n                      var queryList = THIS_EXPR.prop('declarationAppElement')\n                          .prop('componentConstructorViewQueries')\n                          .key(literal(constructorViewQueryCount++));\n                      var query = new CompileQuery(dep.viewQuery, queryList, null, _this);\n                      addQueryToTokenMap(viewQueries, query);\n                  }\n              });\n          }\n          this.viewQueries = viewQueries;\n          templateVariableBindings.forEach(function (entry) { _this.locals.set(entry[1], THIS_EXPR.prop('context').prop(entry[0])); });\n          if (!this.declarationElement.isNull()) {\n              this.declarationElement.setEmbeddedView(this);\n          }\n      }\n      CompileView.prototype.callPipe = function (name, input, args) {\n          return CompilePipe.call(this, name, [input].concat(args));\n      };\n      CompileView.prototype.getLocal = function (name) {\n          if (name == EventHandlerVars.event.name) {\n              return EventHandlerVars.event;\n          }\n          var currView = this;\n          var result = currView.locals.get(name);\n          while (!result && isPresent(currView.declarationElement.view)) {\n              currView = currView.declarationElement.view;\n              result = currView.locals.get(name);\n          }\n          if (isPresent(result)) {\n              return getPropertyInView(result, this, currView);\n          }\n          else {\n              return null;\n          }\n      };\n      CompileView.prototype.afterNodes = function () {\n          var _this = this;\n          MapWrapper.values(this.viewQueries)\n              .forEach(function (queries) { return queries.forEach(function (query) { return query.afterChildren(_this.createMethod, _this.updateViewQueriesMethod); }); });\n      };\n      return CompileView;\n  }());\n  function getViewType(component, embeddedTemplateIndex) {\n      if (embeddedTemplateIndex > 0) {\n          return ViewType.EMBEDDED;\n      }\n      else if (component.type.isHost) {\n          return ViewType.HOST;\n      }\n      else {\n          return ViewType.COMPONENT;\n      }\n  }\n\n  var CompileEventListener = (function () {\n      function CompileEventListener(compileElement, eventTarget, eventName, eventPhase, listenerIndex) {\n          this.compileElement = compileElement;\n          this.eventTarget = eventTarget;\n          this.eventName = eventName;\n          this.eventPhase = eventPhase;\n          this._hasComponentHostListener = false;\n          this._actionResultExprs = [];\n          this._method = new CompileMethod(compileElement.view);\n          this._methodName =\n              \"_handle_\" + sanitizeEventName(eventName) + \"_\" + compileElement.nodeIndex + \"_\" + listenerIndex;\n          this._eventParam = new FnParam(EventHandlerVars.event.name, importType(this.compileElement.view.genConfig.renderTypes.renderEvent));\n      }\n      CompileEventListener.getOrCreate = function (compileElement, eventTarget, eventName, eventPhase, targetEventListeners) {\n          var listener = targetEventListeners.find(function (listener) { return listener.eventTarget == eventTarget && listener.eventName == eventName &&\n              listener.eventPhase == eventPhase; });\n          if (!listener) {\n              listener = new CompileEventListener(compileElement, eventTarget, eventName, eventPhase, targetEventListeners.length);\n              targetEventListeners.push(listener);\n          }\n          return listener;\n      };\n      Object.defineProperty(CompileEventListener.prototype, \"methodName\", {\n          get: function () { return this._methodName; },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(CompileEventListener.prototype, \"isAnimation\", {\n          get: function () { return !!this.eventPhase; },\n          enumerable: true,\n          configurable: true\n      });\n      CompileEventListener.prototype.addAction = function (hostEvent, directive, directiveInstance) {\n          if (isPresent(directive) && directive.isComponent) {\n              this._hasComponentHostListener = true;\n          }\n          this._method.resetDebugInfo(this.compileElement.nodeIndex, hostEvent);\n          var context = directiveInstance || this.compileElement.view.componentContext;\n          var view = this.compileElement.view;\n          var evalResult = convertActionBinding(view, directive ? null : view, context, hostEvent.handler, this.compileElement.nodeIndex + \"_\" + this._actionResultExprs.length);\n          if (evalResult.preventDefault) {\n              this._actionResultExprs.push(evalResult.preventDefault);\n          }\n          this._method.addStmts(evalResult.stmts);\n      };\n      CompileEventListener.prototype.finishMethod = function () {\n          var markPathToRootStart = this._hasComponentHostListener ?\n              this.compileElement.appElement.prop('componentView') :\n              THIS_EXPR;\n          var resultExpr = literal(true);\n          this._actionResultExprs.forEach(function (expr) { resultExpr = resultExpr.and(expr); });\n          var stmts = [markPathToRootStart.callMethod('markPathToRootAsCheckOnce', []).toStmt()]\n              .concat(this._method.finish())\n              .concat([new ReturnStatement(resultExpr)]);\n          // private is fine here as no child view will reference the event handler...\n          this.compileElement.view.methods.push(new ClassMethod(this._methodName, [this._eventParam], stmts, BOOL_TYPE, [StmtModifier.Private]));\n      };\n      CompileEventListener.prototype.listenToRenderer = function () {\n          var listenExpr;\n          var eventListener = THIS_EXPR.callMethod('eventHandler', [THIS_EXPR.prop(this._methodName).callMethod(BuiltinMethod.Bind, [THIS_EXPR])]);\n          if (isPresent(this.eventTarget)) {\n              listenExpr = ViewProperties.renderer.callMethod('listenGlobal', [literal(this.eventTarget), literal(this.eventName), eventListener]);\n          }\n          else {\n              listenExpr = ViewProperties.renderer.callMethod('listen', [this.compileElement.renderNode, literal(this.eventName), eventListener]);\n          }\n          var disposable = variable(\"disposable_\" + this.compileElement.view.disposables.length);\n          this.compileElement.view.disposables.push(disposable);\n          // private is fine here as no child view will reference the event handler...\n          this.compileElement.view.createMethod.addStmt(disposable.set(listenExpr).toDeclStmt(FUNCTION_TYPE, [StmtModifier.Private]));\n      };\n      CompileEventListener.prototype.listenToAnimation = function (animationTransitionVar) {\n          var callbackMethod = this.eventPhase == 'start' ? 'onStart' : 'onDone';\n          return animationTransitionVar\n              .callMethod(callbackMethod, [THIS_EXPR.prop(this.methodName).callMethod(BuiltinMethod.Bind, [THIS_EXPR])])\n              .toStmt();\n      };\n      CompileEventListener.prototype.listenToDirective = function (directiveInstance, observablePropName) {\n          var subscription = variable(\"subscription_\" + this.compileElement.view.subscriptions.length);\n          this.compileElement.view.subscriptions.push(subscription);\n          var eventListener = THIS_EXPR.callMethod('eventHandler', [THIS_EXPR.prop(this._methodName).callMethod(BuiltinMethod.Bind, [THIS_EXPR])]);\n          this.compileElement.view.createMethod.addStmt(subscription\n              .set(directiveInstance.prop(observablePropName)\n              .callMethod(BuiltinMethod.SubscribeObservable, [eventListener]))\n              .toDeclStmt(null, [StmtModifier.Final]));\n      };\n      return CompileEventListener;\n  }());\n  function collectEventListeners(hostEvents, dirs, compileElement) {\n      var eventListeners = [];\n      hostEvents.forEach(function (hostEvent) {\n          var listener = CompileEventListener.getOrCreate(compileElement, hostEvent.target, hostEvent.name, hostEvent.phase, eventListeners);\n          listener.addAction(hostEvent, null, null);\n      });\n      dirs.forEach(function (directiveAst) {\n          var directiveInstance = compileElement.instances.get(identifierToken(directiveAst.directive.type).reference);\n          directiveAst.hostEvents.forEach(function (hostEvent) {\n              var listener = CompileEventListener.getOrCreate(compileElement, hostEvent.target, hostEvent.name, hostEvent.phase, eventListeners);\n              listener.addAction(hostEvent, directiveAst.directive, directiveInstance);\n          });\n      });\n      eventListeners.forEach(function (listener) { return listener.finishMethod(); });\n      return eventListeners;\n  }\n  function bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners) {\n      Object.keys(directiveAst.directive.outputs).forEach(function (observablePropName) {\n          var eventName = directiveAst.directive.outputs[observablePropName];\n          eventListeners.filter(function (listener) { return listener.eventName == eventName; }).forEach(function (listener) {\n              listener.listenToDirective(directiveInstance, observablePropName);\n          });\n      });\n  }\n  function bindRenderOutputs(eventListeners) {\n      eventListeners.forEach(function (listener) {\n          // the animation listeners are handled within property_binder.ts to\n          // allow them to be placed next to the animation factory statements\n          if (!listener.isAnimation) {\n              listener.listenToRenderer();\n          }\n      });\n  }\n  function sanitizeEventName(name) {\n      return name.replace(/[^a-zA-Z_]/g, '_');\n  }\n\n  var STATE_IS_NEVER_CHECKED = THIS_EXPR.prop('numberOfChecks').identical(new LiteralExpr(0));\n  var NOT_THROW_ON_CHANGES = not(DetectChangesVars.throwOnChange);\n  function bindDirectiveAfterContentLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {\n      var view = compileElement.view;\n      var lifecycleHooks = directiveMeta.type.lifecycleHooks;\n      var afterContentLifecycleCallbacksMethod = view.afterContentLifecycleCallbacksMethod;\n      afterContentLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentInit) !== -1) {\n          afterContentLifecycleCallbacksMethod.addStmt(new IfStmt(STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterContentInit', []).toStmt()]));\n      }\n      if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentChecked) !== -1) {\n          afterContentLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterContentChecked', []).toStmt());\n      }\n  }\n  function bindDirectiveAfterViewLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {\n      var view = compileElement.view;\n      var lifecycleHooks = directiveMeta.type.lifecycleHooks;\n      var afterViewLifecycleCallbacksMethod = view.afterViewLifecycleCallbacksMethod;\n      afterViewLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewInit) !== -1) {\n          afterViewLifecycleCallbacksMethod.addStmt(new IfStmt(STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterViewInit', []).toStmt()]));\n      }\n      if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewChecked) !== -1) {\n          afterViewLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterViewChecked', []).toStmt());\n      }\n  }\n  function bindInjectableDestroyLifecycleCallbacks(provider, providerInstance, compileElement) {\n      var onDestroyMethod = compileElement.view.destroyMethod;\n      onDestroyMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      if (provider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n          onDestroyMethod.addStmt(providerInstance.callMethod('ngOnDestroy', []).toStmt());\n      }\n  }\n  function bindPipeDestroyLifecycleCallbacks(pipeMeta, pipeInstance, view) {\n      var onDestroyMethod = view.destroyMethod;\n      if (pipeMeta.type.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n          onDestroyMethod.addStmt(pipeInstance.callMethod('ngOnDestroy', []).toStmt());\n      }\n  }\n\n  function bindRenderText(boundText, compileNode, view) {\n      var valueField = createCheckBindingField(view);\n      var evalResult = convertPropertyBinding(view, view, view.componentContext, boundText.value, valueField.bindingId);\n      if (!evalResult) {\n          return null;\n      }\n      view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileNode.nodeIndex, boundText);\n      view.detectChangesRenderPropertiesMethod.addStmts(createCheckBindingStmt(evalResult, valueField.expression, DetectChangesVars.throwOnChange, [THIS_EXPR.prop('renderer')\n              .callMethod('setText', [compileNode.renderNode, evalResult.currValExpr])\n              .toStmt()]));\n  }\n  function bindAndWriteToRenderer(boundProps, context, compileElement, isHostProp, eventListeners) {\n      var view = compileElement.view;\n      var renderNode = compileElement.renderNode;\n      boundProps.forEach(function (boundProp) {\n          var bindingField = createCheckBindingField(view);\n          view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileElement.nodeIndex, boundProp);\n          var evalResult = convertPropertyBinding(view, isHostProp ? null : view, context, boundProp.value, bindingField.bindingId);\n          var updateStmts = [];\n          var compileMethod = view.detectChangesRenderPropertiesMethod;\n          switch (boundProp.type) {\n              case exports.PropertyBindingType.Property:\n              case exports.PropertyBindingType.Attribute:\n              case exports.PropertyBindingType.Class:\n              case exports.PropertyBindingType.Style:\n                  updateStmts.push.apply(updateStmts, writeToRenderer(THIS_EXPR, boundProp, renderNode, evalResult.currValExpr, view.genConfig.logBindingUpdate));\n                  break;\n              case exports.PropertyBindingType.Animation:\n                  compileMethod = view.animationBindingsMethod;\n                  var detachStmts_1 = [];\n                  var animationName_1 = boundProp.name;\n                  var targetViewExpr = isHostProp ? compileElement.appElement.prop('componentView') : THIS_EXPR;\n                  var animationFnExpr = targetViewExpr.prop('componentType').prop('animations').key(literal(animationName_1));\n                  // it's important to normalize the void value as `void` explicitly\n                  // so that the styles data can be obtained from the stringmap\n                  var emptyStateValue = literal(EMPTY_ANIMATION_STATE);\n                  var unitializedValue = importExpr(resolveIdentifier(Identifiers.UNINITIALIZED));\n                  var animationTransitionVar_1 = variable('animationTransition_' + animationName_1);\n                  updateStmts.push(animationTransitionVar_1\n                      .set(animationFnExpr.callFn([\n                      THIS_EXPR, renderNode,\n                      bindingField.expression.equals(unitializedValue)\n                          .conditional(emptyStateValue, bindingField.expression),\n                      evalResult.currValExpr.equals(unitializedValue)\n                          .conditional(emptyStateValue, evalResult.currValExpr)\n                  ]))\n                      .toDeclStmt());\n                  detachStmts_1.push(animationTransitionVar_1\n                      .set(animationFnExpr.callFn([THIS_EXPR, renderNode, bindingField.expression, emptyStateValue]))\n                      .toDeclStmt());\n                  eventListeners.forEach(function (listener) {\n                      if (listener.isAnimation && listener.eventName === animationName_1) {\n                          var animationStmt = listener.listenToAnimation(animationTransitionVar_1);\n                          updateStmts.push(animationStmt);\n                          detachStmts_1.push(animationStmt);\n                      }\n                  });\n                  view.detachMethod.addStmts(detachStmts_1);\n                  break;\n          }\n          compileMethod.addStmts(createCheckBindingStmt(evalResult, bindingField.expression, DetectChangesVars.throwOnChange, updateStmts));\n      });\n  }\n  function bindRenderInputs(boundProps, compileElement, eventListeners) {\n      bindAndWriteToRenderer(boundProps, compileElement.view.componentContext, compileElement, false, eventListeners);\n  }\n  function bindDirectiveHostProps(directiveAst, directiveWrapperInstance, compileElement, eventListeners, elementName, schemaRegistry) {\n      // host properties are change detected by the DirectiveWrappers,\n      // except for the animation properties as they need close integration with animation events\n      // and DirectiveWrappers don't support\n      // event listeners right now.\n      bindAndWriteToRenderer(directiveAst.hostProperties.filter(function (boundProp) { return boundProp.isAnimation; }), directiveWrapperInstance.prop('context'), compileElement, true, eventListeners);\n      var methodArgs = [THIS_EXPR, compileElement.renderNode, DetectChangesVars.throwOnChange];\n      // We need to provide the SecurityContext for properties that could need sanitization.\n      directiveAst.hostProperties.filter(function (boundProp) { return boundProp.needsRuntimeSecurityContext; })\n          .forEach(function (boundProp) {\n          var ctx;\n          switch (boundProp.type) {\n              case exports.PropertyBindingType.Property:\n                  ctx = schemaRegistry.securityContext(elementName, boundProp.name, false);\n                  break;\n              case exports.PropertyBindingType.Attribute:\n                  ctx = schemaRegistry.securityContext(elementName, boundProp.name, true);\n                  break;\n              default:\n                  throw new Error(\"Illegal state: Only property / attribute bindings can have an unknown security context! Binding \" + boundProp.name);\n          }\n          methodArgs.push(createEnumExpression(Identifiers.SecurityContext, ctx));\n      });\n      compileElement.view.detectChangesRenderPropertiesMethod.addStmt(directiveWrapperInstance.callMethod('detectChangesInHostProps', methodArgs).toStmt());\n  }\n  function bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement) {\n      var view = compileElement.view;\n      var detectChangesInInputsMethod = view.detectChangesInInputsMethod;\n      detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      directiveAst.inputs.forEach(function (input, inputIdx) {\n          // Note: We can't use `fields.length` here, as we are not adding a field!\n          var bindingId = compileElement.nodeIndex + \"_\" + dirIndex + \"_\" + inputIdx;\n          detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, input);\n          var evalResult = convertPropertyBinding(view, view, view.componentContext, input.value, bindingId);\n          if (!evalResult) {\n              return;\n          }\n          detectChangesInInputsMethod.addStmts(evalResult.stmts);\n          detectChangesInInputsMethod.addStmt(directiveWrapperInstance\n              .callMethod(\"check_\" + input.directiveName, [\n              evalResult.currValExpr, DetectChangesVars.throwOnChange,\n              evalResult.forceUpdate || literal(false)\n          ])\n              .toStmt());\n      });\n      var isOnPushComp = directiveAst.directive.isComponent &&\n          !isDefaultChangeDetectionStrategy(directiveAst.directive.changeDetection);\n      var directiveDetectChangesExpr = directiveWrapperInstance.callMethod('detectChangesInInputProps', [THIS_EXPR, compileElement.renderNode, DetectChangesVars.throwOnChange]);\n      var directiveDetectChangesStmt = isOnPushComp ?\n          new IfStmt(directiveDetectChangesExpr, [compileElement.appElement.prop('componentView')\n                  .callMethod('markAsCheckOnce', [])\n                  .toStmt()]) :\n          directiveDetectChangesExpr.toStmt();\n      detectChangesInInputsMethod.addStmt(directiveDetectChangesStmt);\n  }\n\n  function bindView(view, parsedTemplate, schemaRegistry) {\n      var visitor = new ViewBinderVisitor(view, schemaRegistry);\n      templateVisitAll(visitor, parsedTemplate);\n      view.pipes.forEach(function (pipe) { bindPipeDestroyLifecycleCallbacks(pipe.meta, pipe.instance, pipe.view); });\n  }\n  var ViewBinderVisitor = (function () {\n      function ViewBinderVisitor(view, _schemaRegistry) {\n          this.view = view;\n          this._schemaRegistry = _schemaRegistry;\n          this._nodeIndex = 0;\n      }\n      ViewBinderVisitor.prototype.visitBoundText = function (ast, parent) {\n          var node = this.view.nodes[this._nodeIndex++];\n          bindRenderText(ast, node, this.view);\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitText = function (ast, parent) {\n          this._nodeIndex++;\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitNgContent = function (ast, parent) { return null; };\n      ViewBinderVisitor.prototype.visitElement = function (ast, parent) {\n          var _this = this;\n          var compileElement = this.view.nodes[this._nodeIndex++];\n          var eventListeners = [];\n          collectEventListeners(ast.outputs, ast.directives, compileElement).forEach(function (entry) {\n              eventListeners.push(entry);\n          });\n          bindRenderInputs(ast.inputs, compileElement, eventListeners);\n          bindRenderOutputs(eventListeners);\n          ast.directives.forEach(function (directiveAst, dirIndex) {\n              var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n              bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement);\n              bindDirectiveHostProps(directiveAst, directiveWrapperInstance, compileElement, eventListeners, ast.name, _this._schemaRegistry);\n              bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners);\n          });\n          templateVisitAll(this, ast.children, compileElement);\n          // afterContent and afterView lifecycles need to be called bottom up\n          // so that children are notified before parents\n          ast.directives.forEach(function (directiveAst) {\n              var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n              bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n              bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n          });\n          ast.providers.forEach(function (providerAst) {\n              var providerInstance = compileElement.instances.get(providerAst.token.reference);\n              bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n          });\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {\n          var compileElement = this.view.nodes[this._nodeIndex++];\n          var eventListeners = collectEventListeners(ast.outputs, ast.directives, compileElement);\n          ast.directives.forEach(function (directiveAst, dirIndex) {\n              var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n              bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement);\n              bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners);\n              bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n              bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n          });\n          ast.providers.forEach(function (providerAst) {\n              var providerInstance = compileElement.instances.get(providerAst.token.reference);\n              bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n          });\n          bindView(compileElement.embeddedView, ast.children, this._schemaRegistry);\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitAttr = function (ast, ctx) { return null; };\n      ViewBinderVisitor.prototype.visitDirective = function (ast, ctx) { return null; };\n      ViewBinderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitReference = function (ast, ctx) { return null; };\n      ViewBinderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\n      ViewBinderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\n      ViewBinderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\n      return ViewBinderVisitor;\n  }());\n\n  var IMPLICIT_TEMPLATE_VAR = '\\$implicit';\n  var CLASS_ATTR$1 = 'class';\n  var STYLE_ATTR = 'style';\n  var NG_CONTAINER_TAG = 'ng-container';\n  var parentRenderNodeVar = variable('parentRenderNode');\n  var rootSelectorVar = variable('rootSelector');\n  function buildView(view, template, targetDependencies) {\n      var builderVisitor = new ViewBuilderVisitor(view, targetDependencies);\n      templateVisitAll(builderVisitor, template, view.declarationElement.isNull() ? view.declarationElement : view.declarationElement.parent);\n      return builderVisitor.nestedViewCount;\n  }\n  function finishView(view, targetStatements) {\n      view.afterNodes();\n      createViewTopLevelStmts(view, targetStatements);\n      view.nodes.forEach(function (node) {\n          if (node instanceof CompileElement && node.hasEmbeddedView) {\n              finishView(node.embeddedView, targetStatements);\n          }\n      });\n  }\n  var ViewBuilderVisitor = (function () {\n      function ViewBuilderVisitor(view, targetDependencies) {\n          this.view = view;\n          this.targetDependencies = targetDependencies;\n          this.nestedViewCount = 0;\n      }\n      ViewBuilderVisitor.prototype._isRootNode = function (parent) { return parent.view !== this.view; };\n      ViewBuilderVisitor.prototype._addRootNodeAndProject = function (node) {\n          var projectedNode = _getOuterContainerOrSelf(node);\n          var parent = projectedNode.parent;\n          var ngContentIndex = projectedNode.sourceAst.ngContentIndex;\n          var vcAppEl = (node instanceof CompileElement && node.hasViewContainer) ? node.appElement : null;\n          if (this._isRootNode(parent)) {\n              // store appElement as root node only for ViewContainers\n              if (this.view.viewType !== ViewType.COMPONENT) {\n                  this.view.rootNodesOrAppElements.push(vcAppEl || node.renderNode);\n              }\n          }\n          else if (isPresent(parent.component) && isPresent(ngContentIndex)) {\n              parent.addContentNode(ngContentIndex, vcAppEl || node.renderNode);\n          }\n      };\n      ViewBuilderVisitor.prototype._getParentRenderNode = function (parent) {\n          parent = _getOuterContainerParentOrSelf(parent);\n          if (this._isRootNode(parent)) {\n              if (this.view.viewType === ViewType.COMPONENT) {\n                  return parentRenderNodeVar;\n              }\n              else {\n                  // root node of an embedded/host view\n                  return NULL_EXPR;\n              }\n          }\n          else {\n              return isPresent(parent.component) &&\n                  parent.component.template.encapsulation !== _angular_core.ViewEncapsulation.Native ?\n                  NULL_EXPR :\n                  parent.renderNode;\n          }\n      };\n      ViewBuilderVisitor.prototype.visitBoundText = function (ast, parent) {\n          return this._visitText(ast, '', parent);\n      };\n      ViewBuilderVisitor.prototype.visitText = function (ast, parent) {\n          return this._visitText(ast, ast.value, parent);\n      };\n      ViewBuilderVisitor.prototype._visitText = function (ast, value, parent) {\n          var fieldName = \"_text_\" + this.view.nodes.length;\n          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderText)));\n          var renderNode = THIS_EXPR.prop(fieldName);\n          var compileNode = new CompileNode(parent, this.view, this.view.nodes.length, renderNode, ast);\n          var createRenderNode = THIS_EXPR.prop(fieldName)\n              .set(ViewProperties.renderer.callMethod('createText', [\n              this._getParentRenderNode(parent), literal(value),\n              this.view.createMethod.resetDebugInfoExpr(this.view.nodes.length, ast)\n          ]))\n              .toStmt();\n          this.view.nodes.push(compileNode);\n          this.view.createMethod.addStmt(createRenderNode);\n          this._addRootNodeAndProject(compileNode);\n          return renderNode;\n      };\n      ViewBuilderVisitor.prototype.visitNgContent = function (ast, parent) {\n          // the projected nodes originate from a different view, so we don't\n          // have debug information for them...\n          this.view.createMethod.resetDebugInfo(null, ast);\n          var parentRenderNode = this._getParentRenderNode(parent);\n          var nodesExpression = ViewProperties.projectableNodes.key(literal(ast.index), new ArrayType(importType(this.view.genConfig.renderTypes.renderNode)));\n          if (parentRenderNode !== NULL_EXPR) {\n              this.view.createMethod.addStmt(ViewProperties.renderer\n                  .callMethod('projectNodes', [\n                  parentRenderNode,\n                  importExpr(resolveIdentifier(Identifiers.flattenNestedViewRenderNodes))\n                      .callFn([nodesExpression])\n              ])\n                  .toStmt());\n          }\n          else if (this._isRootNode(parent)) {\n              if (this.view.viewType !== ViewType.COMPONENT) {\n                  // store root nodes only for embedded/host views\n                  this.view.rootNodesOrAppElements.push(nodesExpression);\n              }\n          }\n          else {\n              if (isPresent(parent.component) && isPresent(ast.ngContentIndex)) {\n                  parent.addContentNode(ast.ngContentIndex, nodesExpression);\n              }\n          }\n          return null;\n      };\n      ViewBuilderVisitor.prototype.visitElement = function (ast, parent) {\n          var nodeIndex = this.view.nodes.length;\n          var createRenderNodeExpr;\n          var debugContextExpr = this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast);\n          var directives = ast.directives.map(function (directiveAst) { return directiveAst.directive; });\n          var component = directives.find(function (directive) { return directive.isComponent; });\n          if (ast.name === NG_CONTAINER_TAG) {\n              createRenderNodeExpr = ViewProperties.renderer.callMethod('createTemplateAnchor', [this._getParentRenderNode(parent), debugContextExpr]);\n          }\n          else {\n              var htmlAttrs = _readHtmlAttrs(ast.attrs);\n              var attrNameAndValues = createInlineArray(_mergeHtmlAndDirectiveAttrs(htmlAttrs, directives).map(function (v) { return literal(v); }));\n              if (nodeIndex === 0 && this.view.viewType === ViewType.HOST) {\n                  createRenderNodeExpr =\n                      importExpr(resolveIdentifier(Identifiers.selectOrCreateRenderHostElement)).callFn([\n                          ViewProperties.renderer, literal(ast.name), attrNameAndValues, rootSelectorVar,\n                          debugContextExpr\n                      ]);\n              }\n              else {\n                  createRenderNodeExpr =\n                      importExpr(resolveIdentifier(Identifiers.createRenderElement)).callFn([\n                          ViewProperties.renderer, this._getParentRenderNode(parent), literal(ast.name),\n                          attrNameAndValues, debugContextExpr\n                      ]);\n              }\n          }\n          var fieldName = \"_el_\" + nodeIndex;\n          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderElement)));\n          this.view.createMethod.addStmt(THIS_EXPR.prop(fieldName).set(createRenderNodeExpr).toStmt());\n          var renderNode = THIS_EXPR.prop(fieldName);\n          var compileElement = new CompileElement(parent, this.view, nodeIndex, renderNode, ast, component, directives, ast.providers, ast.hasViewContainer, false, ast.references, this.targetDependencies);\n          this.view.nodes.push(compileElement);\n          var compViewExpr = null;\n          if (isPresent(component)) {\n              var nestedComponentIdentifier = new CompileIdentifierMetadata({ name: getViewFactoryName(component, 0) });\n              this.targetDependencies.push(new ViewFactoryDependency(component.type, nestedComponentIdentifier));\n              compViewExpr = variable(\"compView_\" + nodeIndex); // fix highlighting: `\n              compileElement.setComponentView(compViewExpr);\n              this.view.createMethod.addStmt(compViewExpr\n                  .set(importExpr(nestedComponentIdentifier).callFn([\n                  ViewProperties.viewUtils, compileElement.injector, compileElement.appElement\n              ]))\n                  .toDeclStmt());\n          }\n          compileElement.beforeChildren();\n          this._addRootNodeAndProject(compileElement);\n          templateVisitAll(this, ast.children, compileElement);\n          compileElement.afterChildren(this.view.nodes.length - nodeIndex - 1);\n          if (isPresent(compViewExpr)) {\n              var codeGenContentNodes;\n              if (this.view.component.type.isHost) {\n                  codeGenContentNodes = ViewProperties.projectableNodes;\n              }\n              else {\n                  codeGenContentNodes = literalArr(compileElement.contentNodesByNgContentIndex.map(function (nodes) { return createFlatArray(nodes); }));\n              }\n              this.view.createMethod.addStmt(compViewExpr\n                  .callMethod('create', [compileElement.getComponent(), codeGenContentNodes, NULL_EXPR])\n                  .toStmt());\n          }\n          return null;\n      };\n      ViewBuilderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {\n          var nodeIndex = this.view.nodes.length;\n          var fieldName = \"_anchor_\" + nodeIndex;\n          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderComment)));\n          this.view.createMethod.addStmt(THIS_EXPR.prop(fieldName)\n              .set(ViewProperties.renderer.callMethod('createTemplateAnchor', [\n              this._getParentRenderNode(parent),\n              this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast)\n          ]))\n              .toStmt());\n          var renderNode = THIS_EXPR.prop(fieldName);\n          var templateVariableBindings = ast.variables.map(function (varAst) { return [varAst.value.length > 0 ? varAst.value : IMPLICIT_TEMPLATE_VAR, varAst.name]; });\n          var directives = ast.directives.map(function (directiveAst) { return directiveAst.directive; });\n          var compileElement = new CompileElement(parent, this.view, nodeIndex, renderNode, ast, null, directives, ast.providers, ast.hasViewContainer, true, ast.references, this.targetDependencies);\n          this.view.nodes.push(compileElement);\n          this.nestedViewCount++;\n          var embeddedView = new CompileView(this.view.component, this.view.genConfig, this.view.pipeMetas, NULL_EXPR, this.view.animations, this.view.viewIndex + this.nestedViewCount, compileElement, templateVariableBindings);\n          this.nestedViewCount += buildView(embeddedView, ast.children, this.targetDependencies);\n          compileElement.beforeChildren();\n          this._addRootNodeAndProject(compileElement);\n          compileElement.afterChildren(0);\n          return null;\n      };\n      ViewBuilderVisitor.prototype.visitAttr = function (ast, ctx) { return null; };\n      ViewBuilderVisitor.prototype.visitDirective = function (ast, ctx) { return null; };\n      ViewBuilderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\n          return null;\n      };\n      ViewBuilderVisitor.prototype.visitReference = function (ast, ctx) { return null; };\n      ViewBuilderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\n      ViewBuilderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\n      ViewBuilderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\n      return ViewBuilderVisitor;\n  }());\n  /**\n   * Walks up the nodes while the direct parent is a container.\n   *\n   * Returns the outer container or the node itself when it is not a direct child of a container.\n   *\n   * @internal\n   */\n  function _getOuterContainerOrSelf(node) {\n      var view = node.view;\n      while (_isNgContainer(node.parent, view)) {\n          node = node.parent;\n      }\n      return node;\n  }\n  /**\n   * Walks up the nodes while they are container and returns the first parent which is not.\n   *\n   * Returns the parent of the outer container or the node itself when it is not a container.\n   *\n   * @internal\n   */\n  function _getOuterContainerParentOrSelf(el) {\n      var view = el.view;\n      while (_isNgContainer(el, view)) {\n          el = el.parent;\n      }\n      return el;\n  }\n  function _isNgContainer(node, view) {\n      return !node.isNull() && node.sourceAst.name === NG_CONTAINER_TAG &&\n          node.view === view;\n  }\n  function _mergeHtmlAndDirectiveAttrs(declaredHtmlAttrs, directives) {\n      var mapResult = {};\n      Object.keys(declaredHtmlAttrs).forEach(function (key) { mapResult[key] = declaredHtmlAttrs[key]; });\n      directives.forEach(function (directiveMeta) {\n          Object.keys(directiveMeta.hostAttributes).forEach(function (name) {\n              var value = directiveMeta.hostAttributes[name];\n              var prevValue = mapResult[name];\n              mapResult[name] = isPresent(prevValue) ? mergeAttributeValue(name, prevValue, value) : value;\n          });\n      });\n      var arrResult = [];\n      // Note: We need to sort to get a defined output order\n      // for tests and for caching generated artifacts...\n      Object.keys(mapResult).sort().forEach(function (attrName) { arrResult.push(attrName, mapResult[attrName]); });\n      return arrResult;\n  }\n  function _readHtmlAttrs(attrs) {\n      var htmlAttrs = {};\n      attrs.forEach(function (ast) { htmlAttrs[ast.name] = ast.value; });\n      return htmlAttrs;\n  }\n  function mergeAttributeValue(attrName, attrValue1, attrValue2) {\n      if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n          return attrValue1 + \" \" + attrValue2;\n      }\n      else {\n          return attrValue2;\n      }\n  }\n  function createViewTopLevelStmts(view, targetStatements) {\n      var nodeDebugInfosVar = NULL_EXPR;\n      if (view.genConfig.genDebugInfo) {\n          nodeDebugInfosVar = variable(\"nodeDebugInfos_\" + view.component.type.name + view.viewIndex); // fix highlighting: `\n          targetStatements.push(nodeDebugInfosVar\n              .set(literalArr(view.nodes.map(createStaticNodeDebugInfo), new ArrayType(new ExternalType(resolveIdentifier(Identifiers.StaticNodeDebugInfo)), [TypeModifier.Const])))\n              .toDeclStmt(null, [StmtModifier.Final]));\n      }\n      var renderCompTypeVar = variable(\"renderType_\" + view.component.type.name); // fix highlighting: `\n      if (view.viewIndex === 0) {\n          targetStatements.push(renderCompTypeVar.set(NULL_EXPR)\n              .toDeclStmt(importType(resolveIdentifier(Identifiers.RenderComponentType))));\n      }\n      var viewClass = createViewClass(view, renderCompTypeVar, nodeDebugInfosVar);\n      targetStatements.push(viewClass);\n      targetStatements.push(createViewFactory(view, viewClass, renderCompTypeVar));\n  }\n  function createStaticNodeDebugInfo(node) {\n      var compileElement = node instanceof CompileElement ? node : null;\n      var providerTokens = [];\n      var componentToken = NULL_EXPR;\n      var varTokenEntries = [];\n      if (isPresent(compileElement)) {\n          providerTokens = compileElement.getProviderTokens();\n          if (isPresent(compileElement.component)) {\n              componentToken = createDiTokenExpression(identifierToken(compileElement.component.type));\n          }\n          Object.keys(compileElement.referenceTokens).forEach(function (varName) {\n              var token = compileElement.referenceTokens[varName];\n              varTokenEntries.push([varName, isPresent(token) ? createDiTokenExpression(token) : NULL_EXPR]);\n          });\n      }\n      return importExpr(resolveIdentifier(Identifiers.StaticNodeDebugInfo))\n          .instantiate([\n          literalArr(providerTokens, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])),\n          componentToken,\n          literalMap(varTokenEntries, new MapType(DYNAMIC_TYPE, [TypeModifier.Const]))\n      ], importType(resolveIdentifier(Identifiers.StaticNodeDebugInfo), null, [TypeModifier.Const]));\n  }\n  function createViewClass(view, renderCompTypeVar, nodeDebugInfosVar) {\n      var viewConstructorArgs = [\n          new FnParam(ViewConstructorVars.viewUtils.name, importType(resolveIdentifier(Identifiers.ViewUtils))),\n          new FnParam(ViewConstructorVars.parentInjector.name, importType(resolveIdentifier(Identifiers.Injector))),\n          new FnParam(ViewConstructorVars.declarationEl.name, importType(resolveIdentifier(Identifiers.AppElement)))\n      ];\n      var superConstructorArgs = [\n          variable(view.className), renderCompTypeVar, ViewTypeEnum.fromValue(view.viewType),\n          ViewConstructorVars.viewUtils, ViewConstructorVars.parentInjector,\n          ViewConstructorVars.declarationEl,\n          ChangeDetectorStatusEnum.fromValue(getChangeDetectionMode(view))\n      ];\n      if (view.genConfig.genDebugInfo) {\n          superConstructorArgs.push(nodeDebugInfosVar);\n      }\n      var viewMethods = [\n          new ClassMethod('createInternal', [new FnParam(rootSelectorVar.name, STRING_TYPE)], generateCreateMethod(view), importType(resolveIdentifier(Identifiers.AppElement))),\n          new ClassMethod('injectorGetInternal', [\n              new FnParam(InjectMethodVars.token.name, DYNAMIC_TYPE),\n              // Note: Can't use o.INT_TYPE here as the method in AppView uses number\n              new FnParam(InjectMethodVars.requestNodeIndex.name, NUMBER_TYPE),\n              new FnParam(InjectMethodVars.notFoundResult.name, DYNAMIC_TYPE)\n          ], addReturnValuefNotEmpty(view.injectorGetMethod.finish(), InjectMethodVars.notFoundResult), DYNAMIC_TYPE),\n          new ClassMethod('detectChangesInternal', [new FnParam(DetectChangesVars.throwOnChange.name, BOOL_TYPE)], generateDetectChangesMethod(view)),\n          new ClassMethod('dirtyParentQueriesInternal', [], view.dirtyParentQueriesMethod.finish()),\n          new ClassMethod('destroyInternal', [], view.destroyMethod.finish()),\n          new ClassMethod('detachInternal', [], view.detachMethod.finish())\n      ].filter(function (method) { return method.body.length > 0; });\n      var superClass = view.genConfig.genDebugInfo ? Identifiers.DebugAppView : Identifiers.AppView;\n      var viewClass = createClassStmt({\n          name: view.className,\n          parent: importExpr(resolveIdentifier(superClass), [getContextType(view)]),\n          parentArgs: superConstructorArgs,\n          ctorParams: viewConstructorArgs,\n          builders: [{ methods: viewMethods }, view]\n      });\n      return viewClass;\n  }\n  function createViewFactory(view, viewClass, renderCompTypeVar) {\n      var viewFactoryArgs = [\n          new FnParam(ViewConstructorVars.viewUtils.name, importType(resolveIdentifier(Identifiers.ViewUtils))),\n          new FnParam(ViewConstructorVars.parentInjector.name, importType(resolveIdentifier(Identifiers.Injector))),\n          new FnParam(ViewConstructorVars.declarationEl.name, importType(resolveIdentifier(Identifiers.AppElement)))\n      ];\n      var initRenderCompTypeStmts = [];\n      var templateUrlInfo;\n      if (view.component.template.templateUrl == view.component.type.moduleUrl) {\n          templateUrlInfo =\n              view.component.type.moduleUrl + \" class \" + view.component.type.name + \" - inline template\";\n      }\n      else {\n          templateUrlInfo = view.component.template.templateUrl;\n      }\n      if (view.viewIndex === 0) {\n          var animationsExpr = literalMap(view.animations.map(function (entry) { return [entry.name, entry.fnExp]; }));\n          initRenderCompTypeStmts = [\n              new IfStmt(renderCompTypeVar.identical(NULL_EXPR), [\n                  renderCompTypeVar\n                      .set(ViewConstructorVars.viewUtils.callMethod('createRenderComponentType', [\n                      view.genConfig.genDebugInfo ? literal(templateUrlInfo) : literal(''),\n                      literal(view.component.template.ngContentSelectors.length),\n                      ViewEncapsulationEnum.fromValue(view.component.template.encapsulation),\n                      view.styles,\n                      animationsExpr,\n                  ]))\n                      .toStmt(),\n              ]),\n          ];\n      }\n      return fn(viewFactoryArgs, initRenderCompTypeStmts.concat([\n          new ReturnStatement(variable(viewClass.name)\n              .instantiate(viewClass.constructorMethod.params.map(function (param) { return variable(param.name); }))),\n      ]), importType(resolveIdentifier(Identifiers.AppView), [getContextType(view)]))\n          .toDeclStmt(view.viewFactory.name, [StmtModifier.Final]);\n  }\n  function generateCreateMethod(view) {\n      var parentRenderNodeExpr = NULL_EXPR;\n      var parentRenderNodeStmts = [];\n      if (view.viewType === ViewType.COMPONENT) {\n          parentRenderNodeExpr = ViewProperties.renderer.callMethod('createViewRoot', [THIS_EXPR.prop('declarationAppElement').prop('nativeElement')]);\n          parentRenderNodeStmts =\n              [parentRenderNodeVar.set(parentRenderNodeExpr)\n                      .toDeclStmt(importType(view.genConfig.renderTypes.renderNode), [StmtModifier.Final])];\n      }\n      var resultExpr;\n      if (view.viewType === ViewType.HOST) {\n          resultExpr = view.nodes[0].appElement;\n      }\n      else {\n          resultExpr = NULL_EXPR;\n      }\n      return parentRenderNodeStmts.concat(view.createMethod.finish(), [\n          THIS_EXPR\n              .callMethod('init', [\n              createFlatArray(view.rootNodesOrAppElements),\n              literalArr(view.nodes.map(function (node) { return node.renderNode; })), literalArr(view.disposables),\n              literalArr(view.subscriptions)\n          ])\n              .toStmt(),\n          new ReturnStatement(resultExpr)\n      ]);\n  }\n  function generateDetectChangesMethod(view) {\n      var stmts = [];\n      if (view.animationBindingsMethod.isEmpty() && view.detectChangesInInputsMethod.isEmpty() &&\n          view.updateContentQueriesMethod.isEmpty() &&\n          view.afterContentLifecycleCallbacksMethod.isEmpty() &&\n          view.detectChangesRenderPropertiesMethod.isEmpty() &&\n          view.updateViewQueriesMethod.isEmpty() && view.afterViewLifecycleCallbacksMethod.isEmpty()) {\n          return stmts;\n      }\n      stmts.push.apply(stmts, view.animationBindingsMethod.finish());\n      stmts.push.apply(stmts, view.detectChangesInInputsMethod.finish());\n      stmts.push(THIS_EXPR.callMethod('detectContentChildrenChanges', [DetectChangesVars.throwOnChange])\n          .toStmt());\n      var afterContentStmts = view.updateContentQueriesMethod.finish().concat(view.afterContentLifecycleCallbacksMethod.finish());\n      if (afterContentStmts.length > 0) {\n          stmts.push(new IfStmt(not(DetectChangesVars.throwOnChange), afterContentStmts));\n      }\n      stmts.push.apply(stmts, view.detectChangesRenderPropertiesMethod.finish());\n      stmts.push(THIS_EXPR.callMethod('detectViewChildrenChanges', [DetectChangesVars.throwOnChange])\n          .toStmt());\n      var afterViewStmts = view.updateViewQueriesMethod.finish().concat(view.afterViewLifecycleCallbacksMethod.finish());\n      if (afterViewStmts.length > 0) {\n          stmts.push(new IfStmt(not(DetectChangesVars.throwOnChange), afterViewStmts));\n      }\n      var varStmts = [];\n      var readVars = findReadVarNames(stmts);\n      if (readVars.has(DetectChangesVars.changed.name)) {\n          varStmts.push(DetectChangesVars.changed.set(literal(true)).toDeclStmt(BOOL_TYPE));\n      }\n      if (readVars.has(DetectChangesVars.changes.name)) {\n          varStmts.push(DetectChangesVars.changes.set(NULL_EXPR)\n              .toDeclStmt(new MapType(importType(resolveIdentifier(Identifiers.SimpleChange)))));\n      }\n      varStmts.push.apply(varStmts, createSharedBindingVariablesIfNeeded(stmts));\n      return varStmts.concat(stmts);\n  }\n  function addReturnValuefNotEmpty(statements, value) {\n      if (statements.length > 0) {\n          return statements.concat([new ReturnStatement(value)]);\n      }\n      else {\n          return statements;\n      }\n  }\n  function getContextType(view) {\n      if (view.viewType === ViewType.COMPONENT) {\n          return importType(view.component.type);\n      }\n      return DYNAMIC_TYPE;\n  }\n  function getChangeDetectionMode(view) {\n      var mode;\n      if (view.viewType === ViewType.COMPONENT) {\n          mode = isDefaultChangeDetectionStrategy(view.component.changeDetection) ?\n              ChangeDetectorStatus.CheckAlways :\n              ChangeDetectorStatus.CheckOnce;\n      }\n      else {\n          mode = ChangeDetectorStatus.CheckAlways;\n      }\n      return mode;\n  }\n\n  var ViewCompileResult = (function () {\n      function ViewCompileResult(statements, viewFactoryVar, dependencies) {\n          this.statements = statements;\n          this.viewFactoryVar = viewFactoryVar;\n          this.dependencies = dependencies;\n      }\n      return ViewCompileResult;\n  }());\n  var ViewCompiler = (function () {\n      function ViewCompiler(_genConfig, _schemaRegistry) {\n          this._genConfig = _genConfig;\n          this._schemaRegistry = _schemaRegistry;\n      }\n      ViewCompiler.prototype.compileComponent = function (component, template, styles, pipes, compiledAnimations) {\n          var dependencies = [];\n          var view = new CompileView(component, this._genConfig, pipes, styles, compiledAnimations, 0, CompileElement.createNull(), []);\n          var statements = [];\n          buildView(view, template, dependencies);\n          // Need to separate binding from creation to be able to refer to\n          // variables that have been declared after usage.\n          bindView(view, template, this._schemaRegistry);\n          finishView(view, statements);\n          return new ViewCompileResult(statements, view.viewFactory.name, dependencies);\n      };\n      ViewCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      ViewCompiler.ctorParameters = [\n          { type: CompilerConfig, },\n          { type: ElementSchemaRegistry, },\n      ];\n      return ViewCompiler;\n  }());\n\n  var SourceModule = (function () {\n      function SourceModule(fileUrl, moduleUrl, source) {\n          this.fileUrl = fileUrl;\n          this.moduleUrl = moduleUrl;\n          this.source = source;\n      }\n      return SourceModule;\n  }());\n  // Returns all the source files and a mapping from modules to directives\n  function analyzeNgModules(programStaticSymbols, options, metadataResolver) {\n      var _a = _extractModulesAndPipesOrDirectives(programStaticSymbols, metadataResolver), programNgModules = _a.ngModules, programPipesOrDirectives = _a.pipesAndDirectives;\n      var moduleMetasByRef = new Map();\n      programNgModules.forEach(function (modMeta) {\n          if (options.transitiveModules) {\n              // For every input modules add the list of transitively included modules\n              modMeta.transitiveModule.modules.forEach(function (modMeta) { moduleMetasByRef.set(modMeta.type.reference, modMeta); });\n          }\n          else {\n              moduleMetasByRef.set(modMeta.type.reference, modMeta);\n          }\n      });\n      var ngModuleMetas = MapWrapper.values(moduleMetasByRef);\n      var ngModuleByPipeOrDirective = new Map();\n      var ngModulesByFile = new Map();\n      var ngDirectivesByFile = new Map();\n      var filePaths = new Set();\n      // Looping over all modules to construct:\n      // - a map from file to modules `ngModulesByFile`,\n      // - a map from file to directives `ngDirectivesByFile`,\n      // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n      ngModuleMetas.forEach(function (ngModuleMeta) {\n          var srcFileUrl = ngModuleMeta.type.reference.filePath;\n          filePaths.add(srcFileUrl);\n          ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n          ngModuleMeta.declaredDirectives.forEach(function (dirMeta) {\n              var fileUrl = dirMeta.type.reference.filePath;\n              filePaths.add(fileUrl);\n              ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirMeta.type.reference));\n              ngModuleByPipeOrDirective.set(dirMeta.type.reference, ngModuleMeta);\n          });\n          ngModuleMeta.declaredPipes.forEach(function (pipeMeta) {\n              var fileUrl = pipeMeta.type.reference.filePath;\n              filePaths.add(fileUrl);\n              ngModuleByPipeOrDirective.set(pipeMeta.type.reference, ngModuleMeta);\n          });\n      });\n      // Throw an error if any of the program pipe or directives is not declared by a module\n      var symbolsMissingModule = programPipesOrDirectives.filter(function (s) { return !ngModuleByPipeOrDirective.has(s); });\n      if (symbolsMissingModule.length) {\n          var messages = symbolsMissingModule.map(function (s) { return (\"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"!\"); });\n          throw new Error(messages.join('\\n'));\n      }\n      var files = [];\n      filePaths.forEach(function (srcUrl) {\n          var directives = ngDirectivesByFile.get(srcUrl) || [];\n          var ngModules = ngModulesByFile.get(srcUrl) || [];\n          files.push({ srcUrl: srcUrl, directives: directives, ngModules: ngModules });\n      });\n      return {\n          // map directive/pipe to module\n          ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n          // list modules and directives for every source file\n          files: files,\n      };\n  }\n  var OfflineCompiler = (function () {\n      function OfflineCompiler(_metadataResolver, _directiveNormalizer, _templateParser, _styleCompiler, _viewCompiler, _dirWrapperCompiler, _ngModuleCompiler, _outputEmitter, _localeId, _translationFormat) {\n          this._metadataResolver = _metadataResolver;\n          this._directiveNormalizer = _directiveNormalizer;\n          this._templateParser = _templateParser;\n          this._styleCompiler = _styleCompiler;\n          this._viewCompiler = _viewCompiler;\n          this._dirWrapperCompiler = _dirWrapperCompiler;\n          this._ngModuleCompiler = _ngModuleCompiler;\n          this._outputEmitter = _outputEmitter;\n          this._localeId = _localeId;\n          this._translationFormat = _translationFormat;\n          this._animationParser = new AnimationParser();\n          this._animationCompiler = new AnimationCompiler();\n      }\n      OfflineCompiler.prototype.clearCache = function () {\n          this._directiveNormalizer.clearCache();\n          this._metadataResolver.clearCache();\n      };\n      OfflineCompiler.prototype.compileModules = function (staticSymbols, options) {\n          var _this = this;\n          var _a = analyzeNgModules(staticSymbols, options, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files;\n          var sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.ngModules); });\n          return Promise.all(sourceModules)\n              .then(function (modules) { return ListWrapper.flatten(modules); });\n      };\n      OfflineCompiler.prototype._compileSrcFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, ngModules) {\n          var _this = this;\n          var fileSuffix = _splitTypescriptSuffix(srcFileUrl)[1];\n          var statements = [];\n          var exportedVars = [];\n          var outputSourceModules = [];\n          // compile all ng modules\n          exportedVars.push.apply(exportedVars, ngModules.map(function (ngModuleType) { return _this._compileModule(ngModuleType, statements); }));\n          // compile directive wrappers\n          exportedVars.push.apply(exportedVars, directives.map(function (directiveType) { return _this._compileDirectiveWrapper(directiveType, statements); }));\n          // compile components\n          return Promise\n              .all(directives.map(function (dirType) {\n              var compMeta = _this._metadataResolver.getDirectiveMetadata(dirType);\n              if (!compMeta.isComponent) {\n                  return Promise.resolve(null);\n              }\n              var ngModule = ngModuleByPipeOrDirective.get(dirType);\n              if (!ngModule) {\n                  throw new Error(\"Internal Error: cannot determine the module for component \" + compMeta.type.name + \"!\");\n              }\n              return Promise\n                  .all([compMeta].concat(ngModule.transitiveModule.directives).map(function (dirMeta) { return _this._directiveNormalizer.normalizeDirective(dirMeta).asyncResult; }))\n                  .then(function (normalizedCompWithDirectives) {\n                  var compMeta = normalizedCompWithDirectives[0], dirMetas = normalizedCompWithDirectives.slice(1);\n                  _assertComponent(compMeta);\n                  // compile styles\n                  var stylesCompileResults = _this._styleCompiler.compileComponent(compMeta);\n                  stylesCompileResults.externalStylesheets.forEach(function (compiledStyleSheet) {\n                      outputSourceModules.push(_this._codgenStyles(srcFileUrl, compiledStyleSheet, fileSuffix));\n                  });\n                  // compile components\n                  exportedVars.push(_this._compileComponentFactory(compMeta, fileSuffix, statements), _this._compileComponent(compMeta, dirMetas, ngModule.transitiveModule.pipes, ngModule.schemas, stylesCompileResults.componentStylesheet, fileSuffix, statements));\n              });\n          }))\n              .then(function () {\n              if (statements.length > 0) {\n                  var srcModule = _this._codegenSourceModule(srcFileUrl, _ngfactoryModuleUrl(srcFileUrl), statements, exportedVars);\n                  outputSourceModules.unshift(srcModule);\n              }\n              return outputSourceModules;\n          });\n      };\n      OfflineCompiler.prototype._compileModule = function (ngModuleType, targetStatements) {\n          var ngModule = this._metadataResolver.getNgModuleMetadata(ngModuleType);\n          var providers = [];\n          if (this._localeId) {\n              providers.push(new CompileProviderMetadata({\n                  token: resolveIdentifierToken(Identifiers.LOCALE_ID),\n                  useValue: this._localeId,\n              }));\n          }\n          if (this._translationFormat) {\n              providers.push(new CompileProviderMetadata({\n                  token: resolveIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),\n                  useValue: this._translationFormat\n              }));\n          }\n          var appCompileResult = this._ngModuleCompiler.compile(ngModule, providers);\n          appCompileResult.dependencies.forEach(function (dep) {\n              dep.placeholder.name = _componentFactoryName(dep.comp);\n              dep.placeholder.moduleUrl = _ngfactoryModuleUrl(dep.comp.moduleUrl);\n          });\n          targetStatements.push.apply(targetStatements, appCompileResult.statements);\n          return appCompileResult.ngModuleFactoryVar;\n      };\n      OfflineCompiler.prototype._compileDirectiveWrapper = function (directiveType, targetStatements) {\n          var dirMeta = this._metadataResolver.getDirectiveMetadata(directiveType);\n          var dirCompileResult = this._dirWrapperCompiler.compile(dirMeta);\n          targetStatements.push.apply(targetStatements, dirCompileResult.statements);\n          return dirCompileResult.dirWrapperClassVar;\n      };\n      OfflineCompiler.prototype._compileComponentFactory = function (compMeta, fileSuffix, targetStatements) {\n          var hostMeta = createHostComponentMeta(compMeta);\n          var hostViewFactoryVar = this._compileComponent(hostMeta, [compMeta], [], [], null, fileSuffix, targetStatements);\n          var compFactoryVar = _componentFactoryName(compMeta.type);\n          targetStatements.push(variable(compFactoryVar)\n              .set(importExpr(resolveIdentifier(Identifiers.ComponentFactory), [importType(compMeta.type)])\n              .instantiate([\n              literal(compMeta.selector),\n              variable(hostViewFactoryVar),\n              importExpr(compMeta.type),\n          ], importType(resolveIdentifier(Identifiers.ComponentFactory), [importType(compMeta.type)], [TypeModifier.Const])))\n              .toDeclStmt(null, [StmtModifier.Final]));\n          return compFactoryVar;\n      };\n      OfflineCompiler.prototype._compileComponent = function (compMeta, directives, pipes, schemas, componentStyles, fileSuffix, targetStatements) {\n          var parsedAnimations = this._animationParser.parseComponent(compMeta);\n          var parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, schemas, compMeta.type.name);\n          var stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n          var compiledAnimations = this._animationCompiler.compile(compMeta.type.name, parsedAnimations);\n          var viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, stylesExpr, pipes, compiledAnimations);\n          if (componentStyles) {\n              targetStatements.push.apply(targetStatements, _resolveStyleStatements(componentStyles, fileSuffix));\n          }\n          compiledAnimations.forEach(function (entry) { entry.statements.forEach(function (statement) { targetStatements.push(statement); }); });\n          targetStatements.push.apply(targetStatements, _resolveViewStatements(viewResult));\n          return viewResult.viewFactoryVar;\n      };\n      OfflineCompiler.prototype._codgenStyles = function (fileUrl, stylesCompileResult, fileSuffix) {\n          _resolveStyleStatements(stylesCompileResult, fileSuffix);\n          return this._codegenSourceModule(fileUrl, _stylesModuleUrl(stylesCompileResult.meta.moduleUrl, stylesCompileResult.isShimmed, fileSuffix), stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n      };\n      OfflineCompiler.prototype._codegenSourceModule = function (fileUrl, moduleUrl, statements, exportedVars) {\n          return new SourceModule(fileUrl, moduleUrl, this._outputEmitter.emitStatements(moduleUrl, statements, exportedVars));\n      };\n      return OfflineCompiler;\n  }());\n  function _resolveViewStatements(compileResult) {\n      compileResult.dependencies.forEach(function (dep) {\n          if (dep instanceof ViewFactoryDependency) {\n              var vfd = dep;\n              vfd.placeholder.moduleUrl = _ngfactoryModuleUrl(vfd.comp.moduleUrl);\n          }\n          else if (dep instanceof ComponentFactoryDependency) {\n              var cfd = dep;\n              cfd.placeholder.name = _componentFactoryName(cfd.comp);\n              cfd.placeholder.moduleUrl = _ngfactoryModuleUrl(cfd.comp.moduleUrl);\n          }\n          else if (dep instanceof DirectiveWrapperDependency) {\n              var dwd = dep;\n              dwd.placeholder.moduleUrl = _ngfactoryModuleUrl(dwd.dir.moduleUrl);\n          }\n      });\n      return compileResult.statements;\n  }\n  function _resolveStyleStatements(compileResult, fileSuffix) {\n      compileResult.dependencies.forEach(function (dep) {\n          dep.valuePlaceholder.moduleUrl = _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix);\n      });\n      return compileResult.statements;\n  }\n  function _ngfactoryModuleUrl(dirUrl) {\n      var urlWithSuffix = _splitTypescriptSuffix(dirUrl);\n      return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n  }\n  function _componentFactoryName(comp) {\n      return comp.name + \"NgFactory\";\n  }\n  function _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n      return shim ? stylesheetUrl + \".shim\" + suffix : \"\" + stylesheetUrl + suffix;\n  }\n  function _assertComponent(meta) {\n      if (!meta.isComponent) {\n          throw new Error(\"Could not compile '\" + meta.type.name + \"' because it is not a component.\");\n      }\n  }\n  function _splitTypescriptSuffix(path) {\n      if (path.endsWith('.d.ts')) {\n          return [path.slice(0, -5), '.ts'];\n      }\n      var lastDot = path.lastIndexOf('.');\n      if (lastDot !== -1) {\n          return [path.substring(0, lastDot), path.substring(lastDot)];\n      }\n      return [path, ''];\n  }\n  // Group the symbols by types:\n  // - NgModules,\n  // - Pipes and Directives.\n  function _extractModulesAndPipesOrDirectives(programStaticSymbols, metadataResolver) {\n      var ngModules = [];\n      var pipesAndDirectives = [];\n      programStaticSymbols.forEach(function (staticSymbol) {\n          var ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n          var directive = metadataResolver.getDirectiveMetadata(staticSymbol, false);\n          var pipe = metadataResolver.getPipeMetadata(staticSymbol, false);\n          if (ngModule) {\n              ngModules.push(ngModule);\n          }\n          else if (directive) {\n              pipesAndDirectives.push(staticSymbol);\n          }\n          else if (pipe) {\n              pipesAndDirectives.push(staticSymbol);\n          }\n      });\n      return { ngModules: ngModules, pipesAndDirectives: pipesAndDirectives };\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * An interface for retrieving documents by URL that the compiler uses\n   * to load templates.\n   */\n  var ResourceLoader = (function () {\n      function ResourceLoader() {\n      }\n      ResourceLoader.prototype.get = function (url) { return null; };\n      return ResourceLoader;\n  }());\n\n  var _ASSET_SCHEME = 'asset:';\n  /**\n   * Create a {@link UrlResolver} with no package prefix.\n   */\n  function createUrlResolverWithoutPackagePrefix() {\n      return new UrlResolver();\n  }\n  function createOfflineCompileUrlResolver() {\n      return new UrlResolver(_ASSET_SCHEME);\n  }\n  /**\n   * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n   */\n  var DEFAULT_PACKAGE_URL_PROVIDER = {\n      provide: _angular_core.PACKAGE_ROOT_URL,\n      useValue: '/'\n  };\n  /**\n   * Used by the {@link Compiler} when resolving HTML and CSS template URLs.\n   *\n   * This class can be overridden by the application developer to create custom behavior.\n   *\n   * See {@link Compiler}\n   *\n   * ## Example\n   *\n   * {@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n   *\n   * @security  When compiling templates at runtime, you must\n   * ensure that the entire template comes from a trusted source.\n   * Attacker-controlled data introduced by a template could expose your\n   * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n   */\n  var UrlResolver = (function () {\n      function UrlResolver(_packagePrefix) {\n          if (_packagePrefix === void 0) { _packagePrefix = null; }\n          this._packagePrefix = _packagePrefix;\n      }\n      /**\n       * Resolves the `url` given the `baseUrl`:\n       * - when the `url` is null, the `baseUrl` is returned,\n       * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n       * `baseUrl` and `url`,\n       * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n       * returned as is (ignoring the `baseUrl`)\n       */\n      UrlResolver.prototype.resolve = function (baseUrl, url) {\n          var resolvedUrl = url;\n          if (isPresent(baseUrl) && baseUrl.length > 0) {\n              resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n          }\n          var resolvedParts = _split(resolvedUrl);\n          var prefix = this._packagePrefix;\n          if (isPresent(prefix) && isPresent(resolvedParts) &&\n              resolvedParts[_ComponentIndex.Scheme] == 'package') {\n              var path = resolvedParts[_ComponentIndex.Path];\n              if (this._packagePrefix === _ASSET_SCHEME) {\n                  var pathSegements = path.split(/\\//);\n                  resolvedUrl = \"asset:\" + pathSegements[0] + \"/lib/\" + pathSegements.slice(1).join('/');\n              }\n              else {\n                  prefix = prefix.replace(/\\/+$/, '');\n                  path = path.replace(/^\\/+/, '');\n                  return prefix + \"/\" + path;\n              }\n          }\n          return resolvedUrl;\n      };\n      UrlResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      UrlResolver.ctorParameters = [\n          { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n      ];\n      return UrlResolver;\n  }());\n  /**\n   * Extract the scheme of a URL.\n   */\n  function getUrlScheme(url) {\n      var match = _split(url);\n      return (match && match[_ComponentIndex.Scheme]) || '';\n  }\n  // The code below is adapted from Traceur:\n  // https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js\n  /**\n   * Builds a URI string from already-encoded parts.\n   *\n   * No encoding is performed.  Any component may be omitted as either null or\n   * undefined.\n   *\n   * @param opt_scheme The scheme such as 'http'.\n   * @param opt_userInfo The user name before the '@'.\n   * @param opt_domain The domain such as 'www.google.com', already\n   *     URI-encoded.\n   * @param opt_port The port number.\n   * @param opt_path The path, already URI-encoded.  If it is not\n   *     empty, it must begin with a slash.\n   * @param opt_queryData The URI-encoded query data.\n   * @param opt_fragment The URI-encoded fragment identifier.\n   * @return The fully combined URI.\n   */\n  function _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n      var out = [];\n      if (isPresent(opt_scheme)) {\n          out.push(opt_scheme + ':');\n      }\n      if (isPresent(opt_domain)) {\n          out.push('//');\n          if (isPresent(opt_userInfo)) {\n              out.push(opt_userInfo + '@');\n          }\n          out.push(opt_domain);\n          if (isPresent(opt_port)) {\n              out.push(':' + opt_port);\n          }\n      }\n      if (isPresent(opt_path)) {\n          out.push(opt_path);\n      }\n      if (isPresent(opt_queryData)) {\n          out.push('?' + opt_queryData);\n      }\n      if (isPresent(opt_fragment)) {\n          out.push('#' + opt_fragment);\n      }\n      return out.join('');\n  }\n  /**\n   * A regular expression for breaking a URI into its component parts.\n   *\n   * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n   * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n   * disambiguation method used by POSIX regular expressions, it is natural and\n   * commonplace to use a regular expression for parsing the potential five\n   * components of a URI reference.\n   *\n   * The following line is the regular expression for breaking-down a\n   * well-formed URI reference into its components.\n   *\n   * <pre>\n   * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n   *  12            3  4          5       6  7        8 9\n   * </pre>\n   *\n   * The numbers in the second line above are only to assist readability; they\n   * indicate the reference points for each subexpression (i.e., each paired\n   * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n   * For example, matching the above expression to\n   * <pre>\n   *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n   * </pre>\n   * results in the following subexpression matches:\n   * <pre>\n   *    $1 = http:\n   *    $2 = http\n   *    $3 = //www.ics.uci.edu\n   *    $4 = www.ics.uci.edu\n   *    $5 = /pub/ietf/uri/\n   *    $6 = <undefined>\n   *    $7 = <undefined>\n   *    $8 = #Related\n   *    $9 = Related\n   * </pre>\n   * where <undefined> indicates that the component is not present, as is the\n   * case for the query component in the above example. Therefore, we can\n   * determine the value of the five components as\n   * <pre>\n   *    scheme    = $2\n   *    authority = $4\n   *    path      = $5\n   *    query     = $7\n   *    fragment  = $9\n   * </pre>\n   *\n   * The regular expression has been modified slightly to expose the\n   * userInfo, domain, and port separately from the authority.\n   * The modified version yields\n   * <pre>\n   *    $1 = http              scheme\n   *    $2 = <undefined>       userInfo -\\\n   *    $3 = www.ics.uci.edu   domain     | authority\n   *    $4 = <undefined>       port     -/\n   *    $5 = /pub/ietf/uri/    path\n   *    $6 = <undefined>       query without ?\n   *    $7 = Related           fragment without #\n   * </pre>\n   * @type {!RegExp}\n   * @internal\n   */\n  var _splitRe = new RegExp('^' +\n      '(?:' +\n      '([^:/?#.]+)' +\n      // used by other URL parts such as :,\n      // ?, /, #, and .\n      ':)?' +\n      '(?://' +\n      '(?:([^/?#]*)@)?' +\n      '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n      // digits, dashes, dots, percent\n      // escapes, and unicode characters.\n      '(?::([0-9]+))?' +\n      ')?' +\n      '([^?#]+)?' +\n      '(?:\\\\?([^#]*))?' +\n      '(?:#(.*))?' +\n      '$');\n  /**\n   * The index of each URI component in the return value of goog.uri.utils.split.\n   * @enum {number}\n   */\n  var _ComponentIndex;\n  (function (_ComponentIndex) {\n      _ComponentIndex[_ComponentIndex[\"Scheme\"] = 1] = \"Scheme\";\n      _ComponentIndex[_ComponentIndex[\"UserInfo\"] = 2] = \"UserInfo\";\n      _ComponentIndex[_ComponentIndex[\"Domain\"] = 3] = \"Domain\";\n      _ComponentIndex[_ComponentIndex[\"Port\"] = 4] = \"Port\";\n      _ComponentIndex[_ComponentIndex[\"Path\"] = 5] = \"Path\";\n      _ComponentIndex[_ComponentIndex[\"QueryData\"] = 6] = \"QueryData\";\n      _ComponentIndex[_ComponentIndex[\"Fragment\"] = 7] = \"Fragment\";\n  })(_ComponentIndex || (_ComponentIndex = {}));\n  /**\n   * Splits a URI into its component parts.\n   *\n   * Each component can be accessed via the component indices; for example:\n   * <pre>\n   * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n   * </pre>\n   *\n   * @param uri The URI string to examine.\n   * @return Each component still URI-encoded.\n   *     Each component that is present will contain the encoded value, whereas\n   *     components that are not present will be undefined or empty, depending\n   *     on the browser's regular expression implementation.  Never null, since\n   *     arbitrary strings may still look like path names.\n   */\n  function _split(uri) {\n      return uri.match(_splitRe);\n  }\n  /**\n    * Removes dot segments in given path component, as described in\n    * RFC 3986, section 5.2.4.\n    *\n    * @param path A non-empty path component.\n    * @return Path component with removed dot segments.\n    */\n  function _removeDotSegments(path) {\n      if (path == '/')\n          return '/';\n      var leadingSlash = path[0] == '/' ? '/' : '';\n      var trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n      var segments = path.split('/');\n      var out = [];\n      var up = 0;\n      for (var pos = 0; pos < segments.length; pos++) {\n          var segment = segments[pos];\n          switch (segment) {\n              case '':\n              case '.':\n                  break;\n              case '..':\n                  if (out.length > 0) {\n                      out.pop();\n                  }\n                  else {\n                      up++;\n                  }\n                  break;\n              default:\n                  out.push(segment);\n          }\n      }\n      if (leadingSlash == '') {\n          while (up-- > 0) {\n              out.unshift('..');\n          }\n          if (out.length === 0)\n              out.push('.');\n      }\n      return leadingSlash + out.join('/') + trailingSlash;\n  }\n  /**\n   * Takes an array of the parts from split and canonicalizes the path part\n   * and then joins all the parts.\n   */\n  function _joinAndCanonicalizePath(parts) {\n      var path = parts[_ComponentIndex.Path];\n      path = isBlank(path) ? '' : _removeDotSegments(path);\n      parts[_ComponentIndex.Path] = path;\n      return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n  }\n  /**\n   * Resolves a URL.\n   * @param base The URL acting as the base URL.\n   * @param to The URL to resolve.\n   */\n  function _resolveUrl(base, url) {\n      var parts = _split(encodeURI(url));\n      var baseParts = _split(base);\n      if (isPresent(parts[_ComponentIndex.Scheme])) {\n          return _joinAndCanonicalizePath(parts);\n      }\n      else {\n          parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n      }\n      for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n          if (isBlank(parts[i])) {\n              parts[i] = baseParts[i];\n          }\n      }\n      if (parts[_ComponentIndex.Path][0] == '/') {\n          return _joinAndCanonicalizePath(parts);\n      }\n      var path = baseParts[_ComponentIndex.Path];\n      if (isBlank(path))\n          path = '/';\n      var index = path.lastIndexOf('/');\n      path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n      parts[_ComponentIndex.Path] = path;\n      return _joinAndCanonicalizePath(parts);\n  }\n\n  var DirectiveNormalizer = (function () {\n      function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n          this._resourceLoader = _resourceLoader;\n          this._urlResolver = _urlResolver;\n          this._htmlParser = _htmlParser;\n          this._config = _config;\n          this._resourceLoaderCache = new Map();\n      }\n      DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n      DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n          var _this = this;\n          if (!normalizedDirective.isComponent) {\n              return;\n          }\n          this._resourceLoaderCache.delete(normalizedDirective.template.templateUrl);\n          normalizedDirective.template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(stylesheet.moduleUrl); });\n      };\n      DirectiveNormalizer.prototype._fetch = function (url) {\n          var result = this._resourceLoaderCache.get(url);\n          if (!result) {\n              result = this._resourceLoader.get(url);\n              this._resourceLoaderCache.set(url, result);\n          }\n          return result;\n      };\n      DirectiveNormalizer.prototype.normalizeDirective = function (directive) {\n          var _this = this;\n          if (!directive.isComponent) {\n              // For non components there is nothing to be normalized yet.\n              return new SyncAsyncResult(directive, Promise.resolve(directive));\n          }\n          var normalizedTemplateSync = null;\n          var normalizedTemplateAsync;\n          if (isPresent(directive.template.template)) {\n              normalizedTemplateSync = this.normalizeTemplateSync(directive.type, directive.template);\n              normalizedTemplateAsync = Promise.resolve(normalizedTemplateSync);\n          }\n          else if (directive.template.templateUrl) {\n              normalizedTemplateAsync = this.normalizeTemplateAsync(directive.type, directive.template);\n          }\n          else {\n              throw new Error(\"No template specified for component \" + directive.type.name);\n          }\n          if (normalizedTemplateSync && normalizedTemplateSync.styleUrls.length === 0) {\n              // sync case\n              var normalizedDirective = _cloneDirectiveWithTemplate(directive, normalizedTemplateSync);\n              return new SyncAsyncResult(normalizedDirective, Promise.resolve(normalizedDirective));\n          }\n          else {\n              // async case\n              return new SyncAsyncResult(null, normalizedTemplateAsync\n                  .then(function (normalizedTemplate) { return _this.normalizeExternalStylesheets(normalizedTemplate); })\n                  .then(function (normalizedTemplate) {\n                  return _cloneDirectiveWithTemplate(directive, normalizedTemplate);\n              }));\n          }\n      };\n      DirectiveNormalizer.prototype.normalizeTemplateSync = function (directiveType, template) {\n          return this.normalizeLoadedTemplate(directiveType, template, template.template, directiveType.moduleUrl);\n      };\n      DirectiveNormalizer.prototype.normalizeTemplateAsync = function (directiveType, template) {\n          var _this = this;\n          var templateUrl = this._urlResolver.resolve(directiveType.moduleUrl, template.templateUrl);\n          return this._fetch(templateUrl)\n              .then(function (value) { return _this.normalizeLoadedTemplate(directiveType, template, value, templateUrl); });\n      };\n      DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (directiveType, templateMeta, template, templateAbsUrl) {\n          var interpolationConfig = InterpolationConfig.fromArray(templateMeta.interpolation);\n          var rootNodesAndErrors = this._htmlParser.parse(template, directiveType.name, false, interpolationConfig);\n          if (rootNodesAndErrors.errors.length > 0) {\n              var errorString = rootNodesAndErrors.errors.join('\\n');\n              throw new Error(\"Template parse errors:\\n\" + errorString);\n          }\n          var templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n              styles: templateMeta.styles,\n              styleUrls: templateMeta.styleUrls,\n              moduleUrl: directiveType.moduleUrl\n          }));\n          var visitor = new TemplatePreparseVisitor();\n          visitAll(visitor, rootNodesAndErrors.rootNodes);\n          var templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n          var encapsulation = templateMeta.encapsulation;\n          if (isBlank(encapsulation)) {\n              encapsulation = this._config.defaultEncapsulation;\n          }\n          var styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n          var styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n          if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n              styleUrls.length === 0) {\n              encapsulation = _angular_core.ViewEncapsulation.None;\n          }\n          return new CompileTemplateMetadata({\n              encapsulation: encapsulation,\n              template: template,\n              templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n              externalStylesheets: templateMeta.externalStylesheets,\n              ngContentSelectors: visitor.ngContentSelectors,\n              animations: templateMeta.animations,\n              interpolation: templateMeta.interpolation,\n          });\n      };\n      DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n          return this._loadMissingExternalStylesheets(templateMeta.styleUrls)\n              .then(function (externalStylesheets) { return new CompileTemplateMetadata({\n              encapsulation: templateMeta.encapsulation,\n              template: templateMeta.template,\n              templateUrl: templateMeta.templateUrl,\n              styles: templateMeta.styles,\n              styleUrls: templateMeta.styleUrls,\n              externalStylesheets: externalStylesheets,\n              ngContentSelectors: templateMeta.ngContentSelectors,\n              animations: templateMeta.animations,\n              interpolation: templateMeta.interpolation\n          }); });\n      };\n      DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n          var _this = this;\n          if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n          return Promise\n              .all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n              .map(function (styleUrl) { return _this._fetch(styleUrl).then(function (loadedStyle) {\n              var stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n              loadedStylesheets.set(styleUrl, stylesheet);\n              return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n          }); }))\n              .then(function (_) { return MapWrapper.values(loadedStylesheets); });\n      };\n      DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n          var _this = this;\n          var allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n              .map(function (url) { return _this._urlResolver.resolve(stylesheet.moduleUrl, url); });\n          var allStyles = stylesheet.styles.map(function (style) {\n              var styleWithImports = extractStyleUrls(_this._urlResolver, stylesheet.moduleUrl, style);\n              allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n              return styleWithImports.style;\n          });\n          return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: stylesheet.moduleUrl });\n      };\n      DirectiveNormalizer.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      DirectiveNormalizer.ctorParameters = [\n          { type: ResourceLoader, },\n          { type: UrlResolver, },\n          { type: HtmlParser, },\n          { type: CompilerConfig, },\n      ];\n      return DirectiveNormalizer;\n  }());\n  var TemplatePreparseVisitor = (function () {\n      function TemplatePreparseVisitor() {\n          this.ngContentSelectors = [];\n          this.styles = [];\n          this.styleUrls = [];\n          this.ngNonBindableStackCount = 0;\n      }\n      TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n          var preparsedElement = preparseElement(ast);\n          switch (preparsedElement.type) {\n              case PreparsedElementType.NG_CONTENT:\n                  if (this.ngNonBindableStackCount === 0) {\n                      this.ngContentSelectors.push(preparsedElement.selectAttr);\n                  }\n                  break;\n              case PreparsedElementType.STYLE:\n                  var textContent = '';\n                  ast.children.forEach(function (child) {\n                      if (child instanceof Text) {\n                          textContent += child.value;\n                      }\n                  });\n                  this.styles.push(textContent);\n                  break;\n              case PreparsedElementType.STYLESHEET:\n                  this.styleUrls.push(preparsedElement.hrefAttr);\n                  break;\n              default:\n                  break;\n          }\n          if (preparsedElement.nonBindable) {\n              this.ngNonBindableStackCount++;\n          }\n          visitAll(this, ast.children);\n          if (preparsedElement.nonBindable) {\n              this.ngNonBindableStackCount--;\n          }\n          return null;\n      };\n      TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n      TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n      TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n      TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { return null; };\n      TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) { return null; };\n      return TemplatePreparseVisitor;\n  }());\n  function _cloneDirectiveWithTemplate(directive, template) {\n      return new CompileDirectiveMetadata({\n          type: directive.type,\n          isComponent: directive.isComponent,\n          selector: directive.selector,\n          exportAs: directive.exportAs,\n          changeDetection: directive.changeDetection,\n          inputs: directive.inputs,\n          outputs: directive.outputs,\n          hostListeners: directive.hostListeners,\n          hostProperties: directive.hostProperties,\n          hostAttributes: directive.hostAttributes,\n          providers: directive.providers,\n          viewProviders: directive.viewProviders,\n          queries: directive.queries,\n          viewQueries: directive.viewQueries,\n          entryComponents: directive.entryComponents, template: template,\n      });\n  }\n\n  /*\n   * Resolve a `Type` for {@link Directive}.\n   *\n   * This interface can be overridden by the application developer to create custom behavior.\n   *\n   * See {@link Compiler}\n   */\n  var DirectiveResolver = (function () {\n      function DirectiveResolver(_reflector) {\n          if (_reflector === void 0) { _reflector = reflector; }\n          this._reflector = _reflector;\n      }\n      /**\n       * Return {@link Directive} for a given `Type`.\n       */\n      DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          var typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n          if (typeMetadata) {\n              var metadata = typeMetadata.find(isDirectiveMetadata);\n              if (metadata) {\n                  var propertyMetadata = this._reflector.propMetadata(type);\n                  return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n              }\n          }\n          if (throwIfNotFound) {\n              throw new Error(\"No Directive annotation found on \" + stringify(type));\n          }\n          return null;\n      };\n      DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n          var inputs = [];\n          var outputs = [];\n          var host = {};\n          var queries = {};\n          Object.keys(propertyMetadata).forEach(function (propName) {\n              propertyMetadata[propName].forEach(function (a) {\n                  if (a instanceof _angular_core.Input) {\n                      if (a.bindingPropertyName) {\n                          inputs.push(propName + \": \" + a.bindingPropertyName);\n                      }\n                      else {\n                          inputs.push(propName);\n                      }\n                  }\n                  else if (a instanceof _angular_core.Output) {\n                      var output = a;\n                      if (output.bindingPropertyName) {\n                          outputs.push(propName + \": \" + output.bindingPropertyName);\n                      }\n                      else {\n                          outputs.push(propName);\n                      }\n                  }\n                  else if (a instanceof _angular_core.HostBinding) {\n                      var hostBinding = a;\n                      if (hostBinding.hostPropertyName) {\n                          var startWith = hostBinding.hostPropertyName[0];\n                          if (startWith === '(') {\n                              throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                          }\n                          else if (startWith === '[') {\n                              throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                          }\n                          host[(\"[\" + hostBinding.hostPropertyName + \"]\")] = propName;\n                      }\n                      else {\n                          host[(\"[\" + propName + \"]\")] = propName;\n                      }\n                  }\n                  else if (a instanceof _angular_core.HostListener) {\n                      var hostListener = a;\n                      var args = hostListener.args || [];\n                      host[(\"(\" + hostListener.eventName + \")\")] = propName + \"(\" + args.join(',') + \")\";\n                  }\n                  else if (a instanceof _angular_core.Query) {\n                      queries[propName] = a;\n                  }\n              });\n          });\n          return this._merge(dm, inputs, outputs, host, queries, directiveType);\n      };\n      DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [null, def])[1].trim(); };\n      DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n          var _this = this;\n          var mergedInputs = inputs;\n          if (directive.inputs) {\n              var inputNames_1 = directive.inputs.map(function (def) { return _this._extractPublicName(def); });\n              inputs.forEach(function (inputDef) {\n                  var publicName = _this._extractPublicName(inputDef);\n                  if (inputNames_1.indexOf(publicName) > -1) {\n                      throw new Error(\"Input '\" + publicName + \"' defined multiple times in '\" + stringify(directiveType) + \"'\");\n                  }\n              });\n              mergedInputs.unshift.apply(mergedInputs, directive.inputs);\n          }\n          var mergedOutputs = outputs;\n          if (directive.outputs) {\n              var outputNames_1 = directive.outputs.map(function (def) { return _this._extractPublicName(def); });\n              outputs.forEach(function (outputDef) {\n                  var publicName = _this._extractPublicName(outputDef);\n                  if (outputNames_1.indexOf(publicName) > -1) {\n                      throw new Error(\"Output event '\" + publicName + \"' defined multiple times in '\" + stringify(directiveType) + \"'\");\n                  }\n              });\n              mergedOutputs.unshift.apply(mergedOutputs, directive.outputs);\n          }\n          var mergedHost = directive.host ? StringMapWrapper.merge(directive.host, host) : host;\n          var mergedQueries = directive.queries ? StringMapWrapper.merge(directive.queries, queries) : queries;\n          if (directive instanceof _angular_core.Component) {\n              return new _angular_core.Component({\n                  selector: directive.selector,\n                  inputs: mergedInputs,\n                  outputs: mergedOutputs,\n                  host: mergedHost,\n                  exportAs: directive.exportAs,\n                  moduleId: directive.moduleId,\n                  queries: mergedQueries,\n                  changeDetection: directive.changeDetection,\n                  providers: directive.providers,\n                  viewProviders: directive.viewProviders,\n                  entryComponents: directive.entryComponents,\n                  template: directive.template,\n                  templateUrl: directive.templateUrl,\n                  styles: directive.styles,\n                  styleUrls: directive.styleUrls,\n                  encapsulation: directive.encapsulation,\n                  animations: directive.animations,\n                  interpolation: directive.interpolation\n              });\n          }\n          else {\n              return new _angular_core.Directive({\n                  selector: directive.selector,\n                  inputs: mergedInputs,\n                  outputs: mergedOutputs,\n                  host: mergedHost,\n                  exportAs: directive.exportAs,\n                  queries: mergedQueries,\n                  providers: directive.providers\n              });\n          }\n      };\n      DirectiveResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      DirectiveResolver.ctorParameters = [\n          { type: ReflectorReader, },\n      ];\n      return DirectiveResolver;\n  }());\n  function isDirectiveMetadata(type) {\n      return type instanceof _angular_core.Directive;\n  }\n\n  function hasLifecycleHook(hook, token) {\n      return reflector.hasLifecycleHook(token, getHookName(hook));\n  }\n  function getHookName(hook) {\n      switch (hook) {\n          case LifecycleHooks.OnInit:\n              return 'ngOnInit';\n          case LifecycleHooks.OnDestroy:\n              return 'ngOnDestroy';\n          case LifecycleHooks.DoCheck:\n              return 'ngDoCheck';\n          case LifecycleHooks.OnChanges:\n              return 'ngOnChanges';\n          case LifecycleHooks.AfterContentInit:\n              return 'ngAfterContentInit';\n          case LifecycleHooks.AfterContentChecked:\n              return 'ngAfterContentChecked';\n          case LifecycleHooks.AfterViewInit:\n              return 'ngAfterViewInit';\n          case LifecycleHooks.AfterViewChecked:\n              return 'ngAfterViewChecked';\n      }\n  }\n\n  function _isNgModuleMetadata(obj) {\n      return obj instanceof _angular_core.NgModule;\n  }\n  /**\n   * Resolves types to {@link NgModule}.\n   */\n  var NgModuleResolver = (function () {\n      function NgModuleResolver(_reflector) {\n          if (_reflector === void 0) { _reflector = reflector; }\n          this._reflector = _reflector;\n      }\n      NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          var ngModuleMeta = this._reflector.annotations(type).find(_isNgModuleMetadata);\n          if (isPresent(ngModuleMeta)) {\n              return ngModuleMeta;\n          }\n          else {\n              if (throwIfNotFound) {\n                  throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n              }\n              return null;\n          }\n      };\n      NgModuleResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      NgModuleResolver.ctorParameters = [\n          { type: ReflectorReader, },\n      ];\n      return NgModuleResolver;\n  }());\n\n  function _isPipeMetadata(type) {\n      return type instanceof _angular_core.Pipe;\n  }\n  /**\n   * Resolve a `Type` for {@link Pipe}.\n   *\n   * This interface can be overridden by the application developer to create custom behavior.\n   *\n   * See {@link Compiler}\n   */\n  var PipeResolver = (function () {\n      function PipeResolver(_reflector) {\n          if (_reflector === void 0) { _reflector = reflector; }\n          this._reflector = _reflector;\n      }\n      /**\n       * Return {@link Pipe} for a given `Type`.\n       */\n      PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          var metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n          if (isPresent(metas)) {\n              var annotation = metas.find(_isPipeMetadata);\n              if (isPresent(annotation)) {\n                  return annotation;\n              }\n          }\n          if (throwIfNotFound) {\n              throw new Error(\"No Pipe decorator found on \" + stringify(type));\n          }\n          return null;\n      };\n      PipeResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      PipeResolver.ctorParameters = [\n          { type: ReflectorReader, },\n      ];\n      return PipeResolver;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$17 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var CompileMetadataResolver = (function () {\n      function CompileMetadataResolver(_ngModuleResolver, _directiveResolver, _pipeResolver, _schemaRegistry, _reflector) {\n          if (_reflector === void 0) { _reflector = reflector; }\n          this._ngModuleResolver = _ngModuleResolver;\n          this._directiveResolver = _directiveResolver;\n          this._pipeResolver = _pipeResolver;\n          this._schemaRegistry = _schemaRegistry;\n          this._reflector = _reflector;\n          this._directiveCache = new Map();\n          this._pipeCache = new Map();\n          this._ngModuleCache = new Map();\n          this._ngModuleOfTypes = new Map();\n          this._anonymousTypes = new Map();\n          this._anonymousTypeIndex = 0;\n      }\n      CompileMetadataResolver.prototype.sanitizeTokenName = function (token) {\n          var identifier = stringify(token);\n          if (identifier.indexOf('(') >= 0) {\n              // case: anonymous functions!\n              var found = this._anonymousTypes.get(token);\n              if (!found) {\n                  this._anonymousTypes.set(token, this._anonymousTypeIndex++);\n                  found = this._anonymousTypes.get(token);\n              }\n              identifier = \"anonymous_token_\" + found + \"_\";\n          }\n          return sanitizeIdentifier(identifier);\n      };\n      CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n          this._directiveCache.delete(type);\n          this._pipeCache.delete(type);\n          this._ngModuleOfTypes.delete(type);\n          // Clear all of the NgModule as they contain transitive information!\n          this._ngModuleCache.clear();\n      };\n      CompileMetadataResolver.prototype.clearCache = function () {\n          this._directiveCache.clear();\n          this._pipeCache.clear();\n          this._ngModuleCache.clear();\n          this._ngModuleOfTypes.clear();\n      };\n      CompileMetadataResolver.prototype.getAnimationEntryMetadata = function (entry) {\n          var _this = this;\n          var defs = entry.definitions.map(function (def) { return _this.getAnimationStateMetadata(def); });\n          return new CompileAnimationEntryMetadata(entry.name, defs);\n      };\n      CompileMetadataResolver.prototype.getAnimationStateMetadata = function (value) {\n          if (value instanceof _angular_core.AnimationStateDeclarationMetadata) {\n              var styles = this.getAnimationStyleMetadata(value.styles);\n              return new CompileAnimationStateDeclarationMetadata(value.stateNameExpr, styles);\n          }\n          if (value instanceof _angular_core.AnimationStateTransitionMetadata) {\n              return new CompileAnimationStateTransitionMetadata(value.stateChangeExpr, this.getAnimationMetadata(value.steps));\n          }\n          return null;\n      };\n      CompileMetadataResolver.prototype.getAnimationStyleMetadata = function (value) {\n          return new CompileAnimationStyleMetadata(value.offset, value.styles);\n      };\n      CompileMetadataResolver.prototype.getAnimationMetadata = function (value) {\n          var _this = this;\n          if (value instanceof _angular_core.AnimationStyleMetadata) {\n              return this.getAnimationStyleMetadata(value);\n          }\n          if (value instanceof _angular_core.AnimationKeyframesSequenceMetadata) {\n              return new CompileAnimationKeyframesSequenceMetadata(value.steps.map(function (entry) { return _this.getAnimationStyleMetadata(entry); }));\n          }\n          if (value instanceof _angular_core.AnimationAnimateMetadata) {\n              var animateData = this\n                  .getAnimationMetadata(value.styles);\n              return new CompileAnimationAnimateMetadata(value.timings, animateData);\n          }\n          if (value instanceof _angular_core.AnimationWithStepsMetadata) {\n              var steps = value.steps.map(function (step) { return _this.getAnimationMetadata(step); });\n              if (value instanceof _angular_core.AnimationGroupMetadata) {\n                  return new CompileAnimationGroupMetadata(steps);\n              }\n              return new CompileAnimationSequenceMetadata(steps);\n          }\n          return null;\n      };\n      CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType, throwIfNotFound) {\n          var _this = this;\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          directiveType = _angular_core.resolveForwardRef(directiveType);\n          var meta = this._directiveCache.get(directiveType);\n          if (!meta) {\n              var dirMeta = this._directiveResolver.resolve(directiveType, throwIfNotFound);\n              if (!dirMeta) {\n                  return null;\n              }\n              var templateMeta = null;\n              var changeDetectionStrategy = null;\n              var viewProviders = [];\n              var moduleUrl = staticTypeModuleUrl(directiveType);\n              var entryComponentMetadata = [];\n              var selector = dirMeta.selector;\n              if (dirMeta instanceof _angular_core.Component) {\n                  // Component\n                  assertArrayOfStrings('styles', dirMeta.styles);\n                  assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n                  assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n                  var animations = dirMeta.animations ?\n                      dirMeta.animations.map(function (e) { return _this.getAnimationEntryMetadata(e); }) :\n                      null;\n                  templateMeta = new CompileTemplateMetadata({\n                      encapsulation: dirMeta.encapsulation,\n                      template: dirMeta.template,\n                      templateUrl: dirMeta.templateUrl,\n                      styles: dirMeta.styles,\n                      styleUrls: dirMeta.styleUrls,\n                      animations: animations,\n                      interpolation: dirMeta.interpolation\n                  });\n                  changeDetectionStrategy = dirMeta.changeDetection;\n                  if (dirMeta.viewProviders) {\n                      viewProviders = this.getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringify(directiveType) + \"\\\"\");\n                  }\n                  moduleUrl = componentModuleUrl(this._reflector, directiveType, dirMeta);\n                  if (dirMeta.entryComponents) {\n                      entryComponentMetadata =\n                          flattenArray(dirMeta.entryComponents)\n                              .map(function (type) { return _this.getTypeMetadata(type, staticTypeModuleUrl(type)); })\n                              .concat(entryComponentMetadata);\n                  }\n                  if (!selector) {\n                      selector = this._schemaRegistry.getDefaultComponentElementName();\n                  }\n              }\n              else {\n                  // Directive\n                  if (!selector) {\n                      throw new Error(\"Directive \" + stringify(directiveType) + \" has no selector, please add it!\");\n                  }\n              }\n              var providers = [];\n              if (isPresent(dirMeta.providers)) {\n                  providers = this.getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringify(directiveType) + \"\\\"\");\n              }\n              var queries = [];\n              var viewQueries = [];\n              if (isPresent(dirMeta.queries)) {\n                  queries = this.getQueriesMetadata(dirMeta.queries, false, directiveType);\n                  viewQueries = this.getQueriesMetadata(dirMeta.queries, true, directiveType);\n              }\n              meta = CompileDirectiveMetadata.create({\n                  selector: selector,\n                  exportAs: dirMeta.exportAs,\n                  isComponent: !!templateMeta,\n                  type: this.getTypeMetadata(directiveType, moduleUrl),\n                  template: templateMeta,\n                  changeDetection: changeDetectionStrategy,\n                  inputs: dirMeta.inputs,\n                  outputs: dirMeta.outputs,\n                  host: dirMeta.host,\n                  providers: providers,\n                  viewProviders: viewProviders,\n                  queries: queries,\n                  viewQueries: viewQueries,\n                  entryComponents: entryComponentMetadata\n              });\n              this._directiveCache.set(directiveType, meta);\n          }\n          return meta;\n      };\n      CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n          var _this = this;\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          moduleType = _angular_core.resolveForwardRef(moduleType);\n          var compileMeta = this._ngModuleCache.get(moduleType);\n          if (!compileMeta) {\n              var meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n              if (!meta) {\n                  return null;\n              }\n              var declaredDirectives_1 = [];\n              var exportedDirectives_1 = [];\n              var declaredPipes_1 = [];\n              var exportedPipes_1 = [];\n              var importedModules_1 = [];\n              var exportedModules_1 = [];\n              var providers_1 = [];\n              var entryComponents_1 = [];\n              var bootstrapComponents = [];\n              var schemas = [];\n              if (meta.imports) {\n                  flattenArray(meta.imports).forEach(function (importedType) {\n                      var importedModuleType;\n                      if (isValidType(importedType)) {\n                          importedModuleType = importedType;\n                      }\n                      else if (importedType && importedType.ngModule) {\n                          var moduleWithProviders = importedType;\n                          importedModuleType = moduleWithProviders.ngModule;\n                          if (moduleWithProviders.providers) {\n                              providers_1.push.apply(providers_1, _this.getProvidersMetadata(moduleWithProviders.providers, entryComponents_1, \"provider for the NgModule '\" + stringify(importedModuleType) + \"'\"));\n                          }\n                      }\n                      if (importedModuleType) {\n                          var importedMeta = _this.getNgModuleMetadata(importedModuleType, false);\n                          if (importedMeta === null) {\n                              throw new Error(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringify(importedType) + \"' imported by the module '\" + stringify(moduleType) + \"'\");\n                          }\n                          importedModules_1.push(importedMeta);\n                      }\n                      else {\n                          throw new Error(\"Unexpected value '\" + stringify(importedType) + \"' imported by the module '\" + stringify(moduleType) + \"'\");\n                      }\n                  });\n              }\n              if (meta.exports) {\n                  flattenArray(meta.exports).forEach(function (exportedType) {\n                      if (!isValidType(exportedType)) {\n                          throw new Error(\"Unexpected value '\" + stringify(exportedType) + \"' exported by the module '\" + stringify(moduleType) + \"'\");\n                      }\n                      var exportedDirMeta;\n                      var exportedPipeMeta;\n                      var exportedModuleMeta;\n                      if (exportedDirMeta = _this.getDirectiveMetadata(exportedType, false)) {\n                          exportedDirectives_1.push(exportedDirMeta);\n                      }\n                      else if (exportedPipeMeta = _this.getPipeMetadata(exportedType, false)) {\n                          exportedPipes_1.push(exportedPipeMeta);\n                      }\n                      else if (exportedModuleMeta = _this.getNgModuleMetadata(exportedType, false)) {\n                          exportedModules_1.push(exportedModuleMeta);\n                      }\n                      else {\n                          throw new Error(\"Unexpected \" + _this._getTypeDescriptor(exportedType) + \" '\" + stringify(exportedType) + \"' exported by the module '\" + stringify(moduleType) + \"'\");\n                      }\n                  });\n              }\n              // Note: This will be modified later, so we rely on\n              // getting a new instance every time!\n              var transitiveModule_1 = this._getTransitiveNgModuleMetadata(importedModules_1, exportedModules_1);\n              if (meta.declarations) {\n                  flattenArray(meta.declarations).forEach(function (declaredType) {\n                      if (!isValidType(declaredType)) {\n                          throw new Error(\"Unexpected value '\" + stringify(declaredType) + \"' declared by the module '\" + stringify(moduleType) + \"'\");\n                      }\n                      var declaredDirMeta;\n                      var declaredPipeMeta;\n                      if (declaredDirMeta = _this.getDirectiveMetadata(declaredType, false)) {\n                          _this._addDirectiveToModule(declaredDirMeta, moduleType, transitiveModule_1, declaredDirectives_1, true);\n                      }\n                      else if (declaredPipeMeta = _this.getPipeMetadata(declaredType, false)) {\n                          _this._addPipeToModule(declaredPipeMeta, moduleType, transitiveModule_1, declaredPipes_1, true);\n                      }\n                      else {\n                          throw new Error(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringify(declaredType) + \"' declared by the module '\" + stringify(moduleType) + \"'\");\n                      }\n                  });\n              }\n              // The providers of the module have to go last\n              // so that they overwrite any other provider we already added.\n              if (meta.providers) {\n                  providers_1.push.apply(providers_1, this.getProvidersMetadata(meta.providers, entryComponents_1, \"provider for the NgModule '\" + stringify(moduleType) + \"'\"));\n              }\n              if (meta.entryComponents) {\n                  entryComponents_1.push.apply(entryComponents_1, flattenArray(meta.entryComponents)\n                      .map(function (type) { return _this.getTypeMetadata(type, staticTypeModuleUrl(type)); }));\n              }\n              if (meta.bootstrap) {\n                  var typeMetadata = flattenArray(meta.bootstrap).map(function (type) {\n                      if (!isValidType(type)) {\n                          throw new Error(\"Unexpected value '\" + stringify(type) + \"' used in the bootstrap property of module '\" + stringify(moduleType) + \"'\");\n                      }\n                      return _this.getTypeMetadata(type, staticTypeModuleUrl(type));\n                  });\n                  bootstrapComponents.push.apply(bootstrapComponents, typeMetadata);\n              }\n              entryComponents_1.push.apply(entryComponents_1, bootstrapComponents);\n              if (meta.schemas) {\n                  schemas.push.apply(schemas, flattenArray(meta.schemas));\n              }\n              (_a = transitiveModule_1.entryComponents).push.apply(_a, entryComponents_1);\n              (_b = transitiveModule_1.providers).push.apply(_b, providers_1);\n              compileMeta = new CompileNgModuleMetadata({\n                  type: this.getTypeMetadata(moduleType, staticTypeModuleUrl(moduleType)),\n                  providers: providers_1,\n                  entryComponents: entryComponents_1,\n                  bootstrapComponents: bootstrapComponents,\n                  schemas: schemas,\n                  declaredDirectives: declaredDirectives_1,\n                  exportedDirectives: exportedDirectives_1,\n                  declaredPipes: declaredPipes_1,\n                  exportedPipes: exportedPipes_1,\n                  importedModules: importedModules_1,\n                  exportedModules: exportedModules_1,\n                  transitiveModule: transitiveModule_1,\n                  id: meta.id,\n              });\n              transitiveModule_1.modules.push(compileMeta);\n              this._verifyModule(compileMeta);\n              this._ngModuleCache.set(moduleType, compileMeta);\n          }\n          return compileMeta;\n          var _a, _b;\n      };\n      CompileMetadataResolver.prototype._verifyModule = function (moduleMeta) {\n          moduleMeta.exportedDirectives.forEach(function (dirMeta) {\n              if (!moduleMeta.transitiveModule.directivesSet.has(dirMeta.type.reference)) {\n                  throw new Error(\"Can't export directive \" + stringify(dirMeta.type.reference) + \" from \" + stringify(moduleMeta.type.reference) + \" as it was neither declared nor imported!\");\n              }\n          });\n          moduleMeta.exportedPipes.forEach(function (pipeMeta) {\n              if (!moduleMeta.transitiveModule.pipesSet.has(pipeMeta.type.reference)) {\n                  throw new Error(\"Can't export pipe \" + stringify(pipeMeta.type.reference) + \" from \" + stringify(moduleMeta.type.reference) + \" as it was neither declared nor imported!\");\n              }\n          });\n      };\n      CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n          if (this._directiveResolver.resolve(type, false)) {\n              return 'directive';\n          }\n          if (this._pipeResolver.resolve(type, false)) {\n              return 'pipe';\n          }\n          if (this._ngModuleResolver.resolve(type, false)) {\n              return 'module';\n          }\n          if (type.provide) {\n              return 'provider';\n          }\n          return 'value';\n      };\n      CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n          var oldModule = this._ngModuleOfTypes.get(type);\n          if (oldModule && oldModule !== moduleType) {\n              throw new Error((\"Type \" + stringify(type) + \" is part of the declarations of 2 modules: \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \"! \") +\n                  (\"Please consider moving \" + stringify(type) + \" to a higher module that imports \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \". \") +\n                  (\"You can also create a new NgModule that exports and includes \" + stringify(type) + \" then import that NgModule in \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \".\"));\n          }\n          this._ngModuleOfTypes.set(type, moduleType);\n      };\n      CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n          // collect `providers` / `entryComponents` from all imported and all exported modules\n          var transitiveModules = getTransitiveModules(importedModules.concat(exportedModules), true);\n          var providers = flattenArray(transitiveModules.map(function (ngModule) { return ngModule.providers; }));\n          var entryComponents = flattenArray(transitiveModules.map(function (ngModule) { return ngModule.entryComponents; }));\n          var transitiveExportedModules = getTransitiveModules(importedModules, false);\n          var directives = flattenArray(transitiveExportedModules.map(function (ngModule) { return ngModule.exportedDirectives; }));\n          var pipes = flattenArray(transitiveExportedModules.map(function (ngModule) { return ngModule.exportedPipes; }));\n          return new TransitiveCompileNgModuleMetadata(transitiveModules, providers, entryComponents, directives, pipes);\n      };\n      CompileMetadataResolver.prototype._addDirectiveToModule = function (dirMeta, moduleType, transitiveModule, declaredDirectives, force) {\n          if (force === void 0) { force = false; }\n          if (force || !transitiveModule.directivesSet.has(dirMeta.type.reference)) {\n              transitiveModule.directivesSet.add(dirMeta.type.reference);\n              transitiveModule.directives.push(dirMeta);\n              declaredDirectives.push(dirMeta);\n              this._addTypeToModule(dirMeta.type.reference, moduleType);\n              return true;\n          }\n          return false;\n      };\n      CompileMetadataResolver.prototype._addPipeToModule = function (pipeMeta, moduleType, transitiveModule, declaredPipes, force) {\n          if (force === void 0) { force = false; }\n          if (force || !transitiveModule.pipesSet.has(pipeMeta.type.reference)) {\n              transitiveModule.pipesSet.add(pipeMeta.type.reference);\n              transitiveModule.pipes.push(pipeMeta);\n              declaredPipes.push(pipeMeta);\n              this._addTypeToModule(pipeMeta.type.reference, moduleType);\n              return true;\n          }\n          return false;\n      };\n      CompileMetadataResolver.prototype.getTypeMetadata = function (type, moduleUrl, dependencies) {\n          if (dependencies === void 0) { dependencies = null; }\n          type = _angular_core.resolveForwardRef(type);\n          return new CompileTypeMetadata({\n              name: this.sanitizeTokenName(type),\n              moduleUrl: moduleUrl,\n              reference: type,\n              diDeps: this.getDependenciesMetadata(type, dependencies),\n              lifecycleHooks: LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(hook, type); }),\n          });\n      };\n      CompileMetadataResolver.prototype.getFactoryMetadata = function (factory, moduleUrl, dependencies) {\n          if (dependencies === void 0) { dependencies = null; }\n          factory = _angular_core.resolveForwardRef(factory);\n          return new CompileFactoryMetadata({\n              name: this.sanitizeTokenName(factory),\n              moduleUrl: moduleUrl,\n              reference: factory,\n              diDeps: this.getDependenciesMetadata(factory, dependencies)\n          });\n      };\n      CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          pipeType = _angular_core.resolveForwardRef(pipeType);\n          var meta = this._pipeCache.get(pipeType);\n          if (!meta) {\n              var pipeMeta = this._pipeResolver.resolve(pipeType, throwIfNotFound);\n              if (!pipeMeta) {\n                  return null;\n              }\n              meta = new CompilePipeMetadata({\n                  type: this.getTypeMetadata(pipeType, staticTypeModuleUrl(pipeType)),\n                  name: pipeMeta.name,\n                  pure: pipeMeta.pure\n              });\n              this._pipeCache.set(pipeType, meta);\n          }\n          return meta;\n      };\n      CompileMetadataResolver.prototype.getDependenciesMetadata = function (typeOrFunc, dependencies) {\n          var _this = this;\n          var hasUnknownDeps = false;\n          var params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n          var dependenciesMetadata = params.map(function (param) {\n              var isAttribute = false;\n              var isHost = false;\n              var isSelf = false;\n              var isSkipSelf = false;\n              var isOptional = false;\n              var query = null;\n              var viewQuery = null;\n              var token = null;\n              if (Array.isArray(param)) {\n                  param.forEach(function (paramEntry) {\n                      if (paramEntry instanceof _angular_core.Host) {\n                          isHost = true;\n                      }\n                      else if (paramEntry instanceof _angular_core.Self) {\n                          isSelf = true;\n                      }\n                      else if (paramEntry instanceof _angular_core.SkipSelf) {\n                          isSkipSelf = true;\n                      }\n                      else if (paramEntry instanceof _angular_core.Optional) {\n                          isOptional = true;\n                      }\n                      else if (paramEntry instanceof _angular_core.Attribute) {\n                          isAttribute = true;\n                          token = paramEntry.attributeName;\n                      }\n                      else if (paramEntry instanceof _angular_core.Query) {\n                          if (paramEntry.isViewQuery) {\n                              viewQuery = paramEntry;\n                          }\n                          else {\n                              query = paramEntry;\n                          }\n                      }\n                      else if (paramEntry instanceof _angular_core.Inject) {\n                          token = paramEntry.token;\n                      }\n                      else if (isValidType(paramEntry) && isBlank(token)) {\n                          token = paramEntry;\n                      }\n                  });\n              }\n              else {\n                  token = param;\n              }\n              if (isBlank(token)) {\n                  hasUnknownDeps = true;\n                  return null;\n              }\n              return new CompileDiDependencyMetadata({\n                  isAttribute: isAttribute,\n                  isHost: isHost,\n                  isSelf: isSelf,\n                  isSkipSelf: isSkipSelf,\n                  isOptional: isOptional,\n                  query: query ? _this.getQueryMetadata(query, null, typeOrFunc) : null,\n                  viewQuery: viewQuery ? _this.getQueryMetadata(viewQuery, null, typeOrFunc) : null,\n                  token: _this.getTokenMetadata(token)\n              });\n          });\n          if (hasUnknownDeps) {\n              var depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringify(dep.token) : '?'; }).join(', ');\n              throw new Error(\"Can't resolve all parameters for \" + stringify(typeOrFunc) + \": (\" + depsTokens + \").\");\n          }\n          return dependenciesMetadata;\n      };\n      CompileMetadataResolver.prototype.getTokenMetadata = function (token) {\n          token = _angular_core.resolveForwardRef(token);\n          var compileToken;\n          if (typeof token === 'string') {\n              compileToken = new CompileTokenMetadata({ value: token });\n          }\n          else {\n              compileToken = new CompileTokenMetadata({\n                  identifier: new CompileIdentifierMetadata({\n                      reference: token,\n                      name: this.sanitizeTokenName(token),\n                      moduleUrl: staticTypeModuleUrl(token)\n                  })\n              });\n          }\n          return compileToken;\n      };\n      CompileMetadataResolver.prototype.getProvidersMetadata = function (providers, targetEntryComponents, debugInfo) {\n          var _this = this;\n          var compileProviders = [];\n          providers.forEach(function (provider, providerIdx) {\n              provider = _angular_core.resolveForwardRef(provider);\n              if (provider && typeof provider == 'object' && provider.hasOwnProperty('provide')) {\n                  provider = new ProviderMeta(provider.provide, provider);\n              }\n              var compileProvider;\n              if (Array.isArray(provider)) {\n                  compileProvider = _this.getProvidersMetadata(provider, targetEntryComponents, debugInfo);\n              }\n              else if (provider instanceof ProviderMeta) {\n                  var tokenMeta = _this.getTokenMetadata(provider.token);\n                  if (tokenMeta.reference ===\n                      resolveIdentifierToken(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS).reference) {\n                      targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(provider));\n                  }\n                  else {\n                      compileProvider = _this.getProviderMetadata(provider);\n                  }\n              }\n              else if (isValidType(provider)) {\n                  compileProvider = _this.getTypeMetadata(provider, staticTypeModuleUrl(provider));\n              }\n              else {\n                  var providersInfo = providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                      if (seenProviderIdx < providerIdx) {\n                          soFar.push(\"\" + stringify(seenProvider));\n                      }\n                      else if (seenProviderIdx == providerIdx) {\n                          soFar.push(\"?\" + stringify(seenProvider) + \"?\");\n                      }\n                      else if (seenProviderIdx == providerIdx + 1) {\n                          soFar.push('...');\n                      }\n                      return soFar;\n                  }, [])\n                      .join(', ');\n                  throw new Error(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\");\n              }\n              if (compileProvider) {\n                  compileProviders.push(compileProvider);\n              }\n          });\n          return compileProviders;\n      };\n      CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider) {\n          var _this = this;\n          var components = [];\n          var collectedIdentifiers = [];\n          if (provider.useFactory || provider.useExisting || provider.useClass) {\n              throw new Error(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\");\n          }\n          if (!provider.multi) {\n              throw new Error(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\");\n          }\n          convertToCompileValue(provider.useValue, collectedIdentifiers);\n          collectedIdentifiers.forEach(function (identifier) {\n              var dirMeta = _this.getDirectiveMetadata(identifier.reference, false);\n              if (dirMeta) {\n                  components.push(dirMeta.type);\n              }\n          });\n          return components;\n      };\n      CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n          var compileDeps;\n          var compileTypeMetadata = null;\n          var compileFactoryMetadata = null;\n          if (provider.useClass) {\n              compileTypeMetadata = this.getTypeMetadata(provider.useClass, staticTypeModuleUrl(provider.useClass), provider.dependencies);\n              compileDeps = compileTypeMetadata.diDeps;\n          }\n          else if (provider.useFactory) {\n              compileFactoryMetadata = this.getFactoryMetadata(provider.useFactory, staticTypeModuleUrl(provider.useFactory), provider.dependencies);\n              compileDeps = compileFactoryMetadata.diDeps;\n          }\n          return new CompileProviderMetadata({\n              token: this.getTokenMetadata(provider.token),\n              useClass: compileTypeMetadata,\n              useValue: convertToCompileValue(provider.useValue, []),\n              useFactory: compileFactoryMetadata,\n              useExisting: provider.useExisting ? this.getTokenMetadata(provider.useExisting) : null,\n              deps: compileDeps,\n              multi: provider.multi\n          });\n      };\n      CompileMetadataResolver.prototype.getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n          var _this = this;\n          var res = [];\n          Object.keys(queries).forEach(function (propertyName) {\n              var query = queries[propertyName];\n              if (query.isViewQuery === isViewQuery) {\n                  res.push(_this.getQueryMetadata(query, propertyName, directiveType));\n              }\n          });\n          return res;\n      };\n      CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n      CompileMetadataResolver.prototype.getQueryMetadata = function (q, propertyName, typeOrFunc) {\n          var _this = this;\n          var selectors;\n          if (typeof q.selector === 'string') {\n              selectors = this._queryVarBindings(q.selector).map(function (varName) { return _this.getTokenMetadata(varName); });\n          }\n          else {\n              if (!q.selector) {\n                  throw new Error(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringify(typeOrFunc) + \"\\\" since the query selector wasn't defined.\");\n              }\n              selectors = [this.getTokenMetadata(q.selector)];\n          }\n          return new CompileQueryMetadata({\n              selectors: selectors,\n              first: q.first,\n              descendants: q.descendants, propertyName: propertyName,\n              read: q.read ? this.getTokenMetadata(q.read) : null\n          });\n      };\n      CompileMetadataResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      CompileMetadataResolver.ctorParameters = [\n          { type: NgModuleResolver, },\n          { type: DirectiveResolver, },\n          { type: PipeResolver, },\n          { type: ElementSchemaRegistry, },\n          { type: ReflectorReader, },\n      ];\n      return CompileMetadataResolver;\n  }());\n  function getTransitiveModules(modules, includeImports, targetModules, visitedModules) {\n      if (targetModules === void 0) { targetModules = []; }\n      if (visitedModules === void 0) { visitedModules = new Set(); }\n      modules.forEach(function (ngModule) {\n          if (!visitedModules.has(ngModule.type.reference)) {\n              visitedModules.add(ngModule.type.reference);\n              var nestedModules = includeImports ?\n                  ngModule.importedModules.concat(ngModule.exportedModules) :\n                  ngModule.exportedModules;\n              getTransitiveModules(nestedModules, includeImports, targetModules, visitedModules);\n              // Add after recursing so imported/exported modules are before the module itself.\n              // This is important for overwriting providers of imported modules!\n              targetModules.push(ngModule);\n          }\n      });\n      return targetModules;\n  }\n  function flattenArray(tree, out) {\n      if (out === void 0) { out = []; }\n      if (tree) {\n          for (var i = 0; i < tree.length; i++) {\n              var item = _angular_core.resolveForwardRef(tree[i]);\n              if (Array.isArray(item)) {\n                  flattenArray(item, out);\n              }\n              else {\n                  out.push(item);\n              }\n          }\n      }\n      return out;\n  }\n  function isValidType(value) {\n      return isStaticSymbol(value) || (value instanceof _angular_core.Type);\n  }\n  function staticTypeModuleUrl(value) {\n      return isStaticSymbol(value) ? value.filePath : null;\n  }\n  function componentModuleUrl(reflector, type, cmpMetadata) {\n      if (isStaticSymbol(type)) {\n          return staticTypeModuleUrl(type);\n      }\n      var moduleId = cmpMetadata.moduleId;\n      if (typeof moduleId === 'string') {\n          var scheme = getUrlScheme(moduleId);\n          return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n      }\n      else if (moduleId !== null && moduleId !== void 0) {\n          throw new Error((\"moduleId should be a string in \\\"\" + stringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\") +\n              \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n      }\n      return reflector.importUri(type);\n  }\n  function convertToCompileValue(value, targetIdentifiers) {\n      return visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n  }\n  var _CompileValueConverter = (function (_super) {\n      __extends$17(_CompileValueConverter, _super);\n      function _CompileValueConverter() {\n          _super.apply(this, arguments);\n      }\n      _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n          var identifier;\n          if (isStaticSymbol(value)) {\n              identifier = new CompileIdentifierMetadata({ name: value.name, moduleUrl: value.filePath, reference: value });\n          }\n          else {\n              identifier = new CompileIdentifierMetadata({ reference: value });\n          }\n          targetIdentifiers.push(identifier);\n          return identifier;\n      };\n      return _CompileValueConverter;\n  }(ValueTransformer));\n\n  var ComponentFactoryDependency$1 = (function () {\n      function ComponentFactoryDependency(comp, placeholder) {\n          this.comp = comp;\n          this.placeholder = placeholder;\n      }\n      return ComponentFactoryDependency;\n  }());\n  var NgModuleCompileResult = (function () {\n      function NgModuleCompileResult(statements, ngModuleFactoryVar, dependencies) {\n          this.statements = statements;\n          this.ngModuleFactoryVar = ngModuleFactoryVar;\n          this.dependencies = dependencies;\n      }\n      return NgModuleCompileResult;\n  }());\n  var NgModuleCompiler = (function () {\n      function NgModuleCompiler() {\n      }\n      NgModuleCompiler.prototype.compile = function (ngModuleMeta, extraProviders) {\n          var sourceFileName = isPresent(ngModuleMeta.type.moduleUrl) ?\n              \"in NgModule \" + ngModuleMeta.type.name + \" in \" + ngModuleMeta.type.moduleUrl :\n              \"in NgModule \" + ngModuleMeta.type.name;\n          var sourceFile = new ParseSourceFile('', sourceFileName);\n          var sourceSpan = new ParseSourceSpan(new ParseLocation(sourceFile, null, null, null), new ParseLocation(sourceFile, null, null, null));\n          var deps = [];\n          var bootstrapComponentFactories = [];\n          var entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents.map(function (entryComponent) {\n              var id = new CompileIdentifierMetadata({ name: entryComponent.name });\n              if (ngModuleMeta.bootstrapComponents.indexOf(entryComponent) > -1) {\n                  bootstrapComponentFactories.push(id);\n              }\n              deps.push(new ComponentFactoryDependency$1(entryComponent, id));\n              return id;\n          });\n          var builder = new _InjectorBuilder(ngModuleMeta, entryComponentFactories, bootstrapComponentFactories, sourceSpan);\n          var providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n          providerParser.parse().forEach(function (provider) { return builder.addProvider(provider); });\n          var injectorClass = builder.build();\n          var ngModuleFactoryVar = ngModuleMeta.type.name + \"NgFactory\";\n          var ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n              .set(importExpr(resolveIdentifier(Identifiers.NgModuleFactory))\n              .instantiate([variable(injectorClass.name), importExpr(ngModuleMeta.type)], importType(resolveIdentifier(Identifiers.NgModuleFactory), [importType(ngModuleMeta.type)], [TypeModifier.Const])))\n              .toDeclStmt(null, [StmtModifier.Final]);\n          var stmts = [injectorClass, ngModuleFactoryStmt];\n          if (ngModuleMeta.id) {\n              var registerFactoryStmt = importExpr(resolveIdentifier(Identifiers.RegisterModuleFactoryFn))\n                  .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                  .toStmt();\n              stmts.push(registerFactoryStmt);\n          }\n          return new NgModuleCompileResult(stmts, ngModuleFactoryVar, deps);\n      };\n      NgModuleCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      NgModuleCompiler.ctorParameters = [];\n      return NgModuleCompiler;\n  }());\n  var _InjectorBuilder = (function () {\n      function _InjectorBuilder(_ngModuleMeta, _entryComponentFactories, _bootstrapComponentFactories, _sourceSpan) {\n          this._ngModuleMeta = _ngModuleMeta;\n          this._entryComponentFactories = _entryComponentFactories;\n          this._bootstrapComponentFactories = _bootstrapComponentFactories;\n          this._sourceSpan = _sourceSpan;\n          this.fields = [];\n          this.getters = [];\n          this.methods = [];\n          this.ctorStmts = [];\n          this._tokens = [];\n          this._instances = new Map();\n          this._createStmts = [];\n          this._destroyStmts = [];\n      }\n      _InjectorBuilder.prototype.addProvider = function (resolvedProvider) {\n          var _this = this;\n          var providerValueExpressions = resolvedProvider.providers.map(function (provider) { return _this._getProviderValue(provider); });\n          var propName = \"_\" + resolvedProvider.token.name + \"_\" + this._instances.size;\n          var instance = this._createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager);\n          if (resolvedProvider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n              this._destroyStmts.push(instance.callMethod('ngOnDestroy', []).toStmt());\n          }\n          this._tokens.push(resolvedProvider.token);\n          this._instances.set(resolvedProvider.token.reference, instance);\n      };\n      _InjectorBuilder.prototype.build = function () {\n          var _this = this;\n          var getMethodStmts = this._tokens.map(function (token) {\n              var providerExpr = _this._instances.get(token.reference);\n              return new IfStmt(InjectMethodVars$1.token.identical(createDiTokenExpression(token)), [new ReturnStatement(providerExpr)]);\n          });\n          var methods = [\n              new ClassMethod('createInternal', [], this._createStmts.concat(new ReturnStatement(this._instances.get(this._ngModuleMeta.type.reference))), importType(this._ngModuleMeta.type)),\n              new ClassMethod('getInternal', [\n                  new FnParam(InjectMethodVars$1.token.name, DYNAMIC_TYPE),\n                  new FnParam(InjectMethodVars$1.notFoundResult.name, DYNAMIC_TYPE)\n              ], getMethodStmts.concat([new ReturnStatement(InjectMethodVars$1.notFoundResult)]), DYNAMIC_TYPE),\n              new ClassMethod('destroyInternal', [], this._destroyStmts),\n          ];\n          var parentArgs = [\n              variable(InjectorProps.parent.name),\n              literalArr(this._entryComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); })),\n              literalArr(this._bootstrapComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); }))\n          ];\n          var injClassName = this._ngModuleMeta.type.name + \"Injector\";\n          return createClassStmt({\n              name: injClassName,\n              ctorParams: [new FnParam(InjectorProps.parent.name, importType(resolveIdentifier(Identifiers.Injector)))],\n              parent: importExpr(resolveIdentifier(Identifiers.NgModuleInjector), [importType(this._ngModuleMeta.type)]),\n              parentArgs: parentArgs,\n              builders: [{ methods: methods }, this]\n          });\n      };\n      _InjectorBuilder.prototype._getProviderValue = function (provider) {\n          var _this = this;\n          var result;\n          if (isPresent(provider.useExisting)) {\n              result = this._getDependency(new CompileDiDependencyMetadata({ token: provider.useExisting }));\n          }\n          else if (isPresent(provider.useFactory)) {\n              var deps = provider.deps || provider.useFactory.diDeps;\n              var depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n              result = importExpr(provider.useFactory).callFn(depsExpr);\n          }\n          else if (isPresent(provider.useClass)) {\n              var deps = provider.deps || provider.useClass.diDeps;\n              var depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n              result =\n                  importExpr(provider.useClass).instantiate(depsExpr, importType(provider.useClass));\n          }\n          else {\n              result = convertValueToOutputAst(provider.useValue);\n          }\n          return result;\n      };\n      _InjectorBuilder.prototype._createProviderProperty = function (propName, provider, providerValueExpressions, isMulti, isEager) {\n          var resolvedProviderValueExpr;\n          var type;\n          if (isMulti) {\n              resolvedProviderValueExpr = literalArr(providerValueExpressions);\n              type = new ArrayType(DYNAMIC_TYPE);\n          }\n          else {\n              resolvedProviderValueExpr = providerValueExpressions[0];\n              type = providerValueExpressions[0].type;\n          }\n          if (!type) {\n              type = DYNAMIC_TYPE;\n          }\n          if (isEager) {\n              this.fields.push(new ClassField(propName, type));\n              this._createStmts.push(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n          }\n          else {\n              var internalField = \"_\" + propName;\n              this.fields.push(new ClassField(internalField, type));\n              // Note: Equals is important for JS so that it also checks the undefined case!\n              var getterStmts = [\n                  new IfStmt(THIS_EXPR.prop(internalField).isBlank(), [THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]),\n                  new ReturnStatement(THIS_EXPR.prop(internalField))\n              ];\n              this.getters.push(new ClassGetter(propName, getterStmts, type));\n          }\n          return THIS_EXPR.prop(propName);\n      };\n      _InjectorBuilder.prototype._getDependency = function (dep) {\n          var result = null;\n          if (dep.isValue) {\n              result = literal(dep.value);\n          }\n          if (!dep.isSkipSelf) {\n              if (dep.token &&\n                  (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference ||\n                      dep.token.reference ===\n                          resolveIdentifierToken(Identifiers.ComponentFactoryResolver).reference)) {\n                  result = THIS_EXPR;\n              }\n              if (!result) {\n                  result = this._instances.get(dep.token.reference);\n              }\n          }\n          if (!result) {\n              var args = [createDiTokenExpression(dep.token)];\n              if (dep.isOptional) {\n                  args.push(NULL_EXPR);\n              }\n              result = InjectorProps.parent.callMethod('get', args);\n          }\n          return result;\n      };\n      return _InjectorBuilder;\n  }());\n  var InjectorProps = (function () {\n      function InjectorProps() {\n      }\n      InjectorProps.parent = THIS_EXPR.prop('parent');\n      return InjectorProps;\n  }());\n  var InjectMethodVars$1 = (function () {\n      function InjectMethodVars() {\n      }\n      InjectMethodVars.token = variable('token');\n      InjectMethodVars.notFoundResult = variable('notFoundResult');\n      return InjectMethodVars;\n  }());\n\n  var _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\n  var _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\n  var CATCH_ERROR_VAR$2 = variable('error');\n  var CATCH_STACK_VAR$2 = variable('stack');\n  var _EmittedLine = (function () {\n      function _EmittedLine(indent) {\n          this.indent = indent;\n          this.parts = [];\n      }\n      return _EmittedLine;\n  }());\n  var EmitterVisitorContext = (function () {\n      function EmitterVisitorContext(_exportedVars, _indent) {\n          this._exportedVars = _exportedVars;\n          this._indent = _indent;\n          this._classes = [];\n          this._lines = [new _EmittedLine(_indent)];\n      }\n      EmitterVisitorContext.createRoot = function (exportedVars) {\n          return new EmitterVisitorContext(exportedVars, 0);\n      };\n      Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n          get: function () { return this._lines[this._lines.length - 1]; },\n          enumerable: true,\n          configurable: true\n      });\n      EmitterVisitorContext.prototype.isExportedVar = function (varName) { return this._exportedVars.indexOf(varName) !== -1; };\n      EmitterVisitorContext.prototype.println = function (lastPart) {\n          if (lastPart === void 0) { lastPart = ''; }\n          this.print(lastPart, true);\n      };\n      EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n      EmitterVisitorContext.prototype.print = function (part, newLine) {\n          if (newLine === void 0) { newLine = false; }\n          if (part.length > 0) {\n              this._currentLine.parts.push(part);\n          }\n          if (newLine) {\n              this._lines.push(new _EmittedLine(this._indent));\n          }\n      };\n      EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n          if (this.lineIsEmpty()) {\n              this._lines.pop();\n          }\n      };\n      EmitterVisitorContext.prototype.incIndent = function () {\n          this._indent++;\n          this._currentLine.indent = this._indent;\n      };\n      EmitterVisitorContext.prototype.decIndent = function () {\n          this._indent--;\n          this._currentLine.indent = this._indent;\n      };\n      EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n      EmitterVisitorContext.prototype.popClass = function () { return this._classes.pop(); };\n      Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n          get: function () {\n              return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      EmitterVisitorContext.prototype.toSource = function () {\n          var lines = this._lines;\n          if (lines[lines.length - 1].parts.length === 0) {\n              lines = lines.slice(0, lines.length - 1);\n          }\n          return lines\n              .map(function (line) {\n              if (line.parts.length > 0) {\n                  return _createIndent(line.indent) + line.parts.join('');\n              }\n              else {\n                  return '';\n              }\n          })\n              .join('\\n');\n      };\n      return EmitterVisitorContext;\n  }());\n  var AbstractEmitterVisitor = (function () {\n      function AbstractEmitterVisitor(_escapeDollarInStrings) {\n          this._escapeDollarInStrings = _escapeDollarInStrings;\n      }\n      AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n          stmt.expr.visitExpression(this, ctx);\n          ctx.println(';');\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n          ctx.print(\"return \");\n          stmt.value.visitExpression(this, ctx);\n          ctx.println(';');\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n          ctx.print(\"if (\");\n          stmt.condition.visitExpression(this, ctx);\n          ctx.print(\") {\");\n          var hasElseCase = isPresent(stmt.falseCase) && stmt.falseCase.length > 0;\n          if (stmt.trueCase.length <= 1 && !hasElseCase) {\n              ctx.print(\" \");\n              this.visitAllStatements(stmt.trueCase, ctx);\n              ctx.removeEmptyLastLine();\n              ctx.print(\" \");\n          }\n          else {\n              ctx.println();\n              ctx.incIndent();\n              this.visitAllStatements(stmt.trueCase, ctx);\n              ctx.decIndent();\n              if (hasElseCase) {\n                  ctx.println(\"} else {\");\n                  ctx.incIndent();\n                  this.visitAllStatements(stmt.falseCase, ctx);\n                  ctx.decIndent();\n              }\n          }\n          ctx.println(\"}\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n          ctx.print(\"throw \");\n          stmt.error.visitExpression(this, ctx);\n          ctx.println(\";\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n          var lines = stmt.comment.split('\\n');\n          lines.forEach(function (line) { ctx.println(\"// \" + line); });\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n          var lineWasEmpty = ctx.lineIsEmpty();\n          if (!lineWasEmpty) {\n              ctx.print('(');\n          }\n          ctx.print(expr.name + \" = \");\n          expr.value.visitExpression(this, ctx);\n          if (!lineWasEmpty) {\n              ctx.print(')');\n          }\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n          var lineWasEmpty = ctx.lineIsEmpty();\n          if (!lineWasEmpty) {\n              ctx.print('(');\n          }\n          expr.receiver.visitExpression(this, ctx);\n          ctx.print(\"[\");\n          expr.index.visitExpression(this, ctx);\n          ctx.print(\"] = \");\n          expr.value.visitExpression(this, ctx);\n          if (!lineWasEmpty) {\n              ctx.print(')');\n          }\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n          var lineWasEmpty = ctx.lineIsEmpty();\n          if (!lineWasEmpty) {\n              ctx.print('(');\n          }\n          expr.receiver.visitExpression(this, ctx);\n          ctx.print(\".\" + expr.name + \" = \");\n          expr.value.visitExpression(this, ctx);\n          if (!lineWasEmpty) {\n              ctx.print(')');\n          }\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n          expr.receiver.visitExpression(this, ctx);\n          var name = expr.name;\n          if (isPresent(expr.builtin)) {\n              name = this.getBuiltinMethodName(expr.builtin);\n              if (isBlank(name)) {\n                  // some builtins just mean to skip the call.\n                  return null;\n              }\n          }\n          ctx.print(\".\" + name + \"(\");\n          this.visitAllExpressions(expr.args, ctx, \",\");\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n          expr.fn.visitExpression(this, ctx);\n          ctx.print(\"(\");\n          this.visitAllExpressions(expr.args, ctx, ',');\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n          var varName = ast.name;\n          if (isPresent(ast.builtin)) {\n              switch (ast.builtin) {\n                  case BuiltinVar.Super:\n                      varName = 'super';\n                      break;\n                  case BuiltinVar.This:\n                      varName = 'this';\n                      break;\n                  case BuiltinVar.CatchError:\n                      varName = CATCH_ERROR_VAR$2.name;\n                      break;\n                  case BuiltinVar.CatchStack:\n                      varName = CATCH_STACK_VAR$2.name;\n                      break;\n                  default:\n                      throw new Error(\"Unknown builtin variable \" + ast.builtin);\n              }\n          }\n          ctx.print(varName);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n          ctx.print(\"new \");\n          ast.classExpr.visitExpression(this, ctx);\n          ctx.print(\"(\");\n          this.visitAllExpressions(ast.args, ctx, ',');\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx, absentValue) {\n          if (absentValue === void 0) { absentValue = 'null'; }\n          var value = ast.value;\n          if (typeof value === 'string') {\n              ctx.print(escapeIdentifier(value, this._escapeDollarInStrings));\n          }\n          else if (isBlank(value)) {\n              ctx.print(absentValue);\n          }\n          else {\n              ctx.print(\"\" + value);\n          }\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n          ctx.print(\"(\");\n          ast.condition.visitExpression(this, ctx);\n          ctx.print('? ');\n          ast.trueCase.visitExpression(this, ctx);\n          ctx.print(': ');\n          ast.falseCase.visitExpression(this, ctx);\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n          ctx.print('!');\n          ast.condition.visitExpression(this, ctx);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n          var opStr;\n          switch (ast.operator) {\n              case BinaryOperator.Equals:\n                  opStr = '==';\n                  break;\n              case BinaryOperator.Identical:\n                  opStr = '===';\n                  break;\n              case BinaryOperator.NotEquals:\n                  opStr = '!=';\n                  break;\n              case BinaryOperator.NotIdentical:\n                  opStr = '!==';\n                  break;\n              case BinaryOperator.And:\n                  opStr = '&&';\n                  break;\n              case BinaryOperator.Or:\n                  opStr = '||';\n                  break;\n              case BinaryOperator.Plus:\n                  opStr = '+';\n                  break;\n              case BinaryOperator.Minus:\n                  opStr = '-';\n                  break;\n              case BinaryOperator.Divide:\n                  opStr = '/';\n                  break;\n              case BinaryOperator.Multiply:\n                  opStr = '*';\n                  break;\n              case BinaryOperator.Modulo:\n                  opStr = '%';\n                  break;\n              case BinaryOperator.Lower:\n                  opStr = '<';\n                  break;\n              case BinaryOperator.LowerEquals:\n                  opStr = '<=';\n                  break;\n              case BinaryOperator.Bigger:\n                  opStr = '>';\n                  break;\n              case BinaryOperator.BiggerEquals:\n                  opStr = '>=';\n                  break;\n              default:\n                  throw new Error(\"Unknown operator \" + ast.operator);\n          }\n          ctx.print(\"(\");\n          ast.lhs.visitExpression(this, ctx);\n          ctx.print(\" \" + opStr + \" \");\n          ast.rhs.visitExpression(this, ctx);\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n          ast.receiver.visitExpression(this, ctx);\n          ctx.print(\".\");\n          ctx.print(ast.name);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n          ast.receiver.visitExpression(this, ctx);\n          ctx.print(\"[\");\n          ast.index.visitExpression(this, ctx);\n          ctx.print(\"]\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n          var useNewLine = ast.entries.length > 1;\n          ctx.print(\"[\", useNewLine);\n          ctx.incIndent();\n          this.visitAllExpressions(ast.entries, ctx, ',', useNewLine);\n          ctx.decIndent();\n          ctx.print(\"]\", useNewLine);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n          var _this = this;\n          var useNewLine = ast.entries.length > 1;\n          ctx.print(\"{\", useNewLine);\n          ctx.incIndent();\n          this.visitAllObjects(function (entry) {\n              ctx.print(escapeIdentifier(entry[0], _this._escapeDollarInStrings, false) + \": \");\n              entry[1].visitExpression(_this, ctx);\n          }, ast.entries, ctx, ',', useNewLine);\n          ctx.decIndent();\n          ctx.print(\"}\", useNewLine);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator, newLine) {\n          var _this = this;\n          if (newLine === void 0) { newLine = false; }\n          this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator, newLine);\n      };\n      AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator, newLine) {\n          if (newLine === void 0) { newLine = false; }\n          for (var i = 0; i < expressions.length; i++) {\n              if (i > 0) {\n                  ctx.print(separator, newLine);\n              }\n              handler(expressions[i]);\n          }\n          if (newLine) {\n              ctx.println();\n          }\n      };\n      AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n          var _this = this;\n          statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n      };\n      return AbstractEmitterVisitor;\n  }());\n  function escapeIdentifier(input, escapeDollar, alwaysQuote) {\n      if (alwaysQuote === void 0) { alwaysQuote = true; }\n      if (isBlank(input)) {\n          return null;\n      }\n      var body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n          var match = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              match[_i - 0] = arguments[_i];\n          }\n          if (match[0] == '$') {\n              return escapeDollar ? '\\\\$' : '$';\n          }\n          else if (match[0] == '\\n') {\n              return '\\\\n';\n          }\n          else if (match[0] == '\\r') {\n              return '\\\\r';\n          }\n          else {\n              return \"\\\\\" + match[0];\n          }\n      });\n      var requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n      return requiresQuotes ? \"'\" + body + \"'\" : body;\n  }\n  function _createIndent(count) {\n      var res = '';\n      for (var i = 0; i < count; i++) {\n          res += '  ';\n      }\n      return res;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$18 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var _debugModuleUrl = 'asset://debug/lib';\n  function debugOutputAstAsTypeScript(ast) {\n      var converter = new _TsEmitterVisitor(_debugModuleUrl);\n      var ctx = EmitterVisitorContext.createRoot([]);\n      var asts = Array.isArray(ast) ? ast : [ast];\n      asts.forEach(function (ast) {\n          if (ast instanceof Statement) {\n              ast.visitStatement(converter, ctx);\n          }\n          else if (ast instanceof Expression) {\n              ast.visitExpression(converter, ctx);\n          }\n          else if (ast instanceof Type$1) {\n              ast.visitType(converter, ctx);\n          }\n          else {\n              throw new Error(\"Don't know how to print debug info for \" + ast);\n          }\n      });\n      return ctx.toSource();\n  }\n  var TypeScriptEmitter = (function () {\n      function TypeScriptEmitter(_importGenerator) {\n          this._importGenerator = _importGenerator;\n      }\n      TypeScriptEmitter.prototype.emitStatements = function (moduleUrl, stmts, exportedVars) {\n          var _this = this;\n          var converter = new _TsEmitterVisitor(moduleUrl);\n          var ctx = EmitterVisitorContext.createRoot(exportedVars);\n          converter.visitAllStatements(stmts, ctx);\n          var srcParts = [];\n          converter.importsWithPrefixes.forEach(function (prefix, importedModuleUrl) {\n              // Note: can't write the real word for import as it screws up system.js auto detection...\n              srcParts.push(\"imp\" +\n                  (\"ort * as \" + prefix + \" from '\" + _this._importGenerator.getImportPath(moduleUrl, importedModuleUrl) + \"';\"));\n          });\n          srcParts.push(ctx.toSource());\n          return srcParts.join('\\n');\n      };\n      return TypeScriptEmitter;\n  }());\n  var _TsEmitterVisitor = (function (_super) {\n      __extends$18(_TsEmitterVisitor, _super);\n      function _TsEmitterVisitor(_moduleUrl) {\n          _super.call(this, false);\n          this._moduleUrl = _moduleUrl;\n          this.importsWithPrefixes = new Map();\n      }\n      _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n          if (defaultType === void 0) { defaultType = 'any'; }\n          if (isPresent(t)) {\n              t.visitType(this, ctx);\n          }\n          else {\n              ctx.print(defaultType);\n          }\n      };\n      _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n          _super.prototype.visitLiteralExpr.call(this, ast, ctx, '(null as any)');\n      };\n      // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n      // In SNC mode, [] have the type never[], so we cast here to any[].\n      // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n      // start with [].concat. see https://github.com/angular/angular/pull/11846\n      _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n          if (ast.entries.length === 0) {\n              ctx.print('(');\n          }\n          var result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n          if (ast.entries.length === 0) {\n              ctx.print(' as any[])');\n          }\n          return result;\n      };\n      _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n          this._visitIdentifier(ast.value, ast.typeParams, ctx);\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n          if (ctx.isExportedVar(stmt.name)) {\n              ctx.print(\"export \");\n          }\n          if (stmt.hasModifier(StmtModifier.Final)) {\n              ctx.print(\"const\");\n          }\n          else {\n              ctx.print(\"var\");\n          }\n          ctx.print(\" \" + stmt.name + \":\");\n          this.visitType(stmt.type, ctx);\n          ctx.print(\" = \");\n          stmt.value.visitExpression(this, ctx);\n          ctx.println(\";\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n          ctx.print(\"(<\");\n          ast.type.visitType(this, ctx);\n          ctx.print(\">\");\n          ast.value.visitExpression(this, ctx);\n          ctx.print(\")\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n          var _this = this;\n          ctx.pushClass(stmt);\n          if (ctx.isExportedVar(stmt.name)) {\n              ctx.print(\"export \");\n          }\n          ctx.print(\"class \" + stmt.name);\n          if (isPresent(stmt.parent)) {\n              ctx.print(\" extends \");\n              stmt.parent.visitExpression(this, ctx);\n          }\n          ctx.println(\" {\");\n          ctx.incIndent();\n          stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n          if (isPresent(stmt.constructorMethod)) {\n              this._visitClassConstructor(stmt, ctx);\n          }\n          stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n          stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n          ctx.decIndent();\n          ctx.println(\"}\");\n          ctx.popClass();\n          return null;\n      };\n      _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n          if (field.hasModifier(StmtModifier.Private)) {\n              // comment out as a workaround for #10967\n              ctx.print(\"/*private*/ \");\n          }\n          ctx.print(field.name);\n          ctx.print(':');\n          this.visitType(field.type, ctx);\n          ctx.println(\";\");\n      };\n      _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n          if (getter.hasModifier(StmtModifier.Private)) {\n              ctx.print(\"private \");\n          }\n          ctx.print(\"get \" + getter.name + \"()\");\n          ctx.print(':');\n          this.visitType(getter.type, ctx);\n          ctx.println(\" {\");\n          ctx.incIndent();\n          this.visitAllStatements(getter.body, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n      };\n      _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n          ctx.print(\"constructor(\");\n          this._visitParams(stmt.constructorMethod.params, ctx);\n          ctx.println(\") {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.constructorMethod.body, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n      };\n      _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n          if (method.hasModifier(StmtModifier.Private)) {\n              ctx.print(\"private \");\n          }\n          ctx.print(method.name + \"(\");\n          this._visitParams(method.params, ctx);\n          ctx.print(\"):\");\n          this.visitType(method.type, ctx, 'void');\n          ctx.println(\" {\");\n          ctx.incIndent();\n          this.visitAllStatements(method.body, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n      };\n      _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n          ctx.print(\"(\");\n          this._visitParams(ast.params, ctx);\n          ctx.print(\"):\");\n          this.visitType(ast.type, ctx, 'void');\n          ctx.println(\" => {\");\n          ctx.incIndent();\n          this.visitAllStatements(ast.statements, ctx);\n          ctx.decIndent();\n          ctx.print(\"}\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n          if (ctx.isExportedVar(stmt.name)) {\n              ctx.print(\"export \");\n          }\n          ctx.print(\"function \" + stmt.name + \"(\");\n          this._visitParams(stmt.params, ctx);\n          ctx.print(\"):\");\n          this.visitType(stmt.type, ctx, 'void');\n          ctx.println(\" {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.statements, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n          ctx.println(\"try {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.bodyStmts, ctx);\n          ctx.decIndent();\n          ctx.println(\"} catch (\" + CATCH_ERROR_VAR$2.name + \") {\");\n          ctx.incIndent();\n          var catchStmts = [CATCH_STACK_VAR$2.set(CATCH_ERROR_VAR$2.prop('stack')).toDeclStmt(null, [\n                  StmtModifier.Final\n              ])].concat(stmt.catchStmts);\n          this.visitAllStatements(catchStmts, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n          var typeStr;\n          switch (type.name) {\n              case BuiltinTypeName.Bool:\n                  typeStr = 'boolean';\n                  break;\n              case BuiltinTypeName.Dynamic:\n                  typeStr = 'any';\n                  break;\n              case BuiltinTypeName.Function:\n                  typeStr = 'Function';\n                  break;\n              case BuiltinTypeName.Number:\n                  typeStr = 'number';\n                  break;\n              case BuiltinTypeName.Int:\n                  typeStr = 'number';\n                  break;\n              case BuiltinTypeName.String:\n                  typeStr = 'string';\n                  break;\n              default:\n                  throw new Error(\"Unsupported builtin type \" + type.name);\n          }\n          ctx.print(typeStr);\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitExternalType = function (ast, ctx) {\n          this._visitIdentifier(ast.value, ast.typeParams, ctx);\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n          this.visitType(type.of, ctx);\n          ctx.print(\"[]\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n          ctx.print(\"{[key: string]:\");\n          this.visitType(type.valueType, ctx);\n          ctx.print(\"}\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n          var name;\n          switch (method) {\n              case BuiltinMethod.ConcatArray:\n                  name = 'concat';\n                  break;\n              case BuiltinMethod.SubscribeObservable:\n                  name = 'subscribe';\n                  break;\n              case BuiltinMethod.Bind:\n                  name = 'bind';\n                  break;\n              default:\n                  throw new Error(\"Unknown builtin method: \" + method);\n          }\n          return name;\n      };\n      _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n          var _this = this;\n          this.visitAllObjects(function (param) {\n              ctx.print(param.name);\n              ctx.print(':');\n              _this.visitType(param.type, ctx);\n          }, params, ctx, ',');\n      };\n      _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n          var _this = this;\n          if (isBlank(value.name)) {\n              throw new Error(\"Internal error: unknown identifier \" + value);\n          }\n          if (isPresent(value.moduleUrl) && value.moduleUrl != this._moduleUrl) {\n              var prefix = this.importsWithPrefixes.get(value.moduleUrl);\n              if (isBlank(prefix)) {\n                  prefix = \"import\" + this.importsWithPrefixes.size;\n                  this.importsWithPrefixes.set(value.moduleUrl, prefix);\n              }\n              ctx.print(prefix + \".\");\n          }\n          if (value.reference && value.reference.members) {\n              ctx.print(value.reference.name);\n              ctx.print('.');\n              ctx.print(value.reference.members.join('.'));\n          }\n          else {\n              ctx.print(value.name);\n          }\n          if (isPresent(typeParams) && typeParams.length > 0) {\n              ctx.print(\"<\");\n              this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, typeParams, ctx, ',');\n              ctx.print(\">\");\n          }\n      };\n      return _TsEmitterVisitor;\n  }(AbstractEmitterVisitor));\n\n  function interpretStatements(statements, resultVar) {\n      var stmtsWithReturn = statements.concat([new ReturnStatement(variable(resultVar))]);\n      var ctx = new _ExecutionContext(null, null, null, new Map());\n      var visitor = new StatementInterpreter();\n      var result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n      return isPresent(result) ? result.value : null;\n  }\n  function _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n      var childCtx = ctx.createChildWihtLocalVars();\n      for (var i = 0; i < varNames.length; i++) {\n          childCtx.vars.set(varNames[i], varValues[i]);\n      }\n      var result = visitor.visitAllStatements(statements, childCtx);\n      return isPresent(result) ? result.value : null;\n  }\n  var _ExecutionContext = (function () {\n      function _ExecutionContext(parent, instance, className, vars) {\n          this.parent = parent;\n          this.instance = instance;\n          this.className = className;\n          this.vars = vars;\n      }\n      _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n          return new _ExecutionContext(this, this.instance, this.className, new Map());\n      };\n      return _ExecutionContext;\n  }());\n  var ReturnValue = (function () {\n      function ReturnValue(value) {\n          this.value = value;\n      }\n      return ReturnValue;\n  }());\n  function createDynamicClass(_classStmt, _ctx, _visitor) {\n      var propertyDescriptors = {};\n      _classStmt.getters.forEach(function (getter) {\n          // Note: use `function` instead of arrow function to capture `this`\n          propertyDescriptors[getter.name] = {\n              configurable: false,\n              get: function () {\n                  var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                  return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n              }\n          };\n      });\n      _classStmt.methods.forEach(function (method) {\n          var paramNames = method.params.map(function (param) { return param.name; });\n          // Note: use `function` instead of arrow function to capture `this`\n          propertyDescriptors[method.name] = {\n              writable: false,\n              configurable: false,\n              value: function () {\n                  var args = [];\n                  for (var _i = 0; _i < arguments.length; _i++) {\n                      args[_i - 0] = arguments[_i];\n                  }\n                  var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                  return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n              }\n          };\n      });\n      var ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n      // Note: use `function` instead of arrow function to capture `this`\n      var ctor = function () {\n          var _this = this;\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i - 0] = arguments[_i];\n          }\n          var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n          _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n          _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n      };\n      var superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n      ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n      return ctor;\n  }\n  var StatementInterpreter = (function () {\n      function StatementInterpreter() {\n      }\n      StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n      StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n          ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n          return null;\n      };\n      StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n          var value = expr.value.visitExpression(this, ctx);\n          var currCtx = ctx;\n          while (currCtx != null) {\n              if (currCtx.vars.has(expr.name)) {\n                  currCtx.vars.set(expr.name, value);\n                  return value;\n              }\n              currCtx = currCtx.parent;\n          }\n          throw new Error(\"Not declared variable \" + expr.name);\n      };\n      StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n          var varName = ast.name;\n          if (isPresent(ast.builtin)) {\n              switch (ast.builtin) {\n                  case BuiltinVar.Super:\n                      return ctx.instance.__proto__;\n                  case BuiltinVar.This:\n                      return ctx.instance;\n                  case BuiltinVar.CatchError:\n                      varName = CATCH_ERROR_VAR$1;\n                      break;\n                  case BuiltinVar.CatchStack:\n                      varName = CATCH_STACK_VAR$1;\n                      break;\n                  default:\n                      throw new Error(\"Unknown builtin variable \" + ast.builtin);\n              }\n          }\n          var currCtx = ctx;\n          while (currCtx != null) {\n              if (currCtx.vars.has(varName)) {\n                  return currCtx.vars.get(varName);\n              }\n              currCtx = currCtx.parent;\n          }\n          throw new Error(\"Not declared variable \" + varName);\n      };\n      StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n          var receiver = expr.receiver.visitExpression(this, ctx);\n          var index = expr.index.visitExpression(this, ctx);\n          var value = expr.value.visitExpression(this, ctx);\n          receiver[index] = value;\n          return value;\n      };\n      StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n          var receiver = expr.receiver.visitExpression(this, ctx);\n          var value = expr.value.visitExpression(this, ctx);\n          receiver[expr.name] = value;\n          return value;\n      };\n      StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n          var receiver = expr.receiver.visitExpression(this, ctx);\n          var args = this.visitAllExpressions(expr.args, ctx);\n          var result;\n          if (isPresent(expr.builtin)) {\n              switch (expr.builtin) {\n                  case BuiltinMethod.ConcatArray:\n                      result = receiver.concat(args[0]);\n                      break;\n                  case BuiltinMethod.SubscribeObservable:\n                      result = receiver.subscribe({ next: args[0] });\n                      break;\n                  case BuiltinMethod.Bind:\n                      result = receiver.bind(args[0]);\n                      break;\n                  default:\n                      throw new Error(\"Unknown builtin method \" + expr.builtin);\n              }\n          }\n          else {\n              result = receiver[expr.name].apply(receiver, args);\n          }\n          return result;\n      };\n      StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n          var args = this.visitAllExpressions(stmt.args, ctx);\n          var fnExpr = stmt.fn;\n          if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n              ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n              return null;\n          }\n          else {\n              var fn = stmt.fn.visitExpression(this, ctx);\n              return fn.apply(null, args);\n          }\n      };\n      StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n          return new ReturnValue(stmt.value.visitExpression(this, ctx));\n      };\n      StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n          var clazz = createDynamicClass(stmt, ctx, this);\n          ctx.vars.set(stmt.name, clazz);\n          return null;\n      };\n      StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n          return stmt.expr.visitExpression(this, ctx);\n      };\n      StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n          var condition = stmt.condition.visitExpression(this, ctx);\n          if (condition) {\n              return this.visitAllStatements(stmt.trueCase, ctx);\n          }\n          else if (isPresent(stmt.falseCase)) {\n              return this.visitAllStatements(stmt.falseCase, ctx);\n          }\n          return null;\n      };\n      StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n          try {\n              return this.visitAllStatements(stmt.bodyStmts, ctx);\n          }\n          catch (e) {\n              var childCtx = ctx.createChildWihtLocalVars();\n              childCtx.vars.set(CATCH_ERROR_VAR$1, e);\n              childCtx.vars.set(CATCH_STACK_VAR$1, e.stack);\n              return this.visitAllStatements(stmt.catchStmts, childCtx);\n          }\n      };\n      StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n          throw stmt.error.visitExpression(this, ctx);\n      };\n      StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n      StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n          var args = this.visitAllExpressions(ast.args, ctx);\n          var clazz = ast.classExpr.visitExpression(this, ctx);\n          return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n      };\n      StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n      StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n          return ast.value.reference;\n      };\n      StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n          if (ast.condition.visitExpression(this, ctx)) {\n              return ast.trueCase.visitExpression(this, ctx);\n          }\n          else if (isPresent(ast.falseCase)) {\n              return ast.falseCase.visitExpression(this, ctx);\n          }\n          return null;\n      };\n      StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n          return !ast.condition.visitExpression(this, ctx);\n      };\n      StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n          return ast.value.visitExpression(this, ctx);\n      };\n      StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n          var paramNames = ast.params.map(function (param) { return param.name; });\n          return _declareFn(paramNames, ast.statements, ctx, this);\n      };\n      StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n          var paramNames = stmt.params.map(function (param) { return param.name; });\n          ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n          return null;\n      };\n      StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n          var _this = this;\n          var lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n          var rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n          switch (ast.operator) {\n              case BinaryOperator.Equals:\n                  return lhs() == rhs();\n              case BinaryOperator.Identical:\n                  return lhs() === rhs();\n              case BinaryOperator.NotEquals:\n                  return lhs() != rhs();\n              case BinaryOperator.NotIdentical:\n                  return lhs() !== rhs();\n              case BinaryOperator.And:\n                  return lhs() && rhs();\n              case BinaryOperator.Or:\n                  return lhs() || rhs();\n              case BinaryOperator.Plus:\n                  return lhs() + rhs();\n              case BinaryOperator.Minus:\n                  return lhs() - rhs();\n              case BinaryOperator.Divide:\n                  return lhs() / rhs();\n              case BinaryOperator.Multiply:\n                  return lhs() * rhs();\n              case BinaryOperator.Modulo:\n                  return lhs() % rhs();\n              case BinaryOperator.Lower:\n                  return lhs() < rhs();\n              case BinaryOperator.LowerEquals:\n                  return lhs() <= rhs();\n              case BinaryOperator.Bigger:\n                  return lhs() > rhs();\n              case BinaryOperator.BiggerEquals:\n                  return lhs() >= rhs();\n              default:\n                  throw new Error(\"Unknown operator \" + ast.operator);\n          }\n      };\n      StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n          var result;\n          var receiver = ast.receiver.visitExpression(this, ctx);\n          result = receiver[ast.name];\n          return result;\n      };\n      StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n          var receiver = ast.receiver.visitExpression(this, ctx);\n          var prop = ast.index.visitExpression(this, ctx);\n          return receiver[prop];\n      };\n      StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n          return this.visitAllExpressions(ast.entries, ctx);\n      };\n      StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n          var _this = this;\n          var result = {};\n          ast.entries.forEach(function (entry) { return result[entry[0]] =\n              entry[1].visitExpression(_this, ctx); });\n          return result;\n      };\n      StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n          var _this = this;\n          return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n      };\n      StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n          for (var i = 0; i < statements.length; i++) {\n              var stmt = statements[i];\n              var val = stmt.visitStatement(this, ctx);\n              if (val instanceof ReturnValue) {\n                  return val;\n              }\n          }\n          return null;\n      };\n      return StatementInterpreter;\n  }());\n  function _declareFn(varNames, statements, ctx, visitor) {\n      return function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i - 0] = arguments[_i];\n          }\n          return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n      };\n  }\n  var CATCH_ERROR_VAR$1 = 'error';\n  var CATCH_STACK_VAR$1 = 'stack';\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$20 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var AbstractJsEmitterVisitor = (function (_super) {\n      __extends$20(AbstractJsEmitterVisitor, _super);\n      function AbstractJsEmitterVisitor() {\n          _super.call(this, false);\n      }\n      AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n          var _this = this;\n          ctx.pushClass(stmt);\n          this._visitClassConstructor(stmt, ctx);\n          if (isPresent(stmt.parent)) {\n              ctx.print(stmt.name + \".prototype = Object.create(\");\n              stmt.parent.visitExpression(this, ctx);\n              ctx.println(\".prototype);\");\n          }\n          stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n          stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n          ctx.popClass();\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n          ctx.print(\"function \" + stmt.name + \"(\");\n          if (isPresent(stmt.constructorMethod)) {\n              this._visitParams(stmt.constructorMethod.params, ctx);\n          }\n          ctx.println(\") {\");\n          ctx.incIndent();\n          if (isPresent(stmt.constructorMethod)) {\n              if (stmt.constructorMethod.body.length > 0) {\n                  ctx.println(\"var self = this;\");\n                  this.visitAllStatements(stmt.constructorMethod.body, ctx);\n              }\n          }\n          ctx.decIndent();\n          ctx.println(\"}\");\n      };\n      AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n          ctx.println(\"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n          ctx.incIndent();\n          if (getter.body.length > 0) {\n              ctx.println(\"var self = this;\");\n              this.visitAllStatements(getter.body, ctx);\n          }\n          ctx.decIndent();\n          ctx.println(\"}});\");\n      };\n      AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n          ctx.print(stmt.name + \".prototype.\" + method.name + \" = function(\");\n          this._visitParams(method.params, ctx);\n          ctx.println(\") {\");\n          ctx.incIndent();\n          if (method.body.length > 0) {\n              ctx.println(\"var self = this;\");\n              this.visitAllStatements(method.body, ctx);\n          }\n          ctx.decIndent();\n          ctx.println(\"};\");\n      };\n      AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n          if (ast.builtin === BuiltinVar.This) {\n              ctx.print('self');\n          }\n          else if (ast.builtin === BuiltinVar.Super) {\n              throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n          }\n          else {\n              _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n          }\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n          ctx.print(\"var \" + stmt.name + \" = \");\n          stmt.value.visitExpression(this, ctx);\n          ctx.println(\";\");\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n          ast.value.visitExpression(this, ctx);\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n          var fnExpr = expr.fn;\n          if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n              ctx.currentClass.parent.visitExpression(this, ctx);\n              ctx.print(\".call(this\");\n              if (expr.args.length > 0) {\n                  ctx.print(\", \");\n                  this.visitAllExpressions(expr.args, ctx, ',');\n              }\n              ctx.print(\")\");\n          }\n          else {\n              _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n          }\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n          ctx.print(\"function(\");\n          this._visitParams(ast.params, ctx);\n          ctx.println(\") {\");\n          ctx.incIndent();\n          this.visitAllStatements(ast.statements, ctx);\n          ctx.decIndent();\n          ctx.print(\"}\");\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n          ctx.print(\"function \" + stmt.name + \"(\");\n          this._visitParams(stmt.params, ctx);\n          ctx.println(\") {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.statements, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n          ctx.println(\"try {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.bodyStmts, ctx);\n          ctx.decIndent();\n          ctx.println(\"} catch (\" + CATCH_ERROR_VAR$2.name + \") {\");\n          ctx.incIndent();\n          var catchStmts = [CATCH_STACK_VAR$2.set(CATCH_ERROR_VAR$2.prop('stack')).toDeclStmt(null, [\n                  StmtModifier.Final\n              ])].concat(stmt.catchStmts);\n          this.visitAllStatements(catchStmts, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n          this.visitAllObjects(function (param) { return ctx.print(param.name); }, params, ctx, ',');\n      };\n      AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n          var name;\n          switch (method) {\n              case BuiltinMethod.ConcatArray:\n                  name = 'concat';\n                  break;\n              case BuiltinMethod.SubscribeObservable:\n                  name = 'subscribe';\n                  break;\n              case BuiltinMethod.Bind:\n                  name = 'bind';\n                  break;\n              default:\n                  throw new Error(\"Unknown builtin method: \" + method);\n          }\n          return name;\n      };\n      return AbstractJsEmitterVisitor;\n  }(AbstractEmitterVisitor));\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$19 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  function evalExpression(sourceUrl, expr, declarations, vars) {\n      var fnBody = declarations + \"\\nreturn \" + expr + \"\\n//# sourceURL=\" + sourceUrl;\n      var fnArgNames = [];\n      var fnArgValues = [];\n      for (var argName in vars) {\n          fnArgNames.push(argName);\n          fnArgValues.push(vars[argName]);\n      }\n      return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n  }\n  function jitStatements(sourceUrl, statements, resultVar) {\n      var converter = new JitEmitterVisitor();\n      var ctx = EmitterVisitorContext.createRoot([resultVar]);\n      converter.visitAllStatements(statements, ctx);\n      return evalExpression(sourceUrl, resultVar, ctx.toSource(), converter.getArgs());\n  }\n  var JitEmitterVisitor = (function (_super) {\n      __extends$19(JitEmitterVisitor, _super);\n      function JitEmitterVisitor() {\n          _super.apply(this, arguments);\n          this._evalArgNames = [];\n          this._evalArgValues = [];\n      }\n      JitEmitterVisitor.prototype.getArgs = function () {\n          var result = {};\n          for (var i = 0; i < this._evalArgNames.length; i++) {\n              result[this._evalArgNames[i]] = this._evalArgValues[i];\n          }\n          return result;\n      };\n      JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n          var value = ast.value.reference;\n          var id = this._evalArgValues.indexOf(value);\n          if (id === -1) {\n              id = this._evalArgValues.length;\n              this._evalArgValues.push(value);\n              var name = isPresent(ast.value.name) ? sanitizeIdentifier(ast.value.name) : 'val';\n              this._evalArgNames.push(sanitizeIdentifier(\"jit_\" + name + id));\n          }\n          ctx.print(this._evalArgNames[id]);\n          return null;\n      };\n      return JitEmitterVisitor;\n  }(AbstractJsEmitterVisitor));\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n   *\n   * Please make sure to keep to edits in sync with the source file.\n   *\n   * Source:\n   * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n   *\n   * The original file level comment is reproduced below\n   */\n  /*\n    This is a limited shim for ShadowDOM css styling.\n    https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n    The intention here is to support only the styling features which can be\n    relatively simply implemented. The goal is to allow users to avoid the\n    most obvious pitfalls and do so without compromising performance significantly.\n    For ShadowDOM styling that's not covered here, a set of best practices\n    can be provided that should allow users to accomplish more complex styling.\n\n    The following is a list of specific ShadowDOM styling features and a brief\n    discussion of the approach used to shim.\n\n    Shimmed features:\n\n    * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n    element using the :host rule. To shim this feature, the :host styles are\n    reformatted and prefixed with a given scope name and promoted to a\n    document level stylesheet.\n    For example, given a scope name of .foo, a rule like this:\n\n      :host {\n          background: red;\n        }\n      }\n\n    becomes:\n\n      .foo {\n        background: red;\n      }\n\n    * encapsulation: Styles defined within ShadowDOM, apply only to\n    dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n    this feature.\n\n    By default, rules are prefixed with the host element tag name\n    as a descendant selector. This ensures styling does not leak out of the 'top'\n    of the element's ShadowDOM. For example,\n\n    div {\n        font-weight: bold;\n      }\n\n    becomes:\n\n    x-foo div {\n        font-weight: bold;\n      }\n\n    becomes:\n\n\n    Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n    selectors are scoped by adding an attribute selector suffix to each\n    simple selector that contains the host element tag name. Each element\n    in the element's ShadowDOM template is also given the scope attribute.\n    Thus, these rules match only elements that have the scope attribute.\n    For example, given a scope name of x-foo, a rule like this:\n\n      div {\n        font-weight: bold;\n      }\n\n    becomes:\n\n      div[x-foo] {\n        font-weight: bold;\n      }\n\n    Note that elements that are dynamically added to a scope must have the scope\n    selector added to them manually.\n\n    * upper/lower bound encapsulation: Styles which are defined outside a\n    shadowRoot should not cross the ShadowDOM boundary and should not apply\n    inside a shadowRoot.\n\n    This styling behavior is not emulated. Some possible ways to do this that\n    were rejected due to complexity and/or performance concerns include: (1) reset\n    every possible property for every possible selector for a given scope name;\n    (2) re-implement css in javascript.\n\n    As an alternative, users should make sure to use selectors\n    specific to the scope in which they are working.\n\n    * ::distributed: This behavior is not emulated. It's often not necessary\n    to style the contents of a specific insertion point and instead, descendants\n    of the host element can be styled selectively. Users can also create an\n    extra node around an insertion point and style that node's contents\n    via descendent selectors. For example, with a shadowRoot like this:\n\n      <style>\n        ::content(div) {\n          background: red;\n        }\n      </style>\n      <content></content>\n\n    could become:\n\n      <style>\n        / *@polyfill .content-container div * /\n        ::content(div) {\n          background: red;\n        }\n      </style>\n      <div class=\"content-container\">\n        <content></content>\n      </div>\n\n    Note the use of @polyfill in the comment above a ShadowDOM specific style\n    declaration. This is a directive to the styling shim to use the selector\n    in comments in lieu of the next selector when running under polyfill.\n  */\n  var ShadowCss = (function () {\n      function ShadowCss() {\n          this.strictStyling = true;\n      }\n      /*\n      * Shim some cssText with the given selector. Returns cssText that can\n      * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n      *\n      * When strictStyling is true:\n      * - selector is the attribute added to all elements inside the host,\n      * - hostSelector is the attribute added to the host itself.\n      */\n      ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n          if (hostSelector === void 0) { hostSelector = ''; }\n          var sourceMappingUrl = extractSourceMappingUrl(cssText);\n          cssText = stripComments(cssText);\n          cssText = this._insertDirectives(cssText);\n          return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n      };\n      ShadowCss.prototype._insertDirectives = function (cssText) {\n          cssText = this._insertPolyfillDirectivesInCssText(cssText);\n          return this._insertPolyfillRulesInCssText(cssText);\n      };\n      /*\n       * Process styles to convert native ShadowDOM rules that will trip\n       * up the css parser; we rely on decorating the stylesheet with inert rules.\n       *\n       * For example, we convert this rule:\n       *\n       * polyfill-next-selector { content: ':host menu-item'; }\n       * ::content menu-item {\n       *\n       * to this:\n       *\n       * scopeName menu-item {\n       *\n      **/\n      ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n          // Difference with webcomponents.js: does not handle comments\n          return cssText.replace(_cssContentNextSelectorRe, function () {\n              var m = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                  m[_i - 0] = arguments[_i];\n              }\n              return m[2] + '{';\n          });\n      };\n      /*\n       * Process styles to add rules which will only apply under the polyfill\n       *\n       * For example, we convert this rule:\n       *\n       * polyfill-rule {\n       *   content: ':host menu-item';\n       * ...\n       * }\n       *\n       * to this:\n       *\n       * scopeName menu-item {...}\n       *\n      **/\n      ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n          // Difference with webcomponents.js: does not handle comments\n          return cssText.replace(_cssContentRuleRe, function () {\n              var m = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                  m[_i - 0] = arguments[_i];\n              }\n              var rule = m[0].replace(m[1], '').replace(m[2], '');\n              return m[4] + rule;\n          });\n      };\n      /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\n       *\n       *  .foo {... }\n       *\n       *  and converts this to\n       *\n       *  scopeName .foo { ... }\n      */\n      ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n          var unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n          // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n          cssText = this._insertPolyfillHostInCssText(cssText);\n          cssText = this._convertColonHost(cssText);\n          cssText = this._convertColonHostContext(cssText);\n          cssText = this._convertShadowDOMSelectors(cssText);\n          if (scopeSelector) {\n              cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n          }\n          cssText = cssText + '\\n' + unscopedRules;\n          return cssText.trim();\n      };\n      /*\n       * Process styles to add rules which will only apply under the polyfill\n       * and do not process via CSSOM. (CSSOM is destructive to rules on rare\n       * occasions, e.g. -webkit-calc on Safari.)\n       * For example, we convert this rule:\n       *\n       * @polyfill-unscoped-rule {\n       *   content: 'menu-item';\n       * ... }\n       *\n       * to this:\n       *\n       * menu-item {...}\n       *\n      **/\n      ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n          // Difference with webcomponents.js: does not handle comments\n          var r = '';\n          var m;\n          _cssContentUnscopedRuleRe.lastIndex = 0;\n          while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n              var rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n              r += rule + '\\n\\n';\n          }\n          return r;\n      };\n      /*\n       * convert a rule like :host(.foo) > .bar { }\n       *\n       * to\n       *\n       * .foo<scopeName> > .bar\n      */\n      ShadowCss.prototype._convertColonHost = function (cssText) {\n          return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n      };\n      /*\n       * convert a rule like :host-context(.foo) > .bar { }\n       *\n       * to\n       *\n       * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n       *\n       * and\n       *\n       * :host-context(.foo:host) .bar { ... }\n       *\n       * to\n       *\n       * .foo<scopeName> .bar { ... }\n      */\n      ShadowCss.prototype._convertColonHostContext = function (cssText) {\n          return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n      };\n      ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n          // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n          return cssText.replace(regExp, function () {\n              var m = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                  m[_i - 0] = arguments[_i];\n              }\n              if (m[2]) {\n                  var parts = m[2].split(',');\n                  var r = [];\n                  for (var i = 0; i < parts.length; i++) {\n                      var p = parts[i].trim();\n                      if (!p)\n                          break;\n                      r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                  }\n                  return r.join(',');\n              }\n              else {\n                  return _polyfillHostNoCombinator + m[3];\n              }\n          });\n      };\n      ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n          if (part.indexOf(_polyfillHost) > -1) {\n              return this._colonHostPartReplacer(host, part, suffix);\n          }\n          else {\n              return host + part + suffix + ', ' + part + ' ' + host + suffix;\n          }\n      };\n      ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n          return host + part.replace(_polyfillHost, '') + suffix;\n      };\n      /*\n       * Convert combinators like ::shadow and pseudo-elements like ::content\n       * by replacing with space.\n      */\n      ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n          return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n      };\n      // change a selector like 'div' to 'name div'\n      ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n          var _this = this;\n          return processRules(cssText, function (rule) {\n              var selector = rule.selector;\n              var content = rule.content;\n              if (rule.selector[0] != '@') {\n                  selector =\n                      _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n              }\n              else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                  rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                  content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n              }\n              return new CssRule(selector, content);\n          });\n      };\n      ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n          var _this = this;\n          return selector.split(',')\n              .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n              .map(function (deepParts) {\n              var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n              var applyScope = function (shallowPart) {\n                  if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                      return strict ?\n                          _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                          _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                  }\n                  else {\n                      return shallowPart;\n                  }\n              };\n              return [applyScope(shallowPart)].concat(otherParts).join(' ');\n          })\n              .join(', ');\n      };\n      ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n          var re = this._makeScopeMatcher(scopeSelector);\n          return !re.test(selector);\n      };\n      ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n          var lre = /\\[/g;\n          var rre = /\\]/g;\n          scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n          return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n      };\n      ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n          // Difference from webcomponents.js: scopeSelector could not be an array\n          return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n      };\n      // scope via name and [is=name]\n      ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n          // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n          _polyfillHostRe.lastIndex = 0;\n          if (_polyfillHostRe.test(selector)) {\n              var replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n              return selector\n                  .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) { return selector[0] === ':' ? replaceBy_1 + selector : selector + replaceBy_1; })\n                  .replace(_polyfillHostRe, replaceBy_1 + ' ');\n          }\n          return scopeSelector + ' ' + selector;\n      };\n      // return a selector with [name] suffix on each simple selector\n      // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\n      ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n          var _this = this;\n          var isRe = /\\[is=([^\\]]*)\\]/g;\n          scopeSelector = scopeSelector.replace(isRe, function (_) {\n              var parts = [];\n              for (var _i = 1; _i < arguments.length; _i++) {\n                  parts[_i - 1] = arguments[_i];\n              }\n              return parts[0];\n          });\n          var attrName = '[' + scopeSelector + ']';\n          var _scopeSelectorPart = function (p) {\n              var scopedP = p.trim();\n              if (!scopedP) {\n                  return '';\n              }\n              if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                  scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n              }\n              else {\n                  // remove :host since it should be unnecessary\n                  var t = p.replace(_polyfillHostRe, '');\n                  if (t.length > 0) {\n                      var matches = t.match(/([^:]*)(:*)(.*)/);\n                      if (matches !== null) {\n                          scopedP = matches[1] + attrName + matches[2] + matches[3];\n                      }\n                  }\n              }\n              return scopedP;\n          };\n          var attrSelectorIndex = 0;\n          var attrSelectors = [];\n          // replace attribute selectors with placeholders to avoid issue with white space being treated\n          // as separator\n          selector = selector.replace(/\\[[^\\]]*\\]/g, function (attrSelector) {\n              var replaceBy = \"__attr_sel_\" + attrSelectorIndex + \"__\";\n              attrSelectors.push(attrSelector);\n              attrSelectorIndex++;\n              return replaceBy;\n          });\n          var scopedSelector = '';\n          var startIndex = 0;\n          var res;\n          var sep = /( |>|\\+|~(?!=))\\s*/g;\n          var scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n          while ((res = sep.exec(selector)) !== null) {\n              var separator = res[1];\n              var part = selector.slice(startIndex, res.index).trim();\n              // if a selector appears before :host-context it should not be shimmed as it\n              // matches on ancestor elements and not on elements in the host's shadow\n              var scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n              scopedSelector += scopedPart + \" \" + separator + \" \";\n              startIndex = sep.lastIndex;\n          }\n          scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n          // replace the placeholders with their original values\n          return scopedSelector.replace(/__attr_sel_(\\d+)__/g, function (ph, index) { return attrSelectors[+index]; });\n      };\n      ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n          return selector.replace(_colonHostContextRe, _polyfillHostContext)\n              .replace(_colonHostRe, _polyfillHost);\n      };\n      return ShadowCss;\n  }());\n  var _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\n  var _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n  var _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n  var _polyfillHost = '-shadowcsshost';\n  // note: :host-context pre-processed to -shadowcsshostcontext.\n  var _polyfillHostContext = '-shadowcsscontext';\n  var _parenSuffix = ')(?:\\\\((' +\n      '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n      ')\\\\))?([^,{]*)';\n  var _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\n  var _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\n  var _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\n  var _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\n  var _shadowDOMSelectorsRe = [\n      /::shadow/g,\n      /::content/g,\n      // Deprecated selectors\n      /\\/shadow-deep\\//g,\n      /\\/shadow\\//g,\n  ];\n  var _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\n  var _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\n  var _polyfillHostRe = /-shadowcsshost/gim;\n  var _colonHostRe = /:host/gim;\n  var _colonHostContextRe = /:host-context/gim;\n  var _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n  function stripComments(input) {\n      return input.replace(_commentRe, '');\n  }\n  // all comments except inline source mapping\n  var _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n  function extractSourceMappingUrl(input) {\n      var matcher = input.match(_sourceMappingUrlRe);\n      return matcher ? matcher[0] : '';\n  }\n  var _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\n  var _curlyRe = /([{}])/g;\n  var OPEN_CURLY = '{';\n  var CLOSE_CURLY = '}';\n  var BLOCK_PLACEHOLDER = '%BLOCK%';\n  var CssRule = (function () {\n      function CssRule(selector, content) {\n          this.selector = selector;\n          this.content = content;\n      }\n      return CssRule;\n  }());\n  function processRules(input, ruleCallback) {\n      var inputWithEscapedBlocks = escapeBlocks(input);\n      var nextBlockIndex = 0;\n      return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n          var m = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              m[_i - 0] = arguments[_i];\n          }\n          var selector = m[2];\n          var content = '';\n          var suffix = m[4];\n          var contentPrefix = '';\n          if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n              content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n              suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n              contentPrefix = '{';\n          }\n          var rule = ruleCallback(new CssRule(selector, content));\n          return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n      });\n  }\n  var StringWithEscapedBlocks = (function () {\n      function StringWithEscapedBlocks(escapedString, blocks) {\n          this.escapedString = escapedString;\n          this.blocks = blocks;\n      }\n      return StringWithEscapedBlocks;\n  }());\n  function escapeBlocks(input) {\n      var inputParts = input.split(_curlyRe);\n      var resultParts = [];\n      var escapedBlocks = [];\n      var bracketCount = 0;\n      var currentBlockParts = [];\n      for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n          var part = inputParts[partIndex];\n          if (part == CLOSE_CURLY) {\n              bracketCount--;\n          }\n          if (bracketCount > 0) {\n              currentBlockParts.push(part);\n          }\n          else {\n              if (currentBlockParts.length > 0) {\n                  escapedBlocks.push(currentBlockParts.join(''));\n                  resultParts.push(BLOCK_PLACEHOLDER);\n                  currentBlockParts = [];\n              }\n              resultParts.push(part);\n          }\n          if (part == OPEN_CURLY) {\n              bracketCount++;\n          }\n      }\n      if (currentBlockParts.length > 0) {\n          escapedBlocks.push(currentBlockParts.join(''));\n          resultParts.push(BLOCK_PLACEHOLDER);\n      }\n      return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n  }\n\n  var COMPONENT_VARIABLE = '%COMP%';\n  var HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n  var CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n  var StylesCompileDependency = (function () {\n      function StylesCompileDependency(moduleUrl, isShimmed, valuePlaceholder) {\n          this.moduleUrl = moduleUrl;\n          this.isShimmed = isShimmed;\n          this.valuePlaceholder = valuePlaceholder;\n      }\n      return StylesCompileDependency;\n  }());\n  var StylesCompileResult = (function () {\n      function StylesCompileResult(componentStylesheet, externalStylesheets) {\n          this.componentStylesheet = componentStylesheet;\n          this.externalStylesheets = externalStylesheets;\n      }\n      return StylesCompileResult;\n  }());\n  var CompiledStylesheet = (function () {\n      function CompiledStylesheet(statements, stylesVar, dependencies, isShimmed, meta) {\n          this.statements = statements;\n          this.stylesVar = stylesVar;\n          this.dependencies = dependencies;\n          this.isShimmed = isShimmed;\n          this.meta = meta;\n      }\n      return CompiledStylesheet;\n  }());\n  var StyleCompiler = (function () {\n      function StyleCompiler(_urlResolver) {\n          this._urlResolver = _urlResolver;\n          this._shadowCss = new ShadowCss();\n      }\n      StyleCompiler.prototype.compileComponent = function (comp) {\n          var _this = this;\n          var externalStylesheets = [];\n          var componentStylesheet = this._compileStyles(comp, new CompileStylesheetMetadata({\n              styles: comp.template.styles,\n              styleUrls: comp.template.styleUrls,\n              moduleUrl: comp.type.moduleUrl\n          }), true);\n          comp.template.externalStylesheets.forEach(function (stylesheetMeta) {\n              var compiledStylesheet = _this._compileStyles(comp, stylesheetMeta, false);\n              externalStylesheets.push(compiledStylesheet);\n          });\n          return new StylesCompileResult(componentStylesheet, externalStylesheets);\n      };\n      StyleCompiler.prototype._compileStyles = function (comp, stylesheet, isComponentStylesheet) {\n          var _this = this;\n          var shim = comp.template.encapsulation === _angular_core.ViewEncapsulation.Emulated;\n          var styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n          var dependencies = [];\n          for (var i = 0; i < stylesheet.styleUrls.length; i++) {\n              var identifier = new CompileIdentifierMetadata({ name: getStylesVarName(null) });\n              dependencies.push(new StylesCompileDependency(stylesheet.styleUrls[i], shim, identifier));\n              styleExpressions.push(new ExternalExpr(identifier));\n          }\n          // styles variable contains plain strings and arrays of other styles arrays (recursive),\n          // so we set its type to dynamic.\n          var stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n          var stmt = variable(stylesVar)\n              .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n              .toDeclStmt(null, [StmtModifier.Final]);\n          return new CompiledStylesheet([stmt], stylesVar, dependencies, shim, stylesheet);\n      };\n      StyleCompiler.prototype._shimIfNeeded = function (style, shim) {\n          return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n      };\n      StyleCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      StyleCompiler.ctorParameters = [\n          { type: UrlResolver, },\n      ];\n      return StyleCompiler;\n  }());\n  function getStylesVarName(component) {\n      var result = \"styles\";\n      if (component) {\n          result += \"_\" + component.type.name;\n      }\n      return result;\n  }\n\n  /**\n   * An internal module of the Angular compiler that begins with component types,\n   * extracts templates, and eventually produces a compiled version of the component\n   * ready for linking into an application.\n   *\n   * @security  When compiling templates at runtime, you must ensure that the entire template comes\n   * from a trusted source. Attacker-controlled data introduced by a template could expose your\n   * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n   */\n  var RuntimeCompiler = (function () {\n      function RuntimeCompiler(_injector, _metadataResolver, _templateNormalizer, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _directiveWrapperCompiler, _compilerConfig) {\n          this._injector = _injector;\n          this._metadataResolver = _metadataResolver;\n          this._templateNormalizer = _templateNormalizer;\n          this._templateParser = _templateParser;\n          this._styleCompiler = _styleCompiler;\n          this._viewCompiler = _viewCompiler;\n          this._ngModuleCompiler = _ngModuleCompiler;\n          this._directiveWrapperCompiler = _directiveWrapperCompiler;\n          this._compilerConfig = _compilerConfig;\n          this._compiledTemplateCache = new Map();\n          this._compiledHostTemplateCache = new Map();\n          this._compiledDirectiveWrapperCache = new Map();\n          this._compiledNgModuleCache = new Map();\n          this._animationParser = new AnimationParser();\n          this._animationCompiler = new AnimationCompiler();\n      }\n      Object.defineProperty(RuntimeCompiler.prototype, \"injector\", {\n          get: function () { return this._injector; },\n          enumerable: true,\n          configurable: true\n      });\n      RuntimeCompiler.prototype.compileModuleSync = function (moduleType) {\n          return this._compileModuleAndComponents(moduleType, true).syncResult;\n      };\n      RuntimeCompiler.prototype.compileModuleAsync = function (moduleType) {\n          return this._compileModuleAndComponents(moduleType, false).asyncResult;\n      };\n      RuntimeCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n          return this._compileModuleAndAllComponents(moduleType, true).syncResult;\n      };\n      RuntimeCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n          return this._compileModuleAndAllComponents(moduleType, false).asyncResult;\n      };\n      RuntimeCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n          var componentPromise = this._compileComponents(moduleType, isSync);\n          var ngModuleFactory = this._compileModule(moduleType);\n          return new SyncAsyncResult(ngModuleFactory, componentPromise.then(function () { return ngModuleFactory; }));\n      };\n      RuntimeCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n          var _this = this;\n          var componentPromise = this._compileComponents(moduleType, isSync);\n          var ngModuleFactory = this._compileModule(moduleType);\n          var moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n          var componentFactories = [];\n          var templates = new Set();\n          moduleMeta.transitiveModule.modules.forEach(function (localModuleMeta) {\n              localModuleMeta.declaredDirectives.forEach(function (dirMeta) {\n                  if (dirMeta.isComponent) {\n                      var template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                      templates.add(template);\n                      componentFactories.push(template.proxyComponentFactory);\n                  }\n              });\n          });\n          var syncResult = new _angular_core.ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n          // Note: host components themselves can always be compiled synchronously as they have an\n          // inline template. However, we still need to wait for the components that they\n          // reference to be loaded / compiled.\n          var compile = function () {\n              templates.forEach(function (template) { _this._compileTemplate(template); });\n              return syncResult;\n          };\n          var asyncResult = isSync ? Promise.resolve(compile()) : componentPromise.then(compile);\n          return new SyncAsyncResult(syncResult, asyncResult);\n      };\n      RuntimeCompiler.prototype._compileModule = function (moduleType) {\n          var _this = this;\n          var ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n          if (!ngModuleFactory) {\n              var moduleMeta_1 = this._metadataResolver.getNgModuleMetadata(moduleType);\n              // Always provide a bound Compiler\n              var extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n              var compileResult = this._ngModuleCompiler.compile(moduleMeta_1, extraProviders);\n              compileResult.dependencies.forEach(function (dep) {\n                  dep.placeholder.reference =\n                      _this._assertComponentKnown(dep.comp.reference, true).proxyComponentFactory;\n                  dep.placeholder.name = \"compFactory_\" + dep.comp.name;\n              });\n              if (!this._compilerConfig.useJit) {\n                  ngModuleFactory =\n                      interpretStatements(compileResult.statements, compileResult.ngModuleFactoryVar);\n              }\n              else {\n                  ngModuleFactory = jitStatements(\"/\" + moduleMeta_1.type.name + \"/module.ngfactory.js\", compileResult.statements, compileResult.ngModuleFactoryVar);\n              }\n              this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n          }\n          return ngModuleFactory;\n      };\n      /**\n       * @internal\n       */\n      RuntimeCompiler.prototype._compileComponents = function (mainModule, isSync) {\n          var _this = this;\n          var templates = new Set();\n          var loadingPromises = [];\n          var ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n          var moduleByDirective = new Map();\n          ngModule.transitiveModule.modules.forEach(function (localModuleMeta) {\n              localModuleMeta.declaredDirectives.forEach(function (dirMeta) {\n                  moduleByDirective.set(dirMeta.type.reference, localModuleMeta);\n                  _this._compileDirectiveWrapper(dirMeta, localModuleMeta);\n                  if (dirMeta.isComponent) {\n                      templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                  }\n              });\n          });\n          ngModule.transitiveModule.modules.forEach(function (localModuleMeta) {\n              localModuleMeta.declaredDirectives.forEach(function (dirMeta) {\n                  if (dirMeta.isComponent) {\n                      dirMeta.entryComponents.forEach(function (entryComponentType) {\n                          var moduleMeta = moduleByDirective.get(entryComponentType.reference);\n                          templates.add(_this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n                      });\n                  }\n              });\n              localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                  var moduleMeta = moduleByDirective.get(entryComponentType.reference);\n                  templates.add(_this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n              });\n          });\n          templates.forEach(function (template) {\n              if (template.loading) {\n                  if (isSync) {\n                      throw new ComponentStillLoadingError(template.compType.reference);\n                  }\n                  else {\n                      loadingPromises.push(template.loading);\n                  }\n              }\n          });\n          var compile = function () { templates.forEach(function (template) { _this._compileTemplate(template); }); };\n          if (isSync) {\n              compile();\n              return Promise.resolve(null);\n          }\n          else {\n              return Promise.all(loadingPromises).then(compile);\n          }\n      };\n      RuntimeCompiler.prototype.clearCacheFor = function (type) {\n          this._compiledNgModuleCache.delete(type);\n          this._metadataResolver.clearCacheFor(type);\n          this._compiledHostTemplateCache.delete(type);\n          var compiledTemplate = this._compiledTemplateCache.get(type);\n          if (compiledTemplate) {\n              this._templateNormalizer.clearCacheFor(compiledTemplate.normalizedCompMeta);\n              this._compiledTemplateCache.delete(type);\n          }\n      };\n      RuntimeCompiler.prototype.clearCache = function () {\n          this._metadataResolver.clearCache();\n          this._compiledTemplateCache.clear();\n          this._compiledHostTemplateCache.clear();\n          this._templateNormalizer.clearCache();\n          this._compiledNgModuleCache.clear();\n      };\n      RuntimeCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n          if (!ngModule) {\n              throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n          }\n          var compiledTemplate = this._compiledHostTemplateCache.get(compType);\n          if (!compiledTemplate) {\n              var compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n              assertComponent(compMeta);\n              var hostMeta = createHostComponentMeta(compMeta);\n              compiledTemplate = new CompiledTemplate(true, compMeta.selector, compMeta.type, ngModule, [compMeta], this._templateNormalizer.normalizeDirective(hostMeta));\n              this._compiledHostTemplateCache.set(compType, compiledTemplate);\n          }\n          return compiledTemplate;\n      };\n      RuntimeCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n          var compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n          if (!compiledTemplate) {\n              assertComponent(compMeta);\n              compiledTemplate = new CompiledTemplate(false, compMeta.selector, compMeta.type, ngModule, ngModule.transitiveModule.directives, this._templateNormalizer.normalizeDirective(compMeta));\n              this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n          }\n          return compiledTemplate;\n      };\n      RuntimeCompiler.prototype._assertComponentKnown = function (compType, isHost) {\n          var compiledTemplate = isHost ? this._compiledHostTemplateCache.get(compType) :\n              this._compiledTemplateCache.get(compType);\n          if (!compiledTemplate) {\n              throw new Error(\"Illegal state: Compiled view for component \" + stringify(compType) + \" does not exist!\");\n          }\n          return compiledTemplate;\n      };\n      RuntimeCompiler.prototype._assertComponentLoaded = function (compType, isHost) {\n          var compiledTemplate = this._assertComponentKnown(compType, isHost);\n          if (compiledTemplate.loading) {\n              throw new Error(\"Illegal state: CompiledTemplate for \" + stringify(compType) + \" (isHost: \" + isHost + \") is still loading!\");\n          }\n          return compiledTemplate;\n      };\n      RuntimeCompiler.prototype._assertDirectiveWrapper = function (dirType) {\n          var dirWrapper = this._compiledDirectiveWrapperCache.get(dirType);\n          if (!dirWrapper) {\n              throw new Error(\"Illegal state: Directive wrapper for \" + stringify(dirType) + \" has not been compiled!\");\n          }\n          return dirWrapper;\n      };\n      RuntimeCompiler.prototype._compileDirectiveWrapper = function (dirMeta, moduleMeta) {\n          var compileResult = this._directiveWrapperCompiler.compile(dirMeta);\n          var statements = compileResult.statements;\n          var directiveWrapperClass;\n          if (!this._compilerConfig.useJit) {\n              directiveWrapperClass = interpretStatements(statements, compileResult.dirWrapperClassVar);\n          }\n          else {\n              directiveWrapperClass = jitStatements(\"/\" + moduleMeta.type.name + \"/\" + dirMeta.type.name + \"/wrapper.ngfactory.js\", statements, compileResult.dirWrapperClassVar);\n          }\n          this._compiledDirectiveWrapperCache.set(dirMeta.type.reference, directiveWrapperClass);\n      };\n      RuntimeCompiler.prototype._compileTemplate = function (template) {\n          var _this = this;\n          if (template.isCompiled) {\n              return;\n          }\n          var compMeta = template.normalizedCompMeta;\n          var externalStylesheetsByModuleUrl = new Map();\n          var stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n          stylesCompileResult.externalStylesheets.forEach(function (r) { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n          this._resolveStylesCompileResult(stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n          var viewCompMetas = template.viewComponentTypes.map(function (compType) { return _this._assertComponentLoaded(compType, false).normalizedCompMeta; });\n          var parsedAnimations = this._animationParser.parseComponent(compMeta);\n          var parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template, template.viewDirectives.concat(viewCompMetas), template.viewPipes, template.schemas, compMeta.type.name);\n          var compiledAnimations = this._animationCompiler.compile(compMeta.type.name, parsedAnimations);\n          var compileResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, variable(stylesCompileResult.componentStylesheet.stylesVar), template.viewPipes, compiledAnimations);\n          compileResult.dependencies.forEach(function (dep) {\n              var depTemplate;\n              if (dep instanceof ViewFactoryDependency) {\n                  var vfd = dep;\n                  depTemplate = _this._assertComponentLoaded(vfd.comp.reference, false);\n                  vfd.placeholder.reference = depTemplate.proxyViewFactory;\n                  vfd.placeholder.name = \"viewFactory_\" + vfd.comp.name;\n              }\n              else if (dep instanceof ComponentFactoryDependency) {\n                  var cfd = dep;\n                  depTemplate = _this._assertComponentLoaded(cfd.comp.reference, true);\n                  cfd.placeholder.reference = depTemplate.proxyComponentFactory;\n                  cfd.placeholder.name = \"compFactory_\" + cfd.comp.name;\n              }\n              else if (dep instanceof DirectiveWrapperDependency) {\n                  var dwd = dep;\n                  dwd.placeholder.reference = _this._assertDirectiveWrapper(dwd.dir.reference);\n              }\n          });\n          var statements = stylesCompileResult.componentStylesheet.statements.concat(compileResult.statements);\n          compiledAnimations.forEach(function (entry) { entry.statements.forEach(function (statement) { statements.push(statement); }); });\n          var factory;\n          if (!this._compilerConfig.useJit) {\n              factory = interpretStatements(statements, compileResult.viewFactoryVar);\n          }\n          else {\n              factory = jitStatements(\"/\" + template.ngModule.type.name + \"/\" + template.compType.name + \"/\" + (template.isHost ? 'host' : 'component') + \".ngfactory.js\", statements, compileResult.viewFactoryVar);\n          }\n          template.compiled(factory);\n      };\n      RuntimeCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n          var _this = this;\n          result.dependencies.forEach(function (dep, i) {\n              var nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n              var nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n              dep.valuePlaceholder.reference = nestedStylesArr;\n              dep.valuePlaceholder.name = \"importedStyles\" + i;\n          });\n      };\n      RuntimeCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n          this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n          if (!this._compilerConfig.useJit) {\n              return interpretStatements(result.statements, result.stylesVar);\n          }\n          else {\n              return jitStatements(\"/\" + result.meta.moduleUrl + \".css.js\", result.statements, result.stylesVar);\n          }\n      };\n      RuntimeCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      RuntimeCompiler.ctorParameters = [\n          { type: _angular_core.Injector, },\n          { type: CompileMetadataResolver, },\n          { type: DirectiveNormalizer, },\n          { type: TemplateParser, },\n          { type: StyleCompiler, },\n          { type: ViewCompiler, },\n          { type: NgModuleCompiler, },\n          { type: DirectiveWrapperCompiler, },\n          { type: CompilerConfig, },\n      ];\n      return RuntimeCompiler;\n  }());\n  var CompiledTemplate = (function () {\n      function CompiledTemplate(isHost, selector, compType, ngModule, viewDirectiveAndComponents, _normalizeResult) {\n          var _this = this;\n          this.isHost = isHost;\n          this.compType = compType;\n          this.ngModule = ngModule;\n          this._viewFactory = null;\n          this.loading = null;\n          this._normalizedCompMeta = null;\n          this.isCompiled = false;\n          this.isCompiledWithDeps = false;\n          this.viewComponentTypes = [];\n          this.viewDirectives = [];\n          this.viewPipes = ngModule.transitiveModule.pipes;\n          this.schemas = ngModule.schemas;\n          viewDirectiveAndComponents.forEach(function (dirMeta) {\n              if (dirMeta.isComponent) {\n                  _this.viewComponentTypes.push(dirMeta.type.reference);\n              }\n              else {\n                  _this.viewDirectives.push(dirMeta);\n              }\n          });\n          this.proxyViewFactory = function () {\n              var args = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                  args[_i - 0] = arguments[_i];\n              }\n              if (!_this._viewFactory) {\n                  throw new Error(\"Illegal state: CompiledTemplate for \" + stringify(_this.compType) + \" is not compiled yet!\");\n              }\n              return _this._viewFactory.apply(null, args);\n          };\n          this.proxyComponentFactory = isHost ?\n              new _angular_core.ComponentFactory(selector, this.proxyViewFactory, compType.reference) :\n              null;\n          if (_normalizeResult.syncResult) {\n              this._normalizedCompMeta = _normalizeResult.syncResult;\n          }\n          else {\n              this.loading = _normalizeResult.asyncResult.then(function (normalizedCompMeta) {\n                  _this._normalizedCompMeta = normalizedCompMeta;\n                  _this.loading = null;\n              });\n          }\n      }\n      Object.defineProperty(CompiledTemplate.prototype, \"normalizedCompMeta\", {\n          get: function () {\n              if (this.loading) {\n                  throw new Error(\"Template is still loading for \" + this.compType.name + \"!\");\n              }\n              return this._normalizedCompMeta;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      CompiledTemplate.prototype.compiled = function (viewFactory) {\n          this._viewFactory = viewFactory;\n          this.isCompiled = true;\n      };\n      CompiledTemplate.prototype.depsCompiled = function () { this.isCompiledWithDeps = true; };\n      return CompiledTemplate;\n  }());\n  function assertComponent(meta) {\n      if (!meta.isComponent) {\n          throw new Error(\"Could not compile '\" + meta.type.name + \"' because it is not a component.\");\n      }\n  }\n  /**\n   * Implements `Compiler` by delegating to the RuntimeCompiler using a known module.\n   */\n  var ModuleBoundCompiler = (function () {\n      function ModuleBoundCompiler(_delegate, _ngModule) {\n          this._delegate = _delegate;\n          this._ngModule = _ngModule;\n      }\n      Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n          get: function () { return this._delegate.injector; },\n          enumerable: true,\n          configurable: true\n      });\n      ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n          return this._delegate.compileModuleSync(moduleType);\n      };\n      ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n          return this._delegate.compileModuleAsync(moduleType);\n      };\n      ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n          return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n      };\n      ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n          return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n      };\n      /**\n       * Clears all caches\n       */\n      ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n      /**\n       * Clears the cache for the given component/ngModule.\n       */\n      ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n      return ModuleBoundCompiler;\n  }());\n\n  // =================================================================================================\n  // =================================================================================================\n  // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n  // =================================================================================================\n  // =================================================================================================\n  //\n  //        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n  //                               Reach out to mprobst for details.\n  //\n  // =================================================================================================\n  /** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\n  var SECURITY_SCHEMA = {};\n  function registerContext(ctx, specs) {\n      for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n          var spec = specs_1[_i];\n          SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n      }\n  }\n  // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n  registerContext(_angular_core.SecurityContext.HTML, [\n      'iframe|srcdoc',\n      '*|innerHTML',\n      '*|outerHTML',\n  ]);\n  registerContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n  // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n  registerContext(_angular_core.SecurityContext.URL, [\n      '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n      'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n      'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n      'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n  ]);\n  registerContext(_angular_core.SecurityContext.RESOURCE_URL, [\n      'applet|code',\n      'applet|codebase',\n      'base|href',\n      'embed|src',\n      'frame|src',\n      'head|profile',\n      'html|manifest',\n      'iframe|src',\n      'link|href',\n      'media|src',\n      'object|codebase',\n      'object|data',\n      'script|src',\n  ]);\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$21 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var BOOLEAN = 'boolean';\n  var NUMBER = 'number';\n  var STRING = 'string';\n  var OBJECT = 'object';\n  /**\n   * This array represents the DOM schema. It encodes inheritance, properties, and events.\n   *\n   * ## Overview\n   *\n   * Each line represents one kind of element. The `element_inheritance` and properties are joined\n   * using `element_inheritance|properties` syntax.\n   *\n   * ## Element Inheritance\n   *\n   * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n   * Here the individual elements are separated by `,` (commas). Every element in the list\n   * has identical properties.\n   *\n   * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n   * specified then `\"\"` (blank) element is assumed.\n   *\n   * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n   * elements.\n   *\n   * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n   *\n   * ## Properties\n   *\n   * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n   * by a special character designating its type:\n   *\n   * - (no prefix): property is a string.\n   * - `*`: property represents an event.\n   * - `!`: property is a boolean.\n   * - `#`: property is a number.\n   * - `%`: property is an object.\n   *\n   * ## Query\n   *\n   * The class creates an internal squas representation which allows to easily answer the query of\n   * if a given property exist on a given element.\n   *\n   * NOTE: We don't yet support querying for types or events.\n   * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n   *       see dom_element_schema_registry_spec.ts\n   */\n  // =================================================================================================\n  // =================================================================================================\n  // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n  // =================================================================================================\n  // =================================================================================================\n  //\n  //                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n  //\n  // Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n  // dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n  //\n  // =================================================================================================\n  var SCHEMA = [\n      '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop',\n      '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n      'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n      'media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',\n      ':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n      ':svg:graphics^:svg:|',\n      ':svg:animation^:svg:|*begin,*end,*repeat',\n      ':svg:geometry^:svg:|',\n      ':svg:componentTransferFunction^:svg:|',\n      ':svg:gradient^:svg:|',\n      ':svg:textContent^:svg:graphics|',\n      ':svg:textPositioning^:svg:textContent|',\n      'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n      'area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username',\n      'audio^media|',\n      'br^[HTMLElement]|clear',\n      'base^[HTMLElement]|href,target',\n      'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n      'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n      'canvas^[HTMLElement]|#height,#width',\n      'content^[HTMLElement]|select',\n      'dl^[HTMLElement]|!compact',\n      'datalist^[HTMLElement]|',\n      'details^[HTMLElement]|!open',\n      'dialog^[HTMLElement]|!open,returnValue',\n      'dir^[HTMLElement]|!compact',\n      'div^[HTMLElement]|align',\n      'embed^[HTMLElement]|align,height,name,src,type,width',\n      'fieldset^[HTMLElement]|!disabled,name',\n      'font^[HTMLElement]|color,face,size',\n      'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n      'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n      'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n      'hr^[HTMLElement]|align,color,!noShade,size,width',\n      'head^[HTMLElement]|',\n      'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n      'html^[HTMLElement]|version',\n      'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n      'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n      'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n      'keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name',\n      'li^[HTMLElement]|type,#value',\n      'label^[HTMLElement]|htmlFor',\n      'legend^[HTMLElement]|align',\n      'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type',\n      'map^[HTMLElement]|name',\n      'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n      'menu^[HTMLElement]|!compact',\n      'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n      'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n      'ins,del^[HTMLElement]|cite,dateTime',\n      'ol^[HTMLElement]|!compact,!reversed,#start,type',\n      'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n      'optgroup^[HTMLElement]|!disabled,label',\n      'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n      'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n      'p^[HTMLElement]|align',\n      'param^[HTMLElement]|name,type,value,valueType',\n      'picture^[HTMLElement]|',\n      'pre^[HTMLElement]|#width',\n      'progress^[HTMLElement]|#max,#value',\n      'q,blockquote,cite^[HTMLElement]|',\n      'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n      'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n      'shadow^[HTMLElement]|',\n      'source^[HTMLElement]|media,sizes,src,srcset,type',\n      'span^[HTMLElement]|',\n      'style^[HTMLElement]|!disabled,media,type',\n      'caption^[HTMLElement]|align',\n      'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n      'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n      'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n      'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n      'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n      'template^[HTMLElement]|',\n      'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n      'title^[HTMLElement]|text',\n      'track^[HTMLElement]|!default,kind,label,src,srclang',\n      'ul^[HTMLElement]|!compact,type',\n      'unknown^[HTMLElement]|',\n      'video^media|#height,poster,#width',\n      ':svg:a^:svg:graphics|',\n      ':svg:animate^:svg:animation|',\n      ':svg:animateMotion^:svg:animation|',\n      ':svg:animateTransform^:svg:animation|',\n      ':svg:circle^:svg:geometry|',\n      ':svg:clipPath^:svg:graphics|',\n      ':svg:cursor^:svg:|',\n      ':svg:defs^:svg:graphics|',\n      ':svg:desc^:svg:|',\n      ':svg:discard^:svg:|',\n      ':svg:ellipse^:svg:geometry|',\n      ':svg:feBlend^:svg:|',\n      ':svg:feColorMatrix^:svg:|',\n      ':svg:feComponentTransfer^:svg:|',\n      ':svg:feComposite^:svg:|',\n      ':svg:feConvolveMatrix^:svg:|',\n      ':svg:feDiffuseLighting^:svg:|',\n      ':svg:feDisplacementMap^:svg:|',\n      ':svg:feDistantLight^:svg:|',\n      ':svg:feDropShadow^:svg:|',\n      ':svg:feFlood^:svg:|',\n      ':svg:feFuncA^:svg:componentTransferFunction|',\n      ':svg:feFuncB^:svg:componentTransferFunction|',\n      ':svg:feFuncG^:svg:componentTransferFunction|',\n      ':svg:feFuncR^:svg:componentTransferFunction|',\n      ':svg:feGaussianBlur^:svg:|',\n      ':svg:feImage^:svg:|',\n      ':svg:feMerge^:svg:|',\n      ':svg:feMergeNode^:svg:|',\n      ':svg:feMorphology^:svg:|',\n      ':svg:feOffset^:svg:|',\n      ':svg:fePointLight^:svg:|',\n      ':svg:feSpecularLighting^:svg:|',\n      ':svg:feSpotLight^:svg:|',\n      ':svg:feTile^:svg:|',\n      ':svg:feTurbulence^:svg:|',\n      ':svg:filter^:svg:|',\n      ':svg:foreignObject^:svg:graphics|',\n      ':svg:g^:svg:graphics|',\n      ':svg:image^:svg:graphics|',\n      ':svg:line^:svg:geometry|',\n      ':svg:linearGradient^:svg:gradient|',\n      ':svg:mpath^:svg:|',\n      ':svg:marker^:svg:|',\n      ':svg:mask^:svg:|',\n      ':svg:metadata^:svg:|',\n      ':svg:path^:svg:geometry|',\n      ':svg:pattern^:svg:|',\n      ':svg:polygon^:svg:geometry|',\n      ':svg:polyline^:svg:geometry|',\n      ':svg:radialGradient^:svg:gradient|',\n      ':svg:rect^:svg:geometry|',\n      ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n      ':svg:script^:svg:|type',\n      ':svg:set^:svg:animation|',\n      ':svg:stop^:svg:|',\n      ':svg:style^:svg:|!disabled,media,title,type',\n      ':svg:switch^:svg:graphics|',\n      ':svg:symbol^:svg:|',\n      ':svg:tspan^:svg:textPositioning|',\n      ':svg:text^:svg:textPositioning|',\n      ':svg:textPath^:svg:textContent|',\n      ':svg:title^:svg:|',\n      ':svg:use^:svg:graphics|',\n      ':svg:view^:svg:|#zoomAndPan',\n      'data^[HTMLElement]|value',\n      'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n      'summary^[HTMLElement]|',\n      'time^[HTMLElement]|dateTime',\n  ];\n  var _ATTR_TO_PROP = {\n      'class': 'className',\n      'formaction': 'formAction',\n      'innerHtml': 'innerHTML',\n      'readonly': 'readOnly',\n      'tabindex': 'tabIndex',\n  };\n  var DomElementSchemaRegistry = (function (_super) {\n      __extends$21(DomElementSchemaRegistry, _super);\n      function DomElementSchemaRegistry() {\n          var _this = this;\n          _super.call(this);\n          this._schema = {};\n          SCHEMA.forEach(function (encodedType) {\n              var type = {};\n              var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n              var properties = strProperties.split(',');\n              var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n              typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n              var superType = superName && _this._schema[superName.toLowerCase()];\n              if (superType) {\n                  Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n              }\n              properties.forEach(function (property) {\n                  if (property.length > 0) {\n                      switch (property[0]) {\n                          case '*':\n                              // We don't yet support events.\n                              // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                              // will\n                              // almost certainly introduce bad XSS vulnerabilities.\n                              // type[property.substring(1)] = EVENT;\n                              break;\n                          case '!':\n                              type[property.substring(1)] = BOOLEAN;\n                              break;\n                          case '#':\n                              type[property.substring(1)] = NUMBER;\n                              break;\n                          case '%':\n                              type[property.substring(1)] = OBJECT;\n                              break;\n                          default:\n                              type[property] = STRING;\n                      }\n                  }\n              });\n          });\n      }\n      DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n          if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n              return true;\n          }\n          if (tagName.indexOf('-') > -1) {\n              if (tagName === 'ng-container' || tagName === 'ng-content') {\n                  return false;\n              }\n              if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                  // Can't tell now as we don't know which properties a custom element will get\n                  // once it is instantiated\n                  return true;\n              }\n          }\n          var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n          return !!elementProperties[propName];\n      };\n      DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n          if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n              return true;\n          }\n          if (tagName.indexOf('-') > -1) {\n              if (tagName === 'ng-container' || tagName === 'ng-content') {\n                  return true;\n              }\n              if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                  // Allow any custom elements\n                  return true;\n              }\n          }\n          return !!this._schema[tagName.toLowerCase()];\n      };\n      /**\n       * securityContext returns the security context for the given property on the given DOM tag.\n       *\n       * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n       * possible to bind a value into a changing attribute or tag name.\n       *\n       * The filtering is white list based. All attributes in the schema above are assumed to have the\n       * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n       * attack vectors are assigned their appropriate context.\n       */\n      DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n          if (isAttribute) {\n              // NB: For security purposes, use the mapped property name, not the attribute name.\n              propName = this.getMappedPropName(propName);\n          }\n          // Make sure comparisons are case insensitive, so that case differences between attribute and\n          // property names do not have a security impact.\n          tagName = tagName.toLowerCase();\n          propName = propName.toLowerCase();\n          var ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n          if (ctx) {\n              return ctx;\n          }\n          ctx = SECURITY_SCHEMA['*|' + propName];\n          return ctx ? ctx : _angular_core.SecurityContext.NONE;\n      };\n      DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n      DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n      DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n          if (name.toLowerCase().startsWith('on')) {\n              var msg = (\"Binding to event property '\" + name + \"' is disallowed for security reasons, \") +\n                  (\"please use (\" + name.slice(2) + \")=...\") +\n                  (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                  \" current module.\";\n              return { error: true, msg: msg };\n          }\n          else {\n              return { error: false };\n          }\n      };\n      DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n          if (name.toLowerCase().startsWith('on')) {\n              var msg = (\"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \") +\n                  (\"please use (\" + name.slice(2) + \")=...\");\n              return { error: true, msg: msg };\n          }\n          else {\n              return { error: false };\n          }\n      };\n      DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n      DomElementSchemaRegistry.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      DomElementSchemaRegistry.ctorParameters = [];\n      return DomElementSchemaRegistry;\n  }(ElementSchemaRegistry));\n\n  var _NO_RESOURCE_LOADER = {\n      get: function (url) {\n          throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n      }\n  };\n  /**\n   * A set of providers that provide `RuntimeCompiler` and its dependencies to use for\n   * template compilation.\n   */\n  var COMPILER_PROVIDERS = [\n      { provide: Reflector, useValue: reflector },\n      { provide: ReflectorReader, useExisting: Reflector },\n      { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n      Console,\n      Lexer,\n      Parser,\n      HtmlParser,\n      {\n          provide: I18NHtmlParser,\n          useFactory: function (parser, translations, format) {\n              return new I18NHtmlParser(parser, translations, format);\n          },\n          deps: [\n              HtmlParser,\n              [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n              [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n          ]\n      },\n      TemplateParser,\n      DirectiveNormalizer,\n      CompileMetadataResolver,\n      DEFAULT_PACKAGE_URL_PROVIDER,\n      StyleCompiler,\n      ViewCompiler,\n      NgModuleCompiler,\n      DirectiveWrapperCompiler,\n      { provide: CompilerConfig, useValue: new CompilerConfig() },\n      RuntimeCompiler,\n      { provide: _angular_core.Compiler, useExisting: RuntimeCompiler },\n      DomElementSchemaRegistry,\n      { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n      UrlResolver,\n      DirectiveResolver,\n      PipeResolver,\n      NgModuleResolver\n  ];\n  var RuntimeCompilerFactory = (function () {\n      function RuntimeCompilerFactory(defaultOptions) {\n          this._defaultOptions = [{\n                  useDebug: _angular_core.isDevMode(),\n                  useJit: true,\n                  defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated\n              }].concat(defaultOptions);\n      }\n      RuntimeCompilerFactory.prototype.createCompiler = function (options) {\n          if (options === void 0) { options = []; }\n          var mergedOptions = _mergeOptions(this._defaultOptions.concat(options));\n          var injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n              COMPILER_PROVIDERS, {\n                  provide: CompilerConfig,\n                  useFactory: function () {\n                      return new CompilerConfig({\n                          // let explicit values from the compiler options overwrite options\n                          // from the app providers. E.g. important for the testing platform.\n                          genDebugInfo: mergedOptions.useDebug,\n                          // let explicit values from the compiler options overwrite options\n                          // from the app providers\n                          useJit: mergedOptions.useJit,\n                          // let explicit values from the compiler options overwrite options\n                          // from the app providers\n                          defaultEncapsulation: mergedOptions.defaultEncapsulation,\n                          logBindingUpdate: mergedOptions.useDebug\n                      });\n                  },\n                  deps: []\n              },\n              mergedOptions.providers\n          ]);\n          return injector.get(_angular_core.Compiler);\n      };\n      RuntimeCompilerFactory.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      RuntimeCompilerFactory.ctorParameters = [\n          { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n      ];\n      return RuntimeCompilerFactory;\n  }());\n  function _initReflector() {\n      reflector.reflectionCapabilities = new ReflectionCapabilities();\n  }\n  /**\n   * A platform that included corePlatform and the compiler.\n   *\n   * @experimental\n   */\n  var platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n      { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n      { provide: _angular_core.CompilerFactory, useClass: RuntimeCompilerFactory },\n      { provide: _angular_core.PLATFORM_INITIALIZER, useValue: _initReflector, multi: true },\n  ]);\n  function _mergeOptions(optionsArr) {\n      return {\n          useDebug: _lastDefined(optionsArr.map(function (options) { return options.useDebug; })),\n          useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n          defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n          providers: _mergeArrays(optionsArr.map(function (options) { return options.providers; }))\n      };\n  }\n  function _lastDefined(args) {\n      for (var i = args.length - 1; i >= 0; i--) {\n          if (args[i] !== undefined) {\n              return args[i];\n          }\n      }\n      return undefined;\n  }\n  function _mergeArrays(parts) {\n      var result = [];\n      parts.forEach(function (part) { return part && result.push.apply(result, part); });\n      return result;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  // asset:<package-name>/<realm>/<path-to-module>\n  var _ASSET_URL_RE = /asset:([^\\/]+)\\/([^\\/]+)\\/(.+)/;\n  /**\n   * Interface that defines how import statements should be generated.\n   */\n  var ImportGenerator = (function () {\n      function ImportGenerator() {\n      }\n      ImportGenerator.parseAssetUrl = function (url) { return AssetUrl.parse(url); };\n      return ImportGenerator;\n  }());\n  var AssetUrl = (function () {\n      function AssetUrl(packageName, firstLevelDir, modulePath) {\n          this.packageName = packageName;\n          this.firstLevelDir = firstLevelDir;\n          this.modulePath = modulePath;\n      }\n      AssetUrl.parse = function (url, allowNonMatching) {\n          if (allowNonMatching === void 0) { allowNonMatching = true; }\n          var match = url.match(_ASSET_URL_RE);\n          if (match !== null) {\n              return new AssetUrl(match[1], match[2], match[3]);\n          }\n          if (allowNonMatching) {\n              return null;\n          }\n          throw new Error(\"Url \" + url + \" is not a valid asset: url\");\n      };\n      return AssetUrl;\n  }());\n\n  exports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\n  exports.CompilerConfig = CompilerConfig;\n  exports.RenderTypes = RenderTypes;\n  exports.RuntimeCompiler = RuntimeCompiler;\n  exports.DirectiveResolver = DirectiveResolver;\n  exports.PipeResolver = PipeResolver;\n  exports.NgModuleResolver = NgModuleResolver;\n  exports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\n  exports.InterpolationConfig = InterpolationConfig;\n  exports.NgModuleCompiler = NgModuleCompiler;\n  exports.DirectiveWrapperCompiler = DirectiveWrapperCompiler;\n  exports.ViewCompiler = ViewCompiler;\n  exports.TextAst = TextAst;\n  exports.BoundTextAst = BoundTextAst;\n  exports.AttrAst = AttrAst;\n  exports.BoundElementPropertyAst = BoundElementPropertyAst;\n  exports.BoundEventAst = BoundEventAst;\n  exports.ReferenceAst = ReferenceAst;\n  exports.VariableAst = VariableAst;\n  exports.ElementAst = ElementAst;\n  exports.EmbeddedTemplateAst = EmbeddedTemplateAst;\n  exports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\n  exports.DirectiveAst = DirectiveAst;\n  exports.ProviderAst = ProviderAst;\n  exports.NgContentAst = NgContentAst;\n  exports.templateVisitAll = templateVisitAll;\n  exports.CompileMetadataWithIdentifier = CompileMetadataWithIdentifier;\n  exports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\n  exports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\n  exports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\n  exports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\n  exports.CompileAnimationMetadata = CompileAnimationMetadata;\n  exports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\n  exports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\n  exports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\n  exports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\n  exports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\n  exports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\n  exports.CompileIdentifierMetadata = CompileIdentifierMetadata;\n  exports.CompileDiDependencyMetadata = CompileDiDependencyMetadata;\n  exports.CompileProviderMetadata = CompileProviderMetadata;\n  exports.CompileFactoryMetadata = CompileFactoryMetadata;\n  exports.CompileTokenMetadata = CompileTokenMetadata;\n  exports.CompileTypeMetadata = CompileTypeMetadata;\n  exports.CompileQueryMetadata = CompileQueryMetadata;\n  exports.CompileStylesheetMetadata = CompileStylesheetMetadata;\n  exports.CompileTemplateMetadata = CompileTemplateMetadata;\n  exports.CompileDirectiveMetadata = CompileDirectiveMetadata;\n  exports.createHostComponentMeta = createHostComponentMeta;\n  exports.CompilePipeMetadata = CompilePipeMetadata;\n  exports.CompileNgModuleMetadata = CompileNgModuleMetadata;\n  exports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\n  exports.removeIdentifierDuplicates = removeIdentifierDuplicates;\n  exports.isStaticSymbol = isStaticSymbol;\n  exports.ProviderMeta = ProviderMeta;\n  exports.SourceModule = SourceModule;\n  exports.analyzeNgModules = analyzeNgModules;\n  exports.OfflineCompiler = OfflineCompiler;\n  exports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\n  exports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\n  exports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\n  exports.UrlResolver = UrlResolver;\n  exports.getUrlScheme = getUrlScheme;\n  exports.ResourceLoader = ResourceLoader;\n  exports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\n  exports.RuntimeCompilerFactory = RuntimeCompilerFactory;\n  exports.platformCoreDynamic = platformCoreDynamic;\n  exports.ElementSchemaRegistry = ElementSchemaRegistry;\n  exports.I18NHtmlParser = I18NHtmlParser;\n  exports.MessageBundle = MessageBundle;\n  exports.Xliff = Xliff;\n  exports.Xmb = Xmb;\n  exports.Xtb = Xtb;\n  exports.DirectiveNormalizer = DirectiveNormalizer;\n  exports.Lexer = Lexer;\n  exports.Token = Token;\n  exports.EOF = EOF;\n  exports.isIdentifier = isIdentifier;\n  exports.isQuote = isQuote;\n  exports.SplitInterpolation = SplitInterpolation;\n  exports.TemplateBindingParseResult = TemplateBindingParseResult;\n  exports.Parser = Parser;\n  exports._ParseAST = _ParseAST;\n  exports.CompileMetadataResolver = CompileMetadataResolver;\n  exports.HtmlParser = HtmlParser;\n  exports.ParseTreeResult = ParseTreeResult;\n  exports.TreeError = TreeError;\n  exports.ImportGenerator = ImportGenerator;\n  exports.AssetUrl = AssetUrl;\n  exports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\n  exports.TypeScriptEmitter = TypeScriptEmitter;\n  exports.ParseLocation = ParseLocation;\n  exports.ParseSourceFile = ParseSourceFile;\n  exports.ParseSourceSpan = ParseSourceSpan;\n  exports.ParseError = ParseError;\n  exports.DomElementSchemaRegistry = DomElementSchemaRegistry;\n  exports.CssSelector = CssSelector;\n  exports.SelectorMatcher = SelectorMatcher;\n  exports.SelectorListContext = SelectorListContext;\n  exports.SelectorContext = SelectorContext;\n  exports.StylesCompileDependency = StylesCompileDependency;\n  exports.StylesCompileResult = StylesCompileResult;\n  exports.CompiledStylesheet = CompiledStylesheet;\n  exports.StyleCompiler = StyleCompiler;\n  exports.TemplateParseError = TemplateParseError;\n  exports.TemplateParseResult = TemplateParseResult;\n  exports.TemplateParser = TemplateParser;\n  exports.splitClasses = splitClasses;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/compiler/bundles/compiler.umd.js\n// module id = 88\n// module chunks = 0 2","/**\n * @license Angular v2.1.2\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Subject'), require('rxjs/Observable')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'rxjs/Subject', 'rxjs/Observable'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}),global.Rx,global.Rx));\n}(this, function (exports,rxjs_Subject,rxjs_Observable) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    function scheduleMicroTask(fn) {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var global$1 = globalScope;\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    global$1.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    function isPresent(obj) {\n        return obj != null;\n    }\n    function isBlank(obj) {\n        return obj == null;\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token === undefined || token === null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return token.overriddenName;\n        }\n        if (token.name) {\n            return token.name;\n        }\n        var res = token.toString();\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    function print(obj) {\n        console.log(obj);\n    }\n    function warn(obj) {\n        console.warn(obj);\n    }\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            if (globalScope.Symbol && Symbol.iterator) {\n                _symbolIterator = Symbol.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    var _nextClassId = 0;\n    var Reflect = global$1.Reflect;\n    function extractAnnotation(annotation) {\n        if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n            // it is a decorator, extract annotation\n            annotation = annotation.annotation;\n        }\n        return annotation;\n    }\n    function applyParams(fnOrArray, key) {\n        if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n            fnOrArray === Number || fnOrArray === Array) {\n            throw new Error(\"Can not use native \" + stringify(fnOrArray) + \" as constructor\");\n        }\n        if (typeof fnOrArray === 'function') {\n            return fnOrArray;\n        }\n        if (Array.isArray(fnOrArray)) {\n            var annotations = fnOrArray;\n            var annoLength = annotations.length - 1;\n            var fn = fnOrArray[annoLength];\n            if (typeof fn !== 'function') {\n                throw new Error(\"Last position of Class method array must be Function in key \" + key + \" was '\" + stringify(fn) + \"'\");\n            }\n            if (annoLength != fn.length) {\n                throw new Error(\"Number of annotations (\" + annoLength + \") does not match number of arguments (\" + fn.length + \") in the function: \" + stringify(fn));\n            }\n            var paramsAnnotations = [];\n            for (var i = 0, ii = annotations.length - 1; i < ii; i++) {\n                var paramAnnotations = [];\n                paramsAnnotations.push(paramAnnotations);\n                var annotation = annotations[i];\n                if (Array.isArray(annotation)) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        paramAnnotations.push(extractAnnotation(annotation[j]));\n                    }\n                }\n                else if (typeof annotation === 'function') {\n                    paramAnnotations.push(extractAnnotation(annotation));\n                }\n                else {\n                    paramAnnotations.push(annotation);\n                }\n            }\n            Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n            return fn;\n        }\n        throw new Error(\"Only Function or Array is supported in Class definition for key '\" + key + \"' is '\" + stringify(fnOrArray) + \"'\");\n    }\n    /**\n     * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n     *\n     * ## Basic Example\n     *\n     * ```\n     * var Greeter = ng.Class({\n     *   constructor: function(name) {\n     *     this.name = name;\n     *   },\n     *\n     *   greet: function() {\n     *     alert('Hello ' + this.name + '!');\n     *   }\n     * });\n     * ```\n     *\n     * is equivalent to ES6:\n     *\n     * ```\n     * class Greeter {\n     *   constructor(name) {\n     *     this.name = name;\n     *   }\n     *\n     *   greet() {\n     *     alert('Hello ' + this.name + '!');\n     *   }\n     * }\n     * ```\n     *\n     * or equivalent to ES5:\n     *\n     * ```\n     * var Greeter = function (name) {\n     *   this.name = name;\n     * }\n     *\n     * Greeter.prototype.greet = function () {\n     *   alert('Hello ' + this.name + '!');\n     * }\n     * ```\n     *\n     * ### Example with parameter annotations\n     *\n     * ```\n     * var MyService = ng.Class({\n     *   constructor: [String, [new Optional(), Service], function(name, myService) {\n     *     ...\n     *   }]\n     * });\n     * ```\n     *\n     * is equivalent to ES6:\n     *\n     * ```\n     * class MyService {\n     *   constructor(name: string, @Optional() myService: Service) {\n     *     ...\n     *   }\n     * }\n     * ```\n     *\n     * ### Example with inheritance\n     *\n     * ```\n     * var Shape = ng.Class({\n     *   constructor: (color) {\n     *     this.color = color;\n     *   }\n     * });\n     *\n     * var Square = ng.Class({\n     *   extends: Shape,\n     *   constructor: function(color, size) {\n     *     Shape.call(this, color);\n     *     this.size = size;\n     *   }\n     * });\n     * ```\n     * @stable\n     */\n    function Class(clsDef) {\n        var constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n        var proto = constructor.prototype;\n        if (clsDef.hasOwnProperty('extends')) {\n            if (typeof clsDef.extends === 'function') {\n                constructor.prototype = proto =\n                    Object.create(clsDef.extends.prototype);\n            }\n            else {\n                throw new Error(\"Class definition 'extends' property must be a constructor function was: \" + stringify(clsDef.extends));\n            }\n        }\n        for (var key in clsDef) {\n            if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n                proto[key] = applyParams(clsDef[key], key);\n            }\n        }\n        if (this && this.annotations instanceof Array) {\n            Reflect.defineMetadata('annotations', this.annotations, constructor);\n        }\n        var constructorName = constructor['name'];\n        if (!constructorName || constructorName === 'constructor') {\n            constructor['overriddenName'] = \"class\" + _nextClassId++;\n        }\n        return constructor;\n    }\n    function makeDecorator(name, props, parentClass, chainFn) {\n        if (chainFn === void 0) { chainFn = null; }\n        var metaCtor = makeMetadataCtor([props]);\n        function DecoratorFactory(objOrType) {\n            if (!(Reflect && Reflect.getMetadata)) {\n                throw 'reflect-metadata shim is required when using class decorators';\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call(this, objOrType);\n                return this;\n            }\n            var annotationInstance = new DecoratorFactory(objOrType);\n            var chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n            chainAnnotation.push(annotationInstance);\n            var TypeDecorator = function TypeDecorator(cls) {\n                var annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n                annotations.push(annotationInstance);\n                Reflect.defineMetadata('annotations', annotations, cls);\n                return cls;\n            };\n            TypeDecorator.annotations = chainAnnotation;\n            TypeDecorator.Class = Class;\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            props.forEach(function (prop, i) {\n                var argVal = args[i];\n                if (Array.isArray(prop)) {\n                    // plain parameter\n                    _this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n                }\n                else {\n                    for (var propName in prop) {\n                        _this[propName] =\n                            argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n                    }\n                }\n            });\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                var parameters = Reflect.getMetadata('parameters', cls) || [];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                parameters[index] = parameters[index] || [];\n                parameters[index].push(annotationInstance);\n                Reflect.defineMetadata('parameters', parameters, cls);\n                return cls;\n            }\n            var _a;\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n            return function PropDecorator(target, name) {\n                var meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                Reflect.defineMetadata('propMetadata', meta, target.constructor);\n            };\n            var _a;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * Inject decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', [['token', undefined]]);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional', []);\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Injectable = makeParamDecorator('Injectable', []);\n    /**\n     * Self decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self', []);\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf', []);\n    /**\n     * Host decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host', []);\n\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n     *\n     * ```typescript\n     * var t = new OpaqueToken(\"value\");\n     *\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: t, useValue: \"bindingValue\"}\n     * ]);\n     *\n     * expect(injector.get(t)).toEqual(\"bindingValue\");\n     * ```\n     *\n     * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n     * caused by multiple providers using the same string as two different tokens.\n     *\n     * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n     * error messages.\n     * @stable\n     */\n    // so that metadata is gathered for this class\n    var OpaqueToken = (function () {\n        function OpaqueToken(_desc) {\n            this._desc = _desc;\n        }\n        OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n        OpaqueToken.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        OpaqueToken.ctorParameters = [\n            null,\n        ];\n        return OpaqueToken;\n    }());\n\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new OpaqueToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', [['attributeName', undefined]]);\n    /**\n     * Base class for query metadata.\n     *\n     * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n     * more information.\n     *\n     * @stable\n     */\n    var Query = (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *  @stable\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', [\n        ['selector', undefined], {\n            first: false,\n            isViewQuery: false,\n            descendants: false,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * @whatItDoes Configures a content query.\n     *\n     * @howToUse\n     *\n     * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n     *\n     * @description\n     *\n     * You can use ContentChild to get the first element or the directive matching the selector from the\n     * content DOM. If the content DOM changes, and a new child matches the selector,\n     * the property will be updated.\n     *\n     * Content queries are set before the `ngAfterContentInit` callback is called.\n     *\n     * **Metadata Properties**:\n     *\n     * * **selector** - the directive type or the name used for querying.\n     * * **read** - read a different token from the queried element.\n     *\n     * Let's look at an example:\n     *\n     * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/core`\n     *\n     * @stable\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', [\n        ['selector', undefined], {\n            first: true,\n            isViewQuery: false,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * @whatItDoes Configures a view query.\n     *\n     * @howToUse\n     *\n     * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n     *\n     * @description\n     *\n     * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n     * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n     * and the changes observable of the query list will emit a new value.\n     *\n     * View queries are set before the `ngAfterViewInit` callback is called.\n     *\n     * **Metadata Properties**:\n     *\n     * * **selector** - the directive type or the name used for querying.\n     * * **read** - read a different token from the queried elements.\n     *\n     * Let's look at an example:\n     *\n     * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/core`\n     *\n     * @stable\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', [\n        ['selector', undefined], {\n            first: false,\n            isViewQuery: true,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', [\n        ['selector', undefined], {\n            first: true,\n            isViewQuery: true,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n\n    /**\n     * Describes within the change detector which strategy will be used the next time change\n     * detection is triggered.\n     * @stable\n     */\n    exports.ChangeDetectionStrategy;\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    /**\n     * Describes the status of the detector.\n     */\n    var ChangeDetectorStatus;\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckedOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(ChangeDetectorStatus || (ChangeDetectorStatus = {}));\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return isBlank(changeDetectionStrategy) ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * Directive decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Directive = makeDecorator('Directive', {\n        selector: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        host: undefined,\n        providers: undefined,\n        exportAs: undefined,\n        queries: undefined\n    });\n    /**\n     * Component decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', {\n        selector: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        host: undefined,\n        exportAs: undefined,\n        moduleId: undefined,\n        providers: undefined,\n        viewProviders: undefined,\n        changeDetection: exports.ChangeDetectionStrategy.Default,\n        queries: undefined,\n        templateUrl: undefined,\n        template: undefined,\n        styleUrls: undefined,\n        styles: undefined,\n        animations: undefined,\n        encapsulation: undefined,\n        interpolation: undefined,\n        entryComponents: undefined\n    }, Directive);\n    /**\n     * Pipe decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', {\n        name: undefined,\n        pure: true,\n    });\n    /**\n     * Input decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n    /**\n     * Output decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n    /**\n     * HostBinding decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n    /**\n     * HostBinding decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @stable\n     */\n    var LifecycleHooks;\n    (function (LifecycleHooks) {\n        LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\n        LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\n        LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\n        LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\n        LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\n        LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\n        LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\n        LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\n    })(LifecycleHooks || (LifecycleHooks = {}));\n    var LIFECYCLE_HOOKS_VALUES = [\n        LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n        LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n        LifecycleHooks.AfterViewChecked\n    ];\n    /**\n     * @whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n     *\n     * @description\n     * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n     * and content children are checked if at least one of them has changed.\n     * The `changes` parameter contains the changed properties.\n     *\n     * See {@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var OnChanges = (function () {\n        function OnChanges() {\n        }\n        return OnChanges;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n     * initialized.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n     *\n     * @description\n     * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n     * first time, and before any of its children have been checked. It is invoked only once when the\n     * directive is instantiated.\n     *\n     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var OnInit = (function () {\n        function OnInit() {\n        }\n        return OnInit;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n     *\n     * @description\n     * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n     * algorithm. The default change detection algorithm looks for differences by comparing\n     * bound-property values by reference across change detection runs.\n     *\n     * Note that a directive typically should not use both `DoCheck` and {@link OnChanges} to respond to\n     * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n     * detector detects changes.\n     *\n     * See {@link KeyValueDiffers} and {@link IterableDiffers} for implementing custom dirty checking\n     * for collections.\n     *\n     * See {@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var DoCheck = (function () {\n        function DoCheck() {\n        }\n        return DoCheck;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called when a directive or pipe is destroyed.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n     *\n     * @description\n     * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n     * instance is destroyed.\n     *\n     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var OnDestroy = (function () {\n        function OnDestroy() {\n        }\n        return OnDestroy;\n    }());\n    /**\n     *\n     * @whatItDoes Lifecycle hook that is called after a directive's content has been fully\n     * initialized.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterContentInit = (function () {\n        function AfterContentInit() {\n        }\n        return AfterContentInit;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after every check of a directive's content.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterContentChecked = (function () {\n        function AfterContentChecked() {\n        }\n        return AfterContentChecked;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after a component's view has been fully\n     * initialized.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterViewInit = (function () {\n        function AfterViewInit() {\n        }\n        return AfterViewInit;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after every check of a component's view.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterViewChecked = (function () {\n        function AfterViewChecked() {\n        }\n        return AfterViewChecked;\n    }());\n\n    /**\n     * Defines a schema that will allow:\n     * - any non-Angular elements with a `-` in their name,\n     * - any properties on elements with a `-` in their name which is the common rule for custom\n     * elements.\n     *\n     * @stable\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that will allow any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * NgModule decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', {\n        providers: undefined,\n        declarations: undefined,\n        imports: undefined,\n        exports: undefined,\n        entryComponents: undefined,\n        bootstrap: undefined,\n        schemas: undefined,\n        id: undefined,\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines template and style encapsulation options available for Component's {@link Component}.\n     *\n     * See {@link ViewMetadata#encapsulation}.\n     * @stable\n     */\n    exports.ViewEncapsulation;\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via\n         * {@link ViewMetadata#styles} or {@link ViewMetadata#stylesUrls}, and adding the new Host Element\n         * attribute to all selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n    /**\n     * Metadata properties available for configuring Views.\n     *\n     * For details on the `@Component` annotation, see {@link Component}.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   selector: 'greet',\n     *   template: 'Hello {{name}}!',\n     * })\n     * class Greet {\n     *   name: string;\n     *\n     *   constructor() {\n     *     this.name = 'World';\n     *   }\n     * }\n     * ```\n     *\n     * @deprecated Use Component instead.\n     *\n     * {@link Component}\n     */\n    var ViewMetadata = (function () {\n        function ViewMetadata(_a) {\n            var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n            this.templateUrl = templateUrl;\n            this.template = template;\n            this.styleUrls = styleUrls;\n            this.styles = styles;\n            this.encapsulation = encapsulation;\n            this.animations = animations;\n            this.interpolation = interpolation;\n        }\n        return ViewMetadata;\n    }());\n\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared,\n     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n     * yet defined.\n     *\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * See: {@link forwardRef}\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function unimplemented() {\n        throw new Error('unimplemented');\n    }\n    /**\n     * @stable\n     */\n    var BaseError = (function (_super) {\n        __extends(BaseError, _super);\n        function BaseError(message) {\n            // Errors don't use current this, instead they create a new instance.\n            // We have to do forward all of our api to the nativeInstance.\n            var nativeError = _super.call(this, message);\n            this._nativeError = nativeError;\n        }\n        Object.defineProperty(BaseError.prototype, \"message\", {\n            get: function () { return this._nativeError.message; },\n            set: function (message) { this._nativeError.message = message; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"name\", {\n            get: function () { return this._nativeError.name; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"stack\", {\n            get: function () { return this._nativeError.stack; },\n            set: function (value) { this._nativeError.stack = value; },\n            enumerable: true,\n            configurable: true\n        });\n        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n        return BaseError;\n    }(Error));\n    /**\n     * @stable\n     */\n    var WrappedError = (function (_super) {\n        __extends(WrappedError, _super);\n        function WrappedError(message, error) {\n            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n            this.originalError = error;\n        }\n        Object.defineProperty(WrappedError.prototype, \"stack\", {\n            get: function () {\n                return (this.originalError instanceof Error ? this.originalError : this._nativeError)\n                    .stack;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return WrappedError;\n    }(BaseError));\n\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var _NullInjector = (function () {\n        function _NullInjector() {\n        }\n        _NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                throw new Error(\"No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return _NullInjector;\n    }());\n    /**\n     * @whatItDoes Injector interface\n     * @howToUse\n     * ```\n     * const injector: Injector = ...;\n     * injector.get(...);\n     * ```\n     *\n     * @description\n     * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @stable\n     */\n    var Injector = (function () {\n        function Injector() {\n        }\n        /**\n         * Retrieves an instance from the injector based on the provided token.\n         * If not found:\n         * - Throws {@link NoProviderError} if no `notFoundValue` that is not equal to\n         * Injector.THROW_IF_NOT_FOUND is given\n         * - Returns the `notFoundValue` otherwise\n         */\n        Injector.prototype.get = function (token, notFoundValue) { return unimplemented(); };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new _NullInjector();\n        return Injector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    /**\n     * Base class for all errors arising from misconfigured providers.\n     * @stable\n     */\n    var AbstractProviderError = (function (_super) {\n        __extends$1(AbstractProviderError, _super);\n        function AbstractProviderError(injector, key, constructResolvingMessage) {\n            _super.call(this, 'DI Error');\n            this.keys = [key];\n            this.injectors = [injector];\n            this.constructResolvingMessage = constructResolvingMessage;\n            this.message = this.constructResolvingMessage(this.keys);\n        }\n        AbstractProviderError.prototype.addKey = function (injector, key) {\n            this.injectors.push(injector);\n            this.keys.push(key);\n            this.message = this.constructResolvingMessage(this.keys);\n        };\n        return AbstractProviderError;\n    }(BaseError));\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     * @stable\n     */\n    var NoProviderError = (function (_super) {\n        __extends$1(NoProviderError, _super);\n        function NoProviderError(injector, key) {\n            _super.call(this, injector, key, function (keys) {\n                var first = stringify(keys[0].token);\n                return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n            });\n        }\n        return NoProviderError;\n    }(AbstractProviderError));\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     * @stable\n     */\n    var CyclicDependencyError = (function (_super) {\n        __extends$1(CyclicDependencyError, _super);\n        function CyclicDependencyError(injector, key) {\n            _super.call(this, injector, key, function (keys) {\n                return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n            });\n        }\n        return CyclicDependencyError;\n    }(AbstractProviderError));\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     * @stable\n     */\n    var InstantiationError = (function (_super) {\n        __extends$1(InstantiationError, _super);\n        function InstantiationError(injector, originalException, originalStack, key) {\n            _super.call(this, 'DI Error', originalException);\n            this.keys = [key];\n            this.injectors = [injector];\n        }\n        InstantiationError.prototype.addKey = function (injector, key) {\n            this.injectors.push(injector);\n            this.keys.push(key);\n        };\n        Object.defineProperty(InstantiationError.prototype, \"message\", {\n            get: function () {\n                var first = stringify(this.keys[0].token);\n                return this.originalError.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(this.keys) + \".\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(InstantiationError.prototype, \"causeKey\", {\n            get: function () { return this.keys[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        return InstantiationError;\n    }(WrappedError));\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     * @stable\n     */\n    var InvalidProviderError = (function (_super) {\n        __extends$1(InvalidProviderError, _super);\n        function InvalidProviderError(provider) {\n            _super.call(this, \"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n        }\n        return InvalidProviderError;\n    }(BaseError));\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     * @stable\n     */\n    var NoAnnotationError = (function (_super) {\n        __extends$1(NoAnnotationError, _super);\n        function NoAnnotationError(typeOrFunc, params) {\n            _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));\n        }\n        NoAnnotationError._genMessage = function (typeOrFunc, params) {\n            var signature = [];\n            for (var i = 0, ii = params.length; i < ii; i++) {\n                var parameter = params[i];\n                if (!parameter || parameter.length == 0) {\n                    signature.push('?');\n                }\n                else {\n                    signature.push(parameter.map(stringify).join(' '));\n                }\n            }\n            return 'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n                signature.join(', ') + '). ' +\n                'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n                stringify(typeOrFunc) + '\\' is decorated with Injectable.';\n        };\n        return NoAnnotationError;\n    }(BaseError));\n    /**\n     * Thrown when getting an object by index.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     * @stable\n     */\n    var OutOfBoundsError = (function (_super) {\n        __extends$1(OutOfBoundsError, _super);\n        function OutOfBoundsError(index) {\n            _super.call(this, \"Index \" + index + \" is out-of-bounds.\");\n        }\n        return OutOfBoundsError;\n    }(BaseError));\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    var MixingMultiProvidersWithRegularProvidersError = (function (_super) {\n        __extends$1(MixingMultiProvidersWithRegularProvidersError, _super);\n        function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n            _super.call(this, 'Cannot mix multi providers and regular providers, got: ' + provider1.toString() + ' ' +\n                provider2.toString());\n        }\n        return MixingMultiProvidersWithRegularProvidersError;\n    }(BaseError));\n\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @experimental\n     */\n    var ReflectiveKey = (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n        }\n        Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n            /**\n             * Returns a stringified token.\n             */\n            get: function () { return stringify(this.token); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    /**\n     * @internal\n     */\n    var KeyRegistry = (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n    // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n    var _arrayFromMap = (function () {\n        try {\n            if ((new Map()).values().next) {\n                return function createArrayFromMap(m, getValues) {\n                    return getValues ? Array.from(m.values()) : Array.from(m.keys());\n                };\n            }\n        }\n        catch (e) {\n        }\n        return function createArrayFromMapWithForeach(m, getValues) {\n            var res = new Array(m.size), i = 0;\n            m.forEach(function (v, k) {\n                res[i] = getValues ? v : k;\n                i++;\n            });\n            return res;\n        };\n    })();\n    var MapWrapper = (function () {\n        function MapWrapper() {\n        }\n        MapWrapper.createFromStringMap = function (stringMap) {\n            var result = new Map();\n            for (var prop in stringMap) {\n                result.set(prop, stringMap[prop]);\n            }\n            return result;\n        };\n        MapWrapper.keys = function (m) { return _arrayFromMap(m, false); };\n        MapWrapper.values = function (m) { return _arrayFromMap(m, true); };\n        return MapWrapper;\n    }());\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        StringMapWrapper.merge = function (m1, m2) {\n            var m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        StringMapWrapper.equals = function (m1, m2) {\n            var k1 = Object.keys(m1);\n            var k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var i = 0; i < k1.length; i++) {\n                var key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        ListWrapper.removeAll = function (list, items) {\n            for (var i = 0; i < items.length; ++i) {\n                var index = list.indexOf(items[i]);\n                list.splice(index, 1);\n            }\n        };\n        ListWrapper.remove = function (list, el) {\n            var index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        ListWrapper.maximum = function (list, predicate) {\n            if (list.length == 0) {\n                return null;\n            }\n            var solution = null;\n            var maxValue = -Infinity;\n            for (var index = 0; index < list.length; index++) {\n                var candidate = list[index];\n                if (candidate == null) {\n                    continue;\n                }\n                var candidateValue = predicate(candidate);\n                if (candidateValue > maxValue) {\n                    solution = candidate;\n                    maxValue = candidateValue;\n                }\n            }\n            return solution;\n        };\n        ListWrapper.flatten = function (list) {\n            var target = [];\n            _flattenArray(list, target);\n            return target;\n        };\n        return ListWrapper;\n    }());\n    function _flattenArray(source, target) {\n        if (isPresent(source)) {\n            for (var i = 0; i < source.length; i++) {\n                var item = source[i];\n                if (Array.isArray(item)) {\n                    _flattenArray(item, target);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n        }\n        return target;\n    }\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) &&\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @whatItDoes Represents a type that a Component or other object is instances of.\n     *\n     * @description\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @stable\n     */\n    var Type = Function;\n\n    var ReflectionCapabilities = (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || global$1.Reflect;\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new (t.bind.apply(t, [void 0].concat(args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && isPresent(paramAnnotations[i])) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Prefer the direct API.\n            if (type.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (type.ctorParameters) {\n                var ctorParameters = type.ctorParameters;\n                var paramTypes = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // API for metadata created by invoking the decorators.\n            if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n                var paramAnnotations = this._reflect.getMetadata('parameters', type);\n                var paramTypes = this._reflect.getMetadata('design:paramtypes', type);\n                if (paramTypes || paramAnnotations) {\n                    return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n                }\n            }\n            // The array has to be filled with `undefined` because holes would be skipped by `some`\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (this._reflect && this._reflect.getMetadata) {\n                var annotations = this._reflect.getMetadata('annotations', typeOrFunc);\n                if (annotations)\n                    return annotations;\n            }\n            return [];\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (this._reflect && this._reflect.getMetadata) {\n                var propMetadata = this._reflect.getMetadata('propMetadata', typeOrFunc);\n                if (propMetadata)\n                    return propMetadata;\n            }\n            return {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { return runtime; };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides read-only access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var ReflectorReader = (function () {\n        function ReflectorReader() {\n        }\n        return ReflectorReader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = (function (_super) {\n        __extends$2(Reflector, _super);\n        function Reflector(reflectionCapabilities) {\n            _super.call(this);\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }(ReflectorReader));\n\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = (function () {\n        function ReflectiveDependency(key, optional, lowerBoundVisibility, upperBoundVisibility, properties) {\n            this.key = key;\n            this.optional = optional;\n            this.lowerBoundVisibility = lowerBoundVisibility;\n            this.upperBoundVisibility = upperBoundVisibility;\n            this.properties = properties;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null, null, []);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n        }\n        Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n            get: function () { return this.resolvedFactories[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving {@link\n     * Provider}.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = (function () {\n        function ResolvedReflectiveFactory(\n            /**\n             * Factory function which can return an instance of an object represented by a key.\n             */\n            factory,\n            /**\n             * Arguments (dependencies) to the `factory` function.\n             */\n            dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (isPresent(provider.useClass)) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (isPresent(provider.useExisting)) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (isPresent(provider.useFactory)) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the {@link Provider} into {@link ResolvedProvider}.\n     *\n     * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n     * convenience provider syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        return MapWrapper.values(mergeResolvedReflectiveProviders(resolved, new Map()));\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where\n     * each key is contained exactly once and multi providers\n     * have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (isPresent(existing)) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw new MixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw new InvalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(isBlank)) {\n            throw new NoAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc /** TODO #9100 */, metadata /** TODO #9100 */ /*any[] | any*/, params) {\n        var depProps = [];\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null, null, depProps);\n            }\n            else {\n                return _createDependency(metadata, optional, null, null, depProps);\n            }\n        }\n        var lowerBoundVisibility = null;\n        var upperBoundVisibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self) {\n                upperBoundVisibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof Host) {\n                upperBoundVisibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof SkipSelf) {\n                lowerBoundVisibility = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (isPresent(token)) {\n            return _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n        }\n        else {\n            throw new NoAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token /** TODO #9100 */, optional /** TODO #9100 */, lowerBoundVisibility /** TODO #9100 */, upperBoundVisibility /** TODO #9100 */, depProps /** TODO #9100 */) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n    }\n\n    // Threshold for the dynamic version\n    var _MAX_CONSTRUCTION_COUNTER = 10;\n    var UNDEFINED = new Object();\n    var ReflectiveProtoInjectorInlineStrategy = (function () {\n        function ReflectiveProtoInjectorInlineStrategy(protoEI, providers) {\n            this.provider0 = null;\n            this.provider1 = null;\n            this.provider2 = null;\n            this.provider3 = null;\n            this.provider4 = null;\n            this.provider5 = null;\n            this.provider6 = null;\n            this.provider7 = null;\n            this.provider8 = null;\n            this.provider9 = null;\n            this.keyId0 = null;\n            this.keyId1 = null;\n            this.keyId2 = null;\n            this.keyId3 = null;\n            this.keyId4 = null;\n            this.keyId5 = null;\n            this.keyId6 = null;\n            this.keyId7 = null;\n            this.keyId8 = null;\n            this.keyId9 = null;\n            var length = providers.length;\n            if (length > 0) {\n                this.provider0 = providers[0];\n                this.keyId0 = providers[0].key.id;\n            }\n            if (length > 1) {\n                this.provider1 = providers[1];\n                this.keyId1 = providers[1].key.id;\n            }\n            if (length > 2) {\n                this.provider2 = providers[2];\n                this.keyId2 = providers[2].key.id;\n            }\n            if (length > 3) {\n                this.provider3 = providers[3];\n                this.keyId3 = providers[3].key.id;\n            }\n            if (length > 4) {\n                this.provider4 = providers[4];\n                this.keyId4 = providers[4].key.id;\n            }\n            if (length > 5) {\n                this.provider5 = providers[5];\n                this.keyId5 = providers[5].key.id;\n            }\n            if (length > 6) {\n                this.provider6 = providers[6];\n                this.keyId6 = providers[6].key.id;\n            }\n            if (length > 7) {\n                this.provider7 = providers[7];\n                this.keyId7 = providers[7].key.id;\n            }\n            if (length > 8) {\n                this.provider8 = providers[8];\n                this.keyId8 = providers[8].key.id;\n            }\n            if (length > 9) {\n                this.provider9 = providers[9];\n                this.keyId9 = providers[9].key.id;\n            }\n        }\n        ReflectiveProtoInjectorInlineStrategy.prototype.getProviderAtIndex = function (index) {\n            if (index == 0)\n                return this.provider0;\n            if (index == 1)\n                return this.provider1;\n            if (index == 2)\n                return this.provider2;\n            if (index == 3)\n                return this.provider3;\n            if (index == 4)\n                return this.provider4;\n            if (index == 5)\n                return this.provider5;\n            if (index == 6)\n                return this.provider6;\n            if (index == 7)\n                return this.provider7;\n            if (index == 8)\n                return this.provider8;\n            if (index == 9)\n                return this.provider9;\n            throw new OutOfBoundsError(index);\n        };\n        ReflectiveProtoInjectorInlineStrategy.prototype.createInjectorStrategy = function (injector) {\n            return new ReflectiveInjectorInlineStrategy(injector, this);\n        };\n        return ReflectiveProtoInjectorInlineStrategy;\n    }());\n    var ReflectiveProtoInjectorDynamicStrategy = (function () {\n        function ReflectiveProtoInjectorDynamicStrategy(protoInj, providers) {\n            this.providers = providers;\n            var len = providers.length;\n            this.keyIds = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = providers[i].key.id;\n            }\n        }\n        ReflectiveProtoInjectorDynamicStrategy.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this.providers.length) {\n                throw new OutOfBoundsError(index);\n            }\n            return this.providers[index];\n        };\n        ReflectiveProtoInjectorDynamicStrategy.prototype.createInjectorStrategy = function (ei) {\n            return new ReflectiveInjectorDynamicStrategy(this, ei);\n        };\n        return ReflectiveProtoInjectorDynamicStrategy;\n    }());\n    var ReflectiveProtoInjector = (function () {\n        function ReflectiveProtoInjector(providers) {\n            this.numberOfProviders = providers.length;\n            this._strategy = providers.length > _MAX_CONSTRUCTION_COUNTER ?\n                new ReflectiveProtoInjectorDynamicStrategy(this, providers) :\n                new ReflectiveProtoInjectorInlineStrategy(this, providers);\n        }\n        ReflectiveProtoInjector.fromResolvedProviders = function (providers) {\n            return new ReflectiveProtoInjector(providers);\n        };\n        ReflectiveProtoInjector.prototype.getProviderAtIndex = function (index) {\n            return this._strategy.getProviderAtIndex(index);\n        };\n        return ReflectiveProtoInjector;\n    }());\n    var ReflectiveInjectorInlineStrategy = (function () {\n        function ReflectiveInjectorInlineStrategy(injector, protoStrategy) {\n            this.injector = injector;\n            this.protoStrategy = protoStrategy;\n            this.obj0 = UNDEFINED;\n            this.obj1 = UNDEFINED;\n            this.obj2 = UNDEFINED;\n            this.obj3 = UNDEFINED;\n            this.obj4 = UNDEFINED;\n            this.obj5 = UNDEFINED;\n            this.obj6 = UNDEFINED;\n            this.obj7 = UNDEFINED;\n            this.obj8 = UNDEFINED;\n            this.obj9 = UNDEFINED;\n        }\n        ReflectiveInjectorInlineStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n        ReflectiveInjectorInlineStrategy.prototype.instantiateProvider = function (provider) {\n            return this.injector._new(provider);\n        };\n        ReflectiveInjectorInlineStrategy.prototype.getObjByKeyId = function (keyId) {\n            var p = this.protoStrategy;\n            var inj = this.injector;\n            if (p.keyId0 === keyId) {\n                if (this.obj0 === UNDEFINED) {\n                    this.obj0 = inj._new(p.provider0);\n                }\n                return this.obj0;\n            }\n            if (p.keyId1 === keyId) {\n                if (this.obj1 === UNDEFINED) {\n                    this.obj1 = inj._new(p.provider1);\n                }\n                return this.obj1;\n            }\n            if (p.keyId2 === keyId) {\n                if (this.obj2 === UNDEFINED) {\n                    this.obj2 = inj._new(p.provider2);\n                }\n                return this.obj2;\n            }\n            if (p.keyId3 === keyId) {\n                if (this.obj3 === UNDEFINED) {\n                    this.obj3 = inj._new(p.provider3);\n                }\n                return this.obj3;\n            }\n            if (p.keyId4 === keyId) {\n                if (this.obj4 === UNDEFINED) {\n                    this.obj4 = inj._new(p.provider4);\n                }\n                return this.obj4;\n            }\n            if (p.keyId5 === keyId) {\n                if (this.obj5 === UNDEFINED) {\n                    this.obj5 = inj._new(p.provider5);\n                }\n                return this.obj5;\n            }\n            if (p.keyId6 === keyId) {\n                if (this.obj6 === UNDEFINED) {\n                    this.obj6 = inj._new(p.provider6);\n                }\n                return this.obj6;\n            }\n            if (p.keyId7 === keyId) {\n                if (this.obj7 === UNDEFINED) {\n                    this.obj7 = inj._new(p.provider7);\n                }\n                return this.obj7;\n            }\n            if (p.keyId8 === keyId) {\n                if (this.obj8 === UNDEFINED) {\n                    this.obj8 = inj._new(p.provider8);\n                }\n                return this.obj8;\n            }\n            if (p.keyId9 === keyId) {\n                if (this.obj9 === UNDEFINED) {\n                    this.obj9 = inj._new(p.provider9);\n                }\n                return this.obj9;\n            }\n            return UNDEFINED;\n        };\n        ReflectiveInjectorInlineStrategy.prototype.getObjAtIndex = function (index) {\n            if (index == 0)\n                return this.obj0;\n            if (index == 1)\n                return this.obj1;\n            if (index == 2)\n                return this.obj2;\n            if (index == 3)\n                return this.obj3;\n            if (index == 4)\n                return this.obj4;\n            if (index == 5)\n                return this.obj5;\n            if (index == 6)\n                return this.obj6;\n            if (index == 7)\n                return this.obj7;\n            if (index == 8)\n                return this.obj8;\n            if (index == 9)\n                return this.obj9;\n            throw new OutOfBoundsError(index);\n        };\n        ReflectiveInjectorInlineStrategy.prototype.getMaxNumberOfObjects = function () { return _MAX_CONSTRUCTION_COUNTER; };\n        return ReflectiveInjectorInlineStrategy;\n    }());\n    var ReflectiveInjectorDynamicStrategy = (function () {\n        function ReflectiveInjectorDynamicStrategy(protoStrategy, injector) {\n            this.protoStrategy = protoStrategy;\n            this.injector = injector;\n            this.objs = new Array(protoStrategy.providers.length).fill(UNDEFINED);\n        }\n        ReflectiveInjectorDynamicStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n        ReflectiveInjectorDynamicStrategy.prototype.instantiateProvider = function (provider) {\n            return this.injector._new(provider);\n        };\n        ReflectiveInjectorDynamicStrategy.prototype.getObjByKeyId = function (keyId) {\n            var p = this.protoStrategy;\n            for (var i = 0; i < p.keyIds.length; i++) {\n                if (p.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this.injector._new(p.providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        ReflectiveInjectorDynamicStrategy.prototype.getObjAtIndex = function (index) {\n            if (index < 0 || index >= this.objs.length) {\n                throw new OutOfBoundsError(index);\n            }\n            return this.objs[index];\n        };\n        ReflectiveInjectorDynamicStrategy.prototype.getMaxNumberOfObjects = function () { return this.objs.length; };\n        return ReflectiveInjectorDynamicStrategy;\n    }());\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @stable\n     */\n    var ReflectiveInjector = (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of {@link ResolvedReflectiveProvider}s.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, {@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         *\n         * This function is slower than the corresponding `fromResolvedProviders`\n         * because it needs to resolve the passed-in providers first.\n         * See {@link Injector#resolve} and {@link Injector#fromResolvedProviders}.\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            if (parent === void 0) { parent = null; }\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            if (parent === void 0) { parent = null; }\n            return new ReflectiveInjector_(ReflectiveProtoInjector.fromResolvedProviders(providers), parent);\n        };\n        Object.defineProperty(ReflectiveInjector.prototype, \"parent\", {\n            /**\n             * Parent of this injector.\n             *\n             * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n             * -->\n             *\n             * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n             *\n             * ```typescript\n             * var parent = ReflectiveInjector.resolveAndCreate([]);\n             * var child = parent.resolveAndCreateChild([]);\n             * expect(child.parent).toBe(parent);\n             * ```\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Resolves an array of providers and creates a child injector from those providers.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * The passed-in providers can be an array of `Type`, {@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n         *\n         * ```typescript\n         * class ParentProvider {}\n         * class ChildProvider {}\n         *\n         * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n         * var child = parent.resolveAndCreateChild([ChildProvider]);\n         *\n         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n         * ```\n         *\n         * This function is slower than the corresponding `createChildFromResolved`\n         * because it needs to resolve the passed-in providers first.\n         * See {@link Injector#resolve} and {@link Injector#createChildFromResolved}.\n         */\n        ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { return unimplemented(); };\n        /**\n         * Creates a child injector from previously resolved providers.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n         *\n         * ```typescript\n         * class ParentProvider {}\n         * class ChildProvider {}\n         *\n         * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n         * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n         *\n         * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n         * var child = parent.createChildFromResolved(childProviders);\n         *\n         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n         * ```\n         */\n        ReflectiveInjector.prototype.createChildFromResolved = function (providers) {\n            return unimplemented();\n        };\n        /**\n         * Resolves a provider and instantiates an object in the context of the injector.\n         *\n         * The created object does not get cached by the injector.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n         *\n         * var car = injector.resolveAndInstantiate(Car);\n         * expect(car.engine).toBe(injector.get(Engine));\n         * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n         * ```\n         */\n        ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { return unimplemented(); };\n        /**\n         * Instantiates an object using a resolved provider in the context of the injector.\n         *\n         * The created object does not get cached by the injector.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n         * var carProvider = ReflectiveInjector.resolve([Car])[0];\n         * var car = injector.instantiateResolved(carProvider);\n         * expect(car.engine).toBe(injector.get(Engine));\n         * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n         * ```\n         */\n        ReflectiveInjector.prototype.instantiateResolved = function (provider) { return unimplemented(); };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_proto /* ProtoInjector */, _parent) {\n            if (_parent === void 0) { _parent = null; }\n            /** @internal */\n            this._constructionCounter = 0;\n            this._proto = _proto;\n            this._parent = _parent;\n            this._strategy = _proto._strategy.createInjectorStrategy(this);\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.getAt = function (index) { return this._strategy.getObjAtIndex(index); };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n            get: function () { return this._parent; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ReflectiveInjector_.prototype, \"internalStrategy\", {\n            /**\n             * @internal\n             * Internal. Do not use.\n             * We return `any` not to export the InjectorStrategy type.\n             */\n            get: function () { return this._strategy; },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var proto = new ReflectiveProtoInjector(providers);\n            var inj = new ReflectiveInjector_(proto);\n            inj._parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._strategy.getMaxNumberOfObjects()) {\n                throw new CyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps = ResolvedReflectiveFactory.dependencies;\n            var length = deps.length;\n            var d0;\n            var d1;\n            var d2;\n            var d3;\n            var d4;\n            var d5;\n            var d6;\n            var d7;\n            var d8;\n            var d9;\n            var d10;\n            var d11;\n            var d12;\n            var d13;\n            var d14;\n            var d15;\n            var d16;\n            var d17;\n            var d18;\n            var d19;\n            try {\n                d0 = length > 0 ? this._getByReflectiveDependency(provider, deps[0]) : null;\n                d1 = length > 1 ? this._getByReflectiveDependency(provider, deps[1]) : null;\n                d2 = length > 2 ? this._getByReflectiveDependency(provider, deps[2]) : null;\n                d3 = length > 3 ? this._getByReflectiveDependency(provider, deps[3]) : null;\n                d4 = length > 4 ? this._getByReflectiveDependency(provider, deps[4]) : null;\n                d5 = length > 5 ? this._getByReflectiveDependency(provider, deps[5]) : null;\n                d6 = length > 6 ? this._getByReflectiveDependency(provider, deps[6]) : null;\n                d7 = length > 7 ? this._getByReflectiveDependency(provider, deps[7]) : null;\n                d8 = length > 8 ? this._getByReflectiveDependency(provider, deps[8]) : null;\n                d9 = length > 9 ? this._getByReflectiveDependency(provider, deps[9]) : null;\n                d10 = length > 10 ? this._getByReflectiveDependency(provider, deps[10]) : null;\n                d11 = length > 11 ? this._getByReflectiveDependency(provider, deps[11]) : null;\n                d12 = length > 12 ? this._getByReflectiveDependency(provider, deps[12]) : null;\n                d13 = length > 13 ? this._getByReflectiveDependency(provider, deps[13]) : null;\n                d14 = length > 14 ? this._getByReflectiveDependency(provider, deps[14]) : null;\n                d15 = length > 15 ? this._getByReflectiveDependency(provider, deps[15]) : null;\n                d16 = length > 16 ? this._getByReflectiveDependency(provider, deps[16]) : null;\n                d17 = length > 17 ? this._getByReflectiveDependency(provider, deps[17]) : null;\n                d18 = length > 18 ? this._getByReflectiveDependency(provider, deps[18]) : null;\n                d19 = length > 19 ? this._getByReflectiveDependency(provider, deps[19]) : null;\n            }\n            catch (e) {\n                if (e instanceof AbstractProviderError || e instanceof InstantiationError) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                switch (length) {\n                    case 0:\n                        obj = factory();\n                        break;\n                    case 1:\n                        obj = factory(d0);\n                        break;\n                    case 2:\n                        obj = factory(d0, d1);\n                        break;\n                    case 3:\n                        obj = factory(d0, d1, d2);\n                        break;\n                    case 4:\n                        obj = factory(d0, d1, d2, d3);\n                        break;\n                    case 5:\n                        obj = factory(d0, d1, d2, d3, d4);\n                        break;\n                    case 6:\n                        obj = factory(d0, d1, d2, d3, d4, d5);\n                        break;\n                    case 7:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6);\n                        break;\n                    case 8:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7);\n                        break;\n                    case 9:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8);\n                        break;\n                    case 10:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9);\n                        break;\n                    case 11:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10);\n                        break;\n                    case 12:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11);\n                        break;\n                    case 13:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12);\n                        break;\n                    case 14:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13);\n                        break;\n                    case 15:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14);\n                        break;\n                    case 16:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15);\n                        break;\n                    case 17:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16);\n                        break;\n                    case 18:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17);\n                        break;\n                    case 19:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18);\n                        break;\n                    case 20:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19);\n                        break;\n                    default:\n                        throw new Error(\"Cannot instantiate '\" + provider.key.displayName + \"' because it has more than 20 dependencies\");\n                }\n            }\n            catch (e) {\n                throw new InstantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (provider, dep) {\n            return this._getByKey(dep.key, dep.lowerBoundVisibility, dep.upperBoundVisibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, lowerBoundVisibility, upperBoundVisibility, notFoundValue) {\n            if (key === INJECTOR_KEY) {\n                return this;\n            }\n            if (upperBoundVisibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, lowerBoundVisibility);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw new NoProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._strategy.getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, lowerBoundVisibility) {\n            var inj;\n            if (lowerBoundVisibility instanceof SkipSelf) {\n                inj = this._parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._strategy.getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_._parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        return ReflectiveInjector_;\n    }());\n    var INJECTOR_KEY = ReflectiveKey.get(Injector);\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._proto.numberOfProviders);\n        for (var i = 0; i < injector._proto.numberOfProviders; ++i) {\n            res[i] = fn(injector._proto.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @whatItDoes Provides a hook for centralized exception handling.\n     *\n     * @description\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @stable\n     */\n    var ErrorHandler = (function () {\n        function ErrorHandler(rethrowError) {\n            if (rethrowError === void 0) { rethrowError = true; }\n            /**\n             * @internal\n             */\n            this._console = console;\n            this.rethrowError = rethrowError;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var originalStack = this._findOriginalStack(error);\n            var context = this._findContext(error);\n            this._console.error(\"EXCEPTION: \" + this._extractMessage(error));\n            if (originalError) {\n                this._console.error(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalError));\n            }\n            if (originalStack) {\n                this._console.error('ORIGINAL STACKTRACE:');\n                this._console.error(originalStack);\n            }\n            if (context) {\n                this._console.error('ERROR CONTEXT:');\n                this._console.error(context);\n            }\n            // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n            // when an error happens. If we do not rethrow, bootstrap will always succeed.\n            if (this.rethrowError)\n                throw error;\n        };\n        /** @internal */\n        ErrorHandler.prototype._extractMessage = function (error) {\n            return error instanceof Error ? error.message : error.toString();\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return error.context ? error.context :\n                    this._findContext(error.originalError);\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = error.originalError;\n            while (e && e.originalError) {\n                e = e.originalError;\n            }\n            return e;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalStack = function (error) {\n            if (!(error instanceof Error))\n                return null;\n            var e = error;\n            var stack = e.stack;\n            while (e instanceof Error && e.originalError) {\n                e = e.originalError;\n                if (e instanceof Error && e.stack) {\n                    stack = e.stack;\n                }\n            }\n            return stack;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new OpaqueToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this._done = false;\n            var asyncInitPromises = [];\n            if (appInits) {\n                for (var i = 0; i < appInits.length; i++) {\n                    var initResult = appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            this._donePromise = Promise.all(asyncInitPromises).then(function () { _this._done = true; });\n            if (asyncInitPromises.length === 0) {\n                this._done = true;\n            }\n        }\n        Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n            get: function () { return this._done; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n            get: function () { return this._donePromise; },\n            enumerable: true,\n            configurable: true\n        });\n        ApplicationInitStatus.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ApplicationInitStatus.ctorParameters = [\n            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n        ];\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new OpaqueToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new OpaqueToken('Platform Initializer');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new OpaqueToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new OpaqueToken('Application Packages Root URL');\n\n    var Console = (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) { print(message); };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) { warn(message); };\n        Console.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Console.ctorParameters = [];\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a component is still being loaded in a synchronous compile.\n     *\n     * @stable\n     */\n    var ComponentStillLoadingError = (function (_super) {\n        __extends$4(ComponentStillLoadingError, _super);\n        function ComponentStillLoadingError(compType) {\n            _super.call(this, \"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n            this.compType = compType;\n        }\n        return ComponentStillLoadingError;\n    }(BaseError));\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     * @stable\n     */\n    var Compiler = (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents`\n         * have to be inlined. Otherwise throws a {@link ComponentStillLoadingError}.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new OpaqueToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    var DefaultIterableDifferFactory = (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (cdRef, trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @stable\n     */\n    var DefaultIterableDiffer = (function () {\n        function DefaultIterableDiffer(_trackByFn) {\n            this._trackByFn = _trackByFn;\n            this._length = null;\n            this._collection = null;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = this._trackByFn || trackByIdentity;\n        }\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n            get: function () { return this._collection; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n            get: function () { return this._length; },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (isBlank(collection))\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + collection + \"'\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        // todo(vicb): optim for UnmodifiableListView (frozen arrays)\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                var list = collection;\n                this._length = collection.length;\n                for (var index_1 = 0; index_1 < this._length; index_1++) {\n                    item = list[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item /** TODO #9100 */) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this._length = index;\n            }\n            this._truncate(record);\n            this._collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record;\n                var nextRecord;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new CollectionChangeRecord(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link CollectionChangeRecord}s from the previous collection\n         *\n         * - `record` The first excess {@link CollectionChangeRecord}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // todo(vicb)\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // todo(vicb)\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // todo(vicb)\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // todo(vicb)\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // todo(vicb)\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // todo(vicb)\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // todo(vicb)\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // todo(vicb)\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // todo(vicb)\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // todo(vicb)\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype.toString = function () {\n            var list = [];\n            this.forEachItem(function (record /** TODO #9100 */) { return list.push(record); });\n            var previous = [];\n            this.forEachPreviousItem(function (record /** TODO #9100 */) { return previous.push(record); });\n            var additions = [];\n            this.forEachAddedItem(function (record /** TODO #9100 */) { return additions.push(record); });\n            var moves = [];\n            this.forEachMovedItem(function (record /** TODO #9100 */) { return moves.push(record); });\n            var removals = [];\n            this.forEachRemovedItem(function (record /** TODO #9100 */) { return removals.push(record); });\n            var identityChanges = [];\n            this.forEachIdentityChange(function (record /** TODO #9100 */) { return identityChanges.push(record); });\n            return 'collection: ' + list.join(', ') + '\\n' +\n                'previous: ' + previous.join(', ') + '\\n' +\n                'additions: ' + additions.join(', ') + '\\n' +\n                'moves: ' + moves.join(', ') + '\\n' +\n                'removals: ' + removals.join(', ') + '\\n' +\n                'identityChanges: ' + identityChanges.join(', ') + '\\n';\n        };\n        return DefaultIterableDiffer;\n    }());\n    /**\n     * @stable\n     */\n    var CollectionChangeRecord = (function () {\n        function CollectionChangeRecord(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        CollectionChangeRecord.prototype.toString = function () {\n            return this.previousIndex === this.currentIndex ? stringify(this.item) :\n                stringify(this.item) + '[' +\n                    stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n        };\n        return CollectionChangeRecord;\n    }());\n    // A linked list of CollectionChangeRecords with the same CollectionChangeRecord.item\n    var _DuplicateItemRecordList = (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // todo(vicb)\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a CollectionChangeRecord having CollectionChangeRecord.trackById == trackById and\n        // CollectionChangeRecord.currentIndex >= afterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((afterIndex === null || afterIndex < record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link CollectionChangeRecord} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // todo(vicb)\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (CollectionChangeRecord cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the CollectionChangeRecord value may be one which we\n         * have already iterated over, we use the afterIndex to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the last `a` not the first or second.\n         */\n        _DuplicateMap.prototype.get = function (trackById, afterIndex) {\n            if (afterIndex === void 0) { afterIndex = null; }\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, afterIndex) : null;\n        };\n        /**\n         * Removes a {@link CollectionChangeRecord} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    var DefaultKeyValueDifferFactory = (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function (cdRef) { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + map + \"'\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var records = this._records;\n            var oldSeqRecord = this._mapHead;\n            var lastOldSeqRecord = null;\n            var lastNewSeqRecord = null;\n            var seqChanged = false;\n            this._forEach(map, function (value, key) {\n                var newSeqRecord;\n                if (oldSeqRecord && key === oldSeqRecord.key) {\n                    newSeqRecord = oldSeqRecord;\n                    _this._maybeAddToChanges(newSeqRecord, value);\n                }\n                else {\n                    seqChanged = true;\n                    if (oldSeqRecord !== null) {\n                        _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n                        _this._addToRemovals(oldSeqRecord);\n                    }\n                    if (records.has(key)) {\n                        newSeqRecord = records.get(key);\n                        _this._maybeAddToChanges(newSeqRecord, value);\n                    }\n                    else {\n                        newSeqRecord = new KeyValueChangeRecord(key);\n                        records.set(key, newSeqRecord);\n                        newSeqRecord.currentValue = value;\n                        _this._addToAdditions(newSeqRecord);\n                    }\n                }\n                if (seqChanged) {\n                    if (_this._isInRemovals(newSeqRecord)) {\n                        _this._removeFromRemovals(newSeqRecord);\n                    }\n                    if (lastNewSeqRecord == null) {\n                        _this._mapHead = newSeqRecord;\n                    }\n                    else {\n                        lastNewSeqRecord._next = newSeqRecord;\n                    }\n                }\n                lastOldSeqRecord = oldSeqRecord;\n                lastNewSeqRecord = newSeqRecord;\n                oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n            });\n            this._truncate(lastOldSeqRecord, oldSeqRecord);\n            return this.isDirty;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // Record the state of the mapping\n                for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = this._removalsTail = null;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {\n            while (record !== null) {\n                if (lastRecord === null) {\n                    this._mapHead = null;\n                }\n                else {\n                    lastRecord._next = null;\n                }\n                var nextRecord = record._next;\n                this._addToRemovals(record);\n                lastRecord = record;\n                record = nextRecord;\n            }\n            for (var rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n                rec.previousValue = rec.currentValue;\n                rec.currentValue = null;\n                this._records.delete(rec.key);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {\n            return record === this._removalsHead || record._nextRemoved !== null ||\n                record._prevRemoved !== null;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {\n            if (this._removalsHead === null) {\n                this._removalsHead = this._removalsTail = record;\n            }\n            else {\n                this._removalsTail._nextRemoved = record;\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {\n            var next = record._next;\n            if (prev === null) {\n                this._mapHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            record._next = null;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            record._prevRemoved = record._nextRemoved = null;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype.toString = function () {\n            var items = [];\n            var previous = [];\n            var changes = [];\n            var additions = [];\n            var removals = [];\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                items.push(stringify(record));\n            }\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                previous.push(stringify(record));\n            }\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                changes.push(stringify(record));\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                additions.push(stringify(record));\n            }\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                removals.push(stringify(record));\n            }\n            return 'map: ' + items.join(', ') + '\\n' +\n                'previous: ' + previous.join(', ') + '\\n' +\n                'additions: ' + additions.join(', ') + '\\n' +\n                'changes: ' + changes.join(', ') + '\\n' +\n                'removals: ' + removals.join(', ') + '\\n';\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    /**\n     * @stable\n     */\n    var KeyValueChangeRecord = (function () {\n        function KeyValueChangeRecord(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        KeyValueChangeRecord.prototype.toString = function () {\n            return looseIdentical(this.previousValue, this.currentValue) ?\n                stringify(this.key) :\n                (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n                    stringify(this.currentValue) + ']');\n        };\n        return KeyValueChangeRecord;\n    }());\n\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     * @stable\n     */\n    var IterableDiffers = (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (isPresent(parent)) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n                return new IterableDiffers(factories);\n            }\n            else {\n                return new IterableDiffers(factories);\n            }\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n               * which will only be applied to the injector for this component and its children.\n               * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (isPresent(factory)) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        return IterableDiffers;\n    }());\n\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     * @stable\n     */\n    var KeyValueDiffers = (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (isPresent(parent)) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n                return new KeyValueDiffers(factories);\n            }\n            else {\n                return new KeyValueDiffers(factories);\n            }\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n               * which will only be applied to the injector for this component and its children.\n               * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (isPresent(factory)) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n            }\n        };\n        return KeyValueDiffers;\n    }());\n\n    var UNINITIALIZED = {\n        toString: function () { return 'CD_INIT_VALUE'; }\n    };\n    function devModeEqual(a, b) {\n        if (isListLikeIterable(a) && isListLikeIterable(b)) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else if (!isListLikeIterable(a) && !isPrimitive(a) && !isListLikeIterable(b) && !isPrimitive(b)) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference\n     * has not changed.\n     *\n     * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     * @stable\n     */\n    var WrappedValue = (function () {\n        function WrappedValue(wrapped) {\n            this.wrapped = wrapped;\n        }\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        return WrappedValue;\n    }());\n    /**\n     * Helper class for unwrapping WrappedValue s\n     */\n    var ValueUnwrapper = (function () {\n        function ValueUnwrapper() {\n            this.hasWrappedValue = false;\n        }\n        ValueUnwrapper.prototype.unwrap = function (value) {\n            if (value instanceof WrappedValue) {\n                this.hasWrappedValue = true;\n                return value.wrapped;\n            }\n            return value;\n        };\n        ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n        return ValueUnwrapper;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     * @stable\n     */\n    var SimpleChange = (function () {\n        function SimpleChange(previousValue, currentValue) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.previousValue === UNINITIALIZED; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @stable\n     */\n    var ChangeDetectorRef = (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @experimental\n     */\n    // TODO (matsko): add typing for the animation function\n    var RenderComponentType = (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    var RenderDebugInfo = (function () {\n        function RenderDebugInfo() {\n        }\n        Object.defineProperty(RenderDebugInfo.prototype, \"injector\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"component\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"providerTokens\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"references\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"context\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"source\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return RenderDebugInfo;\n    }());\n    /**\n     * @experimental\n     */\n    var Renderer = (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link #setElementProperty} or {@link #setElementAttribute}\n     * respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     * @experimental\n     */\n    var RootRenderer = (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n     * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n     * handled.\n     *\n     * See DomSanitizer for more details on security in Angular applications.\n     *\n     * @stable\n     */\n    exports.SecurityContext;\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @stable\n     */\n    var Sanitizer = (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @stable\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = global$1['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     * @stable\n     */\n    var ViewContainerRef = (function () {\n        function ViewContainerRef() {\n        }\n        Object.defineProperty(ViewContainerRef.prototype, \"element\", {\n            /**\n             * Anchor element that specifies the location of this container in the containing View.\n             * <!-- TODO: rename to anchorElement -->\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef.prototype, \"injector\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef.prototype, \"parentInjector\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            /**\n             * Returns the number of Views currently attached to this container.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return ViewContainerRef;\n    }());\n    var ViewContainerRef_ = (function () {\n        function ViewContainerRef_(_element) {\n            this._element = _element;\n            /** @internal */\n            this._createComponentInContainerScope = wtfCreateScope('ViewContainerRef#createComponent()');\n            /** @internal */\n            this._insertScope = wtfCreateScope('ViewContainerRef#insert()');\n            /** @internal */\n            this._removeScope = wtfCreateScope('ViewContainerRef#remove()');\n            /** @internal */\n            this._detachScope = wtfCreateScope('ViewContainerRef#detach()');\n        }\n        ViewContainerRef_.prototype.get = function (index) { return this._element.nestedViews[index].ref; };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () {\n                var views = this._element.nestedViews;\n                return isPresent(views) ? views.length : 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return this._element.elementRef; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return this._element.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () { return this._element.parentInjector; },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(rado): profile and decide whether bounds checks should be added\n        // to the methods below.\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            if (context === void 0) { context = null; }\n            if (index === void 0) { index = -1; }\n            var viewRef = templateRef.createEmbeddedView(context);\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) {\n            if (index === void 0) { index = -1; }\n            if (injector === void 0) { injector = null; }\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            var s = this._createComponentInContainerScope();\n            var contextInjector = injector || this._element.parentInjector;\n            var componentRef = componentFactory.create(contextInjector, projectableNodes);\n            this.insert(componentRef.hostView, index);\n            return wtfLeave(s, componentRef);\n        };\n        // TODO(i): refactor insert+remove into move\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (index === void 0) { index = -1; }\n            var s = this._insertScope();\n            if (index == -1)\n                index = this.length;\n            var viewRef_ = viewRef;\n            this._element.attachView(viewRef_.internalView, index);\n            return wtfLeave(s, viewRef_);\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            var s = this._insertScope();\n            if (currentIndex == -1)\n                return;\n            var viewRef_ = viewRef;\n            this._element.moveView(viewRef_.internalView, currentIndex);\n            return wtfLeave(s, viewRef_);\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._element.nestedViews.indexOf(viewRef.internalView);\n        };\n        // TODO(i): rename to destroy\n        ViewContainerRef_.prototype.remove = function (index) {\n            if (index === void 0) { index = -1; }\n            var s = this._removeScope();\n            if (index == -1)\n                index = this.length - 1;\n            var view = this._element.detachView(index);\n            view.destroy();\n            // view is intentionally not returned to the client.\n            wtfLeave(s);\n        };\n        // TODO(i): refactor insert+remove into move\n        ViewContainerRef_.prototype.detach = function (index) {\n            if (index === void 0) { index = -1; }\n            var s = this._detachScope();\n            if (index == -1)\n                index = this.length - 1;\n            var view = this._element.detachView(index);\n            return wtfLeave(s, view.ref);\n        };\n        ViewContainerRef_.prototype.clear = function () {\n            for (var i = this.length - 1; i >= 0; i--) {\n                this.remove(i);\n            }\n        };\n        return ViewContainerRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewType;\n    (function (ViewType) {\n        // A view that contains the host element with bound component directive.\n        // Contains a COMPONENT view\n        ViewType[ViewType[\"HOST\"] = 0] = \"HOST\";\n        // The view of the component\n        // Can contain 0 to n EMBEDDED views\n        ViewType[ViewType[\"COMPONENT\"] = 1] = \"COMPONENT\";\n        // A view that is embedded into another View via a <template> element\n        // inside of a COMPONENT view\n        ViewType[ViewType[\"EMBEDDED\"] = 2] = \"EMBEDDED\";\n    })(ViewType || (ViewType = {}));\n\n    /**\n     * An AppElement is created for elements that have a ViewContainerRef,\n     * a nested component or a <template> element to keep data around\n     * that is needed for later instantiations.\n     */\n    var AppElement = (function () {\n        function AppElement(index, parentIndex, parentView, nativeElement) {\n            this.index = index;\n            this.parentIndex = parentIndex;\n            this.parentView = parentView;\n            this.nativeElement = nativeElement;\n            this.nestedViews = null;\n            this.componentView = null;\n        }\n        Object.defineProperty(AppElement.prototype, \"elementRef\", {\n            get: function () { return new ElementRef(this.nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppElement.prototype, \"vcRef\", {\n            get: function () { return new ViewContainerRef_(this); },\n            enumerable: true,\n            configurable: true\n        });\n        AppElement.prototype.initComponent = function (component, componentConstructorViewQueries, view) {\n            this.component = component;\n            this.componentConstructorViewQueries = componentConstructorViewQueries;\n            this.componentView = view;\n        };\n        Object.defineProperty(AppElement.prototype, \"parentInjector\", {\n            get: function () { return this.parentView.injector(this.parentIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppElement.prototype, \"injector\", {\n            get: function () { return this.parentView.injector(this.index); },\n            enumerable: true,\n            configurable: true\n        });\n        AppElement.prototype.mapNestedViews = function (nestedViewClass, callback) {\n            var result = [];\n            if (isPresent(this.nestedViews)) {\n                this.nestedViews.forEach(function (nestedView) {\n                    if (nestedView.clazz === nestedViewClass) {\n                        result.push(callback(nestedView));\n                    }\n                });\n            }\n            return result;\n        };\n        AppElement.prototype.moveView = function (view, currentIndex) {\n            var previousIndex = this.nestedViews.indexOf(view);\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            var nestedViews = this.nestedViews;\n            if (nestedViews == null) {\n                nestedViews = [];\n                this.nestedViews = nestedViews;\n            }\n            nestedViews.splice(previousIndex, 1);\n            nestedViews.splice(currentIndex, 0, view);\n            var refRenderNode;\n            if (currentIndex > 0) {\n                var prevView = nestedViews[currentIndex - 1];\n                refRenderNode = prevView.lastRootNode;\n            }\n            else {\n                refRenderNode = this.nativeElement;\n            }\n            if (isPresent(refRenderNode)) {\n                view.renderer.attachViewAfter(refRenderNode, view.flatRootNodes);\n            }\n            view.markContentChildAsMoved(this);\n        };\n        AppElement.prototype.attachView = function (view, viewIndex) {\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            var nestedViews = this.nestedViews;\n            if (nestedViews == null) {\n                nestedViews = [];\n                this.nestedViews = nestedViews;\n            }\n            nestedViews.splice(viewIndex, 0, view);\n            var refRenderNode;\n            if (viewIndex > 0) {\n                var prevView = nestedViews[viewIndex - 1];\n                refRenderNode = prevView.lastRootNode;\n            }\n            else {\n                refRenderNode = this.nativeElement;\n            }\n            if (isPresent(refRenderNode)) {\n                view.renderer.attachViewAfter(refRenderNode, view.flatRootNodes);\n            }\n            view.addToContentChildren(this);\n        };\n        AppElement.prototype.detachView = function (viewIndex) {\n            var view = this.nestedViews.splice(viewIndex, 1)[0];\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            view.detach();\n            view.removeFromContentChildren(this);\n            return view;\n        };\n        return AppElement;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * An error thrown if application changes model breaking the top-down data flow.\n     *\n     * This exception is only thrown in dev mode.\n     *\n     * <!-- TODO: Add a link once the dev mode option is configurable -->\n     *\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'parent',\n     *   template: '<child [prop]=\"parentProp\"></child>',\n     * })\n     * class Parent {\n     *   parentProp = 'init';\n     * }\n     *\n     * @Directive({selector: 'child', inputs: ['prop']})\n     * class Child {\n     *   constructor(public parent: Parent) {}\n     *\n     *   set prop(v) {\n     *     // this updates the parent property, which is disallowed during change detection\n     *     // this will result in ExpressionChangedAfterItHasBeenCheckedError\n     *     this.parent.parentProp = 'updated';\n     *   }\n     * }\n     * ```\n     * @stable\n     */\n    var ExpressionChangedAfterItHasBeenCheckedError = (function (_super) {\n        __extends$6(ExpressionChangedAfterItHasBeenCheckedError, _super);\n        function ExpressionChangedAfterItHasBeenCheckedError(oldValue, currValue) {\n            var msg = \"Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (oldValue === UNINITIALIZED) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            _super.call(this, msg);\n        }\n        return ExpressionChangedAfterItHasBeenCheckedError;\n    }(BaseError));\n    /**\n     * Thrown when an exception was raised during view creation, change detection or destruction.\n     *\n     * This error wraps the original exception to attach additional contextual information that can\n     * be useful for debugging.\n     * @stable\n     */\n    var ViewWrappedError = (function (_super) {\n        __extends$6(ViewWrappedError, _super);\n        function ViewWrappedError(originalError, context) {\n            _super.call(this, \"Error in \" + context.source, originalError);\n            this.context = context;\n        }\n        return ViewWrappedError;\n    }(WrappedError));\n    /**\n     * Thrown when a destroyed view is used.\n     *\n     * This error indicates a bug in the framework.\n     *\n     * This is an internal Angular error.\n     * @stable\n     */\n    var ViewDestroyedError = (function (_super) {\n        __extends$6(ViewDestroyedError, _super);\n        function ViewDestroyedError(details) {\n            _super.call(this, \"Attempt to use a destroyed view: \" + details);\n        }\n        return ViewDestroyedError;\n    }(BaseError));\n\n    var ViewUtils = (function () {\n        function ViewUtils(_renderer, _appId, sanitizer) {\n            this._renderer = _renderer;\n            this._appId = _appId;\n            this._nextCompTypeId = 0;\n            this.sanitizer = sanitizer;\n        }\n        /**\n         * Used by the generated code\n         */\n        // TODO (matsko): add typing for the animation function\n        ViewUtils.prototype.createRenderComponentType = function (templateUrl, slotCount, encapsulation, styles, animations) {\n            return new RenderComponentType(this._appId + \"-\" + this._nextCompTypeId++, templateUrl, slotCount, encapsulation, styles, animations);\n        };\n        /** @internal */\n        ViewUtils.prototype.renderComponent = function (renderComponentType) {\n            return this._renderer.renderComponent(renderComponentType);\n        };\n        ViewUtils.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ViewUtils.ctorParameters = [\n            { type: RootRenderer, },\n            { type: undefined, decorators: [{ type: Inject, args: [APP_ID,] },] },\n            { type: Sanitizer, },\n        ];\n        return ViewUtils;\n    }());\n    function flattenNestedViewRenderNodes(nodes) {\n        return _flattenNestedViewRenderNodes(nodes, []);\n    }\n    function _flattenNestedViewRenderNodes(nodes, renderNodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (node instanceof AppElement) {\n                var appEl = node;\n                renderNodes.push(appEl.nativeElement);\n                if (isPresent(appEl.nestedViews)) {\n                    for (var k = 0; k < appEl.nestedViews.length; k++) {\n                        _flattenNestedViewRenderNodes(appEl.nestedViews[k].rootNodesOrAppElements, renderNodes);\n                    }\n                }\n            }\n            else {\n                renderNodes.push(node);\n            }\n        }\n        return renderNodes;\n    }\n    var EMPTY_ARR = [];\n    function ensureSlotCount(projectableNodes, expectedSlotCount) {\n        var res;\n        if (!projectableNodes) {\n            res = EMPTY_ARR;\n        }\n        else if (projectableNodes.length < expectedSlotCount) {\n            var givenSlotCount = projectableNodes.length;\n            res = new Array(expectedSlotCount);\n            for (var i = 0; i < expectedSlotCount; i++) {\n                res[i] = (i < givenSlotCount) ? projectableNodes[i] : EMPTY_ARR;\n            }\n        }\n        else {\n            res = projectableNodes;\n        }\n        return res;\n    }\n    var MAX_INTERPOLATION_VALUES = 9;\n    function interpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    function checkBinding(throwOnChange, oldValue, newValue) {\n        if (throwOnChange) {\n            if (!devModeEqual(oldValue, newValue)) {\n                throw new ExpressionChangedAfterItHasBeenCheckedError(oldValue, newValue);\n            }\n            return false;\n        }\n        else {\n            return !looseIdentical(oldValue, newValue);\n        }\n    }\n    function castByValue(input, value) {\n        return input;\n    }\n    var EMPTY_ARRAY = [];\n    var EMPTY_MAP = {};\n    function pureProxy1(fn) {\n        var result;\n        var v0 = UNINITIALIZED;\n        return function (p0) {\n            if (!looseIdentical(v0, p0)) {\n                v0 = p0;\n                result = fn(p0);\n            }\n            return result;\n        };\n    }\n    function pureProxy2(fn) {\n        var result;\n        var v0 = UNINITIALIZED;\n        var v1 = UNINITIALIZED;\n        return function (p0, p1) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1)) {\n                v0 = p0;\n                v1 = p1;\n                result = fn(p0, p1);\n            }\n            return result;\n        };\n    }\n    function pureProxy3(fn) {\n        var result;\n        var v0 = UNINITIALIZED;\n        var v1 = UNINITIALIZED;\n        var v2 = UNINITIALIZED;\n        return function (p0, p1, p2) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                result = fn(p0, p1, p2);\n            }\n            return result;\n        };\n    }\n    function pureProxy4(fn) {\n        var result;\n        var v0, v1, v2, v3;\n        v0 = v1 = v2 = v3 = UNINITIALIZED;\n        return function (p0, p1, p2, p3) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                result = fn(p0, p1, p2, p3);\n            }\n            return result;\n        };\n    }\n    function pureProxy5(fn) {\n        var result;\n        var v0, v1, v2, v3, v4;\n        v0 = v1 = v2 = v3 = v4 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                result = fn(p0, p1, p2, p3, p4);\n            }\n            return result;\n        };\n    }\n    function pureProxy6(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5;\n        v0 = v1 = v2 = v3 = v4 = v5 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                result = fn(p0, p1, p2, p3, p4, p5);\n            }\n            return result;\n        };\n    }\n    function pureProxy7(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                result = fn(p0, p1, p2, p3, p4, p5, p6);\n            }\n            return result;\n        };\n    }\n    function pureProxy8(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6, v7;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7);\n            }\n            return result;\n        };\n    }\n    function pureProxy9(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6, v7, v8;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                v8 = p8;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8);\n            }\n            return result;\n        };\n    }\n    function pureProxy10(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6, v7, v8, v9;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = v9 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8) ||\n                !looseIdentical(v9, p9)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                v8 = p8;\n                v9 = p9;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n            }\n            return result;\n        };\n    }\n    function setBindingDebugInfoForChanges(renderer, el, changes) {\n        Object.keys(changes).forEach(function (propName) {\n            setBindingDebugInfo(renderer, el, propName, changes[propName].currentValue);\n        });\n    }\n    function setBindingDebugInfo(renderer, el, propName, value) {\n        try {\n            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), value ? value.toString() : null);\n        }\n        catch (e) {\n            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), '[ERROR] Exception while trying to serialize the value');\n        }\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i - 0] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function createRenderElement(renderer, parentElement, name, attrs, debugInfo) {\n        var el = renderer.createElement(parentElement, name, debugInfo);\n        for (var i = 0; i < attrs.length; i += 2) {\n            renderer.setElementAttribute(el, attrs.get(i), attrs.get(i + 1));\n        }\n        return el;\n    }\n    function selectOrCreateRenderHostElement(renderer, elementName, attrs, rootSelectorOrNode, debugInfo) {\n        var hostElement;\n        if (isPresent(rootSelectorOrNode)) {\n            hostElement = renderer.selectRootElement(rootSelectorOrNode, debugInfo);\n        }\n        else {\n            hostElement = createRenderElement(renderer, null, elementName, attrs, debugInfo);\n        }\n        return hostElement;\n    }\n    var InlineArray0 = (function () {\n        function InlineArray0() {\n            this.length = 0;\n        }\n        InlineArray0.prototype.get = function (index) { return undefined; };\n        return InlineArray0;\n    }());\n    var InlineArray2 = (function () {\n        function InlineArray2(length, _v0, _v1) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n        }\n        InlineArray2.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                default:\n                    return undefined;\n            }\n        };\n        return InlineArray2;\n    }());\n    var InlineArray4 = (function () {\n        function InlineArray4(length, _v0, _v1, _v2, _v3) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n        }\n        InlineArray4.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                default:\n                    return undefined;\n            }\n        };\n        return InlineArray4;\n    }());\n    var InlineArray8 = (function () {\n        function InlineArray8(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n            this._v4 = _v4;\n            this._v5 = _v5;\n            this._v6 = _v6;\n            this._v7 = _v7;\n        }\n        InlineArray8.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                case 4:\n                    return this._v4;\n                case 5:\n                    return this._v5;\n                case 6:\n                    return this._v6;\n                case 7:\n                    return this._v7;\n                default:\n                    return undefined;\n            }\n        };\n        return InlineArray8;\n    }());\n    var InlineArray16 = (function () {\n        function InlineArray16(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7, _v8, _v9, _v10, _v11, _v12, _v13, _v14, _v15) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n            this._v4 = _v4;\n            this._v5 = _v5;\n            this._v6 = _v6;\n            this._v7 = _v7;\n            this._v8 = _v8;\n            this._v9 = _v9;\n            this._v10 = _v10;\n            this._v11 = _v11;\n            this._v12 = _v12;\n            this._v13 = _v13;\n            this._v14 = _v14;\n            this._v15 = _v15;\n        }\n        InlineArray16.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                case 4:\n                    return this._v4;\n                case 5:\n                    return this._v5;\n                case 6:\n                    return this._v6;\n                case 7:\n                    return this._v7;\n                case 8:\n                    return this._v8;\n                case 9:\n                    return this._v9;\n                case 10:\n                    return this._v10;\n                case 11:\n                    return this._v11;\n                case 12:\n                    return this._v12;\n                case 13:\n                    return this._v13;\n                case 14:\n                    return this._v14;\n                case 15:\n                    return this._v15;\n                default:\n                    return undefined;\n            }\n        };\n        return InlineArray16;\n    }());\n    var InlineArrayDynamic = (function () {\n        // Note: We still take the length argument so this class can be created\n        // in the same ways as the other classes!\n        function InlineArrayDynamic(length) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            this.length = length;\n            this._values = values;\n        }\n        InlineArrayDynamic.prototype.get = function (index) { return this._values[index]; };\n        return InlineArrayDynamic;\n    }());\n    var EMPTY_INLINE_ARRAY = new InlineArray0();\n\n\n    var view_utils = Object.freeze({\n        ViewUtils: ViewUtils,\n        flattenNestedViewRenderNodes: flattenNestedViewRenderNodes,\n        ensureSlotCount: ensureSlotCount,\n        MAX_INTERPOLATION_VALUES: MAX_INTERPOLATION_VALUES,\n        interpolate: interpolate,\n        checkBinding: checkBinding,\n        castByValue: castByValue,\n        EMPTY_ARRAY: EMPTY_ARRAY,\n        EMPTY_MAP: EMPTY_MAP,\n        pureProxy1: pureProxy1,\n        pureProxy2: pureProxy2,\n        pureProxy3: pureProxy3,\n        pureProxy4: pureProxy4,\n        pureProxy5: pureProxy5,\n        pureProxy6: pureProxy6,\n        pureProxy7: pureProxy7,\n        pureProxy8: pureProxy8,\n        pureProxy9: pureProxy9,\n        pureProxy10: pureProxy10,\n        setBindingDebugInfoForChanges: setBindingDebugInfoForChanges,\n        setBindingDebugInfo: setBindingDebugInfo,\n        createRenderElement: createRenderElement,\n        selectOrCreateRenderHostElement: selectOrCreateRenderHostElement,\n        InlineArray2: InlineArray2,\n        InlineArray4: InlineArray4,\n        InlineArray8: InlineArray8,\n        InlineArray16: InlineArray16,\n        InlineArrayDynamic: InlineArrayDynamic,\n        EMPTY_INLINE_ARRAY: EMPTY_INLINE_ARRAY\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     * @stable\n     */\n    var ComponentRef = (function () {\n        function ComponentRef() {\n        }\n        Object.defineProperty(ComponentRef.prototype, \"location\", {\n            /**\n             * Location of the Host Element of this Component Instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            /**\n             * The injector on which the component instance exists.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef.prototype, \"instance\", {\n            /**\n             * The instance of the Component.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef.prototype, \"hostView\", {\n            /**\n             * The {@link ViewRef} of the Host View of this Component instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef.prototype, \"changeDetectorRef\", {\n            /**\n             * The {@link ChangeDetectorRef} of the Component instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef.prototype, \"componentType\", {\n            /**\n             * The component type.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return ComponentRef;\n    }());\n    var ComponentRef_ = (function (_super) {\n        __extends$5(ComponentRef_, _super);\n        function ComponentRef_(_hostElement, _componentType) {\n            _super.call(this);\n            this._hostElement = _hostElement;\n            this._componentType = _componentType;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () { return this._hostElement.elementRef; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return this._hostElement.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n            get: function () { return this._hostElement.component; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n            get: function () { return this._hostElement.parentView.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n            get: function () { return this._hostElement.parentView.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._componentType; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._hostElement.parentView.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this.hostView.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    /**\n     * @experimental\n     */\n    var EMPTY_CONTEXT = new Object();\n    /**\n     * @stable\n     */\n    var ComponentFactory = (function () {\n        function ComponentFactory(selector, _viewFactory, _componentType) {\n            this.selector = selector;\n            this._viewFactory = _viewFactory;\n            this._componentType = _componentType;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"componentType\", {\n            get: function () { return this._componentType; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode) {\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            if (rootSelectorOrNode === void 0) { rootSelectorOrNode = null; }\n            var vu = injector.get(ViewUtils);\n            if (!projectableNodes) {\n                projectableNodes = [];\n            }\n            // Note: Host views don't need a declarationAppElement!\n            var hostView = this._viewFactory(vu, injector, null);\n            var hostElement = hostView.create(EMPTY_CONTEXT, projectableNodes, rootSelectorOrNode);\n            return new ComponentRef_(hostElement, this._componentType);\n        };\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @stable\n     */\n    var NoComponentFactoryError = (function (_super) {\n        __extends$7(NoComponentFactoryError, _super);\n        function NoComponentFactoryError(component) {\n            _super.call(this, \"No component factory found for \" + stringify(component));\n            this.component = component;\n        }\n        return NoComponentFactoryError;\n    }(BaseError));\n    var _NullComponentFactoryResolver = (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw new NoComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @stable\n     */\n    var ComponentFactoryResolver = (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = (function () {\n        function CodegenComponentFactoryResolver(factories, _parent) {\n            this._parent = _parent;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var result = this._factories.get(component);\n            if (!result) {\n                result = this._parent.resolveComponentFactory(component);\n            }\n            return result;\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     * @stable\n     */\n    var EventEmitter = (function (_super) {\n        __extends$8(EventEmitter, _super);\n        /**\n         * Creates an instance of [EventEmitter], which depending on [isAsync],\n         * delivers events synchronously or asynchronously.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * ### Example\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo'.\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *       // reenter the Angular zone and display done\n     *       this._ngZone.run(() => {console.log('Outside Done!') });\n     *     }}));\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     * @experimental\n     */\n    var NgZone = (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this._hasPendingMicrotasks = false;\n            this._hasPendingMacrotasks = false;\n            this._isStable = true;\n            this._nesting = 0;\n            this._onUnstable = new EventEmitter(false);\n            this._onMicrotaskEmpty = new EventEmitter(false);\n            this._onStable = new EventEmitter(false);\n            this._onErrorEvents = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error('Angular requires Zone.js prolyfill.');\n            }\n            Zone.assertZonePatched();\n            this.outer = this.inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            this.forkInnerZoneWithAngularBehavior();\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn) { return this.inner.run(fn); };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn) { return this.inner.runGuarded(fn); };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) { return this.outer.run(fn); };\n        Object.defineProperty(NgZone.prototype, \"onUnstable\", {\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            get: function () { return this._onUnstable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onMicrotaskEmpty\", {\n            /**\n             * Notifies when there is no more microtasks enqueue in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            get: function () { return this._onMicrotaskEmpty; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onStable\", {\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            get: function () { return this._onStable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onError\", {\n            /**\n             * Notify that an error has been delivered.\n             */\n            get: function () { return this._onErrorEvents; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"isStable\", {\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            get: function () { return this._isStable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"hasPendingMicrotasks\", {\n            get: function () { return this._hasPendingMicrotasks; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"hasPendingMacrotasks\", {\n            get: function () { return this._hasPendingMacrotasks; },\n            enumerable: true,\n            configurable: true\n        });\n        NgZone.prototype.checkStable = function () {\n            var _this = this;\n            if (this._nesting == 0 && !this._hasPendingMicrotasks && !this._isStable) {\n                try {\n                    this._nesting++;\n                    this._onMicrotaskEmpty.emit(null);\n                }\n                finally {\n                    this._nesting--;\n                    if (!this._hasPendingMicrotasks) {\n                        try {\n                            this.runOutsideAngular(function () { return _this._onStable.emit(null); });\n                        }\n                        finally {\n                            this._isStable = true;\n                        }\n                    }\n                }\n            }\n        };\n        NgZone.prototype.forkInnerZoneWithAngularBehavior = function () {\n            var _this = this;\n            this.inner = this.inner.fork({\n                name: 'angular',\n                properties: { 'isAngularZone': true },\n                onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invokeTask(target, task, applyThis, applyArgs);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onHasTask: function (delegate, current, target, hasTaskState) {\n                    delegate.hasTask(target, hasTaskState);\n                    if (current === target) {\n                        // We are only interested in hasTask events which originate from our zone\n                        // (A child hasTask event is not interesting to us)\n                        if (hasTaskState.change == 'microTask') {\n                            _this.setHasMicrotask(hasTaskState.microTask);\n                        }\n                        else if (hasTaskState.change == 'macroTask') {\n                            _this.setHasMacrotask(hasTaskState.macroTask);\n                        }\n                    }\n                },\n                onHandleError: function (delegate, current, target, error) {\n                    delegate.handleError(target, error);\n                    _this.triggerError(error);\n                    return false;\n                }\n            });\n        };\n        NgZone.prototype.onEnter = function () {\n            this._nesting++;\n            if (this._isStable) {\n                this._isStable = false;\n                this._onUnstable.emit(null);\n            }\n        };\n        NgZone.prototype.onLeave = function () {\n            this._nesting--;\n            this.checkStable();\n        };\n        NgZone.prototype.setHasMicrotask = function (hasMicrotasks) {\n            this._hasPendingMicrotasks = hasMicrotasks;\n            this.checkStable();\n        };\n        NgZone.prototype.setHasMacrotask = function (hasMacrotasks) { this._hasPendingMacrotasks = hasMacrotasks; };\n        NgZone.prototype.triggerError = function (error) { this._onErrorEvents.emit(error); };\n        return NgZone;\n    }());\n\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = (function () {\n        function Testability(_ngZone) {\n            this._ngZone = _ngZone;\n            /** @internal */\n            this._pendingCount = 0;\n            /** @internal */\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            /** @internal */\n            this._callbacks = [];\n            this._watchAngularEvents();\n        }\n        /** @internal */\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        /** @internal */\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        (_this._callbacks.pop())(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Not Ready\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.whenStable = function (callback) {\n            this._callbacks.push(callback);\n            this._runCallbacksIfReady();\n        };\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /** @deprecated use findProviders */\n        Testability.prototype.findBindings = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Testability.ctorParameters = [\n            { type: NgZone, },\n        ];\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem); };\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return MapWrapper.values(this._applications); };\n        TestabilityRegistry.prototype.getAllRootElements = function () { return MapWrapper.keys(this._applications); };\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        TestabilityRegistry.ctorParameters = [];\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @stable\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlaformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var marker = new OpaqueToken(\"Platform: \" + name);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            if (!getPlatform()) {\n                if (parentPlaformFactory) {\n                    parentPlaformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform\n     * which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when {@link bootstrap}() is called, or\n     * explicitly by calling {@link createPlatform}().\n     *\n     * @stable\n     */\n    var PlatformRef = (function () {\n        function PlatformRef() {\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) {\n            throw unimplemented();\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         * @stable\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            throw unimplemented();\n        };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { throw unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { throw unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return PlatformRef;\n    }());\n    function _callAndReportToErrorHandler(errorHandler, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    errorHandler.handleError(e);\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            errorHandler.handleError(e);\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    var PlatformRef_ = (function (_super) {\n        __extends$3(PlatformRef_, _super);\n        function PlatformRef_(_injector) {\n            _super.call(this);\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n            return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n        };\n        PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            if (!ngZone)\n                ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], _this.injector);\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return ListWrapper.remove(_this._modules, moduleRef); });\n                ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n                return _callAndReportToErrorHandler(exceptionHandler, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n        };\n        PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone, componentFactoryCallback) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n            // ugly internal api hack: generate host component factories for all declared components and\n            // pass the factories into the callback - this is used by UpdateAdapter to get hold of all\n            // factories.\n            if (componentFactoryCallback) {\n                return compiler.compileModuleAndAllComponentsAsync(moduleType)\n                    .then(function (_a) {\n                    var ngModuleFactory = _a.ngModuleFactory, componentFactories = _a.componentFactories;\n                    componentFactoryCallback(componentFactories);\n                    return _this._bootstrapModuleFactoryWithZone(ngModuleFactory, ngZone);\n                });\n            }\n            return compiler.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n        };\n        PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef.bootstrapFactories.length > 0) {\n                moduleRef.bootstrapFactories.forEach(function (compFactory) { return appRef.bootstrap(compFactory); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error((\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \") +\n                    \"Please define one of these.\");\n            }\n        };\n        PlatformRef_.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        PlatformRef_.ctorParameters = [\n            { type: Injector, },\n        ];\n        return PlatformRef_;\n    }(PlatformRef));\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * For more about Angular applications, see the documentation for {@link bootstrap}.\n     *\n     * @stable\n     */\n    var ApplicationRef = (function () {\n        function ApplicationRef() {\n        }\n        Object.defineProperty(ApplicationRef.prototype, \"componentTypes\", {\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ApplicationRef.prototype, \"components\", {\n            /**\n             * Get a list of components registered to this application.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return ApplicationRef;\n    }());\n    var ApplicationRef_ = (function (_super) {\n        __extends$3(ApplicationRef_, _super);\n        function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus, _testabilityRegistry, _testability) {\n            var _this = this;\n            _super.call(this);\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._testabilityRegistry = _testabilityRegistry;\n            this._testability = _testability;\n            this._bootstrapListeners = [];\n            this._rootComponents = [];\n            this._rootComponentTypes = [];\n            this._changeDetectorRefs = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        }\n        ApplicationRef_.prototype.registerChangeDetector = function (changeDetector) {\n            this._changeDetectorRefs.push(changeDetector);\n        };\n        ApplicationRef_.prototype.unregisterChangeDetector = function (changeDetector) {\n            ListWrapper.remove(this._changeDetectorRefs, changeDetector);\n        };\n        ApplicationRef_.prototype.bootstrap = function (componentOrFactory) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this._rootComponentTypes.push(componentFactory.componentType);\n            var compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular 2 is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /** @internal */\n        ApplicationRef_.prototype._loadComponent = function (componentRef) {\n            this._changeDetectorRefs.push(componentRef.changeDetectorRef);\n            this.tick();\n            this._rootComponents.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, [])\n                .concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        /** @internal */\n        ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n            if (this._rootComponents.indexOf(componentRef) == -1) {\n                return;\n            }\n            this.unregisterChangeDetector(componentRef.changeDetectorRef);\n            ListWrapper.remove(this._rootComponents, componentRef);\n        };\n        ApplicationRef_.prototype.tick = function () {\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_._tickScope();\n            try {\n                this._runningTick = true;\n                this._changeDetectorRefs.forEach(function (detector) { return detector.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._changeDetectorRefs.forEach(function (detector) { return detector.checkNoChanges(); });\n                }\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        ApplicationRef_.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._rootComponents.slice().forEach(function (component) { return component.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n            get: function () { return this._rootComponentTypes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n            get: function () { return this._rootComponents; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef_.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ApplicationRef_.ctorParameters = [\n            { type: NgZone, },\n            { type: Console, },\n            { type: Injector, },\n            { type: ErrorHandler, },\n            { type: ComponentFactoryResolver, },\n            { type: ApplicationInitStatus, },\n            { type: TestabilityRegistry, decorators: [{ type: Optional },] },\n            { type: Testability, decorators: [{ type: Optional },] },\n        ];\n        return ApplicationRef_;\n    }(ApplicationRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @stable\n     */\n    var NgModuleRef = (function () {\n        function NgModuleRef() {\n        }\n        Object.defineProperty(NgModuleRef.prototype, \"injector\", {\n            /**\n             * The injector that contains all of the providers of the NgModule.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef.prototype, \"componentFactoryResolver\", {\n            /**\n             * The ComponentFactoryResolver to get hold of the ComponentFactories\n             * declared in the `entryComponents` property of the module.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef.prototype, \"instance\", {\n            /**\n             * The NgModule instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = (function () {\n        function NgModuleFactory(_injectorClass, _moduleType) {\n            this._injectorClass = _injectorClass;\n            this._moduleType = _moduleType;\n        }\n        Object.defineProperty(NgModuleFactory.prototype, \"moduleType\", {\n            get: function () { return this._moduleType; },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            if (!parentInjector) {\n                parentInjector = Injector.NULL;\n            }\n            var instance = new this._injectorClass(parentInjector);\n            instance.create();\n            return instance;\n        };\n        return NgModuleFactory;\n    }());\n    var _UNDEFINED = new Object();\n    var NgModuleInjector = (function (_super) {\n        __extends$9(NgModuleInjector, _super);\n        function NgModuleInjector(parent, factories, bootstrapFactories) {\n            _super.call(this, factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL));\n            this.parent = parent;\n            this.bootstrapFactories = bootstrapFactories;\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        NgModuleInjector.prototype.create = function () { this.instance = this.createInternal(); };\n        NgModuleInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (token === Injector || token === ComponentFactoryResolver) {\n                return this;\n            }\n            var result = this.getInternal(token, _UNDEFINED);\n            return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n        };\n        Object.defineProperty(NgModuleInjector.prototype, \"injector\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleInjector.prototype, \"componentFactoryResolver\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleInjector.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            this.destroyInternal();\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleInjector.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleInjector;\n    }(CodegenComponentFactoryResolver));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     * @stable\n     */\n    var NgModuleFactoryLoader = (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link Query} and {@link ViewQueryMetadata} provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     * @stable\n     */\n    var QueryList = (function () {\n        function QueryList() {\n            this._dirty = true;\n            this._results = [];\n            this._emitter = new EventEmitter();\n        }\n        Object.defineProperty(QueryList.prototype, \"changes\", {\n            get: function () { return this._emitter; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"length\", {\n            get: function () { return this._results.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"first\", {\n            get: function () { return this._results[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"last\", {\n            get: function () { return this._results[this.length - 1]; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = ListWrapper.flatten(res);\n            this._dirty = false;\n        };\n        QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this._dirty = true; };\n        Object.defineProperty(QueryList.prototype, \"dirty\", {\n            /** internal */\n            get: function () { return this._dirty; },\n            enumerable: true,\n            configurable: true\n        });\n        return QueryList;\n    }());\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n            if (exportName === undefined)\n                exportName = 'default';\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        SystemJsNgModuleLoader.ctorParameters = [\n            { type: Compiler, },\n            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n        ];\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<template>` element (or\n     * directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into the\n     * constructor of the directive using the `TemplateRef` Token. Alternatively you can query for the\n     * `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use\n     * {@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n     * View Container.\n     * @stable\n     */\n    var TemplateRef = (function () {\n        function TemplateRef() {\n        }\n        Object.defineProperty(TemplateRef.prototype, \"elementRef\", {\n            /**\n             * The location in the View where the Embedded View logically belongs to.\n             *\n             * The data-binding and injection contexts of Embedded Views created from this `TemplateRef`\n             * inherit from the contexts of this location.\n             *\n             * Typically new Embedded Views are attached to the View Container of this location, but in\n             * advanced use-cases, the View can be attached to a different container while keeping the\n             * data-binding and injection context from the original location.\n             *\n             */\n            // TODO(i): rename to anchor or location\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef;\n    }());\n    var TemplateRef_ = (function (_super) {\n        __extends$10(TemplateRef_, _super);\n        function TemplateRef_(_appElement, _viewFactory) {\n            _super.call(this);\n            this._appElement = _appElement;\n            this._viewFactory = _viewFactory;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            var view = this._viewFactory(this._appElement.parentView.viewUtils, this._appElement.parentInjector, this._appElement);\n            view.create(context || {}, null, null);\n            return view.ref;\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () { return this._appElement.elementRef; },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _queuedAnimations = [];\n    /** @internal */\n    function queueAnimationGlobally(player) {\n        _queuedAnimations.push(player);\n    }\n    /** @internal */\n    function triggerQueuedAnimations() {\n        for (var i = 0; i < _queuedAnimations.length; i++) {\n            var player = _queuedAnimations[i];\n            player.play();\n        }\n        _queuedAnimations = [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @stable\n     */\n    var ViewRef = (function () {\n        function ViewRef() {\n        }\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return ViewRef;\n    }());\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two {@link TemplateRef}s:\n     *\n     * Outer {@link TemplateRef}:\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <template ngFor let-item [ngForOf]=\"items\"></template>\n     * </ul>\n     * ```\n     *\n     * Inner {@link TemplateRef}:\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n     *\n     * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <template view-container-ref></template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = (function (_super) {\n        __extends$11(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(EmbeddedViewRef.prototype, \"context\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(EmbeddedViewRef.prototype, \"rootNodes\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return EmbeddedViewRef;\n    }(ViewRef));\n    var ViewRef_ = (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._view = _view;\n            this._originalMode = this._view.cdMode;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"internalView\", {\n            get: function () { return this._view; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return this._view.flatRootNodes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return this._view.destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { this._view.markPathToRootAsCheckOnce(); };\n        ViewRef_.prototype.detach = function () { this._view.cdMode = ChangeDetectorStatus.Detached; };\n        ViewRef_.prototype.detectChanges = function () {\n            this._view.detectChanges(false);\n            triggerQueuedAnimations();\n        };\n        ViewRef_.prototype.checkNoChanges = function () { this._view.detectChanges(true); };\n        ViewRef_.prototype.reattach = function () {\n            this._view.cdMode = this._originalMode;\n            this.markForCheck();\n        };\n        ViewRef_.prototype.onDestroy = function (callback) { this._view.disposables.push(callback); };\n        ViewRef_.prototype.destroy = function () { this._view.destroy(); };\n        return ViewRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var EventListener = (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        ;\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = (function () {\n        function DebugNode(nativeNode, parent, _debugInfo) {\n            this._debugInfo = _debugInfo;\n            this.nativeNode = nativeNode;\n            if (isPresent(parent) && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return isPresent(this._debugInfo) ? this._debugInfo.injector : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () {\n                return isPresent(this._debugInfo) ? this._debugInfo.component : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return isPresent(this._debugInfo) ? this._debugInfo.context : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () {\n                return isPresent(this._debugInfo) ? this._debugInfo.references : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () {\n                return isPresent(this._debugInfo) ? this._debugInfo.providerTokens : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"source\", {\n            get: function () { return isPresent(this._debugInfo) ? this._debugInfo.source : null; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = (function (_super) {\n        __extends$12(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugInfo) {\n            _super.call(this, nativeNode, parent, _debugInfo);\n            this.properties = {};\n            this.attributes = {};\n            this.classes = {};\n            this.styles = {};\n            this.childNodes = [];\n            this.nativeElement = nativeNode;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (isPresent(child)) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                var previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n                var nextChildren = this.childNodes.slice(siblingIndex + 1);\n                this.childNodes = previousChildren.concat(newChildren, nextChildren);\n                for (var i = 0; i < newChildren.length; ++i) {\n                    var newChild = newChildren[i];\n                    if (isPresent(newChild.parent)) {\n                        newChild.parent.removeChild(newChild);\n                    }\n                    newChild.parent = this;\n                }\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results.length > 0 ? results[0] : null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                var children = [];\n                this.childNodes.forEach(function (node) {\n                    if (node instanceof DebugElement) {\n                        children.push(node);\n                    }\n                });\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode);\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    function _reflector() {\n        return reflector;\n    }\n    var _CORE_PLATFORM_PROVIDERS = [\n        PlatformRef_,\n        { provide: PlatformRef, useExisting: PlatformRef_ },\n        { provide: Reflector, useFactory: _reflector, deps: [] },\n        { provide: ReflectorReader, useExisting: Reflector },\n        TestabilityRegistry,\n        Console,\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new OpaqueToken('LocaleId');\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new OpaqueToken('Translations');\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new OpaqueToken('TranslationsFormat');\n\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = (function () {\n        function ApplicationModule() {\n        }\n        ApplicationModule.decorators = [\n            { type: NgModule, args: [{\n                        providers: [\n                            ApplicationRef_,\n                            { provide: ApplicationRef, useExisting: ApplicationRef_ },\n                            ApplicationInitStatus,\n                            Compiler,\n                            APP_ID_RANDOM_PROVIDER,\n                            ViewUtils,\n                            { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                            { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                            { provide: LOCALE_ID, useValue: 'en-US' },\n                        ]\n                    },] },\n        ];\n        /** @nocollapse */\n        ApplicationModule.ctorParameters = [];\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var FILL_STYLE_FLAG = 'true'; // TODO (matsko): change to boolean\n    var ANY_STATE = '*';\n    var DEFAULT_STATE = '*';\n    var EMPTY_STATE = 'void';\n\n    var AnimationGroupPlayer = (function () {\n        function AnimationGroupPlayer(_players) {\n            var _this = this;\n            this._players = _players;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._started = false;\n            this.parentPlayer = null;\n            var count = 0;\n            var total = this._players.length;\n            if (total == 0) {\n                scheduleMicroTask(function () { return _this._onFinish(); });\n            }\n            else {\n                this._players.forEach(function (player) {\n                    player.parentPlayer = _this;\n                    player.onDone(function () {\n                        if (++count >= total) {\n                            _this._onFinish();\n                        }\n                    });\n                });\n            }\n        }\n        AnimationGroupPlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                if (!isPresent(this.parentPlayer)) {\n                    this.destroy();\n                }\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n        AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n        AnimationGroupPlayer.prototype.play = function () {\n            if (!isPresent(this.parentPlayer)) {\n                this.init();\n            }\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._players.forEach(function (player) { return player.play(); });\n        };\n        AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n        AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n        AnimationGroupPlayer.prototype.finish = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.finish(); });\n        };\n        AnimationGroupPlayer.prototype.destroy = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.destroy(); });\n        };\n        AnimationGroupPlayer.prototype.reset = function () { this._players.forEach(function (player) { return player.reset(); }); };\n        AnimationGroupPlayer.prototype.setPosition = function (p /** TODO #9100 */) {\n            this._players.forEach(function (player) { player.setPosition(p); });\n        };\n        AnimationGroupPlayer.prototype.getPosition = function () {\n            var min = 0;\n            this._players.forEach(function (player) {\n                var p = player.getPosition();\n                min = Math.min(p, min);\n            });\n            return min;\n        };\n        return AnimationGroupPlayer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AnimationKeyframe = (function () {\n        function AnimationKeyframe(offset, styles) {\n            this.offset = offset;\n            this.styles = styles;\n        }\n        return AnimationKeyframe;\n    }());\n\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationPlayer = (function () {\n        function AnimationPlayer() {\n        }\n        Object.defineProperty(AnimationPlayer.prototype, \"parentPlayer\", {\n            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            set: function (player) { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationPlayer;\n    }());\n    var NoOpAnimationPlayer = (function () {\n        function NoOpAnimationPlayer() {\n            var _this = this;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._started = false;\n            this.parentPlayer = null;\n            scheduleMicroTask(function () { return _this._onFinish(); });\n        }\n        /** @internal */\n        NoOpAnimationPlayer.prototype._onFinish = function () {\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        };\n        NoOpAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        NoOpAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        NoOpAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n        NoOpAnimationPlayer.prototype.init = function () { };\n        NoOpAnimationPlayer.prototype.play = function () {\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n            }\n            this._started = true;\n        };\n        NoOpAnimationPlayer.prototype.pause = function () { };\n        NoOpAnimationPlayer.prototype.restart = function () { };\n        NoOpAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n        NoOpAnimationPlayer.prototype.destroy = function () { };\n        NoOpAnimationPlayer.prototype.reset = function () { };\n        NoOpAnimationPlayer.prototype.setPosition = function (p /** TODO #9100 */) { };\n        NoOpAnimationPlayer.prototype.getPosition = function () { return 0; };\n        return NoOpAnimationPlayer;\n    }());\n\n    var AnimationSequencePlayer = (function () {\n        function AnimationSequencePlayer(_players) {\n            var _this = this;\n            this._players = _players;\n            this._currentIndex = 0;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._started = false;\n            this.parentPlayer = null;\n            this._players.forEach(function (player) { player.parentPlayer = _this; });\n            this._onNext(false);\n        }\n        AnimationSequencePlayer.prototype._onNext = function (start) {\n            var _this = this;\n            if (this._finished)\n                return;\n            if (this._players.length == 0) {\n                this._activePlayer = new NoOpAnimationPlayer();\n                scheduleMicroTask(function () { return _this._onFinish(); });\n            }\n            else if (this._currentIndex >= this._players.length) {\n                this._activePlayer = new NoOpAnimationPlayer();\n                this._onFinish();\n            }\n            else {\n                var player = this._players[this._currentIndex++];\n                player.onDone(function () { return _this._onNext(true); });\n                this._activePlayer = player;\n                if (start) {\n                    player.play();\n                }\n            }\n        };\n        AnimationSequencePlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                if (!isPresent(this.parentPlayer)) {\n                    this.destroy();\n                }\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        AnimationSequencePlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n        AnimationSequencePlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        AnimationSequencePlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        AnimationSequencePlayer.prototype.hasStarted = function () { return this._started; };\n        AnimationSequencePlayer.prototype.play = function () {\n            if (!isPresent(this.parentPlayer)) {\n                this.init();\n            }\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._activePlayer.play();\n        };\n        AnimationSequencePlayer.prototype.pause = function () { this._activePlayer.pause(); };\n        AnimationSequencePlayer.prototype.restart = function () {\n            if (this._players.length > 0) {\n                this.reset();\n                this._players[0].restart();\n            }\n        };\n        AnimationSequencePlayer.prototype.reset = function () { this._players.forEach(function (player) { return player.reset(); }); };\n        AnimationSequencePlayer.prototype.finish = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.finish(); });\n        };\n        AnimationSequencePlayer.prototype.destroy = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.destroy(); });\n        };\n        AnimationSequencePlayer.prototype.setPosition = function (p /** TODO #9100 */) { this._players[0].setPosition(p); };\n        AnimationSequencePlayer.prototype.getPosition = function () { return this._players[0].getPosition(); };\n        return AnimationSequencePlayer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$13 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AUTO_STYLE = '*';\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link trigger trigger\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationEntryMetadata = (function () {\n        function AnimationEntryMetadata(name, definitions) {\n            this.name = name;\n            this.definitions = definitions;\n        }\n        return AnimationEntryMetadata;\n    }());\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStateMetadata = (function () {\n        function AnimationStateMetadata() {\n        }\n        return AnimationStateMetadata;\n    }());\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link state state animation\n     * function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStateDeclarationMetadata = (function (_super) {\n        __extends$13(AnimationStateDeclarationMetadata, _super);\n        function AnimationStateDeclarationMetadata(stateNameExpr, styles) {\n            _super.call(this);\n            this.stateNameExpr = stateNameExpr;\n            this.styles = styles;\n        }\n        return AnimationStateDeclarationMetadata;\n    }(AnimationStateMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the\n     * {@link transition transition animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStateTransitionMetadata = (function (_super) {\n        __extends$13(AnimationStateTransitionMetadata, _super);\n        function AnimationStateTransitionMetadata(stateChangeExpr, steps) {\n            _super.call(this);\n            this.stateChangeExpr = stateChangeExpr;\n            this.steps = steps;\n        }\n        return AnimationStateTransitionMetadata;\n    }(AnimationStateMetadata));\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationMetadata = (function () {\n        function AnimationMetadata() {\n        }\n        return AnimationMetadata;\n    }());\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link keyframes keyframes\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationKeyframesSequenceMetadata = (function (_super) {\n        __extends$13(AnimationKeyframesSequenceMetadata, _super);\n        function AnimationKeyframesSequenceMetadata(steps) {\n            _super.call(this);\n            this.steps = steps;\n        }\n        return AnimationKeyframesSequenceMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link style style animation\n     * function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStyleMetadata = (function (_super) {\n        __extends$13(AnimationStyleMetadata, _super);\n        function AnimationStyleMetadata(styles, offset) {\n            if (offset === void 0) { offset = null; }\n            _super.call(this);\n            this.styles = styles;\n            this.offset = offset;\n        }\n        return AnimationStyleMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link animate animate\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationAnimateMetadata = (function (_super) {\n        __extends$13(AnimationAnimateMetadata, _super);\n        function AnimationAnimateMetadata(timings, styles) {\n            _super.call(this);\n            this.timings = timings;\n            this.styles = styles;\n        }\n        return AnimationAnimateMetadata;\n    }(AnimationMetadata));\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationWithStepsMetadata = (function (_super) {\n        __extends$13(AnimationWithStepsMetadata, _super);\n        function AnimationWithStepsMetadata() {\n            _super.call(this);\n        }\n        Object.defineProperty(AnimationWithStepsMetadata.prototype, \"steps\", {\n            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationWithStepsMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link sequence sequence\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationSequenceMetadata = (function (_super) {\n        __extends$13(AnimationSequenceMetadata, _super);\n        function AnimationSequenceMetadata(_steps) {\n            _super.call(this);\n            this._steps = _steps;\n        }\n        Object.defineProperty(AnimationSequenceMetadata.prototype, \"steps\", {\n            get: function () { return this._steps; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationSequenceMetadata;\n    }(AnimationWithStepsMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link group group animation\n     * function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationGroupMetadata = (function (_super) {\n        __extends$13(AnimationGroupMetadata, _super);\n        function AnimationGroupMetadata(_steps) {\n            _super.call(this);\n            this._steps = _steps;\n        }\n        Object.defineProperty(AnimationGroupMetadata.prototype, \"steps\", {\n            get: function () { return this._steps; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationGroupMetadata;\n    }(AnimationWithStepsMetadata));\n    /**\n     * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `animate` specifies an animation step that will apply the provided `styles` data for a given\n     * amount of\n     * time based on the provided `timing` expression value. Calls to `animate` are expected to be\n     * used within {@link sequence an animation sequence}, {@link group group}, or {@link transition\n     * transition}.\n     *\n     * ### Usage\n     *\n     * The `animate` function accepts two input parameters: `timing` and `styles`:\n     *\n     * - `timing` is a string based value that can be a combination of a duration with optional\n     * delay and easing values. The format for the expression breaks down to `duration delay easing`\n     * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n     * delay=100, easing=ease-out`.\n     * If a numeric value is provided then that will be used as the `duration` value in millisecond\n     * form.\n     * - `styles` is the style input data which can either be a call to {@link style style} or {@link\n     * keyframes keyframes}.\n     * If left empty then the styles from the destination state will be collected and used (this is\n     * useful when\n     * describing an animation step that will complete an animation by {@link\n     * transition#the-final-animate-call animating to the final state}).\n     *\n     * ```typescript\n     * // various functions for specifying timing data\n     * animate(500, style(...))\n     * animate(\"1s\", style(...))\n     * animate(\"100ms 0.5s\", style(...))\n     * animate(\"5s ease\", style(...))\n     * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n     *\n     * // either style() of keyframes() can be used\n     * animate(500, style({ background: \"red\" }))\n     * animate(500, keyframes([\n     *   style({ background: \"blue\" })),\n     *   style({ background: \"red\" }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function animate(timing, styles) {\n        if (styles === void 0) { styles = null; }\n        var stylesEntry = styles;\n        if (!isPresent(stylesEntry)) {\n            var EMPTY_STYLE = {};\n            stylesEntry = new AnimationStyleMetadata([EMPTY_STYLE], 1);\n        }\n        return new AnimationAnimateMetadata(timing, stylesEntry);\n    }\n    /**\n     * `group` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `group` specifies a list of animation steps that are all run in parallel. Grouped animations\n     * are useful when a series of styles must be animated/closed off\n     * at different statrting/ending times.\n     *\n     * The `group` function can either be used within a {@link sequence sequence} or a {@link transition\n     * transition}\n     * and it will only continue to the next instruction once all of the inner animation steps\n     * have completed.\n     *\n     * ### Usage\n     *\n     * The `steps` data that is passed into the `group` animation function can either consist\n     * of {@link style style} or {@link animate animate} function calls. Each call to `style()` or\n     * `animate()`\n     * within a group will be executed instantly (use {@link keyframes keyframes} or a\n     * {@link animate#usage animate() with a delay value} to offset styles to be applied at a later\n     * time).\n     *\n     * ```typescript\n     * group([\n     *   animate(\"1s\", { background: \"black\" }))\n     *   animate(\"2s\", { color: \"white\" }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function group(steps) {\n        return new AnimationGroupMetadata(steps);\n    }\n    /**\n     * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used\n     * by default when an array is passed as animation data into {@link transition transition}.)\n     *\n     * The `sequence` function can either be used within a {@link group group} or a {@link transition\n     * transition}\n     * and it will only continue to the next instruction once each of the inner animation steps\n     * have completed.\n     *\n     * To perform animation styling in parallel with other animation steps then\n     * have a look at the {@link group group} animation function.\n     *\n     * ### Usage\n     *\n     * The `steps` data that is passed into the `sequence` animation function can either consist\n     * of {@link style style} or {@link animate animate} function calls. A call to `style()` will apply\n     * the\n     * provided styling data immediately while a call to `animate()` will apply its styling\n     * data over a given time depending on its timing data.\n     *\n     * ```typescript\n     * sequence([\n     *   style({ opacity: 0 })),\n     *   animate(\"1s\", { opacity: 1 }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function sequence(steps) {\n        return new AnimationSequenceMetadata(steps);\n    }\n    /**\n     * `style` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `style` declares a key/value object containing CSS properties/styles that can then\n     * be used for {@link state animation states}, within an {@link sequence animation sequence}, or as\n     * styling data for both {@link animate animate} and {@link keyframes keyframes}.\n     *\n     * ### Usage\n     *\n     * `style` takes in a key/value string map as data and expects one or more CSS property/value\n     * pairs to be defined.\n     *\n     * ```typescript\n     * // string values are used for css properties\n     * style({ background: \"red\", color: \"blue\" })\n     *\n     * // numerical (pixel) values are also supported\n     * style({ width: 100, height: 0 })\n     * ```\n     *\n     * #### Auto-styles (using `*`)\n     *\n     * When an asterix (`*`) character is used as a value then it will be detected from the element\n     * being animated\n     * and applied as animation data when the animation starts.\n     *\n     * This feature proves useful for a state depending on layout and/or environment factors; in such\n     * cases\n     * the styles are calculated just before the animation starts.\n     *\n     * ```typescript\n     * // the steps below will animate from 0 to the\n     * // actual height of the element\n     * style({ height: 0 }),\n     * animate(\"1s\", style({ height: \"*\" }))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function style(tokens) {\n        var input;\n        var offset = null;\n        if (typeof tokens === 'string') {\n            input = [tokens];\n        }\n        else {\n            if (Array.isArray(tokens)) {\n                input = tokens;\n            }\n            else {\n                input = [tokens];\n            }\n            input.forEach(function (entry) {\n                var entryOffset = entry['offset'];\n                if (isPresent(entryOffset)) {\n                    offset = offset == null ? parseFloat(entryOffset) : offset;\n                }\n            });\n        }\n        return new AnimationStyleMetadata(input, offset);\n    }\n    /**\n     * `state` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `state` declares an animation state within the given trigger. When a state is\n     * active within a component then its associated styles will persist on\n     * the element that the trigger is attached to (even when the animation ends).\n     *\n     * To animate between states, have a look at the animation {@link transition transition}\n     * DSL function. To register states to an animation trigger please have a look\n     * at the {@link trigger trigger} function.\n     *\n     * #### The `void` state\n     *\n     * The `void` state value is a reserved word that angular uses to determine when the element is not\n     * apart\n     * of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n     * associated element\n     * is void).\n     *\n     * #### The `*` (default) state\n     *\n     * The `*` state (when styled) is a fallback state that will be used if\n     * the state that is being animated is not declared within the trigger.\n     *\n     * ### Usage\n     *\n     * `state` will declare an animation state with its associated styles\n     * within the given trigger.\n     *\n     * - `stateNameExpr` can be one or more state names separated by commas.\n     * - `styles` refers to the {@link style styling data} that will be persisted on the element once\n     * the state\n     * has been reached.\n     *\n     * ```typescript\n     * // \"void\" is a reserved name for a state and is used to represent\n     * // the state in which an element is detached from from the application.\n     * state(\"void\", style({ height: 0 }))\n     *\n     * // user-defined states\n     * state(\"closed\", style({ height: 0 }))\n     * state(\"open, visible\", style({ height: \"*\" }))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function state(stateNameExpr, styles) {\n        return new AnimationStateDeclarationMetadata(stateNameExpr, styles);\n    }\n    /**\n     * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `keyframes` specifies a collection of {@link style style} entries each optionally characterized\n     * by an `offset` value.\n     *\n     * ### Usage\n     *\n     * The `keyframes` animation function is designed to be used alongside the {@link animate animate}\n     * animation function. Instead of applying animations from where they are\n     * currently to their destination, keyframes can describe how each style entry is applied\n     * and at what point within the animation arc (much like CSS Keyframe Animations do).\n     *\n     * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at\n     * what percentage of the animate time the styles will be applied.\n     *\n     * ```typescript\n     * // the provided offset values describe when each backgroundColor value is applied.\n     * animate(\"5s\", keyframes([\n     *   style({ backgroundColor: \"red\", offset: 0 }),\n     *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n     *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n     *   style({ backgroundColor: \"black\", offset: 1 })\n     * ]))\n     * ```\n     *\n     * Alternatively, if there are no `offset` values used within the style entries then the offsets\n     * will\n     * be calculated automatically.\n     *\n     * ```typescript\n     * animate(\"5s\", keyframes([\n     *   style({ backgroundColor: \"red\" }) // offset = 0\n     *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n     *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n     *   style({ backgroundColor: \"black\" }) // offset = 1\n     * ]))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function keyframes(steps) {\n        return new AnimationKeyframesSequenceMetadata(steps);\n    }\n    /**\n     * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `transition` declares the {@link sequence sequence of animation steps} that will be run when the\n     * provided\n     * `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 => state2`\n     * which consists\n     * of two known states (use an asterix (`*`) to refer to a dynamic starting and/or ending state).\n     *\n     * Animation transitions are placed within an {@link trigger animation trigger}. For an transition\n     * to animate to\n     * a state value and persist its styles then one or more {@link state animation states} is expected\n     * to be defined.\n     *\n     * ### Usage\n     *\n     * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n     * what the\n     * previous state is and what the current state has become. In other words, if a transition is\n     * defined that\n     * matches the old/current state criteria then the associated animation will be triggered.\n     *\n     * ```typescript\n     * // all transition/state changes are defined within an animation trigger\n     * trigger(\"myAnimationTrigger\", [\n     *   // if a state is defined then its styles will be persisted when the\n     *   // animation has fully completed itself\n     *   state(\"on\", style({ background: \"green\" })),\n     *   state(\"off\", style({ background: \"grey\" })),\n     *\n     *   // a transition animation that will be kicked off when the state value\n     *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n     *   transition(\"on => off\", animate(500)),\n     *\n     *   // it is also possible to do run the same animation for both directions\n     *   transition(\"on <=> off\", animate(500)),\n     *\n     *   // or to define multiple states pairs separated by commas\n     *   transition(\"on => off, off => void\", animate(500)),\n     *\n     *   // this is a catch-all state change for when an element is inserted into\n     *   // the page and the destination state is unknown\n     *   transition(\"void => *\", [\n     *     style({ opacity: 0 }),\n     *     animate(500)\n     *   ]),\n     *\n     *   // this will capture a state change between any states\n     *   transition(\"* => *\", animate(\"1s 0s\")),\n     * ])\n     * ```\n     *\n     * The template associated with this component will make use of the `myAnimationTrigger`\n     * animation trigger by binding to an element within its template code.\n     *\n     * ```html\n     * <!-- somewhere inside of my-component-tpl.html -->\n     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n     * ```\n     *\n     * #### The final `animate` call\n     *\n     * If the final step within the transition steps is a call to `animate()` that **only**\n     * uses a timing value with **no style data** then it will be automatically used as the final\n     * animation\n     * arc for the element to animate itself to the final state. This involves an automatic mix of\n     * adding/removing CSS styles so that the element will be in the exact state it should be for the\n     * applied state to be presented correctly.\n     *\n     * ```\n     * // start off by hiding the element, but make sure that it animates properly to whatever state\n     * // is currently active for \"myAnimationTrigger\"\n     * transition(\"void => *\", [\n     *   style({ opacity: 0 }),\n     *   animate(500)\n     * ])\n     * ```\n     *\n     * ### Transition Aliases (`:enter` and `:leave`)\n     *\n     * Given that enter (insertion) and leave (removal) animations are so common,\n     * the `transition` function accepts both `:enter` and `:leave` values which\n     * are aliases for the `void => *` and `* => void` state changes.\n     *\n     * ```\n     * transition(\":enter\", [\n     *   style({ opacity: 0 }),\n     *   animate(500, style({ opacity: 1 }))\n     * ])\n     * transition(\":leave\", [\n     *   animate(500, style({ opacity: 0 }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function transition(stateChangeExpr, steps) {\n        var animationData = Array.isArray(steps) ? new AnimationSequenceMetadata(steps) : steps;\n        return new AnimationStateTransitionMetadata(stateChangeExpr, animationData);\n    }\n    /**\n     * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `trigger` Creates an animation trigger which will a list of {@link state state} and {@link\n     * transition transition}\n     * entries that will be evaluated when the expression bound to the trigger changes.\n     *\n     * Triggers are registered within the component annotation data under the\n     * {@link Component#animations-anchor animations section}. An animation trigger can\n     * be placed on an element within a template by referencing the name of the\n     * trigger followed by the expression value that the trigger is bound to\n     * (in the form of `[@triggerName]=\"expression\"`.\n     *\n     * ### Usage\n     *\n     * `trigger` will create an animation trigger reference based on the provided `name` value.\n     * The provided `animation` value is expected to be an array consisting of {@link state state} and\n     * {@link transition transition}\n     * declarations.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-component',\n     *   templateUrl: 'my-component-tpl.html',\n     *   animations: [\n     *     trigger(\"myAnimationTrigger\", [\n     *       state(...),\n     *       state(...),\n     *       transition(...),\n     *       transition(...)\n     *     ])\n     *   ]\n     * })\n     * class MyComponent {\n     *   myStatusExp = \"something\";\n     * }\n     * ```\n     *\n     * The template associated with this component will make use of the `myAnimationTrigger`\n     * animation trigger by binding to an element within its template code.\n     *\n     * ```html\n     * <!-- somewhere inside of my-component-tpl.html -->\n     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function trigger(name, animation) {\n        return new AnimationEntryMetadata(name, animation);\n    }\n\n    function prepareFinalAnimationStyles(previousStyles, newStyles, nullValue) {\n        if (nullValue === void 0) { nullValue = null; }\n        var finalStyles = {};\n        Object.keys(newStyles).forEach(function (prop) {\n            var value = newStyles[prop];\n            finalStyles[prop] = value == AUTO_STYLE ? nullValue : value.toString();\n        });\n        Object.keys(previousStyles).forEach(function (prop) {\n            if (!isPresent(finalStyles[prop])) {\n                finalStyles[prop] = nullValue;\n            }\n        });\n        return finalStyles;\n    }\n    function balanceAnimationKeyframes(collectedStyles, finalStateStyles, keyframes) {\n        var limit = keyframes.length - 1;\n        var firstKeyframe = keyframes[0];\n        // phase 1: copy all the styles from the first keyframe into the lookup map\n        var flatenedFirstKeyframeStyles = flattenStyles(firstKeyframe.styles.styles);\n        var extraFirstKeyframeStyles = {};\n        var hasExtraFirstStyles = false;\n        Object.keys(collectedStyles).forEach(function (prop) {\n            var value = collectedStyles[prop];\n            // if the style is already defined in the first keyframe then\n            // we do not replace it.\n            if (!flatenedFirstKeyframeStyles[prop]) {\n                flatenedFirstKeyframeStyles[prop] = value;\n                extraFirstKeyframeStyles[prop] = value;\n                hasExtraFirstStyles = true;\n            }\n        });\n        var keyframeCollectedStyles = StringMapWrapper.merge({}, flatenedFirstKeyframeStyles);\n        // phase 2: normalize the final keyframe\n        var finalKeyframe = keyframes[limit];\n        finalKeyframe.styles.styles.unshift(finalStateStyles);\n        var flatenedFinalKeyframeStyles = flattenStyles(finalKeyframe.styles.styles);\n        var extraFinalKeyframeStyles = {};\n        var hasExtraFinalStyles = false;\n        Object.keys(keyframeCollectedStyles).forEach(function (prop) {\n            if (!isPresent(flatenedFinalKeyframeStyles[prop])) {\n                extraFinalKeyframeStyles[prop] = AUTO_STYLE;\n                hasExtraFinalStyles = true;\n            }\n        });\n        if (hasExtraFinalStyles) {\n            finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);\n        }\n        Object.keys(flatenedFinalKeyframeStyles).forEach(function (prop) {\n            if (!isPresent(flatenedFirstKeyframeStyles[prop])) {\n                extraFirstKeyframeStyles[prop] = AUTO_STYLE;\n                hasExtraFirstStyles = true;\n            }\n        });\n        if (hasExtraFirstStyles) {\n            firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);\n        }\n        return keyframes;\n    }\n    function clearStyles(styles) {\n        var finalStyles = {};\n        Object.keys(styles).forEach(function (key) { finalStyles[key] = null; });\n        return finalStyles;\n    }\n    function collectAndResolveStyles(collection, styles) {\n        return styles.map(function (entry) {\n            var stylesObj = {};\n            Object.keys(entry).forEach(function (prop) {\n                var value = entry[prop];\n                if (value == FILL_STYLE_FLAG) {\n                    value = collection[prop];\n                    if (!isPresent(value)) {\n                        value = AUTO_STYLE;\n                    }\n                }\n                collection[prop] = value;\n                stylesObj[prop] = value;\n            });\n            return stylesObj;\n        });\n    }\n    function renderStyles(element, renderer, styles) {\n        Object.keys(styles).forEach(function (prop) { renderer.setElementStyle(element, prop, styles[prop]); });\n    }\n    function flattenStyles(styles) {\n        var finalStyles = {};\n        styles.forEach(function (entry) {\n            Object.keys(entry).forEach(function (prop) { finalStyles[prop] = entry[prop]; });\n        });\n        return finalStyles;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AnimationStyles = (function () {\n        function AnimationStyles(styles) {\n            this.styles = styles;\n        }\n        return AnimationStyles;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An instance of this class is returned as an event parameter when an animation\n     * callback is captured for an animation either during the start or done phase.\n     *\n     * ```typescript\n     * @Component({\n     *   host: {\n     *     '[@myAnimationTrigger]': 'someExpression',\n     *     '(@myAnimationTrigger.start)': 'captureStartEvent($event)',\n     *     '(@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n     *   },\n     *   animations: [\n     *     trigger(\"myAnimationTrigger\", [\n     *        // ...\n     *     ])\n     *   ]\n     * })\n     * class MyComponent {\n     *   someExpression: any = false;\n     *   captureStartEvent(event: AnimationTransitionEvent) {\n     *     // the toState, fromState and totalTime data is accessible from the event variable\n     *   }\n     *\n     *   captureDoneEvent(event: AnimationTransitionEvent) {\n     *     // the toState, fromState and totalTime data is accessible from the event variable\n     *   }\n     * }\n     * ```\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationTransitionEvent = (function () {\n        function AnimationTransitionEvent(_a) {\n            var fromState = _a.fromState, toState = _a.toState, totalTime = _a.totalTime, phaseName = _a.phaseName;\n            this.fromState = fromState;\n            this.toState = toState;\n            this.totalTime = totalTime;\n            this.phaseName = phaseName;\n        }\n        return AnimationTransitionEvent;\n    }());\n\n    var AnimationTransition = (function () {\n        function AnimationTransition(_player, _fromState, _toState, _totalTime) {\n            this._player = _player;\n            this._fromState = _fromState;\n            this._toState = _toState;\n            this._totalTime = _totalTime;\n        }\n        AnimationTransition.prototype._createEvent = function (phaseName) {\n            return new AnimationTransitionEvent({\n                fromState: this._fromState,\n                toState: this._toState,\n                totalTime: this._totalTime,\n                phaseName: phaseName\n            });\n        };\n        AnimationTransition.prototype.onStart = function (callback) {\n            var event = this._createEvent('start');\n            this._player.onStart(function () { return callback(event); });\n        };\n        AnimationTransition.prototype.onDone = function (callback) {\n            var event = this._createEvent('done');\n            this._player.onDone(function () { return callback(event); });\n        };\n        return AnimationTransition;\n    }());\n\n    var DebugDomRootRenderer = (function () {\n        function DebugDomRootRenderer(_delegate) {\n            this._delegate = _delegate;\n        }\n        DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\n            return new DebugDomRenderer(this._delegate.renderComponent(componentProto));\n        };\n        return DebugDomRootRenderer;\n    }());\n    var DebugDomRenderer = (function () {\n        function DebugDomRenderer(_delegate) {\n            this._delegate = _delegate;\n        }\n        DebugDomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n            var nativeEl = this._delegate.selectRootElement(selectorOrNode, debugInfo);\n            var debugEl = new DebugElement(nativeEl, null, debugInfo);\n            indexDebugNode(debugEl);\n            return nativeEl;\n        };\n        DebugDomRenderer.prototype.createElement = function (parentElement, name, debugInfo) {\n            var nativeEl = this._delegate.createElement(parentElement, name, debugInfo);\n            var debugEl = new DebugElement(nativeEl, getDebugNode(parentElement), debugInfo);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n            return nativeEl;\n        };\n        DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\n        DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n            var comment = this._delegate.createTemplateAnchor(parentElement, debugInfo);\n            var debugEl = new DebugNode(comment, getDebugNode(parentElement), debugInfo);\n            indexDebugNode(debugEl);\n            return comment;\n        };\n        DebugDomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n            var text = this._delegate.createText(parentElement, value, debugInfo);\n            var debugEl = new DebugNode(text, getDebugNode(parentElement), debugInfo);\n            indexDebugNode(debugEl);\n            return text;\n        };\n        DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n            var debugParent = getDebugNode(parentElement);\n            if (isPresent(debugParent) && debugParent instanceof DebugElement) {\n                var debugElement_1 = debugParent;\n                nodes.forEach(function (node) { debugElement_1.addChild(getDebugNode(node)); });\n            }\n            this._delegate.projectNodes(parentElement, nodes);\n        };\n        DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var debugNode = getDebugNode(node);\n            if (isPresent(debugNode)) {\n                var debugParent = debugNode.parent;\n                if (viewRootNodes.length > 0 && isPresent(debugParent)) {\n                    var debugViewRootNodes = [];\n                    viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes.push(getDebugNode(rootNode)); });\n                    debugParent.insertChildrenAfter(debugNode, debugViewRootNodes);\n                }\n            }\n            this._delegate.attachViewAfter(node, viewRootNodes);\n        };\n        DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\n            viewRootNodes.forEach(function (node) {\n                var debugNode = getDebugNode(node);\n                if (isPresent(debugNode) && isPresent(debugNode.parent)) {\n                    debugNode.parent.removeChild(debugNode);\n                }\n            });\n            this._delegate.detachView(viewRootNodes);\n        };\n        DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n            viewAllNodes.forEach(function (node) { removeDebugNodeFromIndex(getDebugNode(node)); });\n            this._delegate.destroyView(hostElement, viewAllNodes);\n        };\n        DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl)) {\n                debugEl.listeners.push(new EventListener(name, callback));\n            }\n            return this._delegate.listen(renderElement, name, callback);\n        };\n        DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\n            return this._delegate.listenGlobal(target, name, callback);\n        };\n        DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.properties[propertyName] = propertyValue;\n            }\n            this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\n        };\n        DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.attributes[attributeName] = attributeValue;\n            }\n            this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\n        };\n        DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n            this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\n        };\n        DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.classes[className] = isAdd;\n            }\n            this._delegate.setElementClass(renderElement, className, isAdd);\n        };\n        DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.styles[styleName] = styleValue;\n            }\n            this._delegate.setElementStyle(renderElement, styleName, styleValue);\n        };\n        DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            this._delegate.invokeElementMethod(renderElement, methodName, args);\n        };\n        DebugDomRenderer.prototype.setText = function (renderNode, text) { this._delegate.setText(renderNode, text); };\n        DebugDomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing) {\n            return this._delegate.animate(element, startingStyles, keyframes, duration, delay, easing);\n        };\n        return DebugDomRenderer;\n    }());\n\n    var StaticNodeDebugInfo = (function () {\n        function StaticNodeDebugInfo(providerTokens, componentToken, refTokens) {\n            this.providerTokens = providerTokens;\n            this.componentToken = componentToken;\n            this.refTokens = refTokens;\n        }\n        return StaticNodeDebugInfo;\n    }());\n    var DebugContext = (function () {\n        function DebugContext(_view, _nodeIndex, _tplRow, _tplCol) {\n            this._view = _view;\n            this._nodeIndex = _nodeIndex;\n            this._tplRow = _tplRow;\n            this._tplCol = _tplCol;\n        }\n        Object.defineProperty(DebugContext.prototype, \"_staticNodeInfo\", {\n            get: function () {\n                return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"component\", {\n            get: function () {\n                var staticNodeInfo = this._staticNodeInfo;\n                if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n                    return this.injector.get(staticNodeInfo.componentToken);\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"componentRenderElement\", {\n            get: function () {\n                var componentView = this._view;\n                while (isPresent(componentView.declarationAppElement) &&\n                    componentView.type !== ViewType.COMPONENT) {\n                    componentView = componentView.declarationAppElement.parentView;\n                }\n                return isPresent(componentView.declarationAppElement) ?\n                    componentView.declarationAppElement.nativeElement :\n                    null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"injector\", {\n            get: function () { return this._view.injector(this._nodeIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"renderNode\", {\n            get: function () {\n                if (isPresent(this._nodeIndex) && this._view.allNodes) {\n                    return this._view.allNodes[this._nodeIndex];\n                }\n                else {\n                    return null;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var staticNodeInfo = this._staticNodeInfo;\n                return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"source\", {\n            get: function () {\n                return this._view.componentType.templateUrl + \":\" + this._tplRow + \":\" + this._tplCol;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"references\", {\n            get: function () {\n                var _this = this;\n                var varValues = {};\n                var staticNodeInfo = this._staticNodeInfo;\n                if (isPresent(staticNodeInfo)) {\n                    var refs = staticNodeInfo.refTokens;\n                    Object.keys(refs).forEach(function (refName) {\n                        var refToken = refs[refName];\n                        var varValue;\n                        if (isBlank(refToken)) {\n                            varValue = _this._view.allNodes ? _this._view.allNodes[_this._nodeIndex] : null;\n                        }\n                        else {\n                            varValue = _this._view.injectorGet(refToken, _this._nodeIndex, null);\n                        }\n                        varValues[refName] = varValue;\n                    });\n                }\n                return varValues;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugContext;\n    }());\n\n    var ViewAnimationMap = (function () {\n        function ViewAnimationMap() {\n            this._map = new Map();\n            this._allPlayers = [];\n        }\n        ViewAnimationMap.prototype.find = function (element, animationName) {\n            var playersByAnimation = this._map.get(element);\n            if (isPresent(playersByAnimation)) {\n                return playersByAnimation[animationName];\n            }\n        };\n        ViewAnimationMap.prototype.findAllPlayersByElement = function (element) {\n            var el = this._map.get(element);\n            return el ? Object.keys(el).map(function (k) { return el[k]; }) : [];\n        };\n        ViewAnimationMap.prototype.set = function (element, animationName, player) {\n            var playersByAnimation = this._map.get(element);\n            if (!isPresent(playersByAnimation)) {\n                playersByAnimation = {};\n            }\n            var existingEntry = playersByAnimation[animationName];\n            if (isPresent(existingEntry)) {\n                this.remove(element, animationName);\n            }\n            playersByAnimation[animationName] = player;\n            this._allPlayers.push(player);\n            this._map.set(element, playersByAnimation);\n        };\n        ViewAnimationMap.prototype.getAllPlayers = function () { return this._allPlayers; };\n        ViewAnimationMap.prototype.remove = function (element, animationName) {\n            var playersByAnimation = this._map.get(element);\n            if (playersByAnimation) {\n                var player = playersByAnimation[animationName];\n                delete playersByAnimation[animationName];\n                var index = this._allPlayers.indexOf(player);\n                this._allPlayers.splice(index, 1);\n                if (Object.keys(playersByAnimation).length === 0) {\n                    this._map.delete(element);\n                }\n            }\n        };\n        return ViewAnimationMap;\n    }());\n\n    var AnimationViewContext = (function () {\n        function AnimationViewContext() {\n            this._players = new ViewAnimationMap();\n        }\n        AnimationViewContext.prototype.onAllActiveAnimationsDone = function (callback) {\n            var activeAnimationPlayers = this._players.getAllPlayers();\n            // we check for the length to avoid having GroupAnimationPlayer\n            // issue an unnecessary microtask when zero players are passed in\n            if (activeAnimationPlayers.length) {\n                new AnimationGroupPlayer(activeAnimationPlayers).onDone(function () { return callback(); });\n            }\n            else {\n                callback();\n            }\n        };\n        AnimationViewContext.prototype.queueAnimation = function (element, animationName, player) {\n            queueAnimationGlobally(player);\n            this._players.set(element, animationName, player);\n        };\n        AnimationViewContext.prototype.cancelActiveAnimation = function (element, animationName, removeAllAnimations) {\n            if (removeAllAnimations === void 0) { removeAllAnimations = false; }\n            if (removeAllAnimations) {\n                this._players.findAllPlayersByElement(element).forEach(function (player) { return player.destroy(); });\n            }\n            else {\n                var player = this._players.find(element, animationName);\n                if (player) {\n                    player.destroy();\n                }\n            }\n        };\n        return AnimationViewContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$15 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _UNDEFINED$1 = new Object();\n    var ElementInjector = (function (_super) {\n        __extends$15(ElementInjector, _super);\n        function ElementInjector(_view, _nodeIndex) {\n            _super.call(this);\n            this._view = _view;\n            this._nodeIndex = _nodeIndex;\n        }\n        ElementInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            var result = _UNDEFINED$1;\n            if (result === _UNDEFINED$1) {\n                result = this._view.injectorGet(token, this._nodeIndex, _UNDEFINED$1);\n            }\n            if (result === _UNDEFINED$1) {\n                result = this._view.parentInjector.get(token, notFoundValue);\n            }\n            return result;\n        };\n        return ElementInjector;\n    }(Injector));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$14 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _scope_check = wtfCreateScope(\"AppView#check(ascii id)\");\n    /**\n     * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n     *\n     */\n    var AppView = (function () {\n        function AppView(clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode) {\n            this.clazz = clazz;\n            this.componentType = componentType;\n            this.type = type;\n            this.viewUtils = viewUtils;\n            this.parentInjector = parentInjector;\n            this.declarationAppElement = declarationAppElement;\n            this.cdMode = cdMode;\n            this.contentChildren = [];\n            this.viewChildren = [];\n            this.viewContainerElement = null;\n            this.numberOfChecks = 0;\n            this.ref = new ViewRef_(this);\n            if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n                this.renderer = viewUtils.renderComponent(componentType);\n            }\n            else {\n                this.renderer = declarationAppElement.parentView.renderer;\n            }\n        }\n        Object.defineProperty(AppView.prototype, \"animationContext\", {\n            get: function () {\n                if (!this._animationContext) {\n                    this._animationContext = new AnimationViewContext();\n                }\n                return this._animationContext;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"destroyed\", {\n            get: function () { return this.cdMode === ChangeDetectorStatus.Destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        AppView.prototype.create = function (context, givenProjectableNodes, rootSelectorOrNode) {\n            this.context = context;\n            var projectableNodes;\n            switch (this.type) {\n                case ViewType.COMPONENT:\n                    projectableNodes = ensureSlotCount(givenProjectableNodes, this.componentType.slotCount);\n                    break;\n                case ViewType.EMBEDDED:\n                    projectableNodes = this.declarationAppElement.parentView.projectableNodes;\n                    break;\n                case ViewType.HOST:\n                    // Note: Don't ensure the slot count for the projectableNodes as we store\n                    // them only for the contained component view (which will later check the slot count...)\n                    projectableNodes = givenProjectableNodes;\n                    break;\n            }\n            this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n            this.projectableNodes = projectableNodes;\n            return this.createInternal(rootSelectorOrNode);\n        };\n        /**\n         * Overwritten by implementations.\n         * Returns the AppElement for the host element for ViewType.HOST.\n         */\n        AppView.prototype.createInternal = function (rootSelectorOrNode) { return null; };\n        AppView.prototype.init = function (rootNodesOrAppElements, allNodes, disposables, subscriptions) {\n            this.rootNodesOrAppElements = rootNodesOrAppElements;\n            this.allNodes = allNodes;\n            this.disposables = disposables;\n            this.subscriptions = subscriptions;\n            if (this.type === ViewType.COMPONENT) {\n                // Note: the render nodes have been attached to their host element\n                // in the ViewFactory already.\n                this.declarationAppElement.parentView.viewChildren.push(this);\n                this.dirtyParentQueriesInternal();\n            }\n        };\n        AppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n            return this.injectorGetInternal(token, nodeIndex, notFoundResult);\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {\n            return notFoundResult;\n        };\n        AppView.prototype.injector = function (nodeIndex) {\n            if (isPresent(nodeIndex)) {\n                return new ElementInjector(this, nodeIndex);\n            }\n            else {\n                return this.parentInjector;\n            }\n        };\n        AppView.prototype.destroy = function () {\n            if (this._hasExternalHostElement) {\n                this.renderer.detachView(this.flatRootNodes);\n            }\n            else if (isPresent(this.viewContainerElement)) {\n                this.viewContainerElement.detachView(this.viewContainerElement.nestedViews.indexOf(this));\n            }\n            this._destroyRecurse();\n        };\n        AppView.prototype._destroyRecurse = function () {\n            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n                return;\n            }\n            var children = this.contentChildren;\n            for (var i = 0; i < children.length; i++) {\n                children[i]._destroyRecurse();\n            }\n            children = this.viewChildren;\n            for (var i = 0; i < children.length; i++) {\n                children[i]._destroyRecurse();\n            }\n            this.destroyLocal();\n            this.cdMode = ChangeDetectorStatus.Destroyed;\n        };\n        AppView.prototype.destroyLocal = function () {\n            var _this = this;\n            var hostElement = this.type === ViewType.COMPONENT ? this.declarationAppElement.nativeElement : null;\n            for (var i = 0; i < this.disposables.length; i++) {\n                this.disposables[i]();\n            }\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                this.subscriptions[i].unsubscribe();\n            }\n            this.destroyInternal();\n            this.dirtyParentQueriesInternal();\n            if (this._animationContext) {\n                this._animationContext.onAllActiveAnimationsDone(function () { return _this.renderer.destroyView(hostElement, _this.allNodes); });\n            }\n            else {\n                this.renderer.destroyView(hostElement, this.allNodes);\n            }\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.destroyInternal = function () { };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.detachInternal = function () { };\n        AppView.prototype.detach = function () {\n            var _this = this;\n            this.detachInternal();\n            if (this._animationContext) {\n                this._animationContext.onAllActiveAnimationsDone(function () { return _this.renderer.detachView(_this.flatRootNodes); });\n            }\n            else {\n                this.renderer.detachView(this.flatRootNodes);\n            }\n        };\n        Object.defineProperty(AppView.prototype, \"changeDetectorRef\", {\n            get: function () { return this.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"parent\", {\n            get: function () {\n                return isPresent(this.declarationAppElement) ? this.declarationAppElement.parentView : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"flatRootNodes\", {\n            get: function () { return flattenNestedViewRenderNodes(this.rootNodesOrAppElements); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"lastRootNode\", {\n            get: function () {\n                var lastNode = this.rootNodesOrAppElements.length > 0 ?\n                    this.rootNodesOrAppElements[this.rootNodesOrAppElements.length - 1] :\n                    null;\n                return _findLastRenderNode(lastNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.dirtyParentQueriesInternal = function () { };\n        AppView.prototype.detectChanges = function (throwOnChange) {\n            var s = _scope_check(this.clazz);\n            if (this.cdMode === ChangeDetectorStatus.Checked ||\n                this.cdMode === ChangeDetectorStatus.Errored)\n                return;\n            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n                this.throwDestroyedError('detectChanges');\n            }\n            this.detectChangesInternal(throwOnChange);\n            if (this.cdMode === ChangeDetectorStatus.CheckOnce)\n                this.cdMode = ChangeDetectorStatus.Checked;\n            this.numberOfChecks++;\n            wtfLeave(s);\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.detectChangesInternal = function (throwOnChange) {\n            this.detectContentChildrenChanges(throwOnChange);\n            this.detectViewChildrenChanges(throwOnChange);\n        };\n        AppView.prototype.detectContentChildrenChanges = function (throwOnChange) {\n            for (var i = 0; i < this.contentChildren.length; ++i) {\n                var child = this.contentChildren[i];\n                if (child.cdMode === ChangeDetectorStatus.Detached)\n                    continue;\n                child.detectChanges(throwOnChange);\n            }\n        };\n        AppView.prototype.detectViewChildrenChanges = function (throwOnChange) {\n            for (var i = 0; i < this.viewChildren.length; ++i) {\n                var child = this.viewChildren[i];\n                if (child.cdMode === ChangeDetectorStatus.Detached)\n                    continue;\n                child.detectChanges(throwOnChange);\n            }\n        };\n        AppView.prototype.markContentChildAsMoved = function (renderAppElement) { this.dirtyParentQueriesInternal(); };\n        AppView.prototype.addToContentChildren = function (renderAppElement) {\n            renderAppElement.parentView.contentChildren.push(this);\n            this.viewContainerElement = renderAppElement;\n            this.dirtyParentQueriesInternal();\n        };\n        AppView.prototype.removeFromContentChildren = function (renderAppElement) {\n            ListWrapper.remove(renderAppElement.parentView.contentChildren, this);\n            this.dirtyParentQueriesInternal();\n            this.viewContainerElement = null;\n        };\n        AppView.prototype.markAsCheckOnce = function () { this.cdMode = ChangeDetectorStatus.CheckOnce; };\n        AppView.prototype.markPathToRootAsCheckOnce = function () {\n            var c = this;\n            while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n                if (c.cdMode === ChangeDetectorStatus.Checked) {\n                    c.cdMode = ChangeDetectorStatus.CheckOnce;\n                }\n                var parentEl = c.type === ViewType.COMPONENT ? c.declarationAppElement : c.viewContainerElement;\n                c = isPresent(parentEl) ? parentEl.parentView : null;\n            }\n        };\n        AppView.prototype.eventHandler = function (cb) { return cb; };\n        AppView.prototype.throwDestroyedError = function (details) { throw new ViewDestroyedError(details); };\n        return AppView;\n    }());\n    var DebugAppView = (function (_super) {\n        __extends$14(DebugAppView, _super);\n        function DebugAppView(clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode, staticNodeDebugInfos) {\n            _super.call(this, clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode);\n            this.staticNodeDebugInfos = staticNodeDebugInfos;\n            this._currentDebugContext = null;\n        }\n        DebugAppView.prototype.create = function (context, givenProjectableNodes, rootSelectorOrNode) {\n            this._resetDebug();\n            try {\n                return _super.prototype.create.call(this, context, givenProjectableNodes, rootSelectorOrNode);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n            this._resetDebug();\n            try {\n                return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.detach = function () {\n            this._resetDebug();\n            try {\n                _super.prototype.detach.call(this);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.destroyLocal = function () {\n            this._resetDebug();\n            try {\n                _super.prototype.destroyLocal.call(this);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.detectChanges = function (throwOnChange) {\n            this._resetDebug();\n            try {\n                _super.prototype.detectChanges.call(this, throwOnChange);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype._resetDebug = function () { this._currentDebugContext = null; };\n        DebugAppView.prototype.debug = function (nodeIndex, rowNum, colNum) {\n            return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n        };\n        DebugAppView.prototype._rethrowWithContext = function (e) {\n            if (!(e instanceof ViewWrappedError)) {\n                if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedError)) {\n                    this.cdMode = ChangeDetectorStatus.Errored;\n                }\n                if (isPresent(this._currentDebugContext)) {\n                    throw new ViewWrappedError(e, this._currentDebugContext);\n                }\n            }\n        };\n        DebugAppView.prototype.eventHandler = function (cb) {\n            var _this = this;\n            var superHandler = _super.prototype.eventHandler.call(this, cb);\n            return function (event) {\n                _this._resetDebug();\n                try {\n                    return superHandler(event);\n                }\n                catch (e) {\n                    _this._rethrowWithContext(e);\n                    throw e;\n                }\n            };\n        };\n        return DebugAppView;\n    }(AppView));\n    function _findLastRenderNode(node) {\n        var lastNode;\n        if (node instanceof AppElement) {\n            var appEl = node;\n            lastNode = appEl.nativeElement;\n            if (isPresent(appEl.nestedViews)) {\n                // Note: Views might have no root nodes at all!\n                for (var i = appEl.nestedViews.length - 1; i >= 0; i--) {\n                    var nestedView = appEl.nestedViews[i];\n                    if (nestedView.rootNodesOrAppElements.length > 0) {\n                        lastNode = _findLastRenderNode(nestedView.rootNodesOrAppElements[nestedView.rootNodesOrAppElements.length - 1]);\n                    }\n                }\n            }\n        }\n        else {\n            lastNode = node;\n        }\n        return lastNode;\n    }\n\n    var __core_private__ = {\n        isDefaultChangeDetectionStrategy: isDefaultChangeDetectionStrategy,\n        ChangeDetectorStatus: ChangeDetectorStatus,\n        constructDependencies: constructDependencies,\n        LifecycleHooks: LifecycleHooks,\n        LIFECYCLE_HOOKS_VALUES: LIFECYCLE_HOOKS_VALUES,\n        ReflectorReader: ReflectorReader,\n        CodegenComponentFactoryResolver: CodegenComponentFactoryResolver,\n        AppElement: AppElement,\n        AppView: AppView,\n        DebugAppView: DebugAppView,\n        NgModuleInjector: NgModuleInjector,\n        registerModuleFactory: registerModuleFactory,\n        ViewType: ViewType,\n        view_utils: view_utils,\n        ViewMetadata: ViewMetadata,\n        DebugContext: DebugContext,\n        StaticNodeDebugInfo: StaticNodeDebugInfo,\n        devModeEqual: devModeEqual,\n        UNINITIALIZED: UNINITIALIZED,\n        ValueUnwrapper: ValueUnwrapper,\n        RenderDebugInfo: RenderDebugInfo,\n        TemplateRef_: TemplateRef_,\n        ReflectionCapabilities: ReflectionCapabilities,\n        makeDecorator: makeDecorator,\n        DebugDomRootRenderer: DebugDomRootRenderer,\n        Console: Console,\n        reflector: reflector,\n        Reflector: Reflector,\n        NoOpAnimationPlayer: NoOpAnimationPlayer,\n        AnimationPlayer: AnimationPlayer,\n        AnimationSequencePlayer: AnimationSequencePlayer,\n        AnimationGroupPlayer: AnimationGroupPlayer,\n        AnimationKeyframe: AnimationKeyframe,\n        prepareFinalAnimationStyles: prepareFinalAnimationStyles,\n        balanceAnimationKeyframes: balanceAnimationKeyframes,\n        flattenStyles: flattenStyles,\n        clearStyles: clearStyles,\n        renderStyles: renderStyles,\n        collectAndResolveStyles: collectAndResolveStyles,\n        AnimationStyles: AnimationStyles,\n        ANY_STATE: ANY_STATE,\n        DEFAULT_STATE: DEFAULT_STATE,\n        EMPTY_STATE: EMPTY_STATE,\n        FILL_STYLE_FLAG: FILL_STYLE_FLAG,\n        ComponentStillLoadingError: ComponentStillLoadingError,\n        isPromise: isPromise,\n        AnimationTransition: AnimationTransition\n    };\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.AnimationTransitionEvent = AnimationTransitionEvent;\n    exports.AnimationPlayer = AnimationPlayer;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.AfterContentChecked = AfterContentChecked;\n    exports.AfterContentInit = AfterContentInit;\n    exports.AfterViewChecked = AfterViewChecked;\n    exports.AfterViewInit = AfterViewInit;\n    exports.DoCheck = DoCheck;\n    exports.OnChanges = OnChanges;\n    exports.OnDestroy = OnDestroy;\n    exports.OnInit = OnInit;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Class = Class;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.OpaqueToken = OpaqueToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Injectable = Injectable;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.CollectionChangeRecord = CollectionChangeRecord;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueChangeRecord = KeyValueChangeRecord;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.__core_private__ = __core_private__;\n    exports.AUTO_STYLE = AUTO_STYLE;\n    exports.AnimationEntryMetadata = AnimationEntryMetadata;\n    exports.AnimationStateMetadata = AnimationStateMetadata;\n    exports.AnimationStateDeclarationMetadata = AnimationStateDeclarationMetadata;\n    exports.AnimationStateTransitionMetadata = AnimationStateTransitionMetadata;\n    exports.AnimationMetadata = AnimationMetadata;\n    exports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata;\n    exports.AnimationStyleMetadata = AnimationStyleMetadata;\n    exports.AnimationAnimateMetadata = AnimationAnimateMetadata;\n    exports.AnimationWithStepsMetadata = AnimationWithStepsMetadata;\n    exports.AnimationSequenceMetadata = AnimationSequenceMetadata;\n    exports.AnimationGroupMetadata = AnimationGroupMetadata;\n    exports.animate = animate;\n    exports.group = group;\n    exports.sequence = sequence;\n    exports.style = style;\n    exports.state = state;\n    exports.keyframes = keyframes;\n    exports.transition = transition;\n    exports.trigger = trigger;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/core/bundles/core.umd.js\n// module id = 12\n// module chunks = 0 2","/**\n * @license Angular v2.1.2\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/compiler'), require('@angular/core'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/compiler', '@angular/core', '@angular/platform-browser'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.platformBrowserDynamic = global.ng.platformBrowserDynamic || {}),global.ng.compiler,global.ng.core,global.ng.platformBrowser));\n}(this, function (exports,_angular_compiler,_angular_core,_angular_platformBrowser) { 'use strict';\n\n    var INTERNAL_BROWSER_PLATFORM_PROVIDERS = _angular_platformBrowser.__platform_browser_private__.INTERNAL_BROWSER_PLATFORM_PROVIDERS;\n\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var ResourceLoaderImpl = (function (_super) {\n        __extends(ResourceLoaderImpl, _super);\n        function ResourceLoaderImpl() {\n            _super.apply(this, arguments);\n        }\n        ResourceLoaderImpl.prototype.get = function (url) {\n            var resolve;\n            var reject;\n            var promise = new Promise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, true);\n            xhr.responseType = 'text';\n            xhr.onload = function () {\n                // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n                // by IE10)\n                var response = xhr.response || xhr.responseText;\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = xhr.status === 1223 ? 204 : xhr.status;\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = response ? 200 : 0;\n                }\n                if (200 <= status && status <= 300) {\n                    resolve(response);\n                }\n                else {\n                    reject(\"Failed to load \" + url);\n                }\n            };\n            xhr.onerror = function () { reject(\"Failed to load \" + url); };\n            xhr.send();\n            return promise;\n        };\n        ResourceLoaderImpl.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        ResourceLoaderImpl.ctorParameters = [];\n        return ResourceLoaderImpl;\n    }(_angular_compiler.ResourceLoader));\n\n    var INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [\n        INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n        {\n            provide: _angular_core.COMPILER_OPTIONS,\n            useValue: { providers: [{ provide: _angular_compiler.ResourceLoader, useClass: ResourceLoaderImpl }] },\n            multi: true\n        },\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var _global = globalScope;\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    _global.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n     * ResourceLoader.\n     *\n     * The template cache needs to be built and loaded into window.$templateCache\n     * via a separate mechanism.\n     */\n    var CachedResourceLoader = (function (_super) {\n        __extends$1(CachedResourceLoader, _super);\n        function CachedResourceLoader() {\n            _super.call(this);\n            this._cache = _global.$templateCache;\n            if (this._cache == null) {\n                throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n            }\n        }\n        CachedResourceLoader.prototype.get = function (url) {\n            if (this._cache.hasOwnProperty(url)) {\n                return Promise.resolve(this._cache[url]);\n            }\n            else {\n                return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n            }\n        };\n        return CachedResourceLoader;\n    }(_angular_compiler.ResourceLoader));\n\n    var __platform_browser_dynamic_private__ = {\n        INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS,\n        ResourceLoaderImpl: ResourceLoaderImpl\n    };\n\n    /**\n     * @experimental\n     */\n    var RESOURCE_CACHE_PROVIDER = [{ provide: _angular_compiler.ResourceLoader, useClass: CachedResourceLoader }];\n    /**\n     * @stable\n     */\n    var platformBrowserDynamic = _angular_core.createPlatformFactory(_angular_compiler.platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\n    exports.RESOURCE_CACHE_PROVIDER = RESOURCE_CACHE_PROVIDER;\n    exports.platformBrowserDynamic = platformBrowserDynamic;\n    exports.__platform_browser_dynamic_private__ = __platform_browser_dynamic_private__;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js\n// module id = 89\n// module chunks = 0 2","/**\n * @license Angular v2.1.2\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.platformBrowser = global.ng.platformBrowser || {}),global.ng.common,global.ng.core));\n}(this, function (exports,_angular_common,_angular_core) { 'use strict';\n\n    var DebugDomRootRenderer = _angular_core.__core_private__.DebugDomRootRenderer;\n    var NoOpAnimationPlayer = _angular_core.__core_private__.NoOpAnimationPlayer;\n\n    var _NoOpAnimationDriver = (function () {\n        function _NoOpAnimationDriver() {\n        }\n        _NoOpAnimationDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing) {\n            return new NoOpAnimationPlayer();\n        };\n        return _NoOpAnimationDriver;\n    }());\n    /**\n     * @experimental\n     */\n    var AnimationDriver = (function () {\n        function AnimationDriver() {\n        }\n        AnimationDriver.NOOP = new _NoOpAnimationDriver();\n        return AnimationDriver;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var global$1 = globalScope;\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    global$1.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    function isPresent(obj) {\n        return obj != null;\n    }\n    function isBlank(obj) {\n        return obj == null;\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token === undefined || token === null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return token.overriddenName;\n        }\n        if (token.name) {\n            return token.name;\n        }\n        var res = token.toString();\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    function setValueOnPath(global, path, value) {\n        var parts = path.split('.');\n        var obj = global;\n        while (parts.length > 1) {\n            var name = parts.shift();\n            if (obj.hasOwnProperty(name) && isPresent(obj[name])) {\n                obj = obj[name];\n            }\n            else {\n                obj = obj[name] = {};\n            }\n        }\n        if (obj === undefined || obj === null) {\n            obj = {};\n        }\n        obj[parts.shift()] = value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    var DASH_CASE_REGEXP = /-([a-z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i - 0] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function dashCaseToCamelCase(input) {\n        return input.replace(DASH_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i - 0] = arguments[_i];\n            }\n            return m[1].toUpperCase();\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _DOM = null;\n    function getDOM() {\n        return _DOM;\n    }\n    function setRootDomAdapter(adapter) {\n        if (!_DOM) {\n            _DOM = adapter;\n        }\n    }\n    /* tslint:disable:requireParameterType */\n    /**\n     * Provides DOM operations in an environment-agnostic way.\n     *\n     * @security Tread carefully! Interacting with the DOM directly is dangerous and\n     * can introduce XSS risks.\n     */\n    var DomAdapter = (function () {\n        function DomAdapter() {\n            this.resourceLoaderType = null;\n        }\n        Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\n            /**\n             * Maps attribute names to their corresponding property names for cases\n             * where attribute name doesn't match property name.\n             */\n            get: function () { return this._attrToPropMap; },\n            set: function (value) { this._attrToPropMap = value; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        ;\n        return DomAdapter;\n    }());\n\n    var WebAnimationsPlayer = (function () {\n        function WebAnimationsPlayer(element, keyframes, options) {\n            this.element = element;\n            this.keyframes = keyframes;\n            this.options = options;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._initialized = false;\n            this._started = false;\n            this.parentPlayer = null;\n            this._duration = options['duration'];\n        }\n        WebAnimationsPlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                if (!isPresent(this.parentPlayer)) {\n                    this.destroy();\n                }\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        WebAnimationsPlayer.prototype.init = function () {\n            var _this = this;\n            if (this._initialized)\n                return;\n            this._initialized = true;\n            var keyframes = this.keyframes.map(function (styles) {\n                var formattedKeyframe = {};\n                Object.keys(styles).forEach(function (prop) {\n                    var value = styles[prop];\n                    formattedKeyframe[prop] = value == _angular_core.AUTO_STYLE ? _computeStyle(_this.element, prop) : value;\n                });\n                return formattedKeyframe;\n            });\n            this._player = this._triggerWebAnimation(this.element, keyframes, this.options);\n            // this is required so that the player doesn't start to animate right away\n            this.reset();\n            this._player.onfinish = function () { return _this._onFinish(); };\n        };\n        /** @internal */\n        WebAnimationsPlayer.prototype._triggerWebAnimation = function (element, keyframes, options) {\n            return element.animate(keyframes, options);\n        };\n        WebAnimationsPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        WebAnimationsPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        WebAnimationsPlayer.prototype.play = function () {\n            this.init();\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._player.play();\n        };\n        WebAnimationsPlayer.prototype.pause = function () {\n            this.init();\n            this._player.pause();\n        };\n        WebAnimationsPlayer.prototype.finish = function () {\n            this.init();\n            this._onFinish();\n            this._player.finish();\n        };\n        WebAnimationsPlayer.prototype.reset = function () { this._player.cancel(); };\n        WebAnimationsPlayer.prototype.restart = function () {\n            this.reset();\n            this.play();\n        };\n        WebAnimationsPlayer.prototype.hasStarted = function () { return this._started; };\n        WebAnimationsPlayer.prototype.destroy = function () {\n            this.reset();\n            this._onFinish();\n        };\n        Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n            get: function () { return this._duration; },\n            enumerable: true,\n            configurable: true\n        });\n        WebAnimationsPlayer.prototype.setPosition = function (p) { this._player.currentTime = p * this.totalTime; };\n        WebAnimationsPlayer.prototype.getPosition = function () { return this._player.currentTime / this.totalTime; };\n        return WebAnimationsPlayer;\n    }());\n    function _computeStyle(element, prop) {\n        return getDOM().getComputedStyle(element)[prop];\n    }\n\n    var WebAnimationsDriver = (function () {\n        function WebAnimationsDriver() {\n        }\n        WebAnimationsDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing) {\n            var formattedSteps = [];\n            var startingStyleLookup = {};\n            if (isPresent(startingStyles) && startingStyles.styles.length > 0) {\n                startingStyleLookup = _populateStyles(element, startingStyles, {});\n                startingStyleLookup['offset'] = 0;\n                formattedSteps.push(startingStyleLookup);\n            }\n            keyframes.forEach(function (keyframe) {\n                var data = _populateStyles(element, keyframe.styles, startingStyleLookup);\n                data['offset'] = keyframe.offset;\n                formattedSteps.push(data);\n            });\n            // this is a special case when only styles are applied as an\n            // animation. When this occurs we want to animate from start to\n            // end with the same values. Removing the offset and having only\n            // start/end values is suitable enough for the web-animations API\n            if (formattedSteps.length == 1) {\n                var start = formattedSteps[0];\n                start['offset'] = null;\n                formattedSteps = [start, start];\n            }\n            var playerOptions = {\n                'duration': duration,\n                'delay': delay,\n                'fill': 'both' // we use `both` because it allows for styling at 0% to work with `delay`\n            };\n            // we check for this to avoid having a null|undefined value be present\n            // for the easing (which results in an error for certain browsers #9752)\n            if (easing) {\n                playerOptions['easing'] = easing;\n            }\n            return new WebAnimationsPlayer(element, formattedSteps, playerOptions);\n        };\n        return WebAnimationsDriver;\n    }());\n    function _populateStyles(element, styles, defaultStyles) {\n        var data = {};\n        styles.styles.forEach(function (entry) {\n            Object.keys(entry).forEach(function (prop) {\n                var val = entry[prop];\n                var formattedProp = dashCaseToCamelCase(prop);\n                data[formattedProp] =\n                    val == _angular_core.AUTO_STYLE ? val : val.toString() + _resolveStyleUnit(val, prop, formattedProp);\n            });\n        });\n        Object.keys(defaultStyles).forEach(function (prop) {\n            if (!isPresent(data[prop])) {\n                data[prop] = defaultStyles[prop];\n            }\n        });\n        return data;\n    }\n    function _resolveStyleUnit(val, userProvidedProp, formattedProp) {\n        var unit = '';\n        if (_isPixelDimensionStyle(formattedProp) && val != 0 && val != '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else if (_findDimensionalSuffix(val.toString()).length == 0) {\n                throw new Error('Please provide a CSS unit value for ' + userProvidedProp + ':' + val);\n            }\n        }\n        return unit;\n    }\n    var _$0 = 48;\n    var _$9 = 57;\n    var _$PERIOD = 46;\n    function _findDimensionalSuffix(value) {\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charCodeAt(i);\n            if ((c >= _$0 && c <= _$9) || c == _$PERIOD)\n                continue;\n            return value.substring(i, value.length);\n        }\n        return '';\n    }\n    function _isPixelDimensionStyle(prop) {\n        switch (prop) {\n            case 'width':\n            case 'height':\n            case 'minWidth':\n            case 'minHeight':\n            case 'maxWidth':\n            case 'maxHeight':\n            case 'left':\n            case 'top':\n            case 'bottom':\n            case 'right':\n            case 'fontSize':\n            case 'outlineWidth':\n            case 'outlineOffset':\n            case 'paddingTop':\n            case 'paddingLeft':\n            case 'paddingBottom':\n            case 'paddingRight':\n            case 'marginTop':\n            case 'marginLeft':\n            case 'marginBottom':\n            case 'marginRight':\n            case 'borderRadius':\n            case 'borderWidth':\n            case 'borderTopWidth':\n            case 'borderLeftWidth':\n            case 'borderRightWidth':\n            case 'borderBottomWidth':\n            case 'textIndent':\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Provides DOM operations in any browser environment.\n     *\n     * @security Tread carefully! Interacting with the DOM directly is dangerous and\n     * can introduce XSS risks.\n     */\n    var GenericBrowserDomAdapter = (function (_super) {\n        __extends$1(GenericBrowserDomAdapter, _super);\n        function GenericBrowserDomAdapter() {\n            var _this = this;\n            _super.call(this);\n            this._animationPrefix = null;\n            this._transitionEnd = null;\n            try {\n                var element_1 = this.createElement('div', this.defaultDoc());\n                if (isPresent(this.getStyle(element_1, 'animationName'))) {\n                    this._animationPrefix = '';\n                }\n                else {\n                    var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n                    for (var i = 0; i < domPrefixes.length; i++) {\n                        if (isPresent(this.getStyle(element_1, domPrefixes[i] + 'AnimationName'))) {\n                            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n                            break;\n                        }\n                    }\n                }\n                var transEndEventNames_1 = {\n                    WebkitTransition: 'webkitTransitionEnd',\n                    MozTransition: 'transitionend',\n                    OTransition: 'oTransitionEnd otransitionend',\n                    transition: 'transitionend'\n                };\n                Object.keys(transEndEventNames_1).forEach(function (key) {\n                    if (isPresent(_this.getStyle(element_1, key))) {\n                        _this._transitionEnd = transEndEventNames_1[key];\n                    }\n                });\n            }\n            catch (e) {\n                this._animationPrefix = null;\n                this._transitionEnd = null;\n            }\n        }\n        GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return el.getDistributedNodes(); };\n        GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\n            el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n        };\n        GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\n        GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\n            return typeof this.defaultDoc().body.createShadowRoot === 'function';\n        };\n        GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () { return this._animationPrefix ? this._animationPrefix : ''; };\n        GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return this._transitionEnd ? this._transitionEnd : ''; };\n        GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\n            return isPresent(this._animationPrefix) && isPresent(this._transitionEnd);\n        };\n        return GenericBrowserDomAdapter;\n    }(DomAdapter));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _attrToPropMap = {\n        'class': 'className',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    var DOM_KEY_LOCATION_NUMPAD = 3;\n    // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n    var _keyMap = {\n        // The following values are here for cross-browser compatibility and to match the W3C standard\n        // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n        '\\b': 'Backspace',\n        '\\t': 'Tab',\n        '\\x7F': 'Delete',\n        '\\x1B': 'Escape',\n        'Del': 'Delete',\n        'Esc': 'Escape',\n        'Left': 'ArrowLeft',\n        'Right': 'ArrowRight',\n        'Up': 'ArrowUp',\n        'Down': 'ArrowDown',\n        'Menu': 'ContextMenu',\n        'Scroll': 'ScrollLock',\n        'Win': 'OS'\n    };\n    // There is a bug in Chrome for numeric keypad keys:\n    // https://code.google.com/p/chromium/issues/detail?id=155654\n    // 1, 2, 3 ... are reported as A, B, C ...\n    var _chromeNumKeyPadMap = {\n        'A': '1',\n        'B': '2',\n        'C': '3',\n        'D': '4',\n        'E': '5',\n        'F': '6',\n        'G': '7',\n        'H': '8',\n        'I': '9',\n        'J': '*',\n        'K': '+',\n        'M': '-',\n        'N': '.',\n        'O': '/',\n        '\\x60': '0',\n        '\\x90': 'NumLock'\n    };\n    /**\n     * A `DomAdapter` powered by full browser DOM APIs.\n     *\n     * @security Tread carefully! Interacting with the DOM directly is dangerous and\n     * can introduce XSS risks.\n     */\n    /* tslint:disable:requireParameterType */\n    var BrowserDomAdapter = (function (_super) {\n        __extends(BrowserDomAdapter, _super);\n        function BrowserDomAdapter() {\n            _super.apply(this, arguments);\n        }\n        BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error('parse not implemented'); };\n        BrowserDomAdapter.makeCurrent = function () { setRootDomAdapter(new BrowserDomAdapter()); };\n        BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\n        BrowserDomAdapter.prototype.setProperty = function (el, name, value) { el[name] = value; };\n        BrowserDomAdapter.prototype.getProperty = function (el, name) { return el[name]; };\n        BrowserDomAdapter.prototype.invoke = function (el, methodName, args) { (_a = el)[methodName].apply(_a, args); var _a; };\n        // TODO(tbosch): move this into a separate environment class once we have it\n        BrowserDomAdapter.prototype.logError = function (error) { (window.console.error || window.console.log)(error); };\n        BrowserDomAdapter.prototype.log = function (error) { window.console.log(error); };\n        BrowserDomAdapter.prototype.logGroup = function (error) {\n            window.console.group && window.console.group(error);\n            this.logError(error);\n        };\n        BrowserDomAdapter.prototype.logGroupEnd = function () { window.console.groupEnd && window.console.groupEnd(); };\n        Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\n            get: function () { return _attrToPropMap; },\n            enumerable: true,\n            configurable: true\n        });\n        BrowserDomAdapter.prototype.query = function (selector) { return document.querySelector(selector); };\n        BrowserDomAdapter.prototype.querySelector = function (el, selector) {\n            return el.querySelector(selector);\n        };\n        BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\n        BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\n        BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\n            el.addEventListener(evt, listener, false);\n            // Needed to follow Dart's subscription semantic, until fix of\n            // https://code.google.com/p/dart/issues/detail?id=17406\n            return function () { el.removeEventListener(evt, listener, false); };\n        };\n        BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\n        BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\n            var evt = document.createEvent('MouseEvent');\n            evt.initEvent(eventType, true, true);\n            return evt;\n        };\n        BrowserDomAdapter.prototype.createEvent = function (eventType) {\n            var evt = document.createEvent('Event');\n            evt.initEvent(eventType, true, true);\n            return evt;\n        };\n        BrowserDomAdapter.prototype.preventDefault = function (evt) {\n            evt.preventDefault();\n            evt.returnValue = false;\n        };\n        BrowserDomAdapter.prototype.isPrevented = function (evt) {\n            return evt.defaultPrevented || isPresent(evt.returnValue) && !evt.returnValue;\n        };\n        BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\n        BrowserDomAdapter.prototype.getTemplateContent = function (el) {\n            return 'content' in el && el instanceof HTMLTemplateElement ? el.content : null;\n        };\n        BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\n        BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\n        BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\n        BrowserDomAdapter.prototype.type = function (node) { return node.type; };\n        BrowserDomAdapter.prototype.content = function (node) {\n            if (this.hasProperty(node, 'content')) {\n                return node.content;\n            }\n            else {\n                return node;\n            }\n        };\n        BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\n        BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\n        BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\n        BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\n        BrowserDomAdapter.prototype.childNodesAsList = function (el) {\n            var childNodes = el.childNodes;\n            var res = new Array(childNodes.length);\n            for (var i = 0; i < childNodes.length; i++) {\n                res[i] = childNodes[i];\n            }\n            return res;\n        };\n        BrowserDomAdapter.prototype.clearNodes = function (el) {\n            while (el.firstChild) {\n                el.removeChild(el.firstChild);\n            }\n        };\n        BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\n        BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\n        BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\n        BrowserDomAdapter.prototype.remove = function (node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n            return node;\n        };\n        BrowserDomAdapter.prototype.insertBefore = function (el, node) { el.parentNode.insertBefore(node, el); };\n        BrowserDomAdapter.prototype.insertAllBefore = function (el, nodes) {\n            nodes.forEach(function (n) { return el.parentNode.insertBefore(n, el); });\n        };\n        BrowserDomAdapter.prototype.insertAfter = function (el, node) { el.parentNode.insertBefore(node, el.nextSibling); };\n        BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\n        BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\n        BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\n        BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\n        BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\n        BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\n        BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\n        BrowserDomAdapter.prototype.createComment = function (text) { return document.createComment(text); };\n        BrowserDomAdapter.prototype.createTemplate = function (html) {\n            var t = document.createElement('template');\n            t.innerHTML = html;\n            return t;\n        };\n        BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\n            if (doc === void 0) { doc = document; }\n            return doc.createElement(tagName);\n        };\n        BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\n            if (doc === void 0) { doc = document; }\n            return doc.createElementNS(ns, tagName);\n        };\n        BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\n            if (doc === void 0) { doc = document; }\n            return doc.createTextNode(text);\n        };\n        BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\n            if (doc === void 0) { doc = document; }\n            var el = doc.createElement('SCRIPT');\n            el.setAttribute(attrName, attrValue);\n            return el;\n        };\n        BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\n            if (doc === void 0) { doc = document; }\n            var style = doc.createElement('style');\n            this.appendChild(style, this.createTextNode(css));\n            return style;\n        };\n        BrowserDomAdapter.prototype.createShadowRoot = function (el) { return el.createShadowRoot(); };\n        BrowserDomAdapter.prototype.getShadowRoot = function (el) { return el.shadowRoot; };\n        BrowserDomAdapter.prototype.getHost = function (el) { return el.host; };\n        BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\n        BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\n            return element.getElementsByClassName(name);\n        };\n        BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\n            return element.getElementsByTagName(name);\n        };\n        BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\n        BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\n        BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\n        BrowserDomAdapter.prototype.hasClass = function (element, className) {\n            return element.classList.contains(className);\n        };\n        BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\n            element.style[styleName] = styleValue;\n        };\n        BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            element.style[stylename] = '';\n        };\n        BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\n        BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\n            if (styleValue === void 0) { styleValue = null; }\n            var value = this.getStyle(element, styleName) || '';\n            return styleValue ? value == styleValue : value.length > 0;\n        };\n        BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\n        BrowserDomAdapter.prototype.attributeMap = function (element) {\n            var res = new Map();\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var attrib = elAttrs[i];\n                res.set(attrib.name, attrib.value);\n            }\n            return res;\n        };\n        BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {\n            return element.hasAttribute(attribute);\n        };\n        BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {\n            return element.hasAttributeNS(ns, attribute);\n        };\n        BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {\n            return element.getAttribute(attribute);\n        };\n        BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {\n            return element.getAttributeNS(ns, name);\n        };\n        BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\n        BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\n            element.setAttributeNS(ns, name, value);\n        };\n        BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\n        BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {\n            element.removeAttributeNS(ns, name);\n        };\n        BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\n        BrowserDomAdapter.prototype.createHtmlDocument = function () {\n            return document.implementation.createHTMLDocument('fakeTitle');\n        };\n        BrowserDomAdapter.prototype.defaultDoc = function () { return document; };\n        BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\n            try {\n                return el.getBoundingClientRect();\n            }\n            catch (e) {\n                return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n            }\n        };\n        BrowserDomAdapter.prototype.getTitle = function () { return document.title; };\n        BrowserDomAdapter.prototype.setTitle = function (newTitle) { document.title = newTitle || ''; };\n        BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\n            if (n instanceof HTMLElement) {\n                return n.matches && n.matches(selector) ||\n                    n.msMatchesSelector && n.msMatchesSelector(selector) ||\n                    n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n            }\n            return false;\n        };\n        BrowserDomAdapter.prototype.isTemplateElement = function (el) {\n            return el instanceof HTMLElement && el.nodeName == 'TEMPLATE';\n        };\n        BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\n        BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\n        BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\n        BrowserDomAdapter.prototype.hasShadowRoot = function (node) {\n            return isPresent(node.shadowRoot) && node instanceof HTMLElement;\n        };\n        BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\n        BrowserDomAdapter.prototype.importIntoDoc = function (node) { return document.importNode(this.templateAwareRoot(node), true); };\n        BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\n        BrowserDomAdapter.prototype.getHref = function (el) { return el.href; };\n        BrowserDomAdapter.prototype.getEventKey = function (event) {\n            var key = event.key;\n            if (isBlank(key)) {\n                key = event.keyIdentifier;\n                // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n                // Safari cf\n                // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n                if (isBlank(key)) {\n                    return 'Unidentified';\n                }\n                if (key.startsWith('U+')) {\n                    key = String.fromCharCode(parseInt(key.substring(2), 16));\n                    if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                        // There is a bug in Chrome for numeric keypad keys:\n                        // https://code.google.com/p/chromium/issues/detail?id=155654\n                        // 1, 2, 3 ... are reported as A, B, C ...\n                        key = _chromeNumKeyPadMap[key];\n                    }\n                }\n            }\n            return _keyMap[key] || key;\n        };\n        BrowserDomAdapter.prototype.getGlobalEventTarget = function (target) {\n            if (target === 'window') {\n                return window;\n            }\n            if (target === 'document') {\n                return document;\n            }\n            if (target === 'body') {\n                return document.body;\n            }\n        };\n        BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\n        BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\n        BrowserDomAdapter.prototype.getBaseHref = function () {\n            var href = getBaseElementHref();\n            return isBlank(href) ? null : relativePath(href);\n        };\n        BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\n        BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\n        BrowserDomAdapter.prototype.setData = function (element, name, value) {\n            this.setAttribute(element, 'data-' + name, value);\n        };\n        BrowserDomAdapter.prototype.getData = function (element, name) {\n            return this.getAttribute(element, 'data-' + name);\n        };\n        BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\n        // TODO(tbosch): move this into a separate environment class once we have it\n        BrowserDomAdapter.prototype.setGlobalVar = function (path, value) { setValueOnPath(global$1, path, value); };\n        BrowserDomAdapter.prototype.supportsWebAnimation = function () {\n            return typeof Element.prototype['animate'] === 'function';\n        };\n        BrowserDomAdapter.prototype.performanceNow = function () {\n            // performance.now() is not available in all browsers, see\n            // http://caniuse.com/#search=performance.now\n            return window.performance && window.performance.now ? window.performance.now() :\n                new Date().getTime();\n        };\n        BrowserDomAdapter.prototype.supportsCookies = function () { return true; };\n        BrowserDomAdapter.prototype.getCookie = function (name) { return parseCookieValue(document.cookie, name); };\n        BrowserDomAdapter.prototype.setCookie = function (name, value) {\n            // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n            // not clear other cookies.\n            document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n        };\n        return BrowserDomAdapter;\n    }(GenericBrowserDomAdapter));\n    var baseElement = null;\n    function getBaseElementHref() {\n        if (!baseElement) {\n            baseElement = document.querySelector('base');\n            if (!baseElement) {\n                return null;\n            }\n        }\n        return baseElement.getAttribute('href');\n    }\n    // based on urlUtils.js in AngularJS 1\n    var urlParsingNode;\n    function relativePath(url) {\n        if (!urlParsingNode) {\n            urlParsingNode = document.createElement('a');\n        }\n        urlParsingNode.setAttribute('href', url);\n        return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname;\n    }\n    function parseCookieValue(cookieStr, name) {\n        name = encodeURIComponent(name);\n        for (var _i = 0, _a = cookieStr.split(';'); _i < _a.length; _i++) {\n            var cookie = _a[_i];\n            var eqIndex = cookie.indexOf('=');\n            var _b = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], cookieName = _b[0], cookieValue = _b[1];\n            if (cookieName.trim() === name) {\n                return decodeURIComponent(cookieValue);\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function supportsState() {\n        return !!window.history.pushState;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n     * This class should not be used directly by an application developer. Instead, use\n     * {@link Location}.\n     */\n    var BrowserPlatformLocation = (function (_super) {\n        __extends$2(BrowserPlatformLocation, _super);\n        function BrowserPlatformLocation() {\n            _super.call(this);\n            this._init();\n        }\n        // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n        /** @internal */\n        BrowserPlatformLocation.prototype._init = function () {\n            this._location = getDOM().getLocation();\n            this._history = getDOM().getHistory();\n        };\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"location\", {\n            get: function () { return this._location; },\n            enumerable: true,\n            configurable: true\n        });\n        BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () { return getDOM().getBaseHref(); };\n        BrowserPlatformLocation.prototype.onPopState = function (fn) {\n            getDOM().getGlobalEventTarget('window').addEventListener('popstate', fn, false);\n        };\n        BrowserPlatformLocation.prototype.onHashChange = function (fn) {\n            getDOM().getGlobalEventTarget('window').addEventListener('hashchange', fn, false);\n        };\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\n            get: function () { return this._location.pathname; },\n            set: function (newPath) { this._location.pathname = newPath; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\n            get: function () { return this._location.search; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\n            get: function () { return this._location.hash; },\n            enumerable: true,\n            configurable: true\n        });\n        BrowserPlatformLocation.prototype.pushState = function (state, title, url) {\n            if (supportsState()) {\n                this._history.pushState(state, title, url);\n            }\n            else {\n                this._location.hash = url;\n            }\n        };\n        BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {\n            if (supportsState()) {\n                this._history.replaceState(state, title, url);\n            }\n            else {\n                this._location.hash = url;\n            }\n        };\n        BrowserPlatformLocation.prototype.forward = function () { this._history.forward(); };\n        BrowserPlatformLocation.prototype.back = function () { this._history.back(); };\n        BrowserPlatformLocation.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        BrowserPlatformLocation.ctorParameters = [];\n        return BrowserPlatformLocation;\n    }(_angular_common.PlatformLocation));\n\n    var BrowserGetTestability = (function () {\n        function BrowserGetTestability() {\n        }\n        BrowserGetTestability.init = function () { _angular_core.setTestabilityGetter(new BrowserGetTestability()); };\n        BrowserGetTestability.prototype.addToWindow = function (registry) {\n            global$1.getAngularTestability = function (elem, findInAncestors) {\n                if (findInAncestors === void 0) { findInAncestors = true; }\n                var testability = registry.findTestabilityInTree(elem, findInAncestors);\n                if (testability == null) {\n                    throw new Error('Could not find testability for element.');\n                }\n                return testability;\n            };\n            global$1.getAllAngularTestabilities = function () { return registry.getAllTestabilities(); };\n            global$1.getAllAngularRootElements = function () { return registry.getAllRootElements(); };\n            var whenAllStable = function (callback /** TODO #9100 */) {\n                var testabilities = global$1.getAllAngularTestabilities();\n                var count = testabilities.length;\n                var didWork = false;\n                var decrement = function (didWork_ /** TODO #9100 */) {\n                    didWork = didWork || didWork_;\n                    count--;\n                    if (count == 0) {\n                        callback(didWork);\n                    }\n                };\n                testabilities.forEach(function (testability /** TODO #9100 */) {\n                    testability.whenStable(decrement);\n                });\n            };\n            if (!global$1['frameworkStabilizers']) {\n                global$1['frameworkStabilizers'] = [];\n            }\n            global$1['frameworkStabilizers'].push(whenAllStable);\n        };\n        BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            if (elem == null) {\n                return null;\n            }\n            var t = registry.getTestability(elem);\n            if (isPresent(t)) {\n                return t;\n            }\n            else if (!findInAncestors) {\n                return null;\n            }\n            if (getDOM().isShadowRoot(elem)) {\n                return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n            }\n            return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n        };\n        return BrowserGetTestability;\n    }());\n\n    /**\n     * A service that can be used to get and set the title of a current HTML document.\n     *\n     * Since an Angular 2 application can't be bootstrapped on the entire HTML document (`<html>` tag)\n     * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n     * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n     * title value.\n     *\n     * @experimental\n     */\n    var Title = (function () {\n        function Title() {\n        }\n        /**\n         * Get the title of the current HTML document.\n         * @returns {string}\n         */\n        Title.prototype.getTitle = function () { return getDOM().getTitle(); };\n        /**\n         * Set the title of the current HTML document.\n         * @param newTitle\n         */\n        Title.prototype.setTitle = function (newTitle) { getDOM().setTitle(newTitle); };\n        return Title;\n    }());\n\n    // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n    // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n    var _arrayFromMap = (function () {\n        try {\n            if ((new Map()).values().next) {\n                return function createArrayFromMap(m, getValues) {\n                    return getValues ? Array.from(m.values()) : Array.from(m.keys());\n                };\n            }\n        }\n        catch (e) {\n        }\n        return function createArrayFromMapWithForeach(m, getValues) {\n            var res = new Array(m.size), i = 0;\n            m.forEach(function (v, k) {\n                res[i] = getValues ? v : k;\n                i++;\n            });\n            return res;\n        };\n    })();\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        StringMapWrapper.merge = function (m1, m2) {\n            var m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        StringMapWrapper.equals = function (m1, m2) {\n            var k1 = Object.keys(m1);\n            var k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var i = 0; i < k1.length; i++) {\n                var key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        ListWrapper.removeAll = function (list, items) {\n            for (var i = 0; i < items.length; ++i) {\n                var index = list.indexOf(items[i]);\n                list.splice(index, 1);\n            }\n        };\n        ListWrapper.remove = function (list, el) {\n            var index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        ListWrapper.maximum = function (list, predicate) {\n            if (list.length == 0) {\n                return null;\n            }\n            var solution = null;\n            var maxValue = -Infinity;\n            for (var index = 0; index < list.length; index++) {\n                var candidate = list[index];\n                if (candidate == null) {\n                    continue;\n                }\n                var candidateValue = predicate(candidate);\n                if (candidateValue > maxValue) {\n                    solution = candidate;\n                    maxValue = candidateValue;\n                }\n            }\n            return solution;\n        };\n        ListWrapper.flatten = function (list) {\n            var target = [];\n            _flattenArray(list, target);\n            return target;\n        };\n        return ListWrapper;\n    }());\n    function _flattenArray(source, target) {\n        if (isPresent(source)) {\n            for (var i = 0; i < source.length; i++) {\n                var item = source[i];\n                if (Array.isArray(item)) {\n                    _flattenArray(item, target);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n        }\n        return target;\n    }\n\n    /**\n     * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n     *\n     * Note: Document might not be available in the Application Context when Application and Rendering\n     * Contexts are not the same (e.g. when running the application into a Web Worker).\n     *\n     * @stable\n     */\n    var DOCUMENT = new _angular_core.OpaqueToken('DocumentToken');\n\n    /**\n     * @stable\n     */\n    var EVENT_MANAGER_PLUGINS = new _angular_core.OpaqueToken('EventManagerPlugins');\n    /**\n     * @stable\n     */\n    var EventManager = (function () {\n        function EventManager(plugins, _zone) {\n            var _this = this;\n            this._zone = _zone;\n            plugins.forEach(function (p) { return p.manager = _this; });\n            this._plugins = plugins.slice().reverse();\n        }\n        EventManager.prototype.addEventListener = function (element, eventName, handler) {\n            var plugin = this._findPluginFor(eventName);\n            return plugin.addEventListener(element, eventName, handler);\n        };\n        EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\n            var plugin = this._findPluginFor(eventName);\n            return plugin.addGlobalEventListener(target, eventName, handler);\n        };\n        EventManager.prototype.getZone = function () { return this._zone; };\n        /** @internal */\n        EventManager.prototype._findPluginFor = function (eventName) {\n            var plugins = this._plugins;\n            for (var i = 0; i < plugins.length; i++) {\n                var plugin = plugins[i];\n                if (plugin.supports(eventName)) {\n                    return plugin;\n                }\n            }\n            throw new Error(\"No event manager plugin found for event \" + eventName);\n        };\n        EventManager.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        EventManager.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Inject, args: [EVENT_MANAGER_PLUGINS,] },] },\n            { type: _angular_core.NgZone, },\n        ];\n        return EventManager;\n    }());\n    var EventManagerPlugin = (function () {\n        function EventManagerPlugin() {\n        }\n        // That is equivalent to having supporting $event.target\n        EventManagerPlugin.prototype.supports = function (eventName) { return false; };\n        EventManagerPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            throw 'not implemented';\n        };\n        EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\n            throw 'not implemented';\n        };\n        return EventManagerPlugin;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var SharedStylesHost = (function () {\n        function SharedStylesHost() {\n            /** @internal */\n            this._styles = [];\n            /** @internal */\n            this._stylesSet = new Set();\n        }\n        SharedStylesHost.prototype.addStyles = function (styles) {\n            var _this = this;\n            var additions = [];\n            styles.forEach(function (style) {\n                if (!_this._stylesSet.has(style)) {\n                    _this._stylesSet.add(style);\n                    _this._styles.push(style);\n                    additions.push(style);\n                }\n            });\n            this.onStylesAdded(additions);\n        };\n        SharedStylesHost.prototype.onStylesAdded = function (additions) { };\n        SharedStylesHost.prototype.getAllStyles = function () { return this._styles; };\n        SharedStylesHost.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        SharedStylesHost.ctorParameters = [];\n        return SharedStylesHost;\n    }());\n    var DomSharedStylesHost = (function (_super) {\n        __extends$4(DomSharedStylesHost, _super);\n        function DomSharedStylesHost(doc) {\n            _super.call(this);\n            this._hostNodes = new Set();\n            this._hostNodes.add(doc.head);\n        }\n        /** @internal */\n        DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\n            for (var i = 0; i < styles.length; i++) {\n                var style = styles[i];\n                getDOM().appendChild(host, getDOM().createStyleElement(style));\n            }\n        };\n        DomSharedStylesHost.prototype.addHost = function (hostNode) {\n            this._addStylesToHost(this._styles, hostNode);\n            this._hostNodes.add(hostNode);\n        };\n        DomSharedStylesHost.prototype.removeHost = function (hostNode) { this._hostNodes.delete(hostNode); };\n        DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\n            var _this = this;\n            this._hostNodes.forEach(function (hostNode) { _this._addStylesToHost(additions, hostNode); });\n        };\n        DomSharedStylesHost.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        DomSharedStylesHost.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [DOCUMENT,] },] },\n        ];\n        return DomSharedStylesHost;\n    }(SharedStylesHost));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var NAMESPACE_URIS = {\n        'xlink': 'http://www.w3.org/1999/xlink',\n        'svg': 'http://www.w3.org/2000/svg',\n        'xhtml': 'http://www.w3.org/1999/xhtml'\n    };\n    var TEMPLATE_COMMENT_TEXT = 'template bindings={}';\n    var TEMPLATE_BINDINGS_EXP = /^template bindings=(.*)$/;\n    var DomRootRenderer = (function () {\n        function DomRootRenderer(document, eventManager, sharedStylesHost, animationDriver) {\n            this.document = document;\n            this.eventManager = eventManager;\n            this.sharedStylesHost = sharedStylesHost;\n            this.animationDriver = animationDriver;\n            this.registeredComponents = new Map();\n        }\n        DomRootRenderer.prototype.renderComponent = function (componentProto) {\n            var renderer = this.registeredComponents.get(componentProto.id);\n            if (!renderer) {\n                renderer = new DomRenderer(this, componentProto, this.animationDriver);\n                this.registeredComponents.set(componentProto.id, renderer);\n            }\n            return renderer;\n        };\n        return DomRootRenderer;\n    }());\n    var DomRootRenderer_ = (function (_super) {\n        __extends$3(DomRootRenderer_, _super);\n        function DomRootRenderer_(_document, _eventManager, sharedStylesHost, animationDriver) {\n            _super.call(this, _document, _eventManager, sharedStylesHost, animationDriver);\n        }\n        DomRootRenderer_.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        DomRootRenderer_.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [DOCUMENT,] },] },\n            { type: EventManager, },\n            { type: DomSharedStylesHost, },\n            { type: AnimationDriver, },\n        ];\n        return DomRootRenderer_;\n    }(DomRootRenderer));\n    var DomRenderer = (function () {\n        function DomRenderer(_rootRenderer, componentProto, _animationDriver) {\n            this._rootRenderer = _rootRenderer;\n            this.componentProto = componentProto;\n            this._animationDriver = _animationDriver;\n            this._styles = _flattenStyles(componentProto.id, componentProto.styles, []);\n            if (componentProto.encapsulation !== _angular_core.ViewEncapsulation.Native) {\n                this._rootRenderer.sharedStylesHost.addStyles(this._styles);\n            }\n            if (this.componentProto.encapsulation === _angular_core.ViewEncapsulation.Emulated) {\n                this._contentAttr = _shimContentAttribute(componentProto.id);\n                this._hostAttr = _shimHostAttribute(componentProto.id);\n            }\n            else {\n                this._contentAttr = null;\n                this._hostAttr = null;\n            }\n        }\n        DomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n            var el;\n            if (typeof selectorOrNode === 'string') {\n                el = getDOM().querySelector(this._rootRenderer.document, selectorOrNode);\n                if (isBlank(el)) {\n                    throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\n                }\n            }\n            else {\n                el = selectorOrNode;\n            }\n            getDOM().clearNodes(el);\n            return el;\n        };\n        DomRenderer.prototype.createElement = function (parent, name, debugInfo) {\n            var nsAndName = splitNamespace(name);\n            var el = isPresent(nsAndName[0]) ?\n                getDOM().createElementNS(NAMESPACE_URIS[nsAndName[0]], nsAndName[1]) :\n                getDOM().createElement(nsAndName[1]);\n            if (isPresent(this._contentAttr)) {\n                getDOM().setAttribute(el, this._contentAttr, '');\n            }\n            if (isPresent(parent)) {\n                getDOM().appendChild(parent, el);\n            }\n            return el;\n        };\n        DomRenderer.prototype.createViewRoot = function (hostElement) {\n            var nodesParent;\n            if (this.componentProto.encapsulation === _angular_core.ViewEncapsulation.Native) {\n                nodesParent = getDOM().createShadowRoot(hostElement);\n                this._rootRenderer.sharedStylesHost.addHost(nodesParent);\n                for (var i = 0; i < this._styles.length; i++) {\n                    getDOM().appendChild(nodesParent, getDOM().createStyleElement(this._styles[i]));\n                }\n            }\n            else {\n                if (isPresent(this._hostAttr)) {\n                    getDOM().setAttribute(hostElement, this._hostAttr, '');\n                }\n                nodesParent = hostElement;\n            }\n            return nodesParent;\n        };\n        DomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n            var comment = getDOM().createComment(TEMPLATE_COMMENT_TEXT);\n            if (isPresent(parentElement)) {\n                getDOM().appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        DomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n            var node = getDOM().createTextNode(value);\n            if (isPresent(parentElement)) {\n                getDOM().appendChild(parentElement, node);\n            }\n            return node;\n        };\n        DomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n            if (isBlank(parentElement))\n                return;\n            appendNodes(parentElement, nodes);\n        };\n        DomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) { moveNodesAfterSibling(node, viewRootNodes); };\n        DomRenderer.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                getDOM().remove(viewRootNodes[i]);\n            }\n        };\n        DomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n            if (this.componentProto.encapsulation === _angular_core.ViewEncapsulation.Native && isPresent(hostElement)) {\n                this._rootRenderer.sharedStylesHost.removeHost(getDOM().getShadowRoot(hostElement));\n            }\n        };\n        DomRenderer.prototype.listen = function (renderElement, name, callback) {\n            return this._rootRenderer.eventManager.addEventListener(renderElement, name, decoratePreventDefault(callback));\n        };\n        DomRenderer.prototype.listenGlobal = function (target, name, callback) {\n            return this._rootRenderer.eventManager.addGlobalEventListener(target, name, decoratePreventDefault(callback));\n        };\n        DomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            getDOM().setProperty(renderElement, propertyName, propertyValue);\n        };\n        DomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n            var attrNs;\n            var nsAndName = splitNamespace(attributeName);\n            if (isPresent(nsAndName[0])) {\n                attributeName = nsAndName[0] + ':' + nsAndName[1];\n                attrNs = NAMESPACE_URIS[nsAndName[0]];\n            }\n            if (isPresent(attributeValue)) {\n                if (isPresent(attrNs)) {\n                    getDOM().setAttributeNS(renderElement, attrNs, attributeName, attributeValue);\n                }\n                else {\n                    getDOM().setAttribute(renderElement, attributeName, attributeValue);\n                }\n            }\n            else {\n                if (isPresent(attrNs)) {\n                    getDOM().removeAttributeNS(renderElement, attrNs, nsAndName[1]);\n                }\n                else {\n                    getDOM().removeAttribute(renderElement, attributeName);\n                }\n            }\n        };\n        DomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n            var dashCasedPropertyName = camelCaseToDashCase(propertyName);\n            if (getDOM().isCommentNode(renderElement)) {\n                var existingBindings = getDOM().getText(renderElement).replace(/\\n/g, '').match(TEMPLATE_BINDINGS_EXP);\n                var parsedBindings = JSON.parse(existingBindings[1]);\n                parsedBindings[dashCasedPropertyName] = propertyValue;\n                getDOM().setText(renderElement, TEMPLATE_COMMENT_TEXT.replace('{}', JSON.stringify(parsedBindings, null, 2)));\n            }\n            else {\n                this.setElementAttribute(renderElement, propertyName, propertyValue);\n            }\n        };\n        DomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                getDOM().addClass(renderElement, className);\n            }\n            else {\n                getDOM().removeClass(renderElement, className);\n            }\n        };\n        DomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (isPresent(styleValue)) {\n                getDOM().setStyle(renderElement, styleName, stringify(styleValue));\n            }\n            else {\n                getDOM().removeStyle(renderElement, styleName);\n            }\n        };\n        DomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            getDOM().invoke(renderElement, methodName, args);\n        };\n        DomRenderer.prototype.setText = function (renderNode, text) { getDOM().setText(renderNode, text); };\n        DomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing) {\n            return this._animationDriver.animate(element, startingStyles, keyframes, duration, delay, easing);\n        };\n        return DomRenderer;\n    }());\n    function moveNodesAfterSibling(sibling /** TODO #9100 */, nodes /** TODO #9100 */) {\n        var parent = getDOM().parentElement(sibling);\n        if (nodes.length > 0 && isPresent(parent)) {\n            var nextSibling = getDOM().nextSibling(sibling);\n            if (isPresent(nextSibling)) {\n                for (var i = 0; i < nodes.length; i++) {\n                    getDOM().insertBefore(nextSibling, nodes[i]);\n                }\n            }\n            else {\n                for (var i = 0; i < nodes.length; i++) {\n                    getDOM().appendChild(parent, nodes[i]);\n                }\n            }\n        }\n    }\n    function appendNodes(parent /** TODO #9100 */, nodes /** TODO #9100 */) {\n        for (var i = 0; i < nodes.length; i++) {\n            getDOM().appendChild(parent, nodes[i]);\n        }\n    }\n    function decoratePreventDefault(eventHandler) {\n        return function (event /** TODO #9100 */) {\n            var allowDefaultBehavior = eventHandler(event);\n            if (allowDefaultBehavior === false) {\n                // TODO(tbosch): move preventDefault into event plugins...\n                getDOM().preventDefault(event);\n            }\n        };\n    }\n    var COMPONENT_REGEX = /%COMP%/g;\n    var COMPONENT_VARIABLE = '%COMP%';\n    var HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n    var CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n    function _shimContentAttribute(componentShortId) {\n        return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n    }\n    function _shimHostAttribute(componentShortId) {\n        return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n    }\n    function _flattenStyles(compId, styles, target) {\n        for (var i = 0; i < styles.length; i++) {\n            var style = styles[i];\n            if (Array.isArray(style)) {\n                _flattenStyles(compId, style, target);\n            }\n            else {\n                style = style.replace(COMPONENT_REGEX, compId);\n                target.push(style);\n            }\n        }\n        return target;\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] != ':') {\n            return [null, name];\n        }\n        var match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n\n    var CORE_TOKENS = {\n        'ApplicationRef': _angular_core.ApplicationRef,\n        'NgZone': _angular_core.NgZone\n    };\n    var INSPECT_GLOBAL_NAME = 'ng.probe';\n    var CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n    /**\n     * Returns a {@link DebugElement} for the given native DOM element, or\n     * null if the given native element does not have an Angular view associated\n     * with it.\n     */\n    function inspectNativeElement(element /** TODO #9100 */) {\n        return _angular_core.getDebugNode(element);\n    }\n    /**\n     * @experimental\n     */\n    var NgProbeToken = (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    function _createConditionalRootRenderer(rootRenderer /** TODO #9100 */, extraTokens) {\n        if (_angular_core.isDevMode()) {\n            return _createRootRenderer(rootRenderer, extraTokens);\n        }\n        return rootRenderer;\n    }\n    function _createRootRenderer(rootRenderer /** TODO #9100 */, extraTokens) {\n        getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n        getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME, StringMapWrapper.merge(CORE_TOKENS, _ngProbeTokensToMap(extraTokens || [])));\n        return new DebugDomRootRenderer(rootRenderer);\n    }\n    function _ngProbeTokensToMap(tokens) {\n        return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\n    }\n    /**\n     * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n     */\n    var ELEMENT_PROBE_PROVIDERS = [{\n            provide: _angular_core.RootRenderer,\n            useFactory: _createConditionalRootRenderer,\n            deps: [DomRootRenderer, [NgProbeToken, new _angular_core.Optional()]]\n        }];\n    var ELEMENT_PROBE_PROVIDERS_PROD_MODE = [{\n            provide: _angular_core.RootRenderer,\n            useFactory: _createRootRenderer,\n            deps: [DomRootRenderer, [NgProbeToken, new _angular_core.Optional()]]\n        }];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var DomEventsPlugin = (function (_super) {\n        __extends$5(DomEventsPlugin, _super);\n        function DomEventsPlugin() {\n            _super.apply(this, arguments);\n        }\n        // This plugin should come last in the list of plugins, because it accepts all\n        // events.\n        DomEventsPlugin.prototype.supports = function (eventName) { return true; };\n        DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            var zone = this.manager.getZone();\n            var outsideHandler = function (event /** TODO #9100 */) { return zone.runGuarded(function () { return handler(event); }); };\n            return this.manager.getZone().runOutsideAngular(function () { return getDOM().onAndCancel(element, eventName, outsideHandler); });\n        };\n        DomEventsPlugin.prototype.addGlobalEventListener = function (target, eventName, handler) {\n            var element = getDOM().getGlobalEventTarget(target);\n            var zone = this.manager.getZone();\n            var outsideHandler = function (event /** TODO #9100 */) { return zone.runGuarded(function () { return handler(event); }); };\n            return this.manager.getZone().runOutsideAngular(function () { return getDOM().onAndCancel(element, eventName, outsideHandler); });\n        };\n        DomEventsPlugin.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        DomEventsPlugin.ctorParameters = [];\n        return DomEventsPlugin;\n    }(EventManagerPlugin));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _eventNames = {\n        // pan\n        'pan': true,\n        'panstart': true,\n        'panmove': true,\n        'panend': true,\n        'pancancel': true,\n        'panleft': true,\n        'panright': true,\n        'panup': true,\n        'pandown': true,\n        // pinch\n        'pinch': true,\n        'pinchstart': true,\n        'pinchmove': true,\n        'pinchend': true,\n        'pinchcancel': true,\n        'pinchin': true,\n        'pinchout': true,\n        // press\n        'press': true,\n        'pressup': true,\n        // rotate\n        'rotate': true,\n        'rotatestart': true,\n        'rotatemove': true,\n        'rotateend': true,\n        'rotatecancel': true,\n        // swipe\n        'swipe': true,\n        'swipeleft': true,\n        'swiperight': true,\n        'swipeup': true,\n        'swipedown': true,\n        // tap\n        'tap': true,\n    };\n    var HammerGesturesPluginCommon = (function (_super) {\n        __extends$7(HammerGesturesPluginCommon, _super);\n        function HammerGesturesPluginCommon() {\n            _super.call(this);\n        }\n        HammerGesturesPluginCommon.prototype.supports = function (eventName) {\n            return _eventNames.hasOwnProperty(eventName.toLowerCase());\n        };\n        return HammerGesturesPluginCommon;\n    }(EventManagerPlugin));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * A DI token that you can use to provide{@link HammerGestureConfig} to Angular. Use it to configure\n     * Hammer gestures.\n     *\n     * @experimental\n     */\n    var HAMMER_GESTURE_CONFIG = new _angular_core.OpaqueToken('HammerGestureConfig');\n    /**\n     * @experimental\n     */\n    var HammerGestureConfig = (function () {\n        function HammerGestureConfig() {\n            this.events = [];\n            this.overrides = {};\n        }\n        HammerGestureConfig.prototype.buildHammer = function (element) {\n            var mc = new Hammer(element);\n            mc.get('pinch').set({ enable: true });\n            mc.get('rotate').set({ enable: true });\n            for (var eventName in this.overrides) {\n                mc.get(eventName).set(this.overrides[eventName]);\n            }\n            return mc;\n        };\n        HammerGestureConfig.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        HammerGestureConfig.ctorParameters = [];\n        return HammerGestureConfig;\n    }());\n    var HammerGesturesPlugin = (function (_super) {\n        __extends$6(HammerGesturesPlugin, _super);\n        function HammerGesturesPlugin(_config) {\n            _super.call(this);\n            this._config = _config;\n        }\n        HammerGesturesPlugin.prototype.supports = function (eventName) {\n            if (!_super.prototype.supports.call(this, eventName) && !this.isCustomEvent(eventName))\n                return false;\n            if (!isPresent(window['Hammer'])) {\n                throw new Error(\"Hammer.js is not loaded, can not bind \" + eventName + \" event\");\n            }\n            return true;\n        };\n        HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            var _this = this;\n            var zone = this.manager.getZone();\n            eventName = eventName.toLowerCase();\n            return zone.runOutsideAngular(function () {\n                // Creating the manager bind events, must be done outside of angular\n                var mc = _this._config.buildHammer(element);\n                var callback = function (eventObj /** TODO #???? */) {\n                    zone.runGuarded(function () { handler(eventObj); });\n                };\n                mc.on(eventName, callback);\n                return function () { mc.off(eventName, callback); };\n            });\n        };\n        HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) { return this._config.events.indexOf(eventName) > -1; };\n        HammerGesturesPlugin.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        HammerGesturesPlugin.ctorParameters = [\n            { type: HammerGestureConfig, decorators: [{ type: _angular_core.Inject, args: [HAMMER_GESTURE_CONFIG,] },] },\n        ];\n        return HammerGesturesPlugin;\n    }(HammerGesturesPluginCommon));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var modifierKeys = ['alt', 'control', 'meta', 'shift'];\n    var modifierKeyGetters = {\n        'alt': function (event) { return event.altKey; },\n        'control': function (event) { return event.ctrlKey; },\n        'meta': function (event) { return event.metaKey; },\n        'shift': function (event) { return event.shiftKey; }\n    };\n    /**\n     * @experimental\n     */\n    var KeyEventsPlugin = (function (_super) {\n        __extends$8(KeyEventsPlugin, _super);\n        function KeyEventsPlugin() {\n            _super.call(this);\n        }\n        KeyEventsPlugin.prototype.supports = function (eventName) {\n            return isPresent(KeyEventsPlugin.parseEventName(eventName));\n        };\n        KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            var parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n            var outsideHandler = KeyEventsPlugin.eventCallback(element, parsedEvent['fullKey'], handler, this.manager.getZone());\n            return this.manager.getZone().runOutsideAngular(function () {\n                return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n            });\n        };\n        KeyEventsPlugin.parseEventName = function (eventName) {\n            var parts = eventName.toLowerCase().split('.');\n            var domEventName = parts.shift();\n            if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n                return null;\n            }\n            var key = KeyEventsPlugin._normalizeKey(parts.pop());\n            var fullKey = '';\n            modifierKeys.forEach(function (modifierName) {\n                if (parts.indexOf(modifierName) > -1) {\n                    ListWrapper.remove(parts, modifierName);\n                    fullKey += modifierName + '.';\n                }\n            });\n            fullKey += key;\n            if (parts.length != 0 || key.length === 0) {\n                // returning null instead of throwing to let another plugin process the event\n                return null;\n            }\n            var result = {};\n            result['domEventName'] = domEventName;\n            result['fullKey'] = fullKey;\n            return result;\n        };\n        KeyEventsPlugin.getEventFullKey = function (event) {\n            var fullKey = '';\n            var key = getDOM().getEventKey(event);\n            key = key.toLowerCase();\n            if (key === ' ') {\n                key = 'space'; // for readability\n            }\n            else if (key === '.') {\n                key = 'dot'; // because '.' is used as a separator in event names\n            }\n            modifierKeys.forEach(function (modifierName) {\n                if (modifierName != key) {\n                    var modifierGetter = modifierKeyGetters[modifierName];\n                    if (modifierGetter(event)) {\n                        fullKey += modifierName + '.';\n                    }\n                }\n            });\n            fullKey += key;\n            return fullKey;\n        };\n        KeyEventsPlugin.eventCallback = function (element, fullKey, handler, zone) {\n            return function (event /** TODO #9100 */) {\n                if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                    zone.runGuarded(function () { return handler(event); });\n                }\n            };\n        };\n        /** @internal */\n        KeyEventsPlugin._normalizeKey = function (keyName) {\n            // TODO: switch to a StringMap if the mapping grows too much\n            switch (keyName) {\n                case 'esc':\n                    return 'escape';\n                default:\n                    return keyName;\n            }\n        };\n        KeyEventsPlugin.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        KeyEventsPlugin.ctorParameters = [];\n        return KeyEventsPlugin;\n    }(EventManagerPlugin));\n\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (_angular_core.isDevMode()) {\n            getDOM().log(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /** A <body> element that can be safely used to parse untrusted HTML. Lazily initialized below. */\n    var inertElement = null;\n    /** Lazily initialized to make sure the DOM adapter gets set before use. */\n    var DOM = null;\n    /** Returns an HTML element that is guaranteed to not execute code when creating elements in it. */\n    function getInertElement() {\n        if (inertElement)\n            return inertElement;\n        DOM = getDOM();\n        // Prefer using <template> element if supported.\n        var templateEl = DOM.createElement('template');\n        if ('content' in templateEl)\n            return templateEl;\n        var doc = DOM.createHtmlDocument();\n        inertElement = DOM.querySelector(doc, 'body');\n        if (inertElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so we\n            // need to create one.\n            var html = DOM.createElement('html', doc);\n            inertElement = DOM.createElement('body', doc);\n            DOM.appendChild(html, inertElement);\n            DOM.appendChild(doc, html);\n        }\n        return inertElement;\n    }\n    function tagSet(tags) {\n        var res = {};\n        for (var _i = 0, _a = tags.split(','); _i < _a.length; _i++) {\n            var t = _a[_i];\n            res[t] = true;\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i - 0] = arguments[_i];\n        }\n        var res = {};\n        for (var _a = 0, sets_1 = sets; _a < sets_1.length; _a++) {\n            var s = sets_1[_a];\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently conciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (DOM.isElementNode(current)) {\n                    this.startElement(current);\n                }\n                else if (DOM.isTextNode(current)) {\n                    this.chars(DOM.nodeValue(current));\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (DOM.firstChild(current)) {\n                    current = DOM.firstChild(current);\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (DOM.isElementNode(current)) {\n                        this.endElement(current);\n                    }\n                    if (DOM.nextSibling(current)) {\n                        current = DOM.nextSibling(current);\n                        break;\n                    }\n                    current = DOM.parentElement(current);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var _this = this;\n            var tagName = DOM.nodeName(element).toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            DOM.attributeMap(element).forEach(function (value, attrName) {\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    _this.sanitizedSomething = true;\n                    return;\n                }\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                _this.buf.push(' ');\n                _this.buf.push(attrName);\n                _this.buf.push('=\"');\n                _this.buf.push(encodeEntities(value));\n                _this.buf.push('\"');\n            });\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = DOM.nodeName(current).toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars /** TODO #9100 */) { this.buf.push(encodeEntities(chars)); };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     * @returns {string} escaped text\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    function stripCustomNsAttrs(el) {\n        DOM.attributeMap(el).forEach(function (_, attrName) {\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                DOM.removeAttribute(el, attrName);\n            }\n        });\n        for (var _i = 0, _a = DOM.childNodesAsList(el); _i < _a.length; _i++) {\n            var n = _a[_i];\n            if (DOM.isElementNode(n))\n                stripCustomNsAttrs(n);\n        }\n    }\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function sanitizeHtml(unsafeHtmlInput) {\n        try {\n            var containerEl = getInertElement();\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                DOM.setInnerHTML(containerEl, unsafeHtml);\n                if (DOM.defaultDoc().documentMode) {\n                    // strip custom-namespaced attributes on IE<=11\n                    stripCustomNsAttrs(containerEl);\n                }\n                parsedHtml = DOM.getInnerHTML(containerEl);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(DOM.getTemplateContent(containerEl) || containerEl);\n            // Clear out the body element.\n            var parent_1 = DOM.getTemplateContent(containerEl) || containerEl;\n            for (var _i = 0, _a = DOM.childNodesAsList(parent_1); _i < _a.length; _i++) {\n                var child = _a[_i];\n                DOM.removeChild(parent_1, child);\n            }\n            if (_angular_core.isDevMode() && sanitizer.sanitizedSomething) {\n                DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        catch (e) {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            inertElement = null;\n            throw e;\n        }\n    }\n\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var FN_ARGS = '\\\\([-0-9.%, a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \")\" + FN_ARGS + \")$\", 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (_angular_core.isDevMode()) {\n            getDOM().log(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n     * values to be safe to use in the different DOM contexts.\n     *\n     * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n     * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n     * the website.\n     *\n     * In specific situations, it might be necessary to disable sanitization, for example if the\n     * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n     * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n     * methods, and then binding to that value from the template.\n     *\n     * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n     * Cross Site Scripting (XSS) security bug!\n     *\n     * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n     * close as possible to the source of the value, to make it easy to verify no security bug is\n     * created by its use.\n     *\n     * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n     * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n     * code. The sanitizer leaves safe values intact.\n     *\n     * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n     * sanitization for the value passed in. Carefully check and audit all values and code paths going\n     * into this call. Make sure any user data is appropriately escaped for this security context.\n     * For more detail, see the [Security Guide](http://g.co/ng/security).\n     *\n     * @stable\n     */\n    var DomSanitizer = (function () {\n        function DomSanitizer() {\n        }\n        return DomSanitizer;\n    }());\n    var DomSanitizerImpl = (function (_super) {\n        __extends$9(DomSanitizerImpl, _super);\n        function DomSanitizerImpl() {\n            _super.apply(this, arguments);\n        }\n        DomSanitizerImpl.prototype.sanitize = function (ctx, value) {\n            if (value == null)\n                return null;\n            switch (ctx) {\n                case _angular_core.SecurityContext.NONE:\n                    return value;\n                case _angular_core.SecurityContext.HTML:\n                    if (value instanceof SafeHtmlImpl)\n                        return value.changingThisBreaksApplicationSecurity;\n                    this.checkNotSafeValue(value, 'HTML');\n                    return sanitizeHtml(String(value));\n                case _angular_core.SecurityContext.STYLE:\n                    if (value instanceof SafeStyleImpl)\n                        return value.changingThisBreaksApplicationSecurity;\n                    this.checkNotSafeValue(value, 'Style');\n                    return sanitizeStyle(value);\n                case _angular_core.SecurityContext.SCRIPT:\n                    if (value instanceof SafeScriptImpl)\n                        return value.changingThisBreaksApplicationSecurity;\n                    this.checkNotSafeValue(value, 'Script');\n                    throw new Error('unsafe value used in a script context');\n                case _angular_core.SecurityContext.URL:\n                    if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n                        // Allow resource URLs in URL contexts, they are strictly more trusted.\n                        return value.changingThisBreaksApplicationSecurity;\n                    }\n                    this.checkNotSafeValue(value, 'URL');\n                    return sanitizeUrl(String(value));\n                case _angular_core.SecurityContext.RESOURCE_URL:\n                    if (value instanceof SafeResourceUrlImpl) {\n                        return value.changingThisBreaksApplicationSecurity;\n                    }\n                    this.checkNotSafeValue(value, 'ResourceURL');\n                    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n                default:\n                    throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\n            }\n        };\n        DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {\n            if (value instanceof SafeValueImpl) {\n                throw new Error((\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \") +\n                    \"(see http://g.co/ng/security#xss)\");\n            }\n        };\n        DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) { return new SafeHtmlImpl(value); };\n        DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) { return new SafeStyleImpl(value); };\n        DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) { return new SafeScriptImpl(value); };\n        DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) { return new SafeUrlImpl(value); };\n        DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {\n            return new SafeResourceUrlImpl(value);\n        };\n        DomSanitizerImpl.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        DomSanitizerImpl.ctorParameters = [];\n        return DomSanitizerImpl;\n    }(DomSanitizer));\n    var SafeValueImpl = (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n            // empty\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return (\"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity) +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = (function (_super) {\n        __extends$9(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            _super.apply(this, arguments);\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return 'HTML'; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = (function (_super) {\n        __extends$9(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            _super.apply(this, arguments);\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return 'Style'; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = (function (_super) {\n        __extends$9(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            _super.apply(this, arguments);\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return 'Script'; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = (function (_super) {\n        __extends$9(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            _super.apply(this, arguments);\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return 'URL'; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = (function (_super) {\n        __extends$9(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            _super.apply(this, arguments);\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return 'ResourceURL'; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n\n    var INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n        { provide: _angular_core.PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n        { provide: _angular_common.PlatformLocation, useClass: BrowserPlatformLocation }\n    ];\n    /**\n     * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n     * Attacker-controlled data introduced by an unsanitized provider could expose your\n     * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n     * @experimental\n     */\n    var BROWSER_SANITIZATION_PROVIDERS = [\n        { provide: _angular_core.Sanitizer, useExisting: DomSanitizer },\n        { provide: DomSanitizer, useClass: DomSanitizerImpl },\n    ];\n    /**\n     * @stable\n     */\n    var platformBrowser = _angular_core.createPlatformFactory(_angular_core.platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n    function initDomAdapter() {\n        BrowserDomAdapter.makeCurrent();\n        BrowserGetTestability.init();\n    }\n    function errorHandler() {\n        return new _angular_core.ErrorHandler();\n    }\n    function _document() {\n        return getDOM().defaultDoc();\n    }\n    function _resolveDefaultAnimationDriver() {\n        if (getDOM().supportsWebAnimation()) {\n            return new WebAnimationsDriver();\n        }\n        return AnimationDriver.NOOP;\n    }\n    /**\n     * The ng module for the browser.\n     *\n     * @stable\n     */\n    var BrowserModule = (function () {\n        function BrowserModule(parentModule) {\n            if (parentModule) {\n                throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n            }\n        }\n        BrowserModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        providers: [\n                            BROWSER_SANITIZATION_PROVIDERS, { provide: _angular_core.ErrorHandler, useFactory: errorHandler, deps: [] },\n                            { provide: DOCUMENT, useFactory: _document, deps: [] },\n                            { provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true },\n                            { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true },\n                            { provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true },\n                            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig },\n                            { provide: DomRootRenderer, useClass: DomRootRenderer_ },\n                            { provide: _angular_core.RootRenderer, useExisting: DomRootRenderer },\n                            { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n                            { provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver }, DomSharedStylesHost,\n                            _angular_core.Testability, EventManager, ELEMENT_PROBE_PROVIDERS, Title\n                        ],\n                        exports: [_angular_common.CommonModule, _angular_core.ApplicationModule]\n                    },] },\n        ];\n        /** @nocollapse */\n        BrowserModule.ctorParameters = [\n            { type: BrowserModule, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.SkipSelf },] },\n        ];\n        return BrowserModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * JS version of browser APIs. This library can only run in the browser.\n     */\n    var win = typeof window !== 'undefined' && window || {};\n\n    var ChangeDetectionPerfRecord = (function () {\n        function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n            this.msPerTick = msPerTick;\n            this.numTicks = numTicks;\n        }\n        return ChangeDetectionPerfRecord;\n    }());\n    /**\n     * Entry point for all Angular debug tools. This object corresponds to the `ng`\n     * global variable accessible in the dev console.\n     */\n    var AngularTools = (function () {\n        function AngularTools(ref) {\n            this.profiler = new AngularProfiler(ref);\n        }\n        return AngularTools;\n    }());\n    /**\n     * Entry point for all Angular profiling-related debug tools. This object\n     * corresponds to the `ng.profiler` in the dev console.\n     */\n    var AngularProfiler = (function () {\n        function AngularProfiler(ref) {\n            this.appRef = ref.injector.get(_angular_core.ApplicationRef);\n        }\n        /**\n         * Exercises change detection in a loop and then prints the average amount of\n         * time in milliseconds how long a single round of change detection takes for\n         * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n         * of 500 milliseconds.\n         *\n         * Optionally, a user may pass a `config` parameter containing a map of\n         * options. Supported options are:\n         *\n         * `record` (boolean) - causes the profiler to record a CPU profile while\n         * it exercises the change detector. Example:\n         *\n         * ```\n         * ng.profiler.timeChangeDetection({record: true})\n         * ```\n         */\n        AngularProfiler.prototype.timeChangeDetection = function (config) {\n            var record = config && config['record'];\n            var profileName = 'Change Detection';\n            // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n            var isProfilerAvailable = isPresent(win.console.profile);\n            if (record && isProfilerAvailable) {\n                win.console.profile(profileName);\n            }\n            var start = getDOM().performanceNow();\n            var numTicks = 0;\n            while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n                this.appRef.tick();\n                numTicks++;\n            }\n            var end = getDOM().performanceNow();\n            if (record && isProfilerAvailable) {\n                // need to cast to <any> because type checker thinks there's no argument\n                // while in fact there is:\n                //\n                // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\n                win.console.profileEnd(profileName);\n            }\n            var msPerTick = (end - start) / numTicks;\n            win.console.log(\"ran \" + numTicks + \" change detection cycles\");\n            win.console.log(msPerTick.toFixed(2) + \" ms per check\");\n            return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n        };\n        return AngularProfiler;\n    }());\n\n    var context = global$1;\n    /**\n     * Enabled Angular 2 debug tools that are accessible via your browser's\n     * developer console.\n     *\n     * Usage:\n     *\n     * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n     * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n     * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n     *    then hit Enter.\n     *\n     * @experimental All debugging apis are currently experimental.\n     */\n    function enableDebugTools(ref) {\n        context.ng = new AngularTools(ref);\n        return ref;\n    }\n    /**\n     * Disables Angular 2 tools.\n     *\n     * @experimental All debugging apis are currently experimental.\n     */\n    function disableDebugTools() {\n        delete context.ng;\n    }\n\n    /**\n     * Predicates for use with {@link DebugElement}'s query functions.\n     *\n     * @experimental All debugging apis are currently experimental.\n     */\n    var By = (function () {\n        function By() {\n        }\n        /**\n         * Match all elements.\n         *\n         * ## Example\n         *\n         * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n         */\n        By.all = function () { return function (debugElement) { return true; }; };\n        /**\n         * Match elements by the given CSS selector.\n         *\n         * ## Example\n         *\n         * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n         */\n        By.css = function (selector) {\n            return function (debugElement) {\n                return isPresent(debugElement.nativeElement) ?\n                    getDOM().elementMatches(debugElement.nativeElement, selector) :\n                    false;\n            };\n        };\n        /**\n         * Match elements that have the given directive present.\n         *\n         * ## Example\n         *\n         * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n         */\n        By.directive = function (type) {\n            return function (debugElement) { return debugElement.providerTokens.indexOf(type) !== -1; };\n        };\n        return By;\n    }());\n\n    var __platform_browser_private__ = {\n        BrowserPlatformLocation: BrowserPlatformLocation,\n        DomAdapter: DomAdapter,\n        BrowserDomAdapter: BrowserDomAdapter,\n        BrowserGetTestability: BrowserGetTestability,\n        getDOM: getDOM,\n        setRootDomAdapter: setRootDomAdapter,\n        DomRootRenderer_: DomRootRenderer_,\n        DomRootRenderer: DomRootRenderer,\n        DomSharedStylesHost: DomSharedStylesHost,\n        SharedStylesHost: SharedStylesHost,\n        ELEMENT_PROBE_PROVIDERS: ELEMENT_PROBE_PROVIDERS,\n        DomEventsPlugin: DomEventsPlugin,\n        KeyEventsPlugin: KeyEventsPlugin,\n        HammerGesturesPlugin: HammerGesturesPlugin,\n        initDomAdapter: initDomAdapter,\n        INTERNAL_BROWSER_PLATFORM_PROVIDERS: INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n        BROWSER_SANITIZATION_PROVIDERS: BROWSER_SANITIZATION_PROVIDERS\n    };\n\n    exports.BrowserModule = BrowserModule;\n    exports.platformBrowser = platformBrowser;\n    exports.Title = Title;\n    exports.disableDebugTools = disableDebugTools;\n    exports.enableDebugTools = enableDebugTools;\n    exports.AnimationDriver = AnimationDriver;\n    exports.By = By;\n    exports.NgProbeToken = NgProbeToken;\n    exports.DOCUMENT = DOCUMENT;\n    exports.EVENT_MANAGER_PLUGINS = EVENT_MANAGER_PLUGINS;\n    exports.EventManager = EventManager;\n    exports.HAMMER_GESTURE_CONFIG = HAMMER_GESTURE_CONFIG;\n    exports.HammerGestureConfig = HammerGestureConfig;\n    exports.DomSanitizer = DomSanitizer;\n    exports.__platform_browser_private__ = __platform_browser_private__;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/platform-browser/bundles/platform-browser.umd.js\n// module id = 62\n// module chunks = 0 2","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Registers handlers for handling emitted values, error and completions from the observable, and\n     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n     * @method subscribe\n     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled\n     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this);\n        }\n        else {\n            sink.add(this._subscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.$$observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observable.js\n// module id = 1\n// module chunks = 0 2","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observer.js\n// module id = 90\n// module chunks = 0 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subject.js\n// module id = 13\n// module chunks = 0 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/SubjectSubscription.js\n// module id = 92\n// module chunks = 0 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parent = _parent;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            context = observerOrNext;\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (isFunction_1.isFunction(context.unsubscribe)) {\n                this.add(context.unsubscribe.bind(context));\n            }\n            context.unsubscribe = this.unsubscribe.bind(this);\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parent = this._parent;\n            if (!_parent.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parent, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._error) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parent.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parent.syncErrorValue = err;\n                _parent.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._complete) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parent = this._parent;\n        this._context = null;\n        this._parent = null;\n        _parent.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscriber.js\n// module id = 3\n// module chunks = 0 2","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this._subscriptions = null;\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                (errors = errors || []).push(errorObject_1.errorObject.e);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(err.errors);\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var sub = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                sub = new Subscription(teardown);\n            case 'object':\n                if (sub.closed || typeof sub.unsubscribe !== 'function') {\n                    break;\n                }\n                else if (this.closed) {\n                    sub.unsubscribe();\n                }\n                else {\n                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        return sub;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        // HACK: This might be redundant because of the logic in `add()`\n        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n            return;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\n//# sourceMappingURL=Subscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscription.js\n// module id = 11\n// module chunks = 0 2","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.$$observable = getSymbolObservable(root_1.root);\n//# sourceMappingURL=observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/observable.js\n// module id = 53\n// module chunks = 0 2","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/rxSubscriber.js\n// module id = 41\n// module chunks = 0 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/ObjectUnsubscribedError.js\n// module id = 67\n// module chunks = 0 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/UnsubscriptionError.js\n// module id = 77\n// module chunks = 0 2","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/errorObject.js\n// module id = 14\n// module chunks = 0 2","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isArray.js\n// module id = 23\n// module chunks = 0 2","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isFunction.js\n// module id = 54\n// module chunks = 0 2","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isObject.js\n// module id = 102\n// module chunks = 0 2","\"use strict\";\nvar objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n};\nexports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\nvar freeGlobal = objectTypes[typeof global] && global;\nif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    exports.root = freeGlobal;\n}\n//# sourceMappingURL=root.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/root.js\n// module id = 15\n// module chunks = 0 2","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber();\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/toSubscriber.js\n// module id = 103\n// module chunks = 0 2","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/tryCatch.js\n// module id = 17\n// module chunks = 0 2"],"sourceRoot":""}