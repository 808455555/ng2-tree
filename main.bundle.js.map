{"version":3,"sources":["webpack:////home/georgii/Projects/ng2-tree/index.ts","webpack:////home/georgii/Projects/ng2-tree/src/demo async","webpack:////home/georgii/Projects/ng2-tree/src/demo/app/app.component.ts","webpack:////home/georgii/Projects/ng2-tree/src/demo/app/app.module.ts","webpack:////home/georgii/Projects/ng2-tree/src/demo/environments/environment.ts","webpack:////home/georgii/Projects/ng2-tree/src/demo/main.ts","webpack:////home/georgii/Projects/ng2-tree/src/draggable/captured-node.ts","webpack:////home/georgii/Projects/ng2-tree/src/draggable/draggable.events.ts","webpack:////home/georgii/Projects/ng2-tree/src/draggable/node-draggable.directive.ts","webpack:////home/georgii/Projects/ng2-tree/src/draggable/node-draggable.service.ts","webpack:////home/georgii/Projects/ng2-tree/src/editable/editable.events.ts","webpack:////home/georgii/Projects/ng2-tree/src/editable/node-editable.directive.ts","webpack:////home/georgii/Projects/ng2-tree/src/menu/menu.events.ts","webpack:////home/georgii/Projects/ng2-tree/src/menu/node-menu.component.ts","webpack:////home/georgii/Projects/ng2-tree/src/menu/node-menu.service.ts","webpack:////home/georgii/Projects/ng2-tree/src/tree-internal.component.ts","webpack:////home/georgii/Projects/ng2-tree/src/tree.component.ts","webpack:////home/georgii/Projects/ng2-tree/src/tree.events.ts","webpack:////home/georgii/Projects/ng2-tree/src/tree.module.ts","webpack:////home/georgii/Projects/ng2-tree/src/tree.service.ts","webpack:////home/georgii/Projects/ng2-tree/src/tree.ts","webpack:////home/georgii/Projects/ng2-tree/src/tree.types.ts","webpack:////home/georgii/Projects/ng2-tree/src/utils/event.utils.ts","webpack:////home/georgii/Projects/ng2-tree/src/utils/safe-html.pipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO0B;AAEQ;AAYP;AAE0B;AACN;AAoB7C;;;;;;;;AC5CF;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,mE;;;;;;;;;;;;;;;;ACNkD;AAsFlD,IAAa,YAAY;IAjFzB;QAkFS,aAAQ,GAAoB;YACjC,aAAa,EAAE,KAAK;SACrB,CAAC;QAEK,UAAK,GAAc;YACxB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE;gBACR;oBACE,KAAK,EAAE,uDAAuD;oBAC9D,QAAQ,EAAE;wBACR,QAAQ,EAAE,IAAI;qBACf;oBACD,QAAQ,EAAE;wBACR,EAAC,KAAK,EAAE,mEAAmE,EAAC;wBAC5E,EAAC,KAAK,EAAE,cAAc,EAAC;wBACvB,EAAC,KAAK,EAAE,UAAU,EAAC;wBACnB,EAAC,KAAK,EAAE,SAAS,EAAC;wBAClB,EAAC,KAAK,EAAE,iBAAiB,EAAC;wBAC1B;4BACE,KAAK,EAAE,YAAY;4BACnB,QAAQ,EAAE;gCACR,EAAC,KAAK,EAAE,SAAS,EAAC;gCAClB,EAAC,KAAK,EAAE,OAAO,EAAC;gCAChB,EAAC,KAAK,EAAE,mBAAmB,EAAC;6BAC7B;yBACF;qBACF;iBACF;gBACD;oBACE,KAAK,EAAE,YAAY;oBACnB,QAAQ,EAAE;wBACR,EAAC,KAAK,EAAE,OAAO,EAAC;wBAChB,EAAC,KAAK,EAAE,gBAAgB,EAAC;wBACzB,EAAC,KAAK,EAAE,aAAa,EAAC;wBACtB,EAAC,KAAK,EAAE,QAAQ,EAAC;wBACjB,EAAC,KAAK,EAAE,QAAQ,EAAC;wBACjB,EAAC,KAAK,EAAE,iBAAiB,EAAC;qBAC3B;iBACF;gBACD;oBACE,KAAK,EAAE,iCAAiC;oBACxC,4DAA4D;oBAC5D,QAAQ,EAAE,CAAC,EAAC,KAAK,EAAE,oCAAoC,EAAC,CAAC;oBACzD,YAAY,EAAE,UAAC,QAAQ;wBACrB,UAAU,CAAC;4BACT,QAAQ,CAAC;gCACP,EAAC,KAAK,EAAE,YAAY,EAAC;gCACrB,EAAC,KAAK,EAAE,aAAa,EAAC;gCACtB,EAAC,KAAK,EAAE,iBAAiB,EAAC;gCAC1B,EAAC,KAAK,EAAE,MAAM,EAAC;gCACf,EAAC,KAAK,EAAE,UAAU,EAAC;gCACnB,EAAC,KAAK,EAAE,OAAO,EAAC;gCAChB,EAAC,KAAK,EAAE,iBAAiB,EAAC;6BAC3B,CAAC,CAAC;wBACL,CAAC,EAAE,IAAI,CAAC,CAAC;oBACX,CAAC;iBACF;aACF;SACF,CAAC;QAIK,QAAG,GAAc;YACtB,KAAK,EAAE,GAAG;YACV,EAAE,EAAE,CAAC;YACL,QAAQ,EAAE;gBACR,UAAU,EAAE;oBACV,QAAQ,EAAE,kBAAkB;oBAC5B,SAAS,EAAE,mBAAmB;oBAC9B,KAAK,EAAE,4BAA4B;oBACnC,IAAI,EAAE,IAAI;iBACX;gBACD,SAAS,EAAE;oBACT,IAAI,EAAE,gCAAgC;oBACtC,IAAI,EAAE,8BAA8B;iBACrC;aACF;YACD,QAAQ,EAAE;gBACR;oBACE,KAAK,EAAE,KAAK;oBACZ,EAAE,EAAE,CAAC;oBACL,QAAQ,EAAE;wBACR,EAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAC;wBACtB,EAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,EAAC;wBACxB,EAAC,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAC;wBACpB,EAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAC;wBACtB,EAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAC;wBACvB,EAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAC;wBACvB,EAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAC;wBACvB,EAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAC;wBACxB,EAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAC;wBACxB,EAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAC;qBACxB;iBACF;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,EAAE,EAAE,EAAE;oBACN,QAAQ,EAAE;wBACR;4BACE,KAAK,EAAE,MAAM;4BACb,EAAE,EAAE,EAAE;4BACN,QAAQ,EAAE;gCACR,EAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAC;gCACxB,EAAC,KAAK,EAAE,kBAAkB,EAAE,EAAE,EAAE,EAAE,EAAC;gCACnC,EAAC,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAC;gCAC3B,EAAC,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAC;gCAC1B,EAAC,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAC;gCAC1B,EAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAC;gCACzB,EAAC,KAAK,EAAE,aAAa,EAAE,EAAE,EAAE,EAAE,EAAC;6BAC/B;yBACF;wBACD;4BACE,KAAK,EAAE,YAAY;4BACnB,EAAE,EAAE,EAAE;4BACN,QAAQ,EAAE,EAAE;yBACb;wBACD,EAAC,KAAK,EAAE,sBAAsB,EAAE,EAAE,EAAE,EAAE,EAAC;wBACvC,EAAC,KAAK,EAAE,yBAAyB,EAAE,EAAE,EAAE,EAAE,EAAC;wBAC1C,EAAC,KAAK,EAAE,6BAA6B,EAAE,EAAE,EAAE,EAAE,EAAC;wBAC9C,EAAC,KAAK,EAAE,6BAA6B,EAAE,EAAE,EAAE,EAAE,EAAC;wBAC9C,EAAC,KAAK,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAC;wBACjC,EAAC,KAAK,EAAE,6BAA6B,EAAE,EAAE,EAAE,EAAE,EAAC;wBAC9C,EAAC,KAAK,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAC;wBACjC,EAAC,KAAK,EAAE,0BAA0B,EAAE,EAAE,EAAE,EAAE,EAAC;wBAC3C,EAAC,KAAK,EAAE,0BAA0B,EAAE,EAAE,EAAE,EAAE,EAAC;qBAC5C;iBACF;gBACD;oBACE,KAAK,EAAE,8BAA8B;oBACrC,EAAE,EAAE,EAAE;oBACN,QAAQ,EAAE;wBACR,QAAQ,EAAE,KAAK;wBACf,SAAS,EAAE,KAAK;qBACjB;oBACD,QAAQ,EAAE;wBACR;4BACE,KAAK,EAAE,gBAAgB;4BACvB,EAAE,EAAE,EAAE;4BACN,QAAQ,EAAE;gCACR,QAAQ,EAAE,IAAI;6BACf;yBACF;wBACD;4BACE,KAAK,EAAE,kBAAkB;4BACzB,EAAE,EAAE,GAAG;4BACP,QAAQ,EAAE;gCACR,QAAQ,EAAE,IAAI;6BACf;yBACF;wBACD;4BACE,KAAK,EAAE,mBAAmB;4BAC1B,EAAE,EAAE,GAAG;4BACP,QAAQ,EAAE;gCACR,SAAS,EAAE,IAAI;6BAChB;yBACF;qBACF;iBACF;gBACD,EAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACtC,EAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACpC,EAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACpC;oBACE,KAAK,EAAE,MAAM;oBACb,EAAE,EAAE,EAAE;oBACN,QAAQ,EAAE;wBACR;4BACE,KAAK,EAAE,WAAW;4BAClB,EAAE,EAAE,EAAE;4BACN,QAAQ,EAAE;gCACR;oCACE,KAAK,EAAE,WAAW;oCAClB,EAAE,EAAE,EAAE;oCACN,QAAQ,EAAE;wCACR;4CACE,KAAK,EAAE,MAAM;4CACb,EAAE,EAAE,EAAE;4CACN,QAAQ,EAAE;gDACR;oDACE,KAAK,EAAE,OAAO;oDACd,EAAE,EAAE,EAAE;oDACN,QAAQ,EAAE;wDACR,EAAC,KAAK,EAAE,uBAAuB,EAAE,EAAE,EAAE,EAAE,EAAC;wDACxC,EAAC,KAAK,EAAE,4BAA4B,EAAE,EAAE,EAAE,EAAE,EAAC;wDAC7C,EAAC,KAAK,EAAE,sBAAsB,EAAE,EAAE,EAAE,EAAE,EAAC;wDACvC,EAAC,KAAK,EAAE,yBAAyB,EAAE,EAAE,EAAE,EAAE,EAAC;wDAC1C,EAAC,KAAK,EAAE,uBAAuB,EAAE,EAAE,EAAE,EAAE,EAAC;wDACxC,EAAC,KAAK,EAAE,yBAAyB,EAAE,EAAE,EAAE,EAAE,EAAC;qDAC3C;iDACF;gDACD,EAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;6CACxC;yCACF;qCACF;iCACF;gCACD,EAAC,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gCAC1C,EAAC,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gCACxC,EAAC,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gCACzC;oCACE,KAAK,EAAE,OAAO;oCACd,EAAE,EAAE,EAAE;oCACN,QAAQ,EAAE,CAAC,EAAC,KAAK,EAAE,qBAAqB,EAAC,CAAC;oCAC1C,YAAY,EAAE,UAAC,QAAQ;wCACrB,UAAU,CAAC;4CACT,QAAQ,CAAC;gDACP,EAAC,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gDACxC,EAAC,KAAK,EAAE,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gDAChD,EAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gDACtC,EAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;6CACtC,CAAC,CAAC;wCACL,CAAC,EAAE,IAAI,CAAC,CAAC;oCACX,CAAC;iCACF;gCACD,EAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;6BACxC;yBACF;wBACD;4BACE,KAAK,EAAE,kCAAkC;4BACzC,EAAE,EAAE,EAAE;4BACN,QAAQ,EAAE;gCACR,QAAQ,EAAE,IAAI;6BACf;4BACD,QAAQ,EAAE;gCACR,EAAC,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gCAC1C;oCACE,KAAK,EAAE,uCAAuC;oCAC9C,EAAE,EAAE,EAAE;oCACN,QAAQ,EAAE;wCACR,SAAS,EAAE;4CACT,QAAQ,EAAE,+BAA+B;yCAC1C;qCACF;oCACD,QAAQ,EAAE;wCACR,EAAC,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAC;wCAC3B,EAAC,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAC;wCAC1B,EAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAC;wCACzB,EAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAC;wCACvB,EAAC,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAC;wCAC1B,EAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAC;qCACzB;iCACF;gCACD,EAAC,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gCACxC,EAAC,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gCACzC,EAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gCACtC,EAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;6BACxC;yBACF;qBACF;iBACF;gBACD,EAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACpC,EAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACtC,EAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACpC,EAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACrC,EAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACrC,EAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACpC,EAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACrC,EAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACpC,EAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACpC,EAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;gBACpC,EAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC;aACrC;SACF,CAAC;IA6EJ,CAAC;IA3EgB,qBAAQ,GAAvB,UAAwB,CAAY,EAAE,OAAe;QACnD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,QAAQ,CAAC,OAAO,CAAI,OAAO,UAAK,CAAC,CAAC,IAAI,CAAC,KAAO,CAAC,CAAC;IAClD,CAAC;IAEM,+BAAQ,GAAf;QAAA,iBAyCC;QAxCC,UAAU,CAAC;YACT,KAAI,CAAC,GAAG,GAAG;gBACT,KAAK,EAAE,+CAA+C;gBACtD,QAAQ,EAAE;oBACR;wBACE,KAAK,EAAE,6BAA6B;wBACpC,QAAQ,EAAE;4BACR,EAAC,KAAK,EAAE,SAAS,EAAC;4BAClB,EAAC,KAAK,EAAE,WAAW,EAAC;yBACrB;qBACF;oBACD;wBACE,KAAK,EAAE,6BAA6B;wBACpC,QAAQ,EAAE;4BACR;gCACE,KAAK,EAAE;oCACL,IAAI,EAAE,MAAM;oCACZ,OAAO,EAAP,UAAQ,IAAY;wCAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oCACnB,CAAC;oCACD,QAAQ,EAAR;wCACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;oCACnB,CAAC;iCACe;6BACnB;4BACD,EAAC,KAAK,EAAE,KAAK,EAAC;4BACd,EAAC,KAAK,EAAE,IAAI,EAAC;yBACd;qBACF;oBACD;wBACE,KAAK,EAAE,6BAA6B;wBACpC,QAAQ,EAAE;4BACR,EAAC,KAAK,EAAE,YAAY,EAAC;4BACrB,EAAC,KAAK,EAAE,cAAc,EAAC;4BACvB,EAAC,KAAK,EAAE,YAAY,EAAC;yBACtB;qBACF;iBACF;aACF,CAAC;QACJ,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAEM,oCAAa,GAApB,UAAqB,CAAY;QAC/B,cAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IACtC,CAAC;IAEM,kCAAW,GAAlB,UAAmB,CAAY;QAC7B,cAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACpC,CAAC;IAEM,oCAAa,GAApB,UAAqB,CAAY;QAC/B,cAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IACtC,CAAC;IAEM,oCAAa,GAApB,UAAqB,CAAY;QAC/B,cAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IACtC,CAAC;IAEM,qCAAc,GAArB,UAAsB,CAAY;QAChC,cAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;IACvC,CAAC;IAEM,qCAAc,GAArB,UAAsB,CAAY;QAChC,cAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;IACvC,CAAC;IAEM,sCAAe,GAAtB,UAAuB,CAAY;QACjC,cAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;IACxC,CAAC;IACH,mBAAC;AAAD,CAAC;AAlVY,YAAY;IAjFxB,wFAAS,CAAC;QACT,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE,+qDA2CT;QACD,MAAM,EAAE,CAAC,ykBAiCR,CAAC;KACH,CAAC;GACW,YAAY,CAkVxB;AAlVwB;;;;;;;;;;;;;;;;;;;;;ACtFgB;AACM;AACW;AACd;AAO5C,IAAa,SAAS;IAAtB;IAAwB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAZ,SAAS;IALrB,sFAAQ,CAAC;QACR,YAAY,EAAE,CAAC,oEAAY,CAAC;QAC5B,OAAO,EAAO,CAAC,gFAAa,EAAE,0DAAU,CAAC;QACzC,SAAS,EAAK,CAAC,oEAAY,CAAC;KAC7B,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;ACVtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;ACPpD;AAAA;IACE,sBAA2B,SAAqB,EACrB,KAAW;QADX,cAAS,GAAT,SAAS,CAAY;QACrB,UAAK,GAAL,KAAK,CAAM;IACtC,CAAC;IAEM,qCAAc,GAArB,UAAsB,OAAmB;QACvC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC1D,CAAC;IAEM,+BAAQ,GAAf,UAAgB,KAAiB;QAC/B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IAClE,CAAC;IAEM,6BAAM,GAAb,UAAc,KAAiB;QAC7B,MAAM,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC;IAChC,CAAC;IAED,sBAAW,iCAAO;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,8BAAI;aAAf;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;ACxBD;AAAA;IACE,4BAA0B,QAAsB,EAAS,MAAkB;QAAjD,aAAQ,GAAR,QAAQ,CAAc;QAAS,WAAM,GAAN,MAAM,CAAY;IAC3E,CAAC;IACH,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNiG;AAClC;AACjB;AAChB;AAK/B,IAAa,sBAAsB;IAYjC,gCAA8C,OAAmB,EACR,oBAA0C,EACtD,QAAkB;QAFjB,YAAO,GAAP,OAAO,CAAY;QACR,yBAAoB,GAApB,oBAAoB,CAAsB;QACtD,aAAQ,GAAR,QAAQ,CAAU;QAJvD,8BAAyB,GAAe,EAAE,CAAC;QAKjD,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,aAAa,CAAC;IACjD,CAAC;IAEM,yCAAQ,GAAf;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;YAC/E,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChI,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9H,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChI,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChI,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtH,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9H,CAAC;IACH,CAAC;IAEM,4CAAW,GAAlB;QACE,4BAA4B;QAC5B,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,iBAAO,IAAI,cAAO,EAAE,EAAT,CAAS,CAAC,CAAC;QAC7D,2BAA2B;IAC7B,CAAC;IAEO,gDAAe,GAAvB,UAAwB,CAAY;QAClC,CAAC,CAAC,eAAe,EAAE,CAAC;QAEpB,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,oEAAY,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEvF,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,wBAAsB,CAAC,uBAAuB,CAAC,CAAC;QAC/E,CAAC,CAAC,YAAY,CAAC,aAAa,GAAG,MAAM,CAAC;IACxC,CAAC;IAEO,+CAAc,GAAtB,UAAuB,CAAY;QACjC,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,CAAC,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;IACrC,CAAC;IAEO,gDAAe,GAAvB,UAAwB,CAAY;QAClC,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QACpC,CAAC;IACH,CAAC;IAEO,gDAAe,GAAvB,UAAwB,CAAY;QAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAEO,2CAAU,GAAlB,UAAmB,CAAY;QAC7B,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,CAAC,CAAC,eAAe,EAAE,CAAC;QAEpB,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;QAErC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACzC,CAAC;IACH,CAAC;IAEO,+CAAc,GAAtB,UAAuB,CAAY;QACjC,IAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,CAAC;QACjE,MAAM,CAAC,YAAY;eACd,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC;eAC/C,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IAEO,8CAAa,GAArB,UAAsB,CAAY;QAChC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,EAAE,CAAC;IAClD,CAAC;IAEO,kDAAiB,GAAzB,UAA0B,CAAY;QAC7B,YAAa,EAAb,kCAAa,EAAE,QAAa,EAAb,kCAAa,CAAM;QACzC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAEO,yCAAQ,GAAhB,UAAiB,SAAiB;QAChC,IAAM,SAAS,GAAiB,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;QACjE,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC3B,CAAC;IAEO,4CAAW,GAAnB,UAAoB,SAAiB;QACnC,IAAM,SAAS,GAAiB,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;QACjE,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC9B,CAAC;IAEO,yDAAwB,GAAhC;QACE,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC7G,CAAC;IACH,6BAAC;AAAD,CAAC;AA3Ge,8CAAuB,GAAG,kEAAkE,CAAC;AAG3G;IADC,mFAAK,EAAE;kDACc,iEAAU,oBAAV,iEAAU;6DAAC;AAGjC;IADC,mFAAK,EAAE;kDACK,mDAAI,oBAAJ,mDAAI;oDAAC;AAPP,sBAAsB;IAHlC,uFAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;KAC5B,CAAC;IAaoB,+FAAM,CAAC,iEAAU,CAAC;IAClB,+FAAM,CAAC,qFAAoB,CAAC;IAC5B,+FAAM,CAAC,+DAAQ,CAAC;yDAFmB,iEAAU,oBAAV,iEAAU,sDACc,qFAAoB,oBAApB,qFAAoB,sDAC5C,+DAAQ,oBAAR,+DAAQ;GAdpD,sBAAsB,CA4GlC;AA5GkC;;;;;;;;;;;;;;;;;;;;;ACRoB;AACrB;AAEsB;AAGxD,IAAa,oBAAoB;IADjC;QAES,yBAAoB,GAAgC,IAAI,gDAAO,EAAsB,CAAC;IAuB/F,CAAC;IAnBQ,8CAAe,GAAtB,UAAuB,QAAsB,EAAE,MAAkB;QAC/D,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,6EAAkB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;IAC3E,CAAC;IAEM,0CAAW,GAAlB,UAAmB,IAAkB;QACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAEM,8CAAe,GAAtB;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAEM,kDAAmB,GAA1B;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IACH,2BAAC;AAAD,CAAC;AAxBY,oBAAoB;IADhC,wFAAU,EAAE;GACA,oBAAoB,CAwBhC;AAxBgC;;;;;;;;;;ACJjC,IAAY,uBAEX;AAFD,WAAY,uBAAuB;IACjC,yEAAM;AACR,CAAC,EAFW,uBAAuB,KAAvB,uBAAuB,QAElC;;;;;;;;;;;;;;;;;;;;;;;;ACMsB;AACwD;AAK/E,IAAa,qBAAqB;IAShC,+BAA6C,QAAkB,EAChB,UAAsB;QADxB,aAAQ,GAAR,QAAQ,CAAU;QAChB,eAAU,GAAV,UAAU,CAAY;QANrE,mCAAmC;QAG5B,iBAAY,GAAoC,IAAI,mEAAY,CAAoB,KAAK,CAAC,CAAC;IAIlG,CAAC;IAEM,wCAAQ,GAAf;QACE,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3E,CAAC;IAGM,6CAAa,GAApB,UAAqB,YAAoB;QACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,EAAC,CAAC,CAAC;IAC/D,CAAC;IAGM,2DAA2B,GAAlC,UAAmC,YAAoB;QACrD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAC,CAAC,CAAC;IAC9D,CAAC;IAGM,6CAAa,GAApB;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,IAAI,CAAC,SAAS;YACrB,MAAM,EAAE,iFAAuB,CAAC,MAAM;SACvC,CAAC,CAAC;IACL,CAAC;IACH,4BAAC;AAAD,CAAC;AAlCC;IADC,mFAAK,CAAC,cAAc,CAAC;;wDACG;AAIzB;IADC,qFAAM,EAAE;kDACY,mEAAY,oBAAZ,mEAAY;2DAAiE;AAalG;IADC,2FAAY,CAAC,aAAa,EAAE,CAAC,qBAAqB,CAAC,CAAC;;;;0DAGpD;AAGD;IADC,2FAAY,CAAC,MAAM,EAAE,CAAC,qBAAqB,CAAC,CAAC;;;;wEAG7C;AAGD;IADC,2FAAY,CAAC,WAAW,CAAC;;;;0DAOzB;AApCU,qBAAqB;IAHjC,uFAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;KAC3B,CAAC;IAUoB,+FAAM,CAAC,+DAAQ,CAAC;IAChB,+FAAM,CAAC,iEAAU,CAAC;yDADiB,+DAAQ,oBAAR,+DAAQ,sDACJ,iEAAU,oBAAV,iEAAU;GAV1D,qBAAqB,CAqCjC;AArCiC;;;;;;;;;;;;AChBlC,IAAY,kBAKX;AALD,WAAY,kBAAkB;IAC5B,qEAAS;IACT,+DAAM;IACN,+DAAM;IACN,+DAAM;AACR,CAAC,EALW,kBAAkB,KAAlB,kBAAkB,QAK7B;AAED,IAAY,cAEX;AAFD,WAAY,cAAc;IACxB,qDAAK;AACP,CAAC,EAFW,cAAc,KAAd,cAAc,QAEzB;;;;;;;;;;;;;;;;;;;;;;;;;;ACT+G;AAC1D;AACwC;AAClB;AAgB5E,IAAa,iBAAiB;IA+B5B,2BAA6C,QAAkB,EACX,eAAgC;QADvC,aAAQ,GAAR,QAAQ,CAAU;QACX,oBAAe,GAAf,eAAe,CAAiB;QA9B7E,qBAAgB,GAA4C,IAAI,mEAAY,EAA6B,CAAC;QAI1G,uBAAkB,GAAmB;YAC1C;gBACE,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,wEAAkB,CAAC,MAAM;gBACjC,QAAQ,EAAE,SAAS;aACpB;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,wEAAkB,CAAC,SAAS;gBACpC,QAAQ,EAAE,YAAY;aACvB;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,wEAAkB,CAAC,MAAM;gBACjC,QAAQ,EAAE,QAAQ;aACnB;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,wEAAkB,CAAC,MAAM;gBACjC,QAAQ,EAAE,QAAQ;aACnB;SACF,CAAC;QAEM,gCAA2B,GAAe,EAAE,CAAC;IAIrD,CAAC;IAEM,oCAAQ,GAAf;QACE,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClH,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxH,CAAC;IAEM,uCAAW,GAAlB;QACE,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,UAAC,OAAiB,IAAK,cAAO,EAAE,EAAT,CAAS,CAAC,CAAC;IAC7E,CAAC;IAEM,8CAAkB,GAAzB,UAA0B,CAAa,EAAE,gBAA8B;QACrE,EAAE,CAAC,CAAC,sGAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,kBAAkB,EAAE,gBAAgB,CAAC,MAAM,EAAC,CAAC,CAAC;YAC1E,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,MAAqB,EAAE,oEAAc,CAAC,KAAK,CAAC,CAAC;QACpF,CAAC;IACH,CAAC;IAEO,qCAAS,GAAjB,UAAkB,CAA6B;QAC7C,IAAM,YAAY,GAAG,CAAC,YAAY,UAAU,CAAC;QAC7C,0DAA0D;QAC1D,IAAM,gBAAgB,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAEhI,EAAE,CAAC,CAAC,YAAY,IAAI,CAAC,gBAAgB,IAAI,kGAAe,CAAC,CAAkB,CAAC,CAAC,CAAC,CAAC;YAC7E,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,MAAqB,EAAE,oEAAc,CAAC,KAAK,CAAC,CAAC;QACpF,CAAC;IACH,CAAC;IACH,wBAAC;AAAD,CAAC;AA1DC;IADC,qFAAM,EAAE;kDACgB,mEAAY,oBAAZ,mEAAY;2DAA4E;AAErF;IAA3B,wFAAS,CAAC,eAAe,CAAC;;wDAA2B;AAJ3C,iBAAiB;IAd7B,wFAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,yaAUT;KACF,CAAC;IAgCoB,+FAAM,CAAC,+DAAQ,CAAC;IAChB,+FAAM,CAAC,2EAAe,CAAC;yDADY,+DAAQ,oBAAR,+DAAQ,sDACM,2EAAe,oBAAf,2EAAe;GAhCzE,iBAAiB,CA4D7B;AA5D6B;;;;;;;;;;;;;;;;;;;;;ACnByB;AACT;AACgB;AAG9D,IAAa,eAAe;IAD5B;QAES,oBAAe,GAA2B,IAAI,gDAAO,EAAiB,CAAC;IAmBhF,CAAC;IAjBQ,uCAAa,GAApB,UAAqB,MAAmB,EAAE,MAAsB;QAC9D,IAAM,aAAa,GAAkB,EAAE,MAAM,UAAE,MAAM,UAAE,CAAC;QACxD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IAEM,wCAAc,GAArB,UAAsB,cAA0B;QAC9C,MAAM,CAAC,IAAI,CAAC,eAAe;aACxB,MAAM,CAAC,UAAC,CAAgB,IAAK,qBAAc,CAAC,aAAa,KAAK,CAAC,CAAC,MAAM,EAAzC,CAAyC,CAAC;aACvE,MAAM,CAAC,UAAC,CAAgB,IAAK,QAAC,CAAC,MAAM,KAAK,oEAAc,CAAC,KAAK,EAAjC,CAAiC,CAAC,CAAC;IACrE,CAAC;IAEM,mDAAyB,GAAhC,UAAiC,cAA0B;QACzD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YACxB,MAAM,EAAE,cAAc,CAAC,aAAa;YACpC,MAAM,EAAE,oEAAc,CAAC,KAAK;SAC7B,CAAC,CAAC;IACL,CAAC;IACH,sBAAC;AAAD,CAAC;AApBY,eAAe;IAD3B,wFAAU,EAAE;GACA,eAAe,CAoB3B;AApB2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLiD;AACnC;AACZ;AAC6B;AACwB;AACK;AAC3C;AACK;AA8ClD,IAAa,qBAAqB;IAWhC,+BAAoD,eAAgC,EACrC,WAAwB,EACzB,OAAmB;QAFb,oBAAe,GAAf,eAAe,CAAiB;QACrC,gBAAW,GAAX,WAAW,CAAa;QACzB,YAAO,GAAP,OAAO,CAAY;QAN1D,eAAU,GAAG,KAAK,CAAC;QACnB,uBAAkB,GAAG,KAAK,CAAC;QAC3B,sBAAiB,GAAG,KAAK,CAAC;IAKjC,CAAC;IAEM,wCAAQ,GAAf;QAAA,iBAsBC;QArBC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC;QAEzD,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC;aAC9C,SAAS,CAAC;YACT,KAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;aACvC,SAAS,CAAC,cAAM,YAAI,CAAC,UAAU,GAAG,KAAK,EAAvB,CAAuB,CAAC,CAAC;QAE5C,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC;aACpD,SAAS,CAAC,UAAC,CAAqB;YAC/B,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC1C,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;YACnD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,0CAA0C,CAAC,CAAC,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,4CAA4C,CAAC,CAAC,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;YAClE,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,+CAAe,GAAvB,UAAwB,OAAa,EAAE,IAAU;QAC/C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAEO,0EAA0C,GAAlD,UAAmD,CAAqB,EAAE,IAAU;QAClF,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClD,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrE,CAAC;IAEO,4EAA4C,GAApD,UAAqD,CAAqB,EAAE,IAAU;QACpF,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClD,IAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC7E,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvE,CAAC;IAEM,8CAAc,GAArB,UAAsB,CAAa;QACjC,EAAE,CAAC,CAAC,+EAA8B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,CAAC;IACH,CAAC;IAEM,6CAAa,GAApB,UAAqB,CAAa;QAChC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,gFAA+B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;YACnD,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/D,CAAC;QACD,CAAC,CAAC,cAAc,EAAE,CAAC;IACrB,CAAC;IAEM,4CAAY,GAAnB,UAAoB,CAAa;QAC/B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,+EAA8B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC3B,CAAC,CAAC,cAAc,EAAE,CAAC;YACrB,CAAC;QACH,CAAC;IACH,CAAC;IAEM,kDAAkB,GAAzB,UAA0B,CAA4B;QACpD,MAAM,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC7B,KAAK,6EAAkB,CAAC,MAAM;gBAC5B,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBACtB,KAAK,CAAC;YACR,KAAK,6EAAkB,CAAC,SAAS;gBAC/B,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBACtB,KAAK,CAAC;YACR,KAAK,6EAAkB,CAAC,MAAM;gBAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,KAAK,CAAC;YACR,KAAK,6EAAkB,CAAC,MAAM;gBAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,KAAK,CAAC;YACR;gBACE,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACtD,CAAC;IACH,CAAC;IAEO,6CAAa,GAArB,UAAsB,CAA4B;QAChD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,kBAAkB,KAAK,6EAAkB,CAAC,SAAS,CAAC,CAAC;QAC5E,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACjC,CAAC;IAEO,gDAAgB,GAAxB;QACE,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACjC,CAAC;IAEO,gDAAgB,GAAxB;QACE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAEM,mDAAmB,GAA1B;QACE,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxD,CAAC;IAEM,6CAAa,GAApB,UAAqB,CAAoB;QACvC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,0FAAuB,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,mDAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACrG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAC/B,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACxD,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7B,CAAC;IAEM,2DAA2B,GAAlC;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IACzD,CAAC;IAEM,4CAAY,GAAnB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;IAC5D,CAAC;IACH,4BAAC;AAAD,CAAC;AA1JC;IADC,mFAAK,EAAE;kDACK,mDAAI,oBAAJ,mDAAI;mDAAC;AAGlB;IADC,mFAAK,EAAE;mDACS,yCAAS,oBAAT,yCAAS,EAAC,eAAe;uDAAC;AALhC,qBAAqB;IA1CjC,wFAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,QAAQ,EAAE,utDAsCT;KACF,CAAC;IAYoB,+FAAM,CAAC,gFAAe,CAAC;IACvB,+FAAM,CAAC,kEAAW,CAAC;IACnB,+FAAM,CAAC,iEAAU,CAAC;yDAF+B,gFAAe,oBAAf,gFAAe,sDACxB,kEAAW,oBAAX,kEAAW,sDAChB,iEAAU,oBAAV,iEAAU;GAbtD,qBAAqB,CA4JjC;AA5JiC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrD+E;AACpE;AACH;AAEZ;AAO9B,IAAa,aAAa;IAkCxB,uBAAgD,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAtBjE,gBAAW,GAAsB,IAAI,mEAAY,EAAE,CAAC;QAGpD,gBAAW,GAAsB,IAAI,mEAAY,EAAE,CAAC;QAGpD,gBAAW,GAAsB,IAAI,mEAAY,EAAE,CAAC;QAGpD,iBAAY,GAAsB,IAAI,mEAAY,EAAE,CAAC;QAGrD,cAAS,GAAsB,IAAI,mEAAY,EAAE,CAAC;QAGlD,iBAAY,GAAsB,IAAI,mEAAY,EAAE,CAAC;QAGrD,kBAAa,GAAsB,IAAI,mEAAY,EAAE,CAAC;IAK7D,CAAC;IAEM,mCAAW,GAAlB,UAAmB,OAAsB;QACvC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,eAAa,CAAC,UAAU,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,GAAG,IAAI,mDAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAEM,gCAAQ,GAAf;QAAA,iBA4BC;QA3BC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,CAAY;YACnD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,CAAY;YACnD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,CAAY;YACnD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,CAAY;YACpD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,CAAY;YACjD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,CAAY;YACpD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,UAAC,CAAY;YACrD,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACH,oBAAC;AAAD,CAAC;AAzEgB,wBAAU,GAAS,IAAI,mDAAI,CAAC,EAAC,KAAK,EAAE,EAAE,EAAC,CAAC,CAAC;AAIxD;IADC,mFAAK,CAAC,MAAM,CAAC;mDACI,yCAAS,oBAAT,yCAAS,EAAC,SAAS;gDAAC;AAItC;IADC,mFAAK,EAAE;mDACS,yCAAS,oBAAT,yCAAS,EAAC,eAAe;+CAAC;AAG3C;IADC,qFAAM,EAAE;kDACW,mEAAY,oBAAZ,mEAAY;kDAA2B;AAG3D;IADC,qFAAM,EAAE;kDACW,mEAAY,oBAAZ,mEAAY;kDAA2B;AAG3D;IADC,qFAAM,EAAE;kDACW,mEAAY,oBAAZ,mEAAY;kDAA2B;AAG3D;IADC,qFAAM,EAAE;kDACY,mEAAY,oBAAZ,mEAAY;mDAA2B;AAG5D;IADC,qFAAM,EAAE;kDACS,mEAAY,oBAAZ,mEAAY;gDAA2B;AAGzD;IADC,qFAAM,EAAE;kDACY,mEAAY,oBAAZ,mEAAY;mDAA2B;AAG5D;IADC,qFAAM,EAAE;kDACa,mEAAY,oBAAZ,mEAAY;oDAA2B;AA9BlD,aAAa;IALzB,wFAAS,CAAC;QACT,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,yEAAqE;QAC/E,SAAS,EAAE,CAAC,kEAAW,CAAC;KACzB,CAAC;IAmCoB,+FAAM,CAAC,kEAAW,CAAC;yDAAsB,kEAAW,oBAAX,kEAAW;GAlC7D,aAAa,CA0EzB;AA1EyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR1B;IACE,mBAA0B,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IACpC,CAAC;IACH,gBAAC;AAAD,CAAC;;AAED;IAAuC,qCAAS;IAC9C,2BAAmB,IAAU;eAC3B,kBAAM,IAAI,CAAC;IACb,CAAC;IACH,wBAAC;AAAD,CAAC,CAJsC,SAAS,GAI/C;;AAED;IAA0C,wCAAS;IACjD,8BAAmB,IAAU;eAC3B,kBAAM,IAAI,CAAC;IACb,CAAC;IACH,2BAAC;AAAD,CAAC,CAJyC,SAAS,GAIlD;;AAED;IAAoC,kCAAoB;IACtD,wBAAmB,IAAU,EAAS,cAAoB;QAA1D,YACE,kBAAM,IAAI,CAAC,SACZ;QAFqC,oBAAc,GAAd,cAAc,CAAM;;IAE1D,CAAC;IACH,qBAAC;AAAD,CAAC,CAJmC,oBAAoB,GAIvD;;AAED;IAAsC,oCAAoB;IACxD,0BAAmB,IAAU;eAC3B,kBAAM,IAAI,CAAC;IACb,CAAC;IACH,uBAAC;AAAD,CAAC,CAJqC,oBAAoB,GAIzD;;AAED;IAAsC,oCAAoB;IACxD,0BAAmB,IAAU;eAC3B,kBAAM,IAAI,CAAC;IACb,CAAC;IACH,uBAAC;AAAD,CAAC,CAJqC,oBAAoB,GAIzD;;AAED;IAAsC,oCAAoB;IACxD,0BAAmB,IAAU,EAAS,QAAgC,EAAS,QAAgC;QAA/G,YACE,kBAAM,IAAI,CAAC,SACZ;QAFqC,cAAQ,GAAR,QAAQ,CAAwB;QAAS,cAAQ,GAAR,QAAQ,CAAwB;;IAE/G,CAAC;IACH,uBAAC;AAAD,CAAC,CAJqC,oBAAoB,GAIzD;;AAED;IAAuC,qCAAS;IAC9C,2BAAmB,IAAU;eAC3B,kBAAM,IAAI,CAAC;IACb,CAAC;IACH,wBAAC;AAAD,CAAC,CAJsC,SAAS,GAI/C;;AAED;IAAwC,sCAAS;IAC/C,4BAAmB,IAAU;eAC3B,kBAAM,IAAI,CAAC;IACb,CAAC;IACH,yBAAC;AAAD,CAAC,CAJuC,SAAS,GAIhD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDwC;AACQ;AACiB;AACnB;AAC+B;AACJ;AACC;AACZ;AACJ;AACd;AACS;AAetD,IAAa,UAAU;IAAvB;IACA,CAAC;IAAD,iBAAC;AAAD,CAAC;AADY,UAAU;IAbtB,sFAAQ,CAAC;QACR,OAAO,EAAE,CAAC,qEAAY,CAAC;QACvB,YAAY,EAAE;YACZ,mGAAsB;YACtB,sEAAa;YACb,gGAAqB;YACrB,oFAAiB;YACjB,uFAAqB;YACrB,4EAAY;SACb;QACD,OAAO,EAAE,CAAC,sEAAa,CAAC;QACxB,SAAS,EAAE,CAAC,+FAAoB,EAAE,gFAAe,EAAE,kEAAW,CAAC;KAChE,CAAC;GACW,UAAU,CACtB;AADsB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAGuB;AACiB;AACW;AAI1E,IAAa,WAAW;IAStB,qBAAyD,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAR5F,eAAU,GAA4B,IAAI,gDAAO,EAAkB,CAAC;QACpE,iBAAY,GAA8B,IAAI,gDAAO,EAAoB,CAAC;QAC1E,iBAAY,GAA8B,IAAI,gDAAO,EAAoB,CAAC;QAC1E,iBAAY,GAA8B,IAAI,gDAAO,EAAoB,CAAC;QAC1E,kBAAa,GAA+B,IAAI,gDAAO,EAAqB,CAAC;QAC7E,kBAAa,GAA+B,IAAI,gDAAO,EAAqB,CAAC;QAC7E,mBAAc,GAAgC,IAAI,gDAAO,EAAsB,CAAC;QAGrF,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,CAAmB,IAAK,QAAC,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAA/B,CAA+B,CAAC,CAAC;IACxF,CAAC;IAEM,oCAAc,GAArB,UAAsB,IAAU;QAC9B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAC,CAAoB,IAAK,WAAI,KAAK,CAAC,CAAC,IAAI,EAAf,CAAe,CAAC,CAAC;IAC9E,CAAC;IAEM,qCAAe,GAAtB,UAAuB,IAAU;QAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,sEAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IACrD,CAAC;IAEM,qCAAe,GAAtB,UAAuB,IAAU;QAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,sEAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IACrD,CAAC;IAEM,sCAAgB,GAAvB,UAAwB,IAAU;QAChC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,uEAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC;IAEM,qCAAe,GAAtB,UAAuB,QAAgC,EAAE,IAAU;QACjE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,sEAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3E,CAAC;IAEM,mCAAa,GAApB,UAAqB,IAAU,EAAE,MAAY;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,oEAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;IACzD,CAAC;IAEM,+CAAyB,GAAhC,UAAiC,IAAU;QACzC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;IAEO,sCAAgB,GAAxB,UAAyB,IAAU;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,uEAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC;IAEO,uCAAiB,GAAzB,UAA0B,IAAU;QAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,wEAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IACzD,CAAC;IAEM,mCAAa,GAApB,UAAqB,IAAU,EAAE,OAAmB;QAClD,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,oBAAoB;aAClD,MAAM,CAAC,UAAC,CAAqB,IAAK,QAAC,CAAC,MAAM,KAAK,OAAO,EAApB,CAAoB,CAAC;aACvD,MAAM,CAAC,UAAC,CAAqB,IAAK,QAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAA/B,CAA+B,CAAC,CAAC;IACxE,CAAC;IACH,kBAAC;AAAD,CAAC;AA1DY,WAAW;IADvB,wFAAU,EAAE;IAUS,+FAAM,CAAC,+FAAoB,CAAC;yDAA+B,+FAAoB,oBAApB,+FAAoB;GATxF,WAAW,CA0DvB;AA1DuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBS;AACQ;AACN;AACF;AACc;AACV;AACA;AACE;AACN;AACE;AACM;AACE;AACF;AACN;AACM;AACE;AACE;AACV;AACY;AAC8E;AAE7H,IAAK,oBAIJ;AAJD,WAAK,oBAAoB;IACvB,2EAAU;IACV,qEAAO;IACP,yEAAS;AACX,CAAC,EAJI,oBAAoB,KAApB,oBAAoB,QAIxB;AAED;IAyDE;;;;;OAKG;IACH,cAAmB,IAAe,EAAE,MAAmB,EAAE,QAAyB;QAA9C,sCAAmB;QAAE,2CAAyB;QAAlF,iBAEC;QA9DO,0BAAqB,GAAyB,oBAAoB,CAAC,UAAU,CAAC;QAE9E,uBAAkB,GAA6B,uFAAK,CAAC;YAC3D,MAAM,CAAC,IAAI,oDAAU,CAAC,UAAC,QAA0B;gBAC/C,UAAU,CAAC;oBACT,KAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC,OAAO,CAAC;oBAC1D,KAAI,CAAC,aAAa,CAAC,UAAC,QAAqB;wBACvC,KAAI,CAAC,SAAS,GAAG,qFAAI,CAAC,QAAQ,EAAE,UAAC,KAAgB,IAAK,WAAI,IAAI,CAAC,KAAK,EAAE,KAAI,CAAC,EAArB,CAAqB,CAAC,CAAC;wBAC7E,KAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC,SAAS,CAAC;wBAC5D,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;wBAC7B,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACtB,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QA+CD,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClF,CAAC;IA3CD,sHAAsH;IAEtH;;;;;OAKG;IACW,iBAAY,GAA1B,UAA2B,KAAa;QACtC,MAAM,CAAC,yFAAQ,CAAC,sFAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACW,gBAAW,GAAzB,UAA0B,KAAU;QAClC,MAAM,CAAC,CAAC,qFAAI,CAAC,KAAK,EAAE,SAAS,CAAC,IAAI,4FAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;eACxD,CAAC,qFAAI,CAAC,KAAK,EAAE,UAAU,CAAC,IAAI,4FAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,CAAC,CAAC;IACtG,CAAC;IAEc,qBAAgB,GAA/B,UAAgC,MAAY;QAC1C,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,uFAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEc,6BAAwB,GAAvC,UAAwC,KAAoB,EAAE,QAAgB;QAC5E,IAAM,cAAc,GAAkB,uFAAM,CAAC,EAAE,EAAE,KAAsB,CAAC,CAAC;QACzE,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,cAAc,CAAC;IACxB,CAAC;IAYO,iCAAkB,GAA1B,UAA2B,KAAgB,EAAE,MAAY,EAAE,QAAiB;QAA5E,iBAiBC;QAhBC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,wFAAO,CAAC,sFAAK,CAAC,KAAK,EAAE,UAAU,CAAc,EAAE;YACzD,QAAQ,EAAE,+DAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,qFAAI,CAAC,MAAM,EAAE,MAAM,CAAc,CAAC;SAC5E,CAAc,CAAC;QAEhB,EAAE,CAAC,CAAC,4FAAW,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,0FAAQ,CAAC,qFAAI,CAAC,KAAK,EAAE,UAAU,CAAgB,EAAE,UAAC,KAAgB,EAAE,KAAa;gBAC/E,KAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE,KAAI,CAAC,EAAE,KAAK,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC;QAClE,CAAC;IACH,CAAC;IAED;;;;OAIG;IACI,qCAAsB,GAA7B;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,qBAAqB,KAAK,oBAAoB,CAAC,OAAO,CAAC,CAAC;IACvE,CAAC;IAED;;;;OAIG;IACI,iCAAkB,GAAzB;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,qBAAqB,KAAK,oBAAoB,CAAC,SAAS,CAAC,CAAC;IACzE,CAAC;IAEO,8BAAe,GAAvB;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,qBAAqB,KAAK,oBAAoB,CAAC,UAAU,CAAC;eAClE,CAAC,IAAI,CAAC,WAAW,KAAK,yDAAW,CAAC,QAAQ,CAAC;eAC3C,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACI,qCAAsB,GAA7B;QACE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAMD,sBAAW,0BAAQ;QAJnB;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IAOD,sBAAW,+BAAa;QALxB;;;;WAIG;aACH;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACnC,CAAC;YACD,MAAM,CAAC,oDAAU,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC;;;OAAA;IAED;;;;OAIG;IACI,yBAAU,GAAjB,UAAkB,QAAiB;QACjC,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC;YACnG,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;IAMD,sBAAW,uBAAK;QAJhB;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACzB,CAAC;QAED;;;WAGG;aACH,UAAiB,KAAU;YACzB,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC1D,MAAM,CAAC;YACT,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAM,QAAQ,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,2FAAS,CAAC,KAAK,CAAC,CAAC;gBACtE,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAsB,EAAE,QAAQ,CAAC,CAAC;YACzF,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAe,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,2FAAS,CAAC,KAAK,CAAC,CAAC;YAC5F,CAAC;QACH,CAAC;;;OAjBA;IAmBD;;;;;OAKG;IACI,yBAAU,GAAjB,UAAkB,OAAa,EAAE,QAAiB;QAChD,EAAE,CAAC,CAAC,0FAAQ,CAAC,qFAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACjD,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED;;;;;OAKG;IACI,uBAAQ,GAAf,UAAgB,KAAW,EAAE,QAAiB;QAC5C,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAC;IAChE,CAAC;IAEO,wBAAS,GAAjB,UAAkB,KAAW,EAAE,QAA6C;QAA7C,sCAAmB,uFAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAC1E,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;QAEpB,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED;;;OAGG;IACI,8BAAe,GAAtB,UAAuB,OAAa;QAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC;QACT,CAAC;QAED,IAAM,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC;QAC9C,IAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAE5C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC;IACjD,CAAC;IAMD,sBAAW,kCAAgB;QAJ3B;;;WAGG;aACH;YACE,MAAM,CAAC,0FAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC9C,CAAC;;;OAAA;IAED;;;OAGG;IACI,uBAAQ,GAAf;QACE,MAAM,CAAC,qFAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IACnD,CAAC;IAED;;;OAGG;IACI,0BAAW,GAAlB;QACE,MAAM,CAAC,CAAC,qFAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,qFAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IACnG,CAAC;IAED;;;OAGG;IACI,2BAAY,GAAnB;QACE,MAAM,CAAC,CAAC,qFAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,qFAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IACpG,CAAC;IAED;;;OAGG;IACI,qBAAM,GAAb;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACI,uBAAQ,GAAf;QACE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAED;;;OAGG;IACI,0BAAW,GAAlB;QACE,MAAM,CAAC,CAAC,yFAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;IACpE,CAAC;IAED;;;OAGG;IACI,qBAAM,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACI,yBAAU,GAAjB,UAAkB,IAAU;QAC1B,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,2FAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC;IAED;;;;;OAKG;IACI,uBAAQ,GAAf,UAAgB,IAAU;QACxB,MAAM,CAAC,2FAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACI,0BAAW,GAAlB,UAAmB,IAAU;QAC3B,IAAM,UAAU,GAAG,4FAAU,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,KAAW,IAAK,YAAK,KAAK,IAAI,EAAd,CAAc,CAAC,CAAC;QAC/E,EAAE,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QACvC,CAAC;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED;;OAEG;IACI,qCAAsB,GAA7B;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED;;;OAGG;IACI,gCAAiB,GAAxB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,EAAE,GAAG,yDAAW,CAAC,SAAS,GAAG,yDAAW,CAAC,QAAQ,CAAC;IAChG,CAAC;IAED;;;OAGG;IACI,6BAAc,GAArB;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,yDAAW,CAAC,QAAQ,CAAC;IACnD,CAAC;IAED;;;OAGG;IACI,8BAAe,GAAtB;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,yDAAW,CAAC,SAAS,CAAC;IACpD,CAAC;IAED;;OAEG;IACK,8BAAe,GAAvB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,yDAAW,CAAC,SAAS,CAAC;QACjD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,yFAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,yDAAW,CAAC,QAAQ,CAAC;QAChD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,yDAAW,CAAC,KAAK,CAAC;QAC7C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,yDAAW,CAAC,IAAI,CAAC;QAC5C,CAAC;IACH,CAAC;IAMD,sBAAW,6BAAW;QAJtB;;;WAGG;aACH;YACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAChC,CAAC;;;OAAA;IAMD,sBAAW,iCAAe;QAJ1B;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,yBAAyB,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QACvE,CAAC;;;OAAA;IAEO,wCAAyB,GAAjC;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,yDAAW,CAAC,SAAS,CAAC,CAAC,CAAC;YACrD,MAAM,CAAC,qFAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,sBAAsB,EAAE,IAAI,CAAC,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,yDAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,qFAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,qBAAqB,EAAE,IAAI,CAAC,CAAC;QAC/D,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,yDAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,qFAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;QAC7D,CAAC;QAED,MAAM,CAAC,qFAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAMD,sBAAW,8BAAY;QAJvB;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACxC,CAAC;;;OAAA;IAEO,sCAAuB,GAA/B;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,qFAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,gBAAgB,EAAE,EAAE,CAAC,CAAC;QACxD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,qFAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,gBAAgB,EAAE,EAAE,CAAC,CAAC;QACxD,CAAC;IACH,CAAC;IAMD,sBAAW,kCAAgB;QAJ3B;;;WAGG;aACH;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,qFAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,oBAAoB,EAAE,eAAe,CAAC,CAAC;YACzE,CAAC;YACD,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;;;OAAA;IAED;;;OAGG;IACI,oBAAK,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,wDAAU,CAAC,GAAG,CAAC;IAC9C,CAAC;IAED;;OAEG;IACI,wBAAS,GAAhB;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,wDAAU,CAAC,GAAG,CAAC;IACrC,CAAC;IAED;;;OAGG;IACI,6BAAc,GAArB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,wDAAU,CAAC,cAAc,CAAC;IACzD,CAAC;IAED;;OAEG;IACI,iCAAkB,GAAzB;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,wDAAU,CAAC,cAAc,CAAC;IAChD,CAAC;IAED;;;OAGG;IACI,yBAAU,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,wDAAU,CAAC,QAAQ,CAAC;IACnD,CAAC;IAED;;OAEG;IACI,6BAAc,GAArB;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,wDAAU,CAAC,QAAQ,CAAC;IAC1C,CAAC;IACH,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;ACzgBkD;AAClB;AAEjC;IAME,qBAA2B,SAAiB;QAAjB,cAAS,GAAT,SAAS,CAAQ;IAC5C,CAAC;IAED,sBAAW,iCAAQ;aAAnB;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IACH,kBAAC;AAAD,CAAC;;AAXe,oBAAQ,GAAgB,IAAI,WAAW,CAAC,eAAe,CAAC,CAAC;AACzD,qBAAS,GAAgB,IAAI,WAAW,CAAC,gBAAgB,CAAC,CAAC;AAC3D,iBAAK,GAAgB,IAAI,WAAW,CAAC,YAAY,CAAC,CAAC;AACnD,gBAAI,GAAgB,IAAI,WAAW,CAAC,WAAW,CAAC,CAAC;AA+CjE;IAAA;IAkCA,CAAC;IAHe,uBAAK,GAAnB,UAAoB,OAAkB,EAAE,OAAkB;QACxD,MAAM,CAAC,8FAAa,CAAC,EAAE,EAAE,qFAAI,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE,qFAAI,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE,EAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;IACpI,CAAC;IACH,wBAAC;AAAD,CAAC;;AAWD,IAAY,UAIX;AAJD,WAAY,UAAU;IACpB,yCAAG;IACH,mDAAQ;IACR,+DAAc;AAChB,CAAC,EAJW,UAAU,KAAV,UAAU,QAIrB;;;;;;;;;;;;;;ACvGD,IAAY,IAEX;AAFD,WAAY,IAAI;IACd,oCAAW;AACb,CAAC,EAFW,IAAI,KAAJ,IAAI,QAEf;AAED,IAAY,YAGX;AAHD,WAAY,YAAY;IACtB,+CAAQ;IACR,iDAAS;AACX,CAAC,EAHW,YAAY,KAAZ,YAAY,QAGvB;AAEK,6BAA8B,CAAa;IAC/C,MAAM,CAAC,CAAC,CAAC,MAAM,KAAK,YAAY,CAAC,IAAI,CAAC;AACxC,CAAC;AAEK,8BAA+B,CAAa;IAChD,MAAM,CAAC,CAAC,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,CAAC;AACzC,CAAC;AAEK,yBAA0B,CAAgB;IAC9C,MAAM,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,MAAM,CAAC;AACnC,CAAC;;;;;;;;;;;;;;;;;;;;;ACnBmD;AACe;AAGnE,IAAa,YAAY;IACvB,sBAA2B,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;IAAG,CAAC;IAE/C,gCAAS,GAAhB,UAAiB,KAAa;QAC9B,gBAAgB;QACd,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC;IACH,mBAAC;AAAD,CAAC;AAPY,YAAY;IADxB,kFAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;yDAEa,+EAAY,oBAAZ,+EAAY;GADvC,YAAY,CAOxB;AAPwB","file":"main.bundle.js","sourcesContent":["import {\n  TreeModel,\n  TreeModelSettings,\n  Ng2TreeSettings,\n  RenamableNode,\n  FoldingType,\n  ChildrenLoadingFunction\n} from './src/tree.types';\n\nimport { Tree } from './src/tree';\n\nimport {\n  NodeEvent,\n  NodeCreatedEvent,\n  NodeRemovedEvent,\n  NodeRenamedEvent,\n  NodeMovedEvent,\n  NodeSelectedEvent,\n  NodeExpandedEvent,\n  NodeCollapsedEvent,\n  NodeDestructiveEvent\n} from './src/tree.events';\n\nimport { TreeComponent } from './src/tree.component';\nimport { TreeModule } from './src/tree.module';\n\nexport {\n  Tree,\n  TreeModel,\n  TreeModelSettings,\n  Ng2TreeSettings,\n  RenamableNode,\n  FoldingType,\n  NodeEvent,\n  NodeCreatedEvent,\n  NodeRemovedEvent,\n  NodeRenamedEvent,\n  NodeMovedEvent,\n  NodeSelectedEvent,\n  NodeExpandedEvent,\n  NodeCollapsedEvent,\n  NodeDestructiveEvent,\n  TreeComponent,\n  TreeModule\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/index.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src/demo async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/georgii/Projects/ng2-tree/src/demo async\n// module id = ../../../../../src/demo async recursive\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { NodeEvent, TreeModel, RenamableNode, Ng2TreeSettings } from '../../../index';\n\ndeclare const alertify: any;\n\n@Component({\n  selector: 'app',\n  template: `\n    <div class=\"tree-demo-app\">\n      <div class=\"tree-container\">\n        <p class=\"tree-title\">Fonts tree</p>\n        <tree\n          [tree]=\"fonts\"\n          (nodeRemoved)=\"onNodeRemoved($event)\"\n          (nodeRenamed)=\"onNodeRenamed($event)\"\n          (nodeSelected)=\"onNodeSelected($event)\"\n          (nodeMoved)=\"onNodeMoved($event)\"\n          (nodeCreated)=\"onNodeCreated($event)\"\n          (nodeExpanded)=\"onNodeExpanded($event)\"\n          (nodeCollapsed)=\"onNodeCollapsed($event)\">\n        </tree>\n      </div>\n      <div class=\"tree-container\">\n        <p class=\"tree-title\">Programming languages tree</p>\n        <p class=\"notice\">this tree is loaded asynchronously</p>\n        <tree\n          [tree]=\"pls\"\n          [settings]=\"settings\"\n          (nodeRemoved)=\"onNodeRemoved($event)\"\n          (nodeRenamed)=\"onNodeRenamed($event)\"\n          (nodeSelected)=\"onNodeSelected($event)\"\n          (nodeMoved)=\"onNodeMoved($event)\"\n          (nodeCreated)=\"onNodeCreated($event)\">\n        </tree>\n      </div>\n      <div class=\"tree-container\">\n        <p class=\"tree-title\">Directory/File structure</p>\n        <p class=\"notice\">this tree has advanced configurations</p>\n        <tree\n          [tree]=\"dfs\"\n          (nodeRemoved)=\"onNodeRemoved($event)\"\n          (nodeRenamed)=\"onNodeRenamed($event)\"\n          (nodeSelected)=\"onNodeSelected($event)\"\n          (nodeMoved)=\"onNodeMoved($event)\"\n          (nodeCreated)=\"onNodeCreated($event)\"\n          (nodeExpanded)=\"onNodeExpanded($event)\"\n          (nodeCollapsed)=\"onNodeCollapsed($event)\">\n        </tree>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .tree-demo-app {\n      margin: auto;\n      width: -moz-fit-content;\n      width: -webkit-fit-content;\n      width: fit-content;\n    }\n\n    .tree-demo-app .tree-container {\n      float: left;\n      vertical-align: top;\n      width: 500px;\n    }\n\n    .tree-title {\n      color: #40a070;\n      font-size: 2em;\n    }\n\n    .notice {\n      color: #e91e63;\n      font-size: 1.2em;\n      font-style: italic;\n    }\n\n    :host /deep/ .fa {\n      cursor: pointer;\n    }\n\n    :host /deep/ .fa.disabled {\n      cursor: inherit;\n      color: #757575;\n    }\n  `]\n})\nexport class AppComponent implements OnInit {\n  public settings: Ng2TreeSettings = {\n    rootIsVisible: false\n  };\n\n  public fonts: TreeModel = {\n    value: 'Fonts',\n    children: [\n      {\n        value: 'Serif  -  All my children and I are STATIC ¯\\\\_(ツ)_/¯',\n        settings: {\n          'static': true\n        },\n        children: [\n          {value: '<a href=\"#\" id=\"antiqua\" class=\"test\">Antiqua</a> with HTML tags.'},\n          {value: 'DejaVu Serif'},\n          {value: 'Garamond'},\n          {value: 'Georgia'},\n          {value: 'Times New Roman'},\n          {\n            value: 'Slab serif',\n            children: [\n              {value: 'Candida'},\n              {value: 'Swift'},\n              {value: 'Guardian Egyptian'}\n            ]\n          }\n        ]\n      },\n      {\n        value: 'Sans-serif',\n        children: [\n          {value: 'Arial'},\n          {value: 'Century Gothic'},\n          {value: 'DejaVu Sans'},\n          {value: 'Futura'},\n          {value: 'Geneva'},\n          {value: 'Liberation Sans'}\n        ]\n      },\n      {\n        value: 'Monospace - With ASYNC CHILDREN',\n        // children property is ignored if \"loadChildren\" is present\n        children: [{value: 'I am the font that will be ignored'}],\n        loadChildren: (callback) => {\n          setTimeout(() => {\n            callback([\n              {value: 'Input Mono'},\n              {value: 'Roboto Mono'},\n              {value: 'Liberation Mono'},\n              {value: 'Hack'},\n              {value: 'Consolas'},\n              {value: 'Menlo'},\n              {value: 'Source Code Pro'}\n            ]);\n          }, 5000);\n        }\n      }\n    ]\n  };\n\n  public pls: TreeModel;\n\n  public dfs: TreeModel = {\n    value: '/',\n    id: 1,\n    settings: {\n      cssClasses: {\n        expanded: 'fa fa-caret-down',\n        collapsed: 'fa fa-caret-right',\n        empty: 'fa fa-caret-right disabled',\n        leaf: 'fa'\n      },\n      templates: {\n        node: '<i class=\"fa fa-folder-o\"></i>',\n        leaf: '<i class=\"fa fa-file-o\"></i>'\n      }\n    },\n    children: [\n      {\n        value: 'bin',\n        id: 2,\n        children: [\n          {value: 'bash', id: 3},\n          {value: 'umount', id: 4},\n          {value: 'cp', id: 5},\n          {value: 'less', id: 6},\n          {value: 'rmdir', id: 7},\n          {value: 'touch', id: 8},\n          {value: 'chgrp', id: 9},\n          {value: 'chmod', id: 10},\n          {value: 'chown', id: 11},\n          {value: 'nano', id: 12}\n        ]\n      },\n      {\n        value: 'boot',\n        id: 13,\n        children: [\n          {\n            value: 'grub',\n            id: 14,\n            children: [\n              {value: 'fonts', id: 15},\n              {value: 'gfxblacklist.txt', id: 16},\n              {value: 'grub.cfg', id: 17},\n              {value: 'grubenv', id: 18},\n              {value: 'i386-pc', id: 19},\n              {value: 'locale', id: 20},\n              {value: 'unicode.pf2', id: 21}\n            ]\n          },\n          {\n            value: 'lost+found',\n            id: 22,\n            children: []\n          },\n          {value: 'abi-4.4.0-57-generic', id: 23},\n          {value: 'config-4.4.0-57-generic', id: 24},\n          {value: 'initrd.img-4.4.0-47-generic', id: 25},\n          {value: 'initrd.img-4.4.0-57-generic', id: 26},\n          {value: 'memtest86+.bin', id: 27},\n          {value: 'System.map-4.4.0-57-generic', id: 28},\n          {value: 'memtest86+.elf', id: 29},\n          {value: 'vmlinuz-4.4.0-57-generic', id: 30},\n          {value: 'memtest86+_multiboot.bin', id: 31}\n        ]\n      },\n      {\n        value: 'build-no-left-no-right-menus',\n        id: 32,\n        settings: {\n          leftMenu: false,\n          rightMenu: false\n        },\n        children: [\n          {\n            value: 'php5-left-menu',\n            id: 33,\n            settings: {\n              leftMenu: true\n            }\n          },\n          {\n            value: 'grails-left-menu',\n            id: 335,\n            settings: {\n              leftMenu: true\n            }\n          },\n          {\n            value: 'python-right-menu',\n            id: 333,\n            settings: {\n              rightMenu: true\n            }\n          }\n        ]\n      },\n      {value: 'cdrom', id: 34, children: []},\n      {value: 'dev', id: 35, children: []},\n      {value: 'etc', id: 36, children: []},\n      {\n        value: 'home',\n        id: 37,\n        children: [\n          {\n            value: 'firstUser',\n            id: 38,\n            children: [\n              {\n                value: 'Documents',\n                id: 39,\n                children: [\n                  {\n                    value: 'home',\n                    id: 40,\n                    children: [\n                      {\n                        value: 'bills',\n                        id: 41,\n                        children: [\n                          {value: '2016-07-01-mobile.pdf', id: 42},\n                          {value: '2016-07-01-electricity.pdf', id: 43},\n                          {value: '2016-07-01-water.pdf', id: 44},\n                          {value: '2016-07-01-internet.pdf', id: 45},\n                          {value: '2016-08-01-mobile.pdf', id: 46},\n                          {value: '2016-10-01-internet.pdf', id: 47}\n                        ]\n                      },\n                      {value: 'photos', id: 48, children: []}\n                    ]\n                  }\n                ]\n              },\n              {value: 'Downloads', id: 49, children: []},\n              {value: 'Desktop', id: 50, children: []},\n              {value: 'Pictures', id: 51, children: []},\n              {\n                value: 'Music',\n                id: 52,\n                children: [{value: 'won\\'t be displayed'}],\n                loadChildren: (callback) => {\n                  setTimeout(() => {\n                    callback([\n                      {value: '2Cellos', id: 78, children: []},\n                      {value: 'Michael Jackson', id: 79, children: []},\n                      {value: 'AC/DC', id: 80, children: []},\n                      {value: 'Adel', id: 81, children: []}\n                    ]);\n                  }, 5000);\n                }\n              },\n              {value: 'Public', id: 53, children: []}\n            ]\n          },\n          {\n            value: 'secondUser - left menu templates',\n            id: 54,\n            settings: {\n              leftMenu: true\n            },\n            children: [\n              {value: 'Documents', id: 55, children: []},\n              {\n                value: 'Downloads - custom left menu template',\n                id: 56,\n                settings: {\n                  templates: {\n                    leftMenu: '<i class=\"fa fa-navicon\"></i>'\n                  }\n                },\n                children: [\n                  {value: 'Actobat3', id: 57},\n                  {value: 'Complib', id: 58},\n                  {value: 'Eudora', id: 59},\n                  {value: 'java', id: 60},\n                  {value: 'drivers', id: 61},\n                  {value: 'kathy', id: 62}\n                ]\n              },\n              {value: 'Desktop', id: 63, children: []},\n              {value: 'Pictures', id: 64, children: []},\n              {value: 'Music', id: 65, children: []},\n              {value: 'Public', id: 66, children: []}\n            ]\n          }\n        ]\n      },\n      {value: 'lib', id: 67, children: []},\n      {value: 'media', id: 68, children: []},\n      {value: 'opt', id: 69, children: []},\n      {value: 'proc', id: 70, children: []},\n      {value: 'root', id: 71, children: []},\n      {value: 'run', id: 72, children: []},\n      {value: 'sbin', id: 73, children: []},\n      {value: 'srv', id: 74, children: []},\n      {value: 'sys', id: 75, children: []},\n      {value: 'usr', id: 76, children: []},\n      {value: 'var', id: 77, children: []}\n    ]\n  };\n\n  private static logEvent(e: NodeEvent, message: string): void {\n    console.log(e);\n    alertify.message(`${message}: ${e.node.value}`);\n  }\n\n  public ngOnInit(): void {\n    setTimeout(() => {\n      this.pls = {\n        value: 'Programming languages by programming paradigm',\n        children: [\n          {\n            value: 'Aspect-oriented programming',\n            children: [\n              {value: 'AspectJ'},\n              {value: 'AspectC++'}\n            ]\n          },\n          {\n            value: 'Object-oriented programming',\n            children: [\n              {\n                value: {\n                  name: 'Java',\n                  setName(name: string): void {\n                    this.name = name;\n                  },\n                  toString(): string {\n                    return this.name;\n                  }\n                } as RenamableNode\n              },\n              {value: 'C++'},\n              {value: 'C#'}\n            ]\n          },\n          {\n            value: 'Prototype-based programming',\n            children: [\n              {value: 'JavaScript'},\n              {value: 'CoffeeScript'},\n              {value: 'TypeScript'}\n            ]\n          }\n        ]\n      };\n    }, 2000);\n  }\n\n  public onNodeRemoved(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Removed');\n  }\n\n  public onNodeMoved(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Moved');\n  }\n\n  public onNodeRenamed(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Renamed');\n  }\n\n  public onNodeCreated(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Created');\n  }\n\n  public onNodeSelected(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Selected');\n  }\n\n  public onNodeExpanded(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Expanded');\n  }\n\n  public onNodeCollapsed(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Collapsed');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/demo/app/app.component.ts","import { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { TreeModule } from '../../../index';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports:      [BrowserModule, TreeModule],\n  bootstrap:    [AppComponent]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/demo/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/demo/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/demo/main.ts","import { Tree } from '../tree';\nimport { ElementRef } from '@angular/core';\n\nexport class CapturedNode {\n  public constructor(private anElement: ElementRef,\n                     private aTree: Tree) {\n  }\n\n  public canBeDroppedAt(element: ElementRef): boolean {\n    return !this.sameAs(element) && !this.contains(element);\n  }\n\n  public contains(other: ElementRef): boolean {\n    return this.element.nativeElement.contains(other.nativeElement);\n  }\n\n  public sameAs(other: ElementRef): boolean {\n    return this.element === other;\n  }\n\n  public get element(): ElementRef {\n    return this.anElement;\n  }\n\n  public get tree(): Tree {\n    return this.aTree;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/draggable/captured-node.ts","import { ElementRef } from '@angular/core';\nimport { CapturedNode } from './captured-node';\n\nexport class NodeDraggableEvent {\n  public constructor(public captured: CapturedNode, public target: ElementRef) {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/draggable/draggable.events.ts","import { Directive, ElementRef, Input, Inject, Renderer, OnDestroy, OnInit } from '@angular/core';\nimport { NodeDraggableService } from './node-draggable.service';\nimport { CapturedNode } from './captured-node';\nimport { Tree } from '../tree';\n\n@Directive({\n  selector: '[nodeDraggable]'\n})\nexport class NodeDraggableDirective implements OnDestroy, OnInit {\n  public static DATA_TRANSFER_STUB_DATA = 'some browsers enable drag-n-drop only when dataTransfer has data';\n\n  @Input()\n  public nodeDraggable: ElementRef;\n\n  @Input()\n  public tree: Tree;\n\n  private nodeNativeElement: HTMLElement;\n  private disposersForDragListeners: Function[] = [];\n\n  public constructor(@Inject(ElementRef) public element: ElementRef,\n                     @Inject(NodeDraggableService) private nodeDraggableService: NodeDraggableService,\n                     @Inject(Renderer) private renderer: Renderer) {\n    this.nodeNativeElement = element.nativeElement;\n  }\n\n  public ngOnInit(): void {\n    if (!this.tree.isStatic()) {\n      this.renderer.setElementAttribute(this.nodeNativeElement, 'draggable', 'true');\n      this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragenter', this.handleDragEnter.bind(this)));\n      this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragover', this.handleDragOver.bind(this)));\n      this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragstart', this.handleDragStart.bind(this)));\n      this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragleave', this.handleDragLeave.bind(this)));\n      this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'drop', this.handleDrop.bind(this)));\n      this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragend', this.handleDragEnd.bind(this)));\n    }\n  }\n\n  public ngOnDestroy(): void {\n    /* tslint:disable:typedef */\n    this.disposersForDragListeners.forEach(dispose => dispose());\n    /* tslint:enable:typedef */\n  }\n\n  private handleDragStart(e: DragEvent): any {\n    e.stopPropagation();\n\n    this.nodeDraggableService.captureNode(new CapturedNode(this.nodeDraggable, this.tree));\n\n    e.dataTransfer.setData('text', NodeDraggableDirective.DATA_TRANSFER_STUB_DATA);\n    e.dataTransfer.effectAllowed = 'move';\n  }\n\n  private handleDragOver(e: DragEvent): any {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  }\n\n  private handleDragEnter(e: DragEvent): any {\n    e.preventDefault();\n    if (this.containsElementAt(e)) {\n      this.addClass('over-drop-target');\n    }\n  }\n\n  private handleDragLeave(e: DragEvent): any {\n    if (!this.containsElementAt(e)) {\n      this.removeClass('over-drop-target');\n    }\n  }\n\n  private handleDrop(e: DragEvent): any {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.removeClass('over-drop-target');\n\n    if (!this.isDropPossible(e)) {\n      return false;\n    }\n\n    if (this.nodeDraggableService.getCapturedNode()) {\n      return this.notifyThatNodeWasDropped();\n    }\n  }\n\n  private isDropPossible(e: DragEvent): boolean {\n    const capturedNode = this.nodeDraggableService.getCapturedNode();\n    return capturedNode\n      && capturedNode.canBeDroppedAt(this.nodeDraggable)\n      && this.containsElementAt(e);\n  }\n\n  private handleDragEnd(e: DragEvent): any {\n    this.removeClass('over-drop-target');\n    this.nodeDraggableService.releaseCapturedNode();\n  }\n\n  private containsElementAt(e: DragEvent): boolean {\n    const {x = e.clientX, y = e.clientY} = e;\n    return this.nodeNativeElement.contains(document.elementFromPoint(x, y));\n  }\n\n  private addClass(className: string): void {\n    const classList: DOMTokenList = this.nodeNativeElement.classList;\n    classList.add(className);\n  }\n\n  private removeClass(className: string): void {\n    const classList: DOMTokenList = this.nodeNativeElement.classList;\n    classList.remove(className);\n  }\n\n  private notifyThatNodeWasDropped(): void {\n    this.nodeDraggableService.fireNodeDragged(this.nodeDraggableService.getCapturedNode(), this.nodeDraggable);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/draggable/node-draggable.directive.ts","import { Injectable, ElementRef } from '@angular/core';\nimport { Subject } from 'rxjs/Rx';\nimport { CapturedNode } from './captured-node';\nimport { NodeDraggableEvent } from './draggable.events';\n\n@Injectable()\nexport class NodeDraggableService {\n  public draggableNodeEvents$: Subject<NodeDraggableEvent> = new Subject<NodeDraggableEvent>();\n\n  private capturedNode: CapturedNode;\n\n  public fireNodeDragged(captured: CapturedNode, target: ElementRef): void {\n    if (!captured.tree || captured.tree.isStatic()) {\n      return;\n    }\n\n    this.draggableNodeEvents$.next(new NodeDraggableEvent(captured, target));\n  }\n\n  public captureNode(node: CapturedNode): void {\n    this.capturedNode = node;\n  }\n\n  public getCapturedNode(): CapturedNode {\n    return this.capturedNode;\n  }\n\n  public releaseCapturedNode(): void {\n    this.capturedNode = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/draggable/node-draggable.service.ts","export type NodeEditableEventType = 'blur' | 'keyup';\n\nexport enum NodeEditableEventAction {\n  Cancel\n}\n\nexport interface NodeEditableEvent {\n  value: string;\n  type: NodeEditableEventType;\n  action?: NodeEditableEventAction;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/editable/editable.events.ts","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  Output,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Renderer\n} from '@angular/core';\nimport { NodeEditableEvent, NodeEditableEventAction } from './editable.events';\n\n@Directive({\n  selector: '[nodeEditable]'\n})\nexport class NodeEditableDirective implements OnInit {\n  /* tslint:disable:no-input-rename */\n  @Input('nodeEditable')\n  public nodeValue: string;\n  /* tslint:enable:no-input-rename */\n\n  @Output()\n  public valueChanged: EventEmitter<NodeEditableEvent> = new EventEmitter<NodeEditableEvent>(false);\n\n  public constructor(@Inject(Renderer) private renderer: Renderer,\n                     @Inject(ElementRef) private elementRef: ElementRef) {\n  }\n\n  public ngOnInit(): void {\n    const nativeElement = this.elementRef.nativeElement;\n    this.renderer.invokeElementMethod(nativeElement, 'focus', []);\n    this.renderer.setElementProperty(nativeElement, 'value', this.nodeValue);\n  }\n\n  @HostListener('keyup.enter', ['$event.target.value'])\n  public applyNewValue(newNodeValue: string): void {\n    this.valueChanged.emit({type: 'keyup', value: newNodeValue});\n  }\n\n  @HostListener('blur', ['$event.target.value'])\n  public applyNewValueByLoosingFocus(newNodeValue: string): void {\n    this.valueChanged.emit({type: 'blur', value: newNodeValue});\n  }\n\n  @HostListener('keyup.esc')\n  public cancelEditing(): void {\n    this.valueChanged.emit({\n      type: 'keyup',\n      value: this.nodeValue,\n      action: NodeEditableEventAction.Cancel\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/editable/node-editable.directive.ts","export enum NodeMenuItemAction {\n  NewFolder,\n  NewTag,\n  Rename,\n  Remove\n}\n\nexport enum NodeMenuAction {\n  Close\n}\n\nexport interface NodeMenuEvent {\n  sender: HTMLElement;\n  action: NodeMenuAction;\n}\n\nexport interface NodeMenuItemSelectedEvent {\n  nodeMenuItemAction: NodeMenuItemAction;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/menu/menu.events.ts","import { Component, EventEmitter, Output, Renderer, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NodeMenuService } from './node-menu.service';\nimport { NodeMenuItemSelectedEvent, NodeMenuItemAction, NodeMenuAction } from './menu.events';\nimport { isLeftButtonClicked, isEscapePressed } from '../utils/event.utils';\n\n@Component({\n  selector: 'node-menu',\n  template: `\n    <div class=\"node-menu\">\n      <ul class=\"node-menu-content\" #menuContainer>\n        <li class=\"node-menu-item\" *ngFor=\"let menuItem of availableMenuItems\"\n          (click)=\"onMenuItemSelected($event, menuItem)\">\n          <div class=\"node-menu-item-icon {{menuItem.cssClass}}\"></div>\n          <span class=\"node-menu-item-value\">{{menuItem.name}}</span>\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class NodeMenuComponent implements OnInit, OnDestroy {\n  @Output()\n  public menuItemSelected: EventEmitter<NodeMenuItemSelectedEvent> = new EventEmitter<NodeMenuItemSelectedEvent>();\n\n  @ViewChild('menuContainer') public menuContainer: any;\n\n  public availableMenuItems: NodeMenuItem[] = [\n    {\n      name: 'New tag',\n      action: NodeMenuItemAction.NewTag,\n      cssClass: 'new-tag'\n    },\n    {\n      name: 'New folder',\n      action: NodeMenuItemAction.NewFolder,\n      cssClass: 'new-folder'\n    },\n    {\n      name: 'Rename',\n      action: NodeMenuItemAction.Rename,\n      cssClass: 'rename'\n    },\n    {\n      name: 'Remove',\n      action: NodeMenuItemAction.Remove,\n      cssClass: 'remove'\n    }\n  ];\n\n  private disposersForGlobalListeners: Function[] = [];\n\n  public constructor(@Inject(Renderer) private renderer: Renderer,\n                     @Inject(NodeMenuService) private nodeMenuService: NodeMenuService) {\n  }\n\n  public ngOnInit(): void {\n    this.disposersForGlobalListeners.push(this.renderer.listenGlobal('document', 'keyup', this.closeMenu.bind(this)));\n    this.disposersForGlobalListeners.push(this.renderer.listenGlobal('document', 'mousedown', this.closeMenu.bind(this)));\n  }\n\n  public ngOnDestroy(): void {\n    this.disposersForGlobalListeners.forEach((dispose: Function) => dispose());\n  }\n\n  public onMenuItemSelected(e: MouseEvent, selectedMenuItem: NodeMenuItem): void {\n    if (isLeftButtonClicked(e)) {\n      this.menuItemSelected.emit({nodeMenuItemAction: selectedMenuItem.action});\n      this.nodeMenuService.fireMenuEvent(e.target as HTMLElement, NodeMenuAction.Close);\n    }\n  }\n\n  private closeMenu(e: MouseEvent | KeyboardEvent): void {\n    const mouseClicked = e instanceof MouseEvent;\n    // Check if the click is fired on an element inside a menu\n    const containingTarget = (this.menuContainer.nativeElement !== e.target && this.menuContainer.nativeElement.contains(e.target));\n\n    if (mouseClicked && !containingTarget || isEscapePressed(e as KeyboardEvent)) {\n      this.nodeMenuService.fireMenuEvent(e.target as HTMLElement, NodeMenuAction.Close);\n    }\n  }\n}\n\nexport interface NodeMenuItem {\n  name: string;\n  action: NodeMenuItemAction;\n  cssClass: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/menu/node-menu.component.ts","import { Injectable, ElementRef } from '@angular/core';\nimport { Subject, Observable } from 'rxjs/Rx';\nimport { NodeMenuEvent, NodeMenuAction } from './menu.events';\n\n@Injectable()\nexport class NodeMenuService {\n  public nodeMenuEvents$: Subject<NodeMenuEvent> = new Subject<NodeMenuEvent>();\n\n  public fireMenuEvent(sender: HTMLElement, action: NodeMenuAction): void {\n    const nodeMenuEvent: NodeMenuEvent = { sender, action };\n    this.nodeMenuEvents$.next(nodeMenuEvent);\n  }\n\n  public hideMenuStream(treeElementRef: ElementRef): Observable<any> {\n    return this.nodeMenuEvents$\n      .filter((e: NodeMenuEvent) => treeElementRef.nativeElement !== e.sender)\n      .filter((e: NodeMenuEvent) => e.action === NodeMenuAction.Close);\n  }\n\n  public hideMenuForAllNodesExcept(treeElementRef: ElementRef): void {\n    this.nodeMenuEvents$.next({\n      sender: treeElementRef.nativeElement,\n      action: NodeMenuAction.Close\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/menu/node-menu.service.ts","import { Input, Component, OnInit, ElementRef, Inject } from '@angular/core';\nimport * as TreeTypes from './tree.types';\nimport { Tree } from './tree';\nimport { NodeMenuService } from './menu/node-menu.service';\nimport { NodeMenuItemSelectedEvent, NodeMenuItemAction } from './menu/menu.events';\nimport { NodeEditableEvent, NodeEditableEventAction } from './editable/editable.events';\nimport { TreeService } from './tree.service';\nimport * as EventUtils from './utils/event.utils';\nimport { NodeDraggableEvent } from './draggable/draggable.events';\nimport { Observable } from 'rxjs/Rx';\n\n@Component({\n  selector: 'tree-internal',\n  template: `\n  <ul class=\"tree\" *ngIf=\"tree\" [ngClass]=\"{rootless: isRootHidden()}\">\n    <li>\n      <div class=\"value-container\"\n        [ngClass]=\"{rootless: isRootHidden()}\"\n        (contextmenu)=\"showRightMenu($event)\"\n        [nodeDraggable]=\"element\"\n        [tree]=\"tree\">\n\n        <div class=\"folding\" (click)=\"onSwitchFoldingType()\" [ngClass]=\"tree.foldingCssClass\"></div>\n        <div class=\"node-value\"\n          *ngIf=\"!shouldShowInputForTreeValue()\"\n          [class.node-selected]=\"isSelected\"\n          (click)=\"onNodeSelected($event)\">\n            <div *ngIf=\"tree.nodeTemplate\" class=\"node-template\" [innerHTML]=\"tree.nodeTemplate | safeHtml\"></div>\n            <span class=\"node-name\" [innerHTML]=\"tree.value | safeHtml\"></span>\n            <span class=\"loading-children\" *ngIf=\"tree.childrenAreBeingLoaded()\"></span>\n        </div>\n\n        <input type=\"text\" class=\"node-value\"\n           *ngIf=\"shouldShowInputForTreeValue()\"\n           [nodeEditable]=\"tree.value\"\n           (valueChanged)=\"applyNewValue($event)\"/>\n\n        <div class=\"node-left-menu\" *ngIf=\"tree.hasLeftMenu()\" (click)=\"showLeftMenu($event)\" [innerHTML]=\"tree.leftMenuTemplate\">\n        </div>\n        <node-menu *ngIf=\"tree.hasLeftMenu() && isLeftMenuVisible\"\n          (menuItemSelected)=\"onMenuItemSelected($event)\">\n        </node-menu>\n      </div>\n\n      <node-menu *ngIf=\"isRightMenuVisible\" (menuItemSelected)=\"onMenuItemSelected($event)\"></node-menu>\n\n      <ng-template [ngIf]=\"tree.isNodeExpanded()\">\n        <tree-internal *ngFor=\"let child of tree.childrenAsync | async\" [tree]=\"child\"></tree-internal>\n      </ng-template>\n    </li>\n  </ul>\n  `\n})\nexport class TreeInternalComponent implements OnInit {\n  @Input()\n  public tree: Tree;\n\n  @Input()\n  public settings: TreeTypes.Ng2TreeSettings;\n\n  public isSelected = false;\n  public isRightMenuVisible = false;\n  public isLeftMenuVisible = false;\n\n  public constructor(@Inject(NodeMenuService) private nodeMenuService: NodeMenuService,\n                     @Inject(TreeService) public treeService: TreeService,\n                     @Inject(ElementRef) public element: ElementRef) {\n  }\n\n  public ngOnInit(): void {\n    this.settings = this.settings || { rootIsVisible: true };\n\n    this.nodeMenuService.hideMenuStream(this.element)\n      .subscribe(() => {\n        this.isRightMenuVisible = false;\n        this.isLeftMenuVisible = false;\n      });\n\n    this.treeService.unselectStream(this.tree)\n      .subscribe(() => this.isSelected = false);\n\n    this.treeService.draggedStream(this.tree, this.element)\n      .subscribe((e: NodeDraggableEvent) => {\n        if (this.tree.hasSibling(e.captured.tree)) {\n          this.swapWithSibling(e.captured.tree, this.tree);\n        } else if (this.tree.isBranch()) {\n          this.moveNodeToThisTreeAndRemoveFromPreviousOne(e, this.tree);\n        } else {\n          this.moveNodeToParentTreeAndRemoveFromPreviousOne(e, this.tree);\n        }\n      });\n  }\n\n  private swapWithSibling(sibling: Tree, tree: Tree): void {\n    tree.swapWithSibling(sibling);\n    this.treeService.fireNodeMoved(sibling, sibling.parent);\n  }\n\n  private moveNodeToThisTreeAndRemoveFromPreviousOne(e: NodeDraggableEvent, tree: Tree): void {\n    this.treeService.fireNodeRemoved(e.captured.tree);\n    const addedChild = tree.addChild(e.captured.tree);\n    this.treeService.fireNodeMoved(addedChild, e.captured.tree.parent);\n  }\n\n  private moveNodeToParentTreeAndRemoveFromPreviousOne(e: NodeDraggableEvent, tree: Tree): void {\n    this.treeService.fireNodeRemoved(e.captured.tree);\n    const addedSibling = tree.addSibling(e.captured.tree, tree.positionInParent);\n    this.treeService.fireNodeMoved(addedSibling, e.captured.tree.parent);\n  }\n\n  public onNodeSelected(e: MouseEvent): void {\n    if (EventUtils.isLeftButtonClicked(e)) {\n      this.isSelected = true;\n      this.treeService.fireNodeSelected(this.tree);\n    }\n  }\n\n  public showRightMenu(e: MouseEvent): void {\n    if (!this.tree.hasRightMenu()) {\n      return;\n    }\n\n    if (EventUtils.isRightButtonClicked(e)) {\n      this.isRightMenuVisible = !this.isRightMenuVisible;\n      this.nodeMenuService.hideMenuForAllNodesExcept(this.element);\n    }\n    e.preventDefault();\n  }\n\n  public showLeftMenu(e: MouseEvent): void {\n    if (!this.tree.hasLeftMenu()) {\n      return;\n    }\n\n    if (EventUtils.isLeftButtonClicked(e)) {\n      this.isLeftMenuVisible = !this.isLeftMenuVisible;\n      this.nodeMenuService.hideMenuForAllNodesExcept(this.element);\n      if (this.isLeftMenuVisible) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  public onMenuItemSelected(e: NodeMenuItemSelectedEvent): void {\n    switch (e.nodeMenuItemAction) {\n      case NodeMenuItemAction.NewTag:\n        this.onNewSelected(e);\n        break;\n      case NodeMenuItemAction.NewFolder:\n        this.onNewSelected(e);\n        break;\n      case NodeMenuItemAction.Rename:\n        this.onRenameSelected();\n        break;\n      case NodeMenuItemAction.Remove:\n        this.onRemoveSelected();\n        break;\n      default:\n        throw new Error(`Chosen menu item doesn't exist`);\n    }\n  }\n\n  private onNewSelected(e: NodeMenuItemSelectedEvent): void {\n    this.tree.createNode(e.nodeMenuItemAction === NodeMenuItemAction.NewFolder);\n    this.isRightMenuVisible = false;\n    this.isLeftMenuVisible = false;\n  }\n\n  private onRenameSelected(): void {\n    this.tree.markAsBeingRenamed();\n    this.isRightMenuVisible = false;\n    this.isLeftMenuVisible = false;\n  }\n\n  private onRemoveSelected(): void {\n    this.treeService.fireNodeRemoved(this.tree);\n  }\n\n  public onSwitchFoldingType(): void {\n    this.tree.switchFoldingType();\n    this.treeService.fireNodeSwitchFoldingType(this.tree);\n  }\n\n  public applyNewValue(e: NodeEditableEvent): void {\n    if ((e.action === NodeEditableEventAction.Cancel || this.tree.isNew()) && Tree.isValueEmpty(e.value)) {\n      return this.treeService.fireNodeRemoved(this.tree);\n    }\n\n    if (this.tree.isNew()) {\n      this.tree.value = e.value;\n      this.treeService.fireNodeCreated(this.tree);\n    }\n\n    if (this.tree.isBeingRenamed()) {\n      const oldValue = this.tree.value;\n      this.tree.value = e.value;\n      this.treeService.fireNodeRenamed(oldValue, this.tree);\n    }\n\n    this.tree.markAsModified();\n  }\n\n  public shouldShowInputForTreeValue(): boolean {\n    return this.tree.isNew() || this.tree.isBeingRenamed();\n  }\n\n  public isRootHidden(): boolean {\n    return this.tree.isRoot() && !this.settings.rootIsVisible;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/tree-internal.component.ts","import { Input, Component, OnInit, EventEmitter, Output, Inject, OnChanges, SimpleChanges } from '@angular/core';\nimport { TreeService } from './tree.service';\nimport * as TreeTypes from './tree.types';\nimport { NodeEvent } from './tree.events';\nimport { Tree } from './tree';\n\n@Component({\n  selector: 'tree',\n  template: `<tree-internal [tree]=\"tree\" [settings]=\"settings\"></tree-internal>`,\n  providers: [TreeService]\n})\nexport class TreeComponent implements OnInit, OnChanges {\n  private static EMPTY_TREE: Tree = new Tree({value: ''});\n\n  /* tslint:disable:no-input-rename */\n  @Input('tree')\n  public treeModel: TreeTypes.TreeModel;\n  /* tslint:enable:no-input-rename */\n\n  @Input()\n  public settings: TreeTypes.Ng2TreeSettings;\n\n  @Output()\n  public nodeCreated: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public nodeRemoved: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public nodeRenamed: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public nodeSelected: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public nodeMoved: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public nodeExpanded: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public nodeCollapsed: EventEmitter<any> = new EventEmitter();\n\n  public tree: Tree;\n\n  public constructor(@Inject(TreeService) private treeService: TreeService) {\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (!this.treeModel) {\n      this.tree = TreeComponent.EMPTY_TREE;\n    } else {\n      this.tree = new Tree(this.treeModel);\n    }\n  }\n\n  public ngOnInit(): void {\n    this.treeService.nodeRemoved$.subscribe((e: NodeEvent) => {\n      this.nodeRemoved.emit(e);\n    });\n\n    this.treeService.nodeRenamed$.subscribe((e: NodeEvent) => {\n      this.nodeRenamed.emit(e);\n    });\n\n    this.treeService.nodeCreated$.subscribe((e: NodeEvent) => {\n      this.nodeCreated.emit(e);\n    });\n\n    this.treeService.nodeSelected$.subscribe((e: NodeEvent) => {\n      this.nodeSelected.emit(e);\n    });\n\n    this.treeService.nodeMoved$.subscribe((e: NodeEvent) => {\n      this.nodeMoved.emit(e);\n    });\n\n    this.treeService.nodeExpanded$.subscribe((e: NodeEvent) => {\n      this.nodeExpanded.emit(e);\n    });\n\n    this.treeService.nodeCollapsed$.subscribe((e: NodeEvent) => {\n      this.nodeCollapsed.emit(e);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/tree.component.ts","import { Tree } from './tree';\nimport { RenamableNode } from './tree.types';\n\nexport class NodeEvent {\n  public constructor(public node: Tree) {\n  }\n}\n\nexport class NodeSelectedEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeDestructiveEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeMovedEvent extends NodeDestructiveEvent {\n  public constructor(node: Tree, public previousParent: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeRemovedEvent extends NodeDestructiveEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeCreatedEvent extends NodeDestructiveEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeRenamedEvent extends NodeDestructiveEvent {\n  public constructor(node: Tree, public oldValue: string | RenamableNode, public newValue: string | RenamableNode) {\n    super(node);\n  }\n}\n\nexport class NodeExpandedEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeCollapsedEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/tree.events.ts","import { NgModule } from '@angular/core';\nimport { TreeComponent } from './tree.component';\nimport { TreeInternalComponent } from './tree-internal.component';\nimport { CommonModule } from '@angular/common';\nimport { NodeDraggableDirective } from './draggable/node-draggable.directive';\nimport { NodeDraggableService } from './draggable/node-draggable.service';\nimport { NodeEditableDirective } from './editable/node-editable.directive';\nimport { NodeMenuComponent } from './menu/node-menu.component';\nimport { NodeMenuService } from './menu/node-menu.service';\nimport { TreeService } from './tree.service';\nimport { SafeHtmlPipe } from './utils/safe-html.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    NodeDraggableDirective,\n    TreeComponent,\n    NodeEditableDirective,\n    NodeMenuComponent,\n    TreeInternalComponent,\n    SafeHtmlPipe\n  ],\n  exports: [TreeComponent],\n  providers: [NodeDraggableService, NodeMenuService, TreeService]\n})\nexport class TreeModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/tree.module.ts","import {\n  NodeRemovedEvent,\n  NodeRenamedEvent,\n  NodeCreatedEvent,\n  NodeSelectedEvent,\n  NodeMovedEvent,\n  NodeExpandedEvent,\n  NodeCollapsedEvent\n} from './tree.events';\nimport { RenamableNode } from './tree.types';\nimport { Tree } from './tree';\nimport { Subject, Observable } from 'rxjs/Rx';\nimport { Injectable, Inject, ElementRef } from '@angular/core';\nimport { NodeDraggableService } from './draggable/node-draggable.service';\nimport { NodeDraggableEvent } from './draggable/draggable.events';\n\n@Injectable()\nexport class TreeService {\n  public nodeMoved$: Subject<NodeMovedEvent> = new Subject<NodeMovedEvent>();\n  public nodeRemoved$: Subject<NodeRemovedEvent> = new Subject<NodeRemovedEvent>();\n  public nodeRenamed$: Subject<NodeRenamedEvent> = new Subject<NodeRenamedEvent>();\n  public nodeCreated$: Subject<NodeCreatedEvent> = new Subject<NodeCreatedEvent>();\n  public nodeSelected$: Subject<NodeSelectedEvent> = new Subject<NodeSelectedEvent>();\n  public nodeExpanded$: Subject<NodeExpandedEvent> = new Subject<NodeExpandedEvent>();\n  public nodeCollapsed$: Subject<NodeCollapsedEvent> = new Subject<NodeCollapsedEvent>();\n\n  public constructor(@Inject(NodeDraggableService) private nodeDraggableService: NodeDraggableService) {\n    this.nodeRemoved$.subscribe((e: NodeRemovedEvent) => e.node.removeItselfFromParent());\n  }\n\n  public unselectStream(tree: Tree): Observable<any> {\n    return this.nodeSelected$.filter((e: NodeSelectedEvent) => tree !== e.node);\n  }\n\n  public fireNodeRemoved(tree: Tree): void {\n    this.nodeRemoved$.next(new NodeRemovedEvent(tree));\n  }\n\n  public fireNodeCreated(tree: Tree): void {\n    this.nodeCreated$.next(new NodeCreatedEvent(tree));\n  }\n\n  public fireNodeSelected(tree: Tree): void {\n    this.nodeSelected$.next(new NodeSelectedEvent(tree));\n  }\n\n  public fireNodeRenamed(oldValue: RenamableNode | string, tree: Tree): void {\n    this.nodeRenamed$.next(new NodeRenamedEvent(tree, oldValue, tree.value));\n  }\n\n  public fireNodeMoved(tree: Tree, parent: Tree): void {\n    this.nodeMoved$.next(new NodeMovedEvent(tree, parent));\n  }\n\n  public fireNodeSwitchFoldingType(tree: Tree): void {\n    if (tree.isNodeExpanded()) {\n      this.fireNodeExpanded(tree);\n    } else if (tree.isNodeCollapsed()) {\n      this.fireNodeCollapsed(tree);\n    }\n  }\n\n  private fireNodeExpanded(tree: Tree): void {\n    this.nodeExpanded$.next(new NodeExpandedEvent(tree));\n  }\n\n  private fireNodeCollapsed(tree: Tree): void {\n    this.nodeCollapsed$.next(new NodeCollapsedEvent(tree));\n  }\n\n  public draggedStream(tree: Tree, element: ElementRef): Observable<NodeDraggableEvent> {\n    return this.nodeDraggableService.draggableNodeEvents$\n      .filter((e: NodeDraggableEvent) => e.target === element)\n      .filter((e: NodeDraggableEvent) => !e.captured.tree.hasChild(tree));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/tree.service.ts","import _map from 'lodash-es/map';\nimport _isEmpty from 'lodash-es/isEmpty';\nimport _trim from 'lodash-es/trim';\nimport _has from 'lodash-es/has';\nimport _isFunction from 'lodash-es/isFunction';\nimport _clone from 'lodash-es/clone';\nimport _merge from 'lodash-es/merge';\nimport _extend from 'lodash-es/extend';\nimport _get from 'lodash-es/get';\nimport _omit from 'lodash-es/omit';\nimport _forEach from 'lodash-es/forEach';\nimport _toString from 'lodash-es/toString';\nimport _isArray from 'lodash-es/isArray';\nimport _size from 'lodash-es/size';\nimport _indexOf from 'lodash-es/indexOf';\nimport _includes from 'lodash-es/includes';\nimport _findIndex from 'lodash-es/findIndex';\nimport _once from 'lodash-es/once';\nimport { Observable, Observer } from 'rxjs/Rx';\nimport { TreeModel, RenamableNode, FoldingType, TreeStatus, TreeModelSettings, ChildrenLoadingFunction } from './tree.types';\n\nenum ChildrenLoadingState {\n  NotStarted,\n  Loading,\n  Completed\n}\n\nexport class Tree {\n  private _children: Tree[];\n  private _loadChildren: ChildrenLoadingFunction;\n  private _childrenLoadingState: ChildrenLoadingState = ChildrenLoadingState.NotStarted;\n\n  private _childrenAsyncOnce: () => Observable<Tree[]> = _once(() => {\n    return new Observable((observer: Observer<Tree[]>) => {\n      setTimeout(() => {\n        this._childrenLoadingState = ChildrenLoadingState.Loading;\n        this._loadChildren((children: TreeModel[]) => {\n          this._children = _map(children, (child: TreeModel) => new Tree(child, this));\n          this._childrenLoadingState = ChildrenLoadingState.Completed;\n          observer.next(this.children);\n          observer.complete();\n        });\n      });\n    });\n  });\n\n  public node: TreeModel;\n  public parent: Tree;\n\n  // STATIC METHODS ----------------------------------------------------------------------------------------------------\n\n  /**\n   * Check that value passed is not empty (it doesn't consist of only whitespace symbols).\n   * @param {string} value - A value that should be checked.\n   * @returns {boolean} - A flag indicating that value is empty or not.\n   * @static\n   */\n  public static isValueEmpty(value: string): boolean {\n    return _isEmpty(_trim(value));\n  }\n\n  /**\n   * Check whether a given value can be considered RenamableNode.\n   * @param {any} value - A value to check.\n   * @returns {boolean} - A flag indicating whether given value is Renamable node or not.\n   * @static\n   */\n  public static isRenamable(value: any): value is RenamableNode {\n    return (_has(value, 'setName') && _isFunction(value.setName))\n      && (_has(value, 'toString') && _isFunction(value.toString) && value.toString !== Object.toString);\n  }\n\n  private static cloneTreeShallow(origin: Tree): Tree {\n    const tree = new Tree(_clone(origin.node));\n    tree._children = origin._children;\n    return tree;\n  }\n\n  private static applyNewValueToRenamable(value: RenamableNode, newValue: string): RenamableNode {\n    const renamableValue: RenamableNode = _merge({}, value as RenamableNode);\n    renamableValue.setName(newValue);\n    return renamableValue;\n  }\n\n  /**\n   * Build an instance of Tree from an object implementing TreeModel interface.\n   * @param {TreeModel} model - A model that is used to build a tree.\n   * @param {Tree} [parent] - An optional parent if you want to build a tree from the model that should be a child of an existing Tree instance.\n   * @param {boolean} [isBranch] - An option that makes a branch from created tree. Branch can have children.\n   */\n  public constructor(node: TreeModel, parent: Tree = null, isBranch: boolean = false) {\n    this.buildTreeFromModel(node, parent, isBranch || Array.isArray(node.children));\n  }\n\n  private buildTreeFromModel(model: TreeModel, parent: Tree, isBranch: boolean): void {\n    this.parent = parent;\n    this.node = _extend(_omit(model, 'children') as TreeModel, {\n      settings: TreeModelSettings.merge(model, _get(parent, 'node') as TreeModel)\n    }) as TreeModel;\n\n    if (_isFunction(this.node.loadChildren)) {\n      this._loadChildren = this.node.loadChildren;\n    } else {\n      _forEach(_get(model, 'children') as TreeModel[], (child: TreeModel, index: number) => {\n        this._addChild(new Tree(child, this), index);\n      });\n    }\n\n    if (!Array.isArray(this._children)) {\n      this._children = this.node.loadChildren || isBranch ? [] : null;\n    }\n  }\n\n  /**\n   * Check whether children of the node are being loaded.\n   * Makes sense only for nodes that define `loadChildren` function.\n   * @returns {boolean} A flag indicating that children are being loaded.\n   */\n  public childrenAreBeingLoaded(): boolean {\n    return (this._childrenLoadingState === ChildrenLoadingState.Loading);\n  }\n\n  /**\n   * Check whether children of the node were loaded.\n   * Makes sense only for nodes that define `loadChildren` function.\n   * @returns {boolean} A flag indicating that children were loaded.\n   */\n  public childrenWereLoaded(): boolean {\n    return (this._childrenLoadingState === ChildrenLoadingState.Completed);\n  }\n\n  private canLoadChildren(): boolean {\n    return (this._childrenLoadingState === ChildrenLoadingState.NotStarted)\n      && (this.foldingType === FoldingType.Expanded)\n      && (!!this._loadChildren);\n  }\n\n  /**\n   * Check whether children of the node should be loaded and not loaded yet.\n   * Makes sense only for nodes that define `loadChildren` function.\n   * @returns {boolean} A flag indicating that children should be loaded for the current node.\n   */\n  public childrenShouldBeLoaded(): boolean {\n    return !!this._loadChildren;\n  }\n\n  /**\n   * Get children of the current tree.\n   * @returns {Tree[]} The children of the current tree.\n   */\n  public get children(): Tree[] {\n    return this._children;\n  }\n\n  /**\n   * By getting value from this property you start process of loading node's children using `loadChildren` function.\n   * Once children are loaded `loadChildren` function won't be called anymore and loaded for the first time children are emitted in case of subsequent calls.\n   * @returns {Observable<Tree[]>} An observable which emits children once they are loaded.\n   */\n  public get childrenAsync(): Observable<Tree[]> {\n    if (this.canLoadChildren()) {\n      return this._childrenAsyncOnce();\n    }\n    return Observable.of(this.children);\n  }\n\n  /**\n   * Create a new node in the current tree.\n   * @param {boolean} isBranch - A flag that indicates whether a new node should be a \"Branch\". \"Leaf\" node will be created by default\n   * @returns {Tree} A newly created child node.\n   */\n  public createNode(isBranch: boolean): Tree {\n    const tree = new Tree({ value: '' }, null, isBranch);\n    tree.markAsNew();\n\n    if (this.childrenShouldBeLoaded() && !(this.childrenAreBeingLoaded() || this.childrenWereLoaded())) {\n      return null;\n    }\n    if (this.isLeaf()) {\n      return this.addSibling(tree);\n    } else {\n      return this.addChild(tree);\n    }\n  }\n\n  /**\n   * Get the value of the current node\n   * @returns {(string|RenamableNode)} The value of the node.\n   */\n  public get value(): any {\n    return this.node.value;\n  }\n\n  /**\n   * Set the value of the current node\n   * @param {(string|RenamableNode)} value - The new value of the node.\n   */\n  public set value(value: any) {\n    if (typeof value !== 'string' && !Tree.isRenamable(value)) {\n      return;\n    }\n\n    if (Tree.isRenamable(this.value)) {\n      const newValue = typeof value === 'string' ? value : _toString(value);\n      this.node.value = Tree.applyNewValueToRenamable(this.value as RenamableNode, newValue);\n    } else {\n      this.node.value = Tree.isValueEmpty(value as string) ? this.node.value : _toString(value);\n    }\n  }\n\n  /**\n   * Add a sibling node for the current node. This won't work if the current node is a root.\n   * @param {Tree} sibling - A node that should become a sibling.\n   * @param [number] position - Position in which sibling will be inserted. By default it will be inserted at the last position in a parent.\n   * @returns {Tree} A newly inserted sibling, or null if you are trying to make a sibling for the root.\n   */\n  public addSibling(sibling: Tree, position?: number): Tree {\n    if (_isArray(_get(this.parent, 'children'))) {\n      return this.parent.addChild(sibling, position);\n    }\n    return null;\n  }\n\n  /**\n   * Add a child node for the current node.\n   * @param {Tree} child - A node that should become a child.\n   * @param [number] position - Position in which child will be inserted. By default it will be inserted at the last position in a parent.\n   * @returns {Tree} A newly inserted child.\n   */\n  public addChild(child: Tree, position?: number): Tree {\n    return this._addChild(Tree.cloneTreeShallow(child), position);\n  }\n\n  private _addChild(child: Tree, position: number = _size(this._children) || 0): Tree {\n    child.parent = this;\n\n    if (Array.isArray(this._children)) {\n      this._children.splice(position, 0, child);\n    } else {\n      this._children = [child];\n    }\n\n    this._setFoldingType();\n    if (this.isNodeCollapsed()) {\n      this.switchFoldingType();\n    }\n    return child;\n  }\n\n  /**\n   * Swap position of the current node with the given sibling. If node passed as a parameter is not a sibling - nothing happens.\n   * @param {Tree} sibling - A sibling with which current node shold be swapped.\n   */\n  public swapWithSibling(sibling: Tree): void {\n    if (!this.hasSibling(sibling)) {\n      return;\n    }\n\n    const siblingIndex = sibling.positionInParent;\n    const thisTreeIndex = this.positionInParent;\n\n    this.parent._children[siblingIndex] = this;\n    this.parent._children[thisTreeIndex] = sibling;\n  }\n\n  /**\n   * Get a node's position in its parent.\n   * @returns {number} The position inside a parent.\n   */\n  public get positionInParent(): number {\n    return _indexOf(this.parent.children, this);\n  }\n\n  /**\n   * Check whether or not this tree is static.\n   * @returns {boolean} A flag indicating whether or not this tree is static.\n   */\n  public isStatic(): boolean {\n    return _get(this.node.settings, 'static', false);\n  }\n\n  /**\n   * Check whether or not this tree has a left menu.\n   * @returns {boolean} A flag indicating whether or not this tree has a left menu.\n   */\n  public hasLeftMenu(): boolean {\n    return !_get(this.node.settings, 'static', false) && _get(this.node.settings, 'leftMenu', false);\n  }\n\n  /**\n   * Check whether or not this tree has a right menu.\n   * @returns {boolean} A flag indicating whether or not this tree has a right menu.\n   */\n  public hasRightMenu(): boolean {\n    return !_get(this.node.settings, 'static', false) && _get(this.node.settings, 'rightMenu', false);\n  }\n\n  /**\n   * Check whether this tree is \"Leaf\" or not.\n   * @returns {boolean} A flag indicating whether or not this tree is a \"Leaf\".\n   */\n  public isLeaf(): boolean {\n    return !this.isBranch();\n  }\n\n  /**\n   * Check whether this tree is \"Branch\" or not. \"Branch\" is a node that has children.\n   * @returns {boolean} A flag indicating whether or not this tree is a \"Branch\".\n   */\n  public isBranch(): boolean {\n    return Array.isArray(this._children);\n  }\n\n  /**\n   * Check whether this tree has children.\n   * @returns {boolean} A flag indicating whether or not this tree has children.\n   */\n  public hasChildren(): boolean {\n    return !_isEmpty(this._children) || this.childrenShouldBeLoaded();\n  }\n\n  /**\n   * Check whether this tree is a root or not. The root is the tree (node) that doesn't have parent (or technically its parent is null).\n   * @returns {boolean} A flag indicating whether or not this tree is the root.\n   */\n  public isRoot(): boolean {\n    return this.parent === null;\n  }\n\n  /**\n   * Check whether provided tree is a sibling of the current tree. Sibling trees (nodes) are the trees that have the same parent.\n   * @param {Tree} tree - A tree that should be tested on a siblingness.\n   * @returns {boolean} A flag indicating whether or not provided tree is the sibling of the current one.\n   */\n  public hasSibling(tree: Tree): boolean {\n    return !this.isRoot() && _includes(this.parent.children, tree);\n  }\n\n  /**\n   * Check whether provided tree is a child of the current tree.\n   * This method tests that provided tree is a <strong>direct</strong> child of the current tree.\n   * @param {Tree} tree - A tree that should be tested (child candidate).\n   * @returns {boolean} A flag indicating whether provided tree is a child or not.\n   */\n  public hasChild(tree: Tree): boolean {\n    return _includes(this._children, tree);\n  }\n\n  /**\n   * Remove given tree from the current tree.\n   * The given tree will be removed only in case it is a direct child of the current tree (@see {@link hasChild}).\n   * @param {Tree} tree - A tree that should be removed.\n   */\n  public removeChild(tree: Tree): void {\n    const childIndex = _findIndex(this._children, (child: Tree) => child === tree);\n    if (childIndex >= 0) {\n      this._children.splice(childIndex, 1);\n    }\n    this._setFoldingType();\n  }\n\n  /**\n   * Remove current tree from its parent.\n   */\n  public removeItselfFromParent(): void {\n    if (!this.parent) {\n      return;\n    }\n\n    this.parent.removeChild(this);\n  }\n\n  /**\n   * Switch folding type of the current tree. \"Leaf\" node cannot switch its folding type cause it doesn't have children, hence nothing to fold.\n   * If node is a \"Branch\" and it is expanded, then by invoking current method state of the tree should be switched to \"collapsed\" and vice versa.\n   */\n  public switchFoldingType(): void {\n    if (this.isLeaf() || !this.hasChildren()) {\n      return;\n    }\n\n    this.node._foldingType = this.isNodeExpanded() ? FoldingType.Collapsed : FoldingType.Expanded;\n  }\n\n  /**\n   * Check that tree is expanded.\n   * @returns {boolean} A flag indicating whether current tree is expanded. Always returns false for the \"Leaf\" tree and for an empty tree.\n   */\n  public isNodeExpanded(): boolean {\n    return this.foldingType === FoldingType.Expanded;\n  }\n\n  /**\n   * Check that tree is collapsed.\n   * @returns {boolean} A flag indicating whether current tree is collapsed. Always returns false for the \"Leaf\" tree and for an empty tree.\n   */\n  public isNodeCollapsed(): boolean {\n    return this.foldingType === FoldingType.Collapsed;\n  }\n\n  /**\n   * Set a current folding type: expanded, collapsed or leaf.\n   */\n  private _setFoldingType(): void {\n    if (this.childrenShouldBeLoaded()) {\n      this.node._foldingType = FoldingType.Collapsed;\n    } else if (this._children && !_isEmpty(this._children)) {\n      this.node._foldingType = FoldingType.Expanded;\n    } else if (Array.isArray(this._children)) {\n      this.node._foldingType = FoldingType.Empty;\n    } else {\n      this.node._foldingType = FoldingType.Leaf;\n    }\n  }\n\n  /**\n   * Get a current folding type: expanded, collapsed or leaf.\n   * @returns {FoldingType} A folding type of the current tree.\n   */\n  public get foldingType(): FoldingType {\n    if (!this.node._foldingType) {\n      this._setFoldingType();\n    }\n    return this.node._foldingType;\n  }\n\n  /**\n   * Get a css class for element which displayes folding state - expanded, collapsed or leaf\n   * @returns {string} A string icontaining css class (classes)\n   */\n  public get foldingCssClass(): string {\n    return this.getCssClassesFromSettings() || this.foldingType.cssClass;\n  }\n\n  private getCssClassesFromSettings(): string {\n    if (!this.node._foldingType) {\n      this._setFoldingType();\n    }\n\n    if (this.node._foldingType === FoldingType.Collapsed) {\n      return _get(this.node.settings, 'cssClasses.collapsed', null);\n    } else if (this.node._foldingType === FoldingType.Expanded) {\n      return _get(this.node.settings, 'cssClasses.expanded', null);\n    } else if (this.node._foldingType === FoldingType.Empty) {\n       return _get(this.node.settings, 'cssClasses.empty', null);\n    }\n\n    return _get(this.node.settings, 'cssClasses.leaf', null);\n  }\n\n  /**\n   * Get a html template to render before every node's name.\n   * @returns {string} A string representing a html template.\n   */\n  public get nodeTemplate(): string {\n    return this.getTemplateFromSettings();\n  }\n\n  private getTemplateFromSettings(): string {\n    if (this.isLeaf()) {\n      return _get(this.node.settings, 'templates.leaf', '');\n    } else {\n      return _get(this.node.settings, 'templates.node', '');\n    }\n  }\n\n  /**\n   * Get a html template to render for an element activatin left menu of a node.\n   * @returns {string} A string representing a html template.\n   */\n  public get leftMenuTemplate(): string {\n    if (this.hasLeftMenu()) {\n      return _get(this.node.settings, 'templates.leftMenu', '<span></span>');\n    }\n    return '';\n  }\n\n  /**\n   * Check that current tree is newly created (added by user via menu for example). Tree that was built from the TreeModel is not marked as new.\n   * @returns {boolean} A flag whether the tree is new.\n   */\n  public isNew(): boolean {\n    return this.node._status === TreeStatus.New;\n  }\n\n  /**\n   * Mark current tree as new (@see {@link isNew}).\n   */\n  public markAsNew(): void {\n    this.node._status = TreeStatus.New;\n  }\n\n  /**\n   * Check that current tree is being renamed (it is in the process of its value renaming initiated by a user).\n   * @returns {boolean} A flag whether the tree is being renamed.\n   */\n  public isBeingRenamed(): boolean {\n    return this.node._status === TreeStatus.IsBeingRenamed;\n  }\n\n  /**\n   * Mark current tree as being renamed (@see {@link isBeingRenamed}).\n   */\n  public markAsBeingRenamed(): void {\n    this.node._status = TreeStatus.IsBeingRenamed;\n  }\n\n  /**\n   * Check that current tree is modified (for example it was renamed).\n   * @returns {boolean} A flag whether the tree is modified.\n   */\n  public isModified(): boolean {\n    return this.node._status === TreeStatus.Modified;\n  }\n\n  /**\n   * Mark current tree as modified (@see {@link isModified}).\n   */\n  public markAsModified(): void {\n    this.node._status = TreeStatus.Modified;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/tree.ts","import _defaultsDeep from 'lodash-es/defaultsDeep';\nimport _get from 'lodash-es/get';\n\nexport class FoldingType {\n  public static Expanded: FoldingType = new FoldingType('node-expanded');\n  public static Collapsed: FoldingType = new FoldingType('node-collapsed');\n  public static Empty: FoldingType = new FoldingType('node-empty');\n  public static Leaf: FoldingType = new FoldingType('node-leaf');\n\n  public constructor(private _cssClass: string) {\n  }\n\n  public get cssClass(): string {\n    return this._cssClass;\n  }\n}\n\nexport type ChildrenLoadingFunction = (callback: (children: TreeModel[]) => void) => void;\n\nexport interface TreeModel {\n  value: string | RenamableNode;\n  id?: string | number;\n  children?: TreeModel[];\n  loadChildren?: ChildrenLoadingFunction;\n  settings?: TreeModelSettings;\n  _status?: TreeStatus;\n  _foldingType?: FoldingType;\n}\n\nexport interface CssClasses {\n  /* The class or classes that should be added to the expanded node */\n  expanded?: string;\n\n  /* The class or classes that should be added to the collapsed node */\n  collapsed?: string;\n\n  /* The class or classes that should be added to the empty node */\n  empty?: string;\n\n  /* The class or classes that should be added to the expanded to the leaf */\n  leaf?: string;\n}\n\nexport interface Templates {\n  /* A template for a node */\n  node?: string;\n\n  /* A template for a leaf node */\n  leaf?: string;\n\n  /* A template for left menu html element */\n  leftMenu?: string;\n}\n\nexport class TreeModelSettings {\n  /* cssClasses - set custom css classes which will be used for a tree */\n  public cssClasses?: CssClasses;\n\n  /* Templates - set custom html templates to be used in a tree */\n  public templates?: Templates;\n\n  /**\n   * \"leftMenu\" property when set to true makes left menu available.\n   * @name TreeModelSettings#leftMenu\n   * @type boolean\n   * @default false\n   */\n  public leftMenu?: boolean;\n\n  /**\n   * \"rightMenu\" property when set to true makes right menu available.\n   * @name TreeModelSettings#rightMenu\n   * @type boolean\n   * @default true\n   */\n  public rightMenu?: boolean;\n\n  /**\n   * \"static\" property when set to true makes it impossible to drag'n'drop tree or call a menu on it.\n   * @name TreeModelSettings#static\n   * @type boolean\n   * @default false\n   */\n  public static?: boolean;\n\n  public static merge(sourceA: TreeModel, sourceB: TreeModel): TreeModelSettings {\n    return _defaultsDeep({}, _get(sourceA, 'settings'), _get(sourceB, 'settings'), {static: false, leftMenu: false, rightMenu: true});\n  }\n}\n\nexport interface Ng2TreeSettings {\n  /**\n   * Indicates root visibility in the tree. When true - root is invisible.\n   * @name Ng2TreeSettings#rootIsVisible\n   * @type boolean\n   */\n  rootIsVisible?: boolean;\n}\n\nexport enum TreeStatus {\n  New,\n  Modified,\n  IsBeingRenamed\n}\n\nexport interface RenamableNode {\n  /**\n   * Set new value of the renamable node. Implementation of this method is up to user.\n   * @param {string} name - A new value of the node.\n   */\n  setName(name: string): void;\n\n  /**\n   * Get string representation of the node. Implementation of this method is up to user.\n   * @returns {string} - A node string representation.\n   */\n  toString(): string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/tree.types.ts","export enum Keys {\n  Escape = 27\n}\n\nexport enum MouseButtons {\n  Left = 0,\n  Right = 2\n}\n\nexport function isLeftButtonClicked(e: MouseEvent): boolean {\n  return e.button === MouseButtons.Left;\n}\n\nexport function isRightButtonClicked(e: MouseEvent): boolean {\n  return e.button === MouseButtons.Right;\n}\n\nexport function isEscapePressed(e: KeyboardEvent): boolean {\n  return e.keyCode === Keys.Escape;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/utils/event.utils.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform  {\n  public constructor(private sanitizer: DomSanitizer) {}\n\n  public transform(value: string): SafeHtml {\n  // return value;\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/georgii/Projects/ng2-tree/src/utils/safe-html.pipe.ts"],"sourceRoot":""}